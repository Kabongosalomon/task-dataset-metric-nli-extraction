<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">NEVER GIVE UP: LEARNING DIRECTED EXPLORATION STRATEGIES</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adri?</forename><surname>Puigdom?nech Badia</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pablo</forename><surname>Sprechmann</surname></persName>
							<email>psprechmann@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Vitvitskyi</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Guo</surname></persName>
							<email>danielguo@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bilal</forename><surname>Piot</surname></persName>
							<email>piot@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><surname>Kapturowski</surname></persName>
							<email>skapturowski@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Olivier</forename><surname>Tieleman</surname></persName>
							<email>tieleman@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mart?n</forename><surname>Arjovsky</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><surname>Pritzel</surname></persName>
							<email>apritzel@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andew</forename><surname>Bolt</surname></persName>
							<email>abolt@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><surname>Blundell</surname></persName>
							<email>cblundell@google.com</email>
						</author>
						<title level="a" type="main">NEVER GIVE UP: LEARNING DIRECTED EXPLORATION STRATEGIES</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<note>Published as a conference paper at ICLR 2020</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2022-11-11T22:15+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We propose a reinforcement learning agent to solve hard exploration games by learning a range of directed exploratory policies. We construct an episodic memorybased intrinsic reward using k-nearest neighbors over the agent's recent experience to train the directed exploratory policies, thereby encouraging the agent to repeatedly revisit all states in its environment. A self-supervised inverse dynamics model is used to train the embeddings of the nearest neighbour lookup, biasing the novelty signal towards what the agent can control. We employ the framework of Universal Value Function Approximators (UVFA) to simultaneously learn many directed exploration policies with the same neural network, with different trade-offs between exploration and exploitation. By using the same neural network for different degrees of exploration/exploitation, transfer is demonstrated from predominantly exploratory policies yielding effective exploitative policies. The proposed method can be incorporated to run with modern distributed RL agents that collect large amounts of experience from many actors running in parallel on separate environment instances. Our method doubles the performance of the base agent in all hard exploration in the Atari-57 suite while maintaining a very high score across the remaining games, obtaining a median human normalised score of 1344.0%. Notably, the proposed method is the first algorithm to achieve non-zero rewards (with a mean score of 8,400) in the game of Pitfall! without using demonstrations or hand-crafted features. * Equal contribution.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The problem of exploration remains one of the major challenges in deep reinforcement learning. In general, methods that guarantee finding an optimal policy require the number of visits to each state-action pair to approach infinity. Strategies that become greedy after a finite number of steps may never learn to act optimally; they may converge prematurely to suboptimal policies, and never gather the data they need to learn. Ensuring that all state-action pairs are encountered infinitely often is the general problem of maintaining exploration <ref type="bibr" target="#b12">(Fran?ois-Lavet et al., 2018;</ref><ref type="bibr">Sutton &amp; Barto, 2018)</ref>. The simplest approach for tackling this problem is to consider stochastic policies with a non-zero probability of selecting all actions in each state, e.g. -greedy or Boltzmann exploration. While these techniques will eventually learn the optimal policy in the tabular setting, they are very inefficient and the steps they require grow exponentially with the size of the state space. Despite these shortcomings, they can perform remarkably well in dense reward scenarios <ref type="bibr" target="#b21">(Mnih et al., 2015)</ref>. In sparse reward settings, however, they can completely fail to learn, as temporally-extended exploration (also called deep exploration) is crucial to even find the very few rewarding states <ref type="bibr" target="#b24">(Osband et al., 2016)</ref>.</p><p>Recent approaches have proposed to provide intrinsic rewards to agents to drive exploration, with a focus on demonstrating performance in non-tabular settings. These intrinsic rewards are proportional to some notion of saliency quantifying how different the current state is from those already visited <ref type="bibr" target="#b13">Haber et al., 2018;</ref><ref type="bibr" target="#b15">Houthooft et al., 2016;</ref><ref type="bibr" target="#b23">Oh et al., 2015;</ref><ref type="bibr" target="#b25">Ostrovski et al., 2017;</ref><ref type="bibr" target="#b26">Pathak et al., 2017;</ref><ref type="bibr">Stadie et al., 2015)</ref>. As the agent explores the environment and becomes familiar with it, the exploration bonus disappears and learning is only driven by extrinsic rewards. This is a sensible idea as the goal is to maximise the expected sum of extrinsic rewards. While very good results have been achieved on some very hard exploration tasks, these algorithms face a fundamental limitation: after the novelty of a state has vanished, the agent is not encouraged to visit it again, regardless of the downstream learning opportunities it might allow <ref type="bibr" target="#b10">Ecoffet et al., 2019;</ref><ref type="bibr">Stanton &amp; Clune, 2018)</ref>. Other methods estimate predictive forward models <ref type="bibr" target="#b13">(Haber et al., 2018;</ref><ref type="bibr" target="#b15">Houthooft et al., 2016;</ref><ref type="bibr" target="#b23">Oh et al., 2015;</ref><ref type="bibr" target="#b26">Pathak et al., 2017;</ref><ref type="bibr">Stadie et al., 2015)</ref> and use the prediction error as the intrinsic motivation. Explicitly building models like this, particularly from observations, is expensive, error prone, and can be difficult to generalize to arbitrary environments. In the absence of the novelty signal, these algorithms reduce to undirected exploration schemes, maintaining exploration in a non-scalable way. To overcome this problem, a careful calibration between the speed of the learning algorithm and that of the vanishing rewards is required <ref type="bibr" target="#b10">(Ecoffet et al., 2019;</ref><ref type="bibr" target="#b25">Ostrovski et al., 2017)</ref>.</p><p>The main idea of our proposed approach is to jointly learn separate exploration and exploitation policies derived from the same network, in such a way that the exploitative policy can concentrate on maximising the extrinsic reward (solving the task at hand) while the exploratory ones can maintain exploration without eventually reducing to an undirected policy. We propose to jointly learn a family of policies, parametrised using the UVFA framework <ref type="bibr" target="#b30">(Schaul et al., 2015a)</ref>, with various degrees of exploratory behaviour. The learning of the exploratory policies can be thought of as a set of auxiliary tasks that can help build a shared architecture that continues to develop even in the absence of extrinsic rewards <ref type="bibr" target="#b16">(Jaderberg et al., 2016)</ref>. We use reinforcement learning to approximate the optimal value function corresponding to several different weightings of intrinsic rewards.</p><p>We propose an intrinsic reward that combines per-episode and life-long novelty to explicitly encourage the agent to repeatedly visit all controllable states in the environment over an episode. Episodic novelty encourages an agent to periodically revisit familiar (but potentially not fully explored) states over several episodes, but not within the same episode. Life-long novelty gradually down-modulates states that become progressively more familiar across many episodes. Our episodic novelty uses an episodic memory filled with all previously visited states, encoded using the self-supervised objective of <ref type="bibr" target="#b26">Pathak et al. (2017)</ref> to avoid uncontrollable parts of the state space. Episodic novelty is then defined as similarity of the current state to previously stored states. This allows the episodic novelty to rapidly adapt within an episode: every observation made by the agent potentially changes the per-episode novelty significantly. Our life-long novelty multiplicatively modulates the episodic similarity signal and is driven by a Random Network Distillation error <ref type="bibr" target="#b8">(Burda et al., 2018b)</ref>. In contrast to the episodic novelty, the life-long novelty changes slowly, relying upon gradient descent optimisation (as opposed to an episodic memory write for episodic novelty). Thus, this combined notion of novelty is able to generalize in complex tasks with large, high dimensional state spaces in which a given state is never observed twice, and maintain consistent exploration both within an episode and across episodes. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">THE NEVER-GIVE-UP INTRINSIC REWARD</head><p>We follow the literature on curiosity-driven exploration, where the extrinsic reward is augmented with an intrinsic reward (or exploration bonus). The augmented reward at time t is then defined as r t = r e t + ?r i t , where r e t and r i t are respectively the extrinsic and intrinsic rewards, and ? is a positive scalar weighting the relevance of the latter. Deep RL agents are typically trained on the augmented reward r t , while performance is measured on extrinsic reward r e t only. This section describes the proposed intrinsic reward r i t . Our intrinsic reward r i t satisfies three properties: (i) it rapidly discourages revisiting the same state within the same episode, (ii) it slowly discourages visits to states visited many times across episodes, (iii) the notion of state ignores aspects of an environment that are not influenced by an agent's actions.</p><p>We begin by providing a general overview of the computation of the proposed intrinsic reward. Then we provide the details of each one of the components. The reward is composed of two blocks: an episodic novelty module and an (optional) life-long novelty module, represented in red and green respectively in <ref type="figure" target="#fig_0">Fig. 1 (right)</ref>. The episodic novelty module computes our episodic intrinsic reward and is composed of an episodic memory, M , and an embedding function f , mapping the current observation to a learned representation that we refer to as controllable state. At the beginning of each episode, the episodic memory starts completely empty. At every step, the agent computes an episodic intrinsic reward, r episodic t , and appends the controllable state corresponding to the current observation to the memory M . To determine the bonus, the current observation is compared to the content of the episodic memory. Larger differences produce larger episodic intrinsic rewards. The episodic intrinsic reward r episodic t promotes the agent to visit as many different states as possible within a single episode. This means that the notion of novelty ignores inter-episode interactions: a state that has been visited thousands of times gives the same intrinsic reward as a completely new state as long as they are equally novel given the history of the current episode.</p><p>A life-long (or inter-episodic) novelty module provides a long-term novelty signal to statefully control the amount of exploration across episodes. We do so by multiplicatively modulating the exploration bonus r episodic t with a life-long curiosity factor, ? t . Note that this modulation will vanish over time, reducing our method to using the non-modulated reward. Specifically, we combine ? t with r episodic t as follows (see also <ref type="figure" target="#fig_0">Fig. 1 (right)</ref>):</p><formula xml:id="formula_0">r i t = r episodic t ? min {max {? t , 1} , L}<label>(1)</label></formula><p>where L is a chosen maximum reward scaling (we fix L = 5 for all our experiments). Mixing rewards this way, we leverage the long-term novelty detection that ? t offers, while r i t continues to encourage our agent to explore all the controllable states.</p><p>Embedding network: f : O ? R p maps the current observation to a p-dimensional vector corresponding to its controllable state. Consider an environment that has a lot of variability independent of the agent's actions, such as navigating a busy city with many pedestrians and vehicles. An agent could visit a large number of different states (collecting large cumulative intrinsic rewards) without taking any actions. This would not lead to performing any meaningful form of exploration. To avoid such meaningless exploration, given two consecutive observations, we train a Siamese network <ref type="bibr" target="#b6">(Bromley et al., 1994;</ref><ref type="bibr" target="#b20">Koch et al., 2015)</ref> f to predict the action taken by the agent to go from one observation to the next <ref type="bibr" target="#b26">(Pathak et al., 2017)</ref>. Intuitively, all the variability in the environment that is not affected by the action taken by the agent would not be useful to make this prediction. More formally, given a triplet {x t , a t , x t+1 } composed of two consecutive observations, x t and x t+1 , and the action taken by the agent a t , we parameterise the conditional likelihood as p(a|x t ,</p><formula xml:id="formula_1">x t+1 ) = h(f (x t ), f (x t+1 )),</formula><p>where h is a one hidden layer MLP followed by a softmax. The parameters of both h and f are trained via maximum likelihood. This architecture can be thought of as a Siamese network with a one-layer classifier on top, see <ref type="figure" target="#fig_0">Fig. 1 (left)</ref> for an illustration. For more details about the architecture, see App. H.1, and hyperparameters, see App. F.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Episodic memory and intrinsic reward:</head><p>The episodic memory M is a dynamically-sized slotbased memory that stores the controllable states in an online fashion <ref type="bibr" target="#b28">(Pritzel et al., 2017)</ref>. At time t, the memory contains the controllable states of all the observations visited in the current episode, {f (x 0 ), f (x 1 ), . . . , f (x t?1 )}. Inspired by theoretically-justified exploration methods turning stateaction counts into a bonus reward <ref type="bibr">(Strehl &amp; Littman, 2008)</ref>, we define our intrinsic reward as</p><formula xml:id="formula_2">r episodic t = 1 n(f (x t )) ? 1 fi?N k K(f (x t ), f i ) + c<label>(2)</label></formula><p>where n(f (x t )) is the counts for the visits to the abstract state f (x t ). We approximate these counts n(f (x t )) as the sum of the similarities given by a kernel function K : R p ? R p ? R, over the content of M . In practice, pseudo-counts are computed using the k-nearest neighbors of f (x t ) in the memory M , denoted by</p><formula xml:id="formula_3">N k = {f i } k i=1 .</formula><p>The constant c guarantees a minimum amount of "pseudo-counts" (fixed to 0.001 in all our experiments). Note that when K is a Dirac delta function, the approximation becomes exact but consequently provides no generalisation of exploration required for very large state spaces. Following ; <ref type="bibr" target="#b28">Pritzel et al. (2017)</ref>, we use the inverse kernel for K,</p><formula xml:id="formula_4">K(x, y) = d 2 (x,y) d 2 m + (3)</formula><p>where is a small constant (fixed to 10 ?3 in all our experiments), d is the Euclidean distance and d 2 m is a running average of the squared Euclidean distance of the k-th nearest neighbors. This running average is used to make the kernel more robust to the task being solved, as different tasks may have different typical distances between learnt embeddings. A detailed computation of the episodic reward can be found in Alg. 1 in App. A.1.</p><p>Integrating life-long curiosity: In principle, any long-term novelty estimator could be used as a basis for the modulator ? t . We found Random Network Distillation <ref type="bibr">(Burda et al., 2018b, RND)</ref> worked well, is simple to implement and easy to parallelize. The RND modulator ? t is defined by introducing a random, untrained convolutional network g : O ? R k , and training a predictor network g : O ? R k that attempts to predict the outputs of g on all the observations that are seen during training by minimizing err(x t ) = ||?(x t ; ?) ? g(x t )|| 2 with respect to the parameters of?, ?. We then define the modulator ? t as a normalized mean squared error, as done in <ref type="bibr" target="#b8">Burda et al. (2018b)</ref>:</p><formula xml:id="formula_5">? t = 1 + err(xt)??e ?e ,</formula><p>where ? e and ? e are running standard deviation and mean for err(x t ). For more details about the architecture, see App. H.2, and hyperparameters, see App. F.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">THE NEVER-GIVE-UP AGENT</head><p>In the previous section we described an episodic intrinsic reward for learning policies capable of maintaining exploration in a meaningful way throughout the agent's training process. We now demonstrate how to incorporate this intrinsic reward into a full agent that maintains a collection of value functions, each with a different exploration-exploitation trade-off.</p><p>Using intrinsic rewards as a means of exploration subtly changes the underlying Markov Decision Process (MDP) being solved: if the augmented reward r t = r e t + ?r i t varies in ways unpredictable from the action and states, then the decision process may no longer be a MDP, but instead be a Partially Observed MDP (POMDP). Solving PODMPs can be much harder than solving MDPs, so to avoid this complexity we take two approaches: firstly, the intrinsic reward is fed directly as an input to the agent, and secondly, our agent maintains an internal state representation that summarises its history of all inputs (state, action and rewards) within an episode. As the basis of our agent, we use Recurrent Replay Distributed DQN <ref type="bibr">(Kapturowski et al., 2019, R2D2)</ref> as it combines a recurrent state, experience replay, off-policy value learning and distributed training, matching our desiderata.</p><p>Unlike most of the previously proposed intrinsic rewards (as seen in Section 1), the never-give-up intrinsic reward does not vanish over time, and thus the learned policy will always be partially driven by it. Furthermore, the proposed exploratory behaviour is directly encoded in the value function and as such it cannot be easily turned off. To overcome this problem, we proposed to jointly learn an explicit exploitative policy that is only driven by the extrinsic reward of the task at hand.</p><p>Proposed architecture: We propose to use a universal value function approximator (UVFA) Q(x, a, ? i ) to simultaneously approximate the optimal value function with respect to a family of augmented rewards of the form r ?i t = r e t + ? i r i t . We employ a discrete number N of values</p><formula xml:id="formula_6">{? i } N ?1 i=0</formula><p>including the special case of ? 0 = 0 and ? N ?1 = ? where ? is the maximum value chosen. In this way, one can turn-off exploratory behaviour simply by acting greedily with respect to Q(x, a, 0). Even before observing any extrinsic reward, we are able to learn a powerful representation and set of skills that can be quickly transferred to the exploitative policy. In principle, one could think of having an architecture with only two policies, one with ? 0 = 0 and one with ? 1 &gt; 0. The advantage of learning a larger number of policies comes from the fact that exploitative and exploratory policies could be quite different from a behaviour standpoint. Having a larger number of policies that change smoothly allows for more efficient training. For a detailed description of the specific values of ? i we use in our experiments, see App.A. We adapt the R2D2 agent that uses the dueling network architecture of <ref type="bibr">Wang et al. (2015)</ref> with an LSTM layer after a convolutional neural network. We concatenate to the output of the network a one-hot vector encoding the value of ? i , the previous action a t?1 , the previous intrinsic reward r i t and the previous extrinsic reward r e t . We describe the precise architecture in App. H.3 and hyperparameters in App. F.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RL Loss functions:</head><p>As a training loss we use a transformed Retrace double Q-learning loss. In App. E we provide the details of the computation of the Retrace loss . In addition, we associate for each ? i a ? i , with ? 0 = 0.997, and ? N ?1 = 0.99. We remark that the exploitative policy ? 0 is associated with the highest discount factor ? 0 = ? max and the most exploratory policy ? N ?1 with the smallest discount factor ? 0 = ? min . We can use smaller discount factors for the exploratory policies because the intrinsic reward is dense and the range of values is small, whereas we would like the highest possible discount factor for the exploitative policy in order to be as close as possible from optimizing the undiscounted return. For a detailed description of the specific values of ? i we use in our experiments, see App. A.</p><p>Distributed training: Recent works in deep RL have achieved significantly improved performance by running on distributed training architectures that collect large amounts of experience from many actors running in parallel on separate environment instances <ref type="bibr" target="#b0">(Andrychowicz et al., 2018;</ref><ref type="bibr" target="#b8">Burda et al., 2018b;</ref><ref type="bibr" target="#b11">Espeholt et al., 2018;</ref><ref type="bibr" target="#b18">Kapturowski et al., 2019;</ref>. Our agent builds upon the work by <ref type="bibr" target="#b18">Kapturowski et al. (2019)</ref> to decouple learning from acting, with actors (256 unless stated otherwise) feeding experience into a distributed replay buffer and the learner training on randomly sampled batches from it in a prioritized way <ref type="bibr" target="#b31">(Schaul et al., 2015b)</ref>. Please refer to App. A for details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">EXPERIMENTS</head><p>We begin by analyzing the exploratory policy of the Never Give Up (NGU) agent with a single reward mixture. We perform such analysis by using a minimal example environment in Section 4.1. We observe the performance of its learned policy, as well as highlight the importance of learning a representation for abstract states. In Section 4.2, we analyze the performance of the full NGU agent, evaluating its effectiveness on the Arcade Learning Environment (ALE; <ref type="bibr" target="#b3">Bellemare et al. (2013)</ref>). We measure the performance of the agent against baselines on hard exploration games, as well as dense reward games. We expand on the analysis of the NGU agent by running it on the full set of Atari games, as well as showing multiple ablations on important choices of hyperparameters of the model. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">CONTROLLED SETTING ANALYSIS</head><p>In this section we present a simple example to highlight the effectiveness of the exploratory policy of the NGU agent, as well as the importance of estimating the exploration bonus using a controllable state representation. To isolate the effect of the exploratory policy, we restrict the analysis to the case of a single exploratory policy (N = 1, with ? = 0.3). We introduce a gridworld environment, Random Disco Maze, implemented with the pycolab game engine (Stepleton, 2017), depicted in <ref type="bibr">Fig. 2 (left)</ref>. At each episode, the agent finds itself in a new randomly generated maze of size 21x21. The agent can take four actions {left, right, up, down}, moving a single position at a time. The environment is fully observable. If the agent steps into a wall, the episode ends and a new maze is generated. Crucially, at every time step, the color of each wall fragment is randomly sampled from a set of five possible colors, enormously increasing the number of possible states. This irrelevant variability in color presents a serious challenge to algorithms using exploration bonuses based on novelty, as the agent is likely to never see the same state twice. This experiment is purely exploratory, with no external reward. The goal is to see if the proposed model can learn a meaningful directed exploration policy despite the large visual distractions providing a continual stream of observation novelty to the agent. <ref type="figure" target="#fig_1">Fig. 2</ref> shows the percentage of unique states (different positions in the maze) visited by agents trained with the proposed model and one in which the mapping f is a fixed random projection (i.e. f is untrained). The proposed model learns to explore any maze sampled from the task-distribution. The agent learns a strategy that resembles depth-first search: it explores as far as possible along each branch before backtracking (often requiring backtracking a few dozen steps to reach an unexplored area). The model with random projections, as well as our baseline of RND, do not show such exploratory behaviour 1 . Both models do learn to avoid walking into walls, doing so would limit the amount of intrinsic reward it would receive. However, staying alive is enough: simply oscillating between two states will produce different (and novel) controllable states at every time step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">ATARI RESULTS</head><p>In this section, we evaluate the effectiveness of the NGU agent on the Arcade Learning Environment (ALE; <ref type="bibr" target="#b3">(Bellemare et al., 2013)</ref>). We use standard Atari evaluation protocol and pre-processing as described in Tab. 8 of App. F.4, with the only difference being that we do not use frame stacking. We restrict NGU to using the same setting and data consumption as R2D2, the best performing algorithm on Atari <ref type="bibr" target="#b18">(Kapturowski et al., 2019)</ref>. While we compare our results with the best published methods on this benchmark, we note that different baselines use very different training regimes with very different computational budgets. Comparing distributed and non-distributed methods is in general difficult. In an effort to properly assess the merits of the proposed model we include two additional baselines: as NGU is based on R2D2 using the Retrace loss (instead of its n-step objective) we include this as a baseline, and since we use RND as a reward modulator, we also include R2D2 with Retrace using the RND intrinsic reward. These methods are all run for 35 billion frames using the same protocol as that of R2D2 <ref type="bibr" target="#b18">(Kapturowski et al., 2019)</ref>. We detail the use of compute resources of the algorithms in App. D. We report the return averaged over 3 different seeds.</p><p>Architecture: We adopt the same core architecture as that used by the R2D2 agent to facilitate comparisons. There are still a few choices to make, namely: the size of the learned controllable states, the clipping factor L in <ref type="formula" target="#formula_0">(1)</ref>, and the number of nearest neighbours to use for computing pseudo-counts in (2). We selected these hyperparameters by analysing the performance of the single policy agent, NGU(N = 1), on two representative exploration games: Montezuma's Revenge and Pitfall!. We report this study in App. B. We used the same fixed set of hyperparameters in all the remaining experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>NGU agent:</head><p>We performed further ablations in order to better understand several major design choices of the full NGU agent on a set of 8 Atari games: the set of 5 dense reward games chosen to select the hyperparameters of <ref type="bibr" target="#b21">Mnih et al. (2015)</ref>, as well as 3 hard exploration games (Montezuma's Revenge, Pitfall!, and Private Eye). For a detailed description of the results on these games as well as results on more choices of hyperparameters, please see App.C. The ablations we perform are on the number of mixtures N , the impact of the off-policy data used (referred to as CMR below), the maximum magnitude of ? (by default 0.3 if not explicitly mentioned), the use of RND to scale the intrinsic reward, and the performance of the agent in absence of extrinsic rewards. We denote by Cross Mixture Ratio (CMR) the proportion in the training batches of experience collected using different values of ? i from the one being trained. A CMR of 0 means training each policy only with data produced by the same ? i , while a CMR of 0.5 means using equal amounts of data produced by ? i and ? j =i . Our base agent NGU has a CMR of 0.</p><p>The results are shown in <ref type="figure" target="#fig_2">Fig. 3</ref>. Several conclusions can be extracted from these results: Firstly, sharing experience from all the actors (with CMR of 0.5) slightly harms overall average performance on hard exploration games. This suggests that the power of acting differently for different conditioning mixtures is mostly acquired through the shared weights of the model rather than shared data. Secondly, we observe an improvement, on average, from increasing the number of mixtures N on hard exploration games. Thirdly, as one can observe in analyzing the value of ?, the value of ? = 0.3 is the best average performing value, whereas ? = 0.2 and ? = 0.5 make the average performance worse on those hard exploration games. These values indicate, in this case, the limits in which NGU is either not having highly enough exploratory variants (? too low) or policies become too biased towards exploratory behavior (? too high). Further, the use of the RND factor seems to be greatly beneficial on these hard exploration games. This matches the great success of existing literature, in which long-term intrinsic rewards appear to have a great impact <ref type="bibr" target="#b25">Ostrovski et al., 2017;</ref><ref type="bibr" target="#b9">Choi et al., 2018)</ref>. Additionally, as outlined above, the motivation behind studying these variations on this set of 8 games is that those hyperparameters are of general effect, rather than specific to exploration. However, surprisingly, with the exception of the case of removing the extrinsic reward, they seem to have little effect on the dense reward games we analyze (with all error bars overlapping). This suggests that NGU and its hyperparameters are relatively robust: as extrinsic rewards become dense, intrinsic rewards (and their relative weight to the extrinsic rewards) naturally become less relevant. Finally, even without extrinsic reward r e , we can still obtain average superhuman performance on the 5 dense reward games we evaluate, indicating that the exploration policy of NGU is an adequate high performing prior for this set of tasks. That confirms the findings of <ref type="bibr" target="#b7">Burda et al. (2018a)</ref>, where they showed that there is a high degree of alignment between the intrinsic curiosity objective and the hand-designed extrinsic rewards of many game environments. The heuristics of surviving and exploring what is controllable seem to be highly general and beneficial, as we have seen in the Disco Maze environment in Section 4.1, as well as on Atari.  <ref type="bibr" target="#b18">(Kapturowski et al., 2019)</ref>, DQN + PixelCNN <ref type="bibr" target="#b25">(Ostrovski et al., 2017)</ref>, DQN + CTS , RND <ref type="bibr" target="#b8">(Burda et al., 2018b)</ref>, and PPO + CoEx <ref type="bibr" target="#b9">(Choi et al., 2018)</ref> for each game. Hard exploration games: We now evaluate the full NGU agent on the six hard exploration games identified by . We summarise the results on Tab. 1. The proposed method achieves on similar or higher average return than state-of-the-art baselines on all hard exploration tasks. Remarkably, to the best of our knowledge, this is the first method without use of privileged information that obtains a positive score on Pitfall!, with NGU(N = 1)-RND obtaining a best score of 15,200. Moreover, in 4 of the 6 games, NGU(N = 32) appears to substantially improve against the single mixture case NGU(N = 1). This shows how the exploitative policy is able to leverage the shared weights with all the intrinsically-conditioned mixtures to explore games in which it is hard to do so, but still optimize towards maximizing the final episode score. In <ref type="figure" target="#fig_3">Fig. 4</ref> we can see these conclusions more clearly: both in terms of mean and median human normalized scores, NGU greatly improves upon existing algorithms.</p><p>While direct comparison of the scores is interesting, the emphasis of this work is on learning directed exploration strategies that encourage the agent to cover as much of the environment as possible. In <ref type="figure" target="#fig_3">Fig. 4</ref>.2 (left) we observe the average episodic return of NGU run with and without RND on Pitfall!. NGU(N = 32) is able to learn a directed exploration policy capable of exploring an average of 46 rooms per episode, crossing 14 rooms before receiving the first extrinsic reward. We also observe that, in this case, using RND makes our model be less data efficient. This is also the case for NGU(N = 1), as observed on NGU(N = 1)-RND in Tab. 1, the best performing Pitfall! agent. We conjecture three main hypotheses to explain this: firstly, on Pitfall! (and unlike Montezuma's Revenge) rooms are frequently aliased to one another, thus the agent does not obtain a large reward for discovering new rooms. This phenomenon would explain the results seen in <ref type="figure" target="#fig_1">Fig. 4.2 (right)</ref>, in which RND greatly improves the results of NGU(N = 32). Secondly, the presence of a timer in the observation acts as a spurious source of novelty which greatly increases the number of unique states achievable even within a single room. Thirdly, as analyzed in Section 3.7 of <ref type="bibr" target="#b8">Burda et al. (2018b)</ref>, RND-trained agents often keep 'interacting with danger' instead of exploring further, and Pitfall! is a game in which this can be highly detrimental, due to the high amount of dangerous elements in each room. Finally, we observe that NGU(N = 1) obtains better results than NGU(N = 32). Our intuition is that, in this case, a single policy should be simpler to learn and can achieve quite good results on this task, since exploration and exploitation policies are greatly similar.</p><p>Dense reward games: Tab. 2 shows the results of our method on dense reward games. NGU(N = 1) underperforms relative to R2D2 on most games (indeed the same can be said of R2D2(Retrace) that serves as the basis of NGU). Since the intrinsic reward signal may be completely misaligned with the goal of the game, these results may be expected. However, there are cases such as Pong, in which NGU(N = 1) catastrophically fails to learn to perform well. Here is where NGU(N = 32) solves   this issue: the exploitative policy learned by the agent is able to reliably learn to play the game. Nevertheless, NGU(N = 32) has limitations: even though its learned policies are vastly superhuman and empirically reasonable, they do not match R2D2 on Breakout and Beam Rider. This suggests that the representations learned by using the intrinsic signal still slightly interfere with the learning process of the exploitative mixture. We hypothesize that alleviating this further by having non-shared representations between mixtures should help in solving this issue.</p><p>Results on all Atari 57 games: The proposed method achieves an overall median score of 1354.4%, compared to 95% for Nature DQN baseline, 191.8% for IMPALA, 1920.6% for R2D2, and 1451.8% for R2D2 using retrace loss. Please refer to App. G for separate results on individual games. Even though its overall median score is lower than R2D2, NGU maintains good performance on all games, performing above human level on 51 out of the 57 games. This also shows further confirmation that the learned exploitative mixture is still able to focus on maximizing the score of the game, making the algorithm able to obtain great performance across all games. <ref type="figure" target="#fig_5">Fig. 6</ref>, we can see NGU(N = 32) evaluated with ? 0 = 0 (used in all reported numerical results) against NGU(N = 32) evaluated with ? 31 = 0.3. We can observe different trends in the games: on Q*Bert the policies of the agent seem to converge to the exploitative policy regardless of the ? condition, with its learning curve being almost identical to the one shown for R2D2 in <ref type="bibr" target="#b18">Kapturowski et al. (2019)</ref>. As seen in App. G, this is common in many games. The second most common occurrence is what we see on Pitfall! and Beam Rider, in which the policies quantitatively learn very different behaviour. In these cases, the exploitative learns to focus on its objective, and sometimes it does so by benefiting from the learnings of the exploratory policy, as it is the case in Pitfall! 2 , where R2D2 never achieves a positive score. Finally, there is the exceptional case of Montezuma's Revenge, in which the reverse happens: the exploratory policy obtains better score than the exploitative policy. In this case, extremely long-term credit assignment is required in order for the exploitative policy to consolidate the knowledge of the exploratory policy. This is because, to achieve scores that are higher than 16k, the agent needs to go to the second level of the game, going through many non-greedy and sometimes irreversible actions. For a more detailed analysis of this specific problem, see App. I.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Analysis of Multiple Mixtures: in</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUSIONS</head><p>We present a reinforcement learning agent that can effectively learn on both sparse and dense reward scenarios. The proposed agent achieves high scores in all Atari hard-exploration games, while still maintaining a very high average score over the whole Atari-57 suite. Remarkably, it is, to the best of our knowledge, the first algorithm to achieve non-zero rewards on the challenging game of Pitfall! without relying on human demonstrations, hand-crafted features, or manipulating the state of the environment. A central contribution of this work is a method for learning policies that can maintain exploration throughout the training process. In the absence of extrinsic rewards, the method produces a policy that aims at traversing all controllable states of the MDP in a depth-first manner. We highlight that this could have impact beyond this specific application and/or algorithmic choices. For instance, one could use it as a behaviour policy to facilitate learning models of the environment or as a prior for planning methods.</p><p>The proposed method is able to leverage large amounts of compute by running on distributed training architectures that collect large amounts of experience from many actors running in parallel on separate environment instances. This has been crucial for solving most challenging tasks in deep RL in recent years <ref type="bibr" target="#b0">(Andrychowicz et al., 2018;</ref><ref type="bibr" target="#b11">Espeholt et al., 2018;</ref>, and this method is able to utilize such compute to obtain strong performance on the set of hard-exploration games on Atari. While this is certainly a desirable feature and allows NGU to achieve a remarkable performance, it comes at the price of high sample complexity, consuming a large amount of simulated experience taking several days of wall-clock time. An interesting avenue for future research lies in improving the data efficiency of these agents.</p><p>Further, the episodic novelty measure relies on the notion of controllable states to drive exploration. As observed on the Atari hard-exploration games, this strategy performs well on several tasks, but it may not be the right signal for some environments. For instance, in some environments it might take more than two consecutive steps to see the consequences of the actions taken by the agent. An interesting line for future research is learning effective controllable states beyond a simple inverse dynamics model.</p><p>Additionally, the proposed work relies on the assumption that while different, one can find good exploratory and exploitative policies that are similar enough to be effectively represented using a shared parameterization (implemented using the UVFA framework). This can be limiting when the two policies are almost adversarial. This can be seen in games such as 'Surround' and 'Ice hockey'.</p><p>Finally, the hyperparameter ? depends on the scale of the extrinsic reward. Thus, environments with significantly different extrinsic reward scales, might require different values of ?. An interesting avenue forward is the dynamic adaptation of ?, which could be done by using techniques such as Population Based Training (PBT) <ref type="bibr" target="#b17">(Jaderberg et al., 2017)</ref> or Meta-gradients <ref type="bibr">(Xu et al., 2018)</ref>. Another advantage of dynamically tuning this hyperparameter would be to allow for the model to become completely exploitative when the agent has reached a point in which further exploring does not lead to improvements on the exploitative policy. This is not trivially achievable however, as including such a mechanism would require calibrating the adaptation to be aligned to the speed of learning of the exploitative policy. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A EVALUATION SETUP</head><p>The evaluation we do is also identical to the one done in R2D2 <ref type="bibr" target="#b18">Kapturowski et al. (2019)</ref>: a parallel evaluation worker, which shares weights with actors and learners, runs the Q-network against the environment. This worker and all the actor workers are the two types of workers that draw samples from the environment. For Atari, we apply the standard DQN pre-processing, as used in R2D2. More concretely, this is how actors, evaluators, and learner are run:</p><p>Learner:</p><p>? Sample from the replay buffer a sequence of augmented rewards r t , intrinsic rewards r i t , observations x, actions a and discounts ? i .</p><p>? Use Q-network to learn from (r t , x, a) with retrace using the procedure used by R2D2. As specified in <ref type="figure" target="#fig_0">Fig. 1</ref>, r i t is sampled because it is fed as an input to the network. ? Use last 5 frames of the sampled sequences to train the action prediction network as specified in Section 2. This means that, for every batch of sequences, all time steps are used to train the RL loss, whereas only 5 time steps per sequence are used to optimize the action prediction loss.</p><p>? (If using RND) also use last 5 frames of the sampled sequences to train the predictor of RND as also specified in Section 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Evaluator and Actor</head><p>? Obtain x t , r e t , r i t?1 , and discount ? i . ? With these inputs, compute forward pass of R2D2 to obtain a t .</p><p>? With x t , compute r i t using the embedding network as described in Section 2. ? (actor) Insert x t , a t , r t = r e t + ? i r i t , ? i , and r i t in the replay buffer. ? Step on the environment with a t .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Distributed training</head><p>As in R2D2, we train the agent with a single GPU-based learner, performing approximately 5 network updates per second (each update on a mini-batch of 64 length-80 sequences, as explained below, and each actor performing ? 260 environment steps per second on Atari. We assign to each actor a fixed value in the set {? i } N ?1 i=0 and the actor acts according to an -greedy version of this policy. More concretely for the j-th actor we assign the value ? h with h = j mod N ? 1. In our experiments, we use the following ? i :</p><formula xml:id="formula_7">? i = ? ? ? 0 if i = 0 ? if i = N ? 1 ? ? ?(10 2i?(N ?2) N ?2 ) otherwise</formula><p>where ? is the sigmoid function. This choice of ? i , as you can see in <ref type="figure" target="#fig_6">Fig.7(a)</ref>, allows to focus more on the two extreme cases which are the fully exploitative policy and very exploratory policy.</p><p>In the replay buffer, we store fixed-length sequences of (x, a, r) tuples. In all our experiments we collect sequences of length 80 timesteps, where adjacent overlap by 40 time-steps. These sequences never cross episode boundaries. Additionally, we store in the replay the value of the ? i used by the actor as well as the initial recurrent state, that we use to initialize the network at training time. Please refer to <ref type="bibr" target="#b18">Kapturowski et al. (2019)</ref> for a detailed experimental of trade-offs on different treatments of recurrent states in replay. Given a single batch of trajectories we unroll both online and target networks on the same sequence of states to generate value estimates. We use prioritized experience replay. We followed the same prioritization scheme proposed in <ref type="bibr" target="#b18">Kapturowski et al. (2019)</ref> using a mixture of max and mean of the TD-errors with priority exponent ? = 1.0. In addition, we associate for each ? i a ? i such that:</p><formula xml:id="formula_8">? i = 1 ? exp (N ? 1 ? i) log(1 ? ? max ) + i log(1 ? ? min ) N ? 1 ,<label>(4)</label></formula><p>where ? max is the maximum discount factor and ? min is the minimal discount factor. This form allows to have discount factors evenly spaced in log-space between 1 ? ? max and 1 ? ? min . For more intuition, we provide a graph of the {? i } N ?1 i=0 in <ref type="figure" target="#fig_6">Fig.7(b)</ref> in App.A. We remark that the exploitative policy ? 0 is associated with the highest discount factor ? 0 = ? max and the most exploratory policy ? N ?1 with the smallest discount factor ? 0 = ? min . We can use smaller discount factors for the exploratory policies because the intrinsic reward is dense and the range of values is small, whereas we would like the highest possible discount factor for the exploitative policy in order to be as close as possible to optimizing the undiscounted return. In our experiments, we use ? max = 0.997 and ? min = 0.99. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.1 NEVER-GIVE-UP INTRINSIC REWARD ALGORITHM</head><p>We present the algorithm for computing the intrinsic reward in Alg. 1. We follow the notations defined in Sec. 2 in the paragraph relative to the episodic intrinsic reward:</p><p>? M the episodic memory containing at time t the previous embeddings {f (x 0 ), f (x 1 ), . . . , f (x t?1 )}.</p><p>? k is the number of nearest neighbours.</p><formula xml:id="formula_9">? N k = {f i } k i=1</formula><p>is the set of k-nearest neighbours of f (x t ) in the memory M . ? K the kernel defined as K(x, y) = d 2 (x,y)</p><formula xml:id="formula_10">d 2 m +</formula><p>where is a small constant, d is the Euclidean distance and d 2 m is a running average of the squared Euclidean distance of the k-nearest neighbors.</p><p>? c is the pseudo-counts constant.</p><p>? ? cluster distance.</p><p>? s m maximum similarity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 COMPLEXITY ANALYSIS</head><p>The space complexity is constant. The number of weights that the network has can be computed from the architecture seen in App. F. Furthermore, for our episodic memory buffer, we pre-allocate memory at the beginning of training, with size detailed in App. F. In cases in which the episode is longer than the size of the memory, the memory acts a ring buffer, deleting oldest entries first. <ref type="figure">? N )</ref>, where N is the number of frames, and M is the size of our memory. This is due to the fact that we do one forward pass per frame, and we compute the distance from the embeddings produced by the embeddings network to the contents of our memory in order to retrieve the k-nearest neighbors.    from using more neighbors on Pitfall!, whereas there is a clear difference in performance in using 10 neighbors in Montezuma's Revenge when compared to using 5 or 30 neighbors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Time complexity is O(M</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.3 CLIPPING FACTOR L</head><p>Finally, we show the performance of NGU(N=1) on <ref type="figure" target="#fig_0">Fig. 12 and Fig. 13</ref> regarding the clipping factor L Pitfall! and Montezuma's Revenge respectively. As we can observe, Pitfall! is again robust to the value of this hyperparameter, with marginally worse performance in the case of L = 10. This is expected, as RND is generally detrimental to the performance of NGU on Pitfall!, as seen in Section 4.2. On the other hand, the highest value of clipping appears to work best on Montezuma's Revenge. In our initial investigations, we observed that clipping this value was required on Montezuma's Revenge to make the algorithm stable. Further analysis is required in order to show the range of values of L that are higher than 10 and are detrimental to the performance of NGU(N=1) on this task.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C ABLATIONS FOR NGU(N=32)</head><p>C.1 GENERAL ABLATIONS Tab. 3 shows the results for all the ablations we performed on 8 games for NGU(N = 32). We can see that the conclusions of Sec. 4.2 hold, with a few additional facts to observe:</p><p>? The best score in Montezuma's Revenge is obtained by using a non-zero Cross Mixture Ratio, even though it is relatively close to the score obtained by NGU(N = 32). ? N = 2 and N = 8 have lower average human normalized score on the set of 3 hard exploration games when compared to N = 16 or N = 32. Concretely on the set of hard     ? Even though we have seen that the results of ? = 0.2 and ? = 0.5 have lower average on the 3 hard exploration games of Tab. 3, they still individually outperform RND, R2D2, R2D2(Retrace), and R2D2+RND on Pitfall! and Private Eye. ? In the case of Private Eye the distance in score might be misleading, as rewards are very sparse of large value. For instance, after reaching a score of 40k, if we ignore minor rewards, there are only two rewards to be collected of around 30k points. This creates what seems to be large differences in scores. ? On Breakout, a high score is achieved without extrinsic reward. This is due to the fact that the exploratory policy learns to survive, which eventually leads to a high score.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.2 FURTHER ABLATIONS ON HARD EXPLORATION</head><p>On Tab.4 we show further results on the case of ? = 0.2 and ? = 0.5. We compare them to human performance as well as the base NGU(N = 32), with ? = 0.3.</p><p>As we can observe, in this case the difference in terms of relative performance among games is less pronounced than the ones observed on Tab. 3. In fact, results are slightly better for both values of ? on all 3 games, with a maximum difference of 1.5k points on Solaris between ? = 0.3 and ? = 0.2. We hypothesize that this is due to the nature of these specific games: the policies learnt on these three games seem to focus on exploitation rather than extended exploration of the environment, and in that case, similar to what we see for dense reward games in Sec. 4.2, the method shows less variability with respect to this hyperparameter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D ALGORITHM COMPUTATION COMPARISON</head><p>On Tab. 5 we can see a comparison of the computation used between different algorithms.</p><p>Computation is still difficult to compare even when taking actor steps and parameter updates into account: distributed the number of actors in distributed setups will affect how much data the learner will be able to consume, but also how off-policy such data is (e.g. in R2D2, if a learner is learning from many actors, the data that is sampled from the replay buffer will be more recent than with fewer actors).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E DETAILS ON THE RETRACE ALGORITHM</head><p>Retrace  is an off-policy Reinforcement Learning algorithm that can be used for evaluation or control. In the evaluation setting the goal is mainly to estimate the action-value function Q ? of a target policy ? from trajectories drawn from a behaviour policy ?. In the control</p><p>In the control scenario the policy chosen ?(a|x) is greedy or -greedy with respect to the online network Q(x, a; ?). Then, the online network is optimized to minimize the loss:</p><formula xml:id="formula_11">L(x t , a t , ?) = (Q(x t , a t ; ?) ?? t ) 2 .<label>(13)</label></formula><p>More generally, one can use transformed Retrace operators <ref type="bibr" target="#b27">(Pohlen et al., 2018)</ref>:</p><formula xml:id="formula_12">T h Q(x, a) = E ? ? ? h ? ? h ?1 (Q(x, a)) + t?0 ? t t s=1 c s ? h t ? ? ? ? ,<label>(14)</label></formula><p>where h ? R R is a real-function and the temporal difference ? h t is defined as:</p><formula xml:id="formula_13">? h t = r t + ? a?A ?(a|x t+1 )h ?1 (Q(x t+1 , a)) ? h ?1 (Q(x t , a t )).<label>(15)</label></formula><p>The role of the function h is to reduce (squash) the scale of the action-value function to make it easier to approximate for a neural network without changing the optimal property of the operator T . In particular, we use the function h:</p><formula xml:id="formula_14">?z ? R, h(z) = sign(z)( |z| + 1 ? 1) + z,<label>(16)</label></formula><formula xml:id="formula_15">?z ? R, h ?1 (z) = sign(z) 1 + 4 (|z| + 1 + ) ? 1 2 ? 1 ,<label>(17)</label></formula><p>with = 10 ?2 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F HYPERPARAMETERS F.1 SELECTION OF HYPERPARAMETERS</head><p>In order to select the hyperparameters used for NGU(N = 32) for all 57 Atari games, which are shown on Tab. 6, we ran a grid search with the ranges shown on Tab. 9. We used 3 seeds on the set of 8 Atari games shown in Tab. 3. Regarding the hyperparameters concerning the kernel K (Kernel and the number of neighbors used), we fixed them after determining suitable ranges of the intrinsic reward in our initial experimentation on Atari. After running the grid search with those hyperparameters, we selected the combination with the highest amount games (out of 8) that held a score greater than our human benchmark. As one can see on the multiple mixtures ablations seen on Tab. 3, as well as the single mixture ablations on App B, the only agent that achieved superhuman performance on the set of 8 games is NGU(N = 32).</p><p>Finally, in order to obtain the R2D2+RND baseline, we ran a sweep over the ? hyperparameter with values 0.1, 0.3, and 0.5, over the 8 games shown in Tab. 3. Coincidentally, like NGU(N = 32), the best value of ? was determined to be 0.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F.2 COMMON HYPERPARAMETERS</head><p>These are the hyperparameters used in all the experiments. We expose a full list of hyperparameters here for completeness. However, as one can see, the R2D2-related architectural hyperparameters are identical to the original R2D2 hyperparameters. Shown in Tab. 6.     </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I CONTROLLABLE STATES</head><p>In this section we evaluate properties of the learned controllable states. We further present a study of the performance of the algorithm when having access to oracle controllable states containing only the necessary information. We use Montezuma's Revenge as a case-study.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I.1 INSPECTING THE PROPERTIES OF LEARNED CONTROLLABLE STATES</head><p>As explained in Section 2, we train the embedding network f using an inverse dynamics model as done by <ref type="bibr" target="#b26">Pathak et al. (2017)</ref>. Intuitively, the controllable states should contain the information relevant to the action performed by the agent given two consecutive observations. However it might contain other type of information as long as it can be easily ignored by our simple classifier, g.</p><p>As noted in <ref type="bibr" target="#b8">Burda et al. (2018b)</ref>, for this game, one can identify a novel state by using five pieces of information: the (x, y) position of the player, a room identifier, the level number, and the number of keys held. This information can be easily extracted from the RAM state of the game as described in Section I.3 bellow. One question that we could ask is whether this information is present (or easily decodable) or not in the learned controllable state. We attempted to answer this question by training a linear classifier to predict the (x, y) coordinates and the room identified from the learned controllable state. Importantly we do not backpropagate the errors to the embedding network f . <ref type="figure" target="#fig_0">Figure 19</ref> shows the average results over the episodes as the training of the agent progresses. We can see that the squared error in predicting the (x, y) position of the agent stabilises to a more or less constant value, which suggests that it can successfully generalise to new rooms (we do not observe an increase in the error when new rooms are discovered). The magnitude of the error is of the order of 12 units, which less than 10% of the range (see Section I.3). This is to be expected, as it is the most important information for predicting which action was taken. It shows that the information is quite accessible and probably has a significant influence in the proposed novelty measure. The room identifier, on the other hand, is information that is not necesary to predict the action taken by the agent. Unlike the previous case, one can see jumps in the error as training progresses as the problem becomes harder. It stabilises around an error slightly above 20%, which is reasonably good considering that random chance is 96%. This means that even if there is nothing specifically encouraging this information to be there, it is still present and in turn can influence the proposed novelty signal.</p><p>An avenue of future work is to research alternative methods for learning controllable states that directly search for retaining all relevant information. While very good results can be obtained with one of the simple alternative of an inverse dynamics model, it is reasonable to think that better results could be attained when using a better crafted one. To inform this question, we investigate in the next section what results could we obtain if we explicitly use as controllable states the quantities that we were trying to predict in this section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I.2 MONTEZUMA'S REVENGE WITH HAND-CRAFTED CONTROLLABLE STATES</head><p>In the previous section we analysed the properties of the learned controllable states. A valid question to ask is: how would the NGU work if we had access to an oracle controllable state containing only the relevant information? This analysis is a form of upper bound performance for a given agent architecture. We ran the NGU(N=1) model with two ablations: without RND and without extrinsic rewards. Instead of resetting the memory after every episode, we do it after a small number of consecutive episodes, which we call a meta-episode. This structure plays an important role when the agent faces irreversible choices. In this setting, approaches using non-episodic exploration bonuses are even more susceptible to suffer from the "detachment" problem described in <ref type="bibr" target="#b10">Ecoffet et al. (2019)</ref>. The agent might switch between alternatives without having exhausted all learning opportunities, rendering choosing the initial option uninteresting from a novelty perspective. The episodic approach with a meta-episode of length one would be forced to make similar choices. However, when run with multiple episodes it can offer an interesting alternative. In the first episode, the agent starts with an empty episodic memory can can choose arbitrarily one of the options. In the second episode, the episodic memory contains all the experience collected in the first episode. The agent is then rewarded for not repeating the strategy followed in the first one, as revisiting those states will lead to lower intrinsic reward. Thus, the agent is encourage to learn diverse behaviour across episodes without needing to choose between alternatives nor being susceptible to the detachment problem. Results are summarized in <ref type="figure" target="#fig_0">Fig. 19</ref>. We report the average episodic return (left) as well as the average number of visited rooms per meta-episode (right). The model achieves higher scores than the one using learned controllable states (as reported in Section 4.2).</p><p>Incorporating long-term novelty in the exploration bonus, encourages the agent to concentrate in the less explored areas of the environment. Similarly to what we observed with learned controllable states, this provides a boost both in data efficiency as well as final performance, obtaining close to 15,000 average return and visiting an average of 25 rooms per episode. In this run, three out of five seeds reach the second level of the game, one of which reaches the third level with an average of fifty different rooms per episode. We also observe that, when running in the absence of extrinsic rewards, the agent remarkably still achieves a very high extrinsic reward. Secondly, the agent is able to consistently reach a large number of rooms and explore more than 20 rooms without any extrinsic guidance.</p><p>As noted in <ref type="bibr" target="#b8">Burda et al. (2018b)</ref>, in Montezuma's Revenge each level contains 6 doors and 4 keys. If the agent walks through a door holding a key, it receives a reward of 300 consuming the key in the process. In order to clear a level, the agent needs open two doors located just before the final room. During exploration, the agent needs to hold on to two keys to see what it could do with them later in the episode, sacrificing the immediate reward of opening more accessible doors. Any agent that acts almost greedily will struggle with what looks like a high level choice. With the right representation and using meta-episodes, our method can handle this problem in an interesting way. When the number of keys held is represented in the controllable state, the agent chooses a different key-door combination on each of the three episodes in which we do not wipe our episodic memory. At the end of training, in the first episode after wiping the episodic memory, our agent shows a score of 14, 660 ? 196, while the third episode the agent shows a score of 34, 040 ? 9, 835, exploring on average over 30 rooms and consistently going to the second level 3 . The agent learns a complex exploratory policy spanning several episodes that can handle irreversible choices and overcome "distractor" rewards. We do not observe different key-door combinations across episodes when using learned controllable states. Presumably the signal of the number of held keys in the learned controllable states is not strong enough to treat them as sufficiently different.</p><p>The results describe in this section support the idea that significant gains can be obtained by improving the respresentation of the controllable states, suggesting that the study of learning better representations is an interesting line for future work. Recent works have explored ways of measuring novelty by learning controllable aspects of an environment <ref type="bibr" target="#b19">(Kim et al., 2018;</ref><ref type="bibr">Warde-Farley et al., 2018)</ref>, and we believe that some of these ideas could be also useful in this setting.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I.3 HAND-CRAFTED STATE FEATURES FOR MONTEZUMA'S REVENGE</head><p>We obtain the hand-crafted features for Montezuma's Revenge by observing the RAM state of the game at every time step. More concretely:</p><p>? x and y can be observed at positions 0xAA and 0xAB respectively, represented by integers with a range of [0, 153] ? [0, 122]. ? Room id and level number can be found in positions 0x83 and 0xB9 respectively. We provide this information as a single integer to our agent in the form of r id + 24 * l n where r id ? {0, . . . , 23} is the room id, and l n is the level number.</p><p>? Byte 0xC1 is the player's inventory. We count the number of keys being held (and provide this information to the agent) by adding the bits {2, . . . , 6}, which correspond to the binary slots for keys.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>(left) Training architecture for the embedding network (right) NGU's reward generator.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>(Left and Center) Sample screens of Random Disco Maze. The agent is in green, and pathways in black. The colors of the wall change at every time step. (Right) Learning curves for Random projections vs. learned controllable states and a baseline RND implementation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Human Normalized Scores on dense reward and hard exploration games.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Human Normalized Scores on the 6 hard exploration games.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Mean episodic return for agents trained (left) Pitfall! and (right) Montezuma's Revenge.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>NGU(N=32) behavior for ? 0 (blue) and ? 31 (orange).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>i=0Figure 7 :</head><label>7</label><figDesc>(a) Values taken by the {?i} N ?1 i=0 (b) Values taken by the {?i} N ?1 Values taken by the {? i } N ?1 i=0 and the {? i } N ?1 i=0 for N = 32 and ? = 0.3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Mean episodic return for agents trained Pitfall!.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 :</head><label>9</label><figDesc>Mean episodic return for agents trained Montezuma's Revenge.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 10 :</head><label>10</label><figDesc>Mean episodic return for agents trained Pitfall!.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 11 :</head><label>11</label><figDesc>Mean episodic return for agents trained Montezuma's Revenge.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 12 :</head><label>12</label><figDesc>Mean episodic return for agents trained Pitfall!.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 13 :</head><label>13</label><figDesc>Mean episodic return for agents trained Montezuma's Revenge.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 17 :</head><label>17</label><figDesc>R2D2 Agent Architecture. H.3 ARCHITECTURE OF THE R2D2 AGENT</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 18 :</head><label>18</label><figDesc>Prediction loss from learned controllable states of the position (top) and room (bottom) on Montezuma's Revenge against minibatch updates.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 19 :</head><label>19</label><figDesc>Mean episodic return (left) and mean number of visited rooms per episode (right) vs environment frames for agents trained Montezuma's Revenge with hand-crafted controllable states.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>.5k 10.4k?1.6k 8.4k?4.5k 100.0k?0.4k 4.9k?0.3k 1.7k?0.1k Table 1: Results against exploration algorithm baselines. Best baseline takes the best result among R2D2</figDesc><table><row><cell>Algorithm</cell><cell>Gravitar</cell><cell>MR</cell><cell>Pitfall!</cell><cell>PrivateEye</cell><cell>Solaris</cell><cell>Venture</cell></row><row><cell>Human</cell><cell>3.4k</cell><cell>4.8k</cell><cell>6.5k</cell><cell>69.6k</cell><cell>12.3k</cell><cell>1.2k</cell></row><row><cell>Best baseline</cell><cell>15.7k</cell><cell>11.6k</cell><cell>0.0</cell><cell>11k</cell><cell>5.5k</cell><cell>2.0k</cell></row><row><cell>RND</cell><cell>3.9k</cell><cell>10.1k</cell><cell>-3</cell><cell>8.7k</cell><cell>3.3k</cell><cell>1.9k</cell></row><row><cell>R2D2+RND</cell><cell cols="3">15.6k?0.6k 10.4k?1.2k -0.5?0.3</cell><cell>19.5k?3.5k</cell><cell cols="2">4.3k?0.6k 2.7k?0.0k</cell></row><row><cell>R2D2(Retrace)</cell><cell cols="3">13.3k?0.6k 2.3k?0.4k -3.5?1.2</cell><cell>32.5k?4.7k</cell><cell cols="2">6.0k?1.1k 2.0k?0.0k</cell></row><row><cell>NGU(N=1)-RND</cell><cell cols="4">12.4k?0.8k 3.0k?0.0k 15.2k?9.4k 40.6k?0.0k</cell><cell cols="2">5.7k?1.8k 46.4?37.9</cell></row><row><cell>NGU(N=1)</cell><cell cols="6">11.0k?0.7k 8.7k?1.2k 9.4k?2.2k 60.6k?16.3k 5.9k?1.6k 876.3?114.5</cell></row><row><cell>NGU(N=32)</cell><cell>14.1k?0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table /><note>Results against baselines on dense reward games.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>Bradly C Stadie, Sergey Levine, and Pieter Abbeel. Incentivizing exploration in reinforcement learning with deep predictive models. arXiv preprint arXiv:1507.00814, 2015.Christopher Stanton and Jeff Clune. Deep curiosity search: Intra-life exploration can improve performance on challenging deep reinforcement learning problems. arXiv preprint arXiv:1806.00553, 2018.</figDesc><table><row><cell>Tom Stepleton. The pycolab game engine. https://github.com/deepmind/pycolab/</cell></row><row><cell>tree/master/pycolab, 2017.</cell></row><row><cell>Alexander L Strehl and Michael L Littman. An analysis of model-based interval estimation for</cell></row><row><cell>markov decision processes. Journal of Computer and System Sciences, 74(8):1309-1331, 2008.</cell></row><row><cell>Richard S Sutton and Andrew G Barto. Reinforcement learning: An introduction. MIT press, 2018.</cell></row><row><cell>Ziyu Wang, Tom Schaul, Matteo Hessel, Hado Van Hasselt, Marc Lanctot, and Nando De Freitas.</cell></row><row><cell>Dueling network architectures for deep reinforcement learning. arXiv preprint arXiv:1511.06581,</cell></row><row><cell>2015.</cell></row></table><note>David Warde-Farley, Tom Van de Wiele, Tejas Kulkarni, Catalin Ionescu, Steven Hansen, and Volodymyr Mnih. Unsupervised control through non-parametric discriminative rewards. arXiv preprint arXiv:1811.11359, 2018. Zhongwen Xu, Hado P van Hasselt, and David Silver. Meta-gradient reinforcement learning. In Advances in neural information processing systems, pp. 2396-2407, 2018.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>.9k 532.8?16.5 44.6k?1.2k 68.7k?11.1k 10.4k?1.6k 8.4k?4.5k 100.0k?0.4k N=2 20.6?0.1 457.7k?128.0k 576.0?24.9 48.0k?6.2k 71.8k?9.0k 11.1k?1.4k -1.</figDesc><table><row><cell>Algorithm</cell><cell>Pong</cell><cell>Qbert</cell><cell>Breakout</cell><cell>Space Invaders</cell><cell>Beam Rider</cell><cell>MR</cell><cell>Pitfall!</cell><cell>PrivateEye</cell></row><row><cell>Human</cell><cell>14.6</cell><cell>13.4k</cell><cell>30.5</cell><cell>1.6k</cell><cell>16.9k</cell><cell>4.8k</cell><cell>6.5k</cell><cell>69.6k</cell></row><row><cell>NGU(N=32)</cell><cell>19.6?0.1</cell><cell cols="6">465.8k?846?0.9</cell><cell>40.6k?0.1k</cell></row><row><cell>N=8</cell><cell>20.0?0.3</cell><cell cols="4">481.8k?41.2k 524.1?28.3 43.1k?5.5k 64.0k?3.8k</cell><cell cols="2">7.8k?0.3k -1.9?0.4</cell><cell>38.5k?1.6k</cell></row><row><cell>N=16</cell><cell>17.2?1.0</cell><cell cols="4">444.2k?61.7k 549.0?11.0 46.4k?3.5k 73.9k?5.3k</cell><cell cols="3">9.5k?0.8k 5.0k?1.2k 52.0k?20.7k</cell></row><row><cell>CMR=0.5</cell><cell>19.0?0.3</cell><cell cols="4">502.9k?73.9k 516.9?20.1 40.3k?7.1k 74.5k?5.9k</cell><cell cols="3">12.0k?0.8k 5.1k?2.4k 58.8k?16.9k</cell></row><row><cell>?=0.2</cell><cell>20.3?0.2</cell><cell cols="7">350.1k?24.7k 525.0?38.2 43.9k?1.3k 75.6k?10.9k 6.9k?0.1k 3.3k?1.4k 40.6k?0.0k</cell></row><row><cell>?=0.5</cell><cell>16.8?1.2</cell><cell cols="4">480.4k?59.2k 451.6?17.2 40.2k?4.8k 62.3k?5.9k</cell><cell cols="3">11.3k?0.5k 1.3k?0.5k 44.5k?3.2k</cell></row><row><cell>w/o RND</cell><cell>19.7?0.4</cell><cell cols="4">550.3k?64.4k 553.7?19.1 47.6k?3.7k 87.1k?9.1k</cell><cell cols="3">3.0k?0.0k 7.7k?0.9k 40.5k?0.1k</cell></row><row><cell>w/o r e</cell><cell>-8.4?1.9</cell><cell>28.1k?1.1k</cell><cell cols="3">383.0?10.0 5.5k?0.3k 6.4k?0.2k</cell><cell cols="3">3.4k?0.7k 600.4?468.9 7.5k?2.2k</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 3 :</head><label>3</label><figDesc>Ablation results on 8 Atari games.</figDesc><table><row><cell>Algorithm</cell><cell>Gravitar</cell><cell>Solaris</cell><cell>Venture</cell></row><row><cell>Human</cell><cell>3.4k</cell><cell>12.3k</cell><cell>1.2k</cell></row><row><cell>NGU(N=32)</cell><cell>14.1k?0.5k</cell><cell>4.9k?0.3k</cell><cell>1.7k?0.1k</cell></row><row><cell>?=0.2</cell><cell>14.2k?0.3k</cell><cell>6.4k?1.4k</cell><cell>2.3k?0.2k</cell></row><row><cell>?=0.5</cell><cell>13.5k?0.4k</cell><cell>5.5k?1.4k</cell><cell>2.0k?0.1k</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 4 :</head><label>4</label><figDesc>Further ablation results on hard exploration games.</figDesc><table /><note>exploration games of Tab. 3, they only achieve super-human performance on Montezuma's Revenge.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 7 :</head><label>7</label><figDesc>Disco Maze hyperparameters.</figDesc><table><row><cell>F.4 ATARI PRE-PROCESSING HYPERPARAMETERS</cell><cell></cell></row><row><cell>Hyperparameters are shown in Tab. 8.</cell><cell></cell></row><row><cell>Hyperparameter</cell><cell>Value</cell></row><row><cell>Max episode length</cell><cell>30 min</cell></row><row><cell>Num. action repeats</cell><cell>4</cell></row><row><cell>Num. stacked frames</cell><cell>1</cell></row><row><cell>Zero discount on life loss</cell><cell>f alse</cell></row><row><cell>Random noops range</cell><cell>30</cell></row><row><cell>Sticky actions</cell><cell>f alse</cell></row><row><cell>Frames max pooled</cell><cell>3 and 4</cell></row><row><cell>Grayscaled/RGB</cell><cell>Grayscaled</cell></row><row><cell>Action set</cell><cell>Full</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>Table 8 :</head><label>8</label><figDesc>Atari pre-processing hyperparameters.F.5 HYPERPARAMETER RANGESOn Tab. 9 we can see the ranges we used to sweep over in our experiments.</figDesc><table><row><cell>Hyperparameter</cell><cell>Value</cell></row><row><cell>Intrinsic reward scale ?</cell><cell>{0.2, 0.3, 0.5}</cell></row><row><cell>Number of mixtures N</cell><cell>{1, 2, 8, 16, 32}</cell></row><row><cell>Cross Mixture Ratio</cell><cell>{0.0, 0.25, 0.5}</cell></row><row><cell># Episodes w/o wiping Episodic Memory</cell><cell>{1, 3}</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>Table 9 :</head><label>9</label><figDesc>Range of hyperparameters sweeps. (blue) and eval ? = 0.3 (orange).</figDesc><table><row><cell>G DETAILED ATARI RESULTS</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">See video of the trained agent here: https://youtu.be/9HTY4ruPrHw</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">See videos of NGU on Pitfall with ?0, ?31: https://sites.google.com/view/nguiclr2020</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">See video of the three episodes at https://sites.google.com/view/nguiclr2020</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We thank Daan Wierstra, Steph Hughes-Fitt, Andrea Banino, Meire Fortunato, Melissa Tan, Benigno Uria, Borja Ibarz, Mohammad Gheshlaghi Azar, Remi Munos, Bernardo Avila Pires, Andre Barreto, Vali Irimia, Sam Ritter, David Raposo, Tom Schaul and many other colleagues at DeepMind for helpful discussions and comments on the manuscript.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Algorithm 1: Computation of the episodic intrinsic reward at time t: r episodic t . Input :M ; k; f (x t ); c; ; ?; s m ; d 2 m Output :r episodic t 1 Compute the k-nearest neighbours of f (x t ) in M and store them in a list N k 2 Create a list of floats d k of size k / * The list d k will contain the distances between the embedding f (x t ) and its neighbours N k . * / 3 for i ? {1, . . . , k} do 4 d k [i] ? d 2 (f (x t ), N k [i]) 5 end 6 Update the moving average d 2 m with the list of distances d k / * Normalize the distances d k with the updated moving average d 2 m . * / 7 d n ? d k d 2 m / * Cluster the normalized distances d n i.e. they become 0 if too small and 0 k is a list of k zeros. * / 8 d n ? max(d n ? ?, 0 k ) / * Compute the Kernel values between the embedding f (x t ) and its neighbours N k . * / 9 K v ? dn+ / * Compute the similarity between the embedding f (x t ) and its</p><p>As mentioned in Section 4.2, we here show ablations on the size of the learned controllable states, the clipping factor L in (1), and the number of nearest neighbours to use for computing pseudo-counts in (2).</p><p>Due to the lack of a pure exploitative mode, as seen in 4.2, NGU(N=1) fails to perform well in dense reward games. Therefore, in order to obtain high signal from these ablations, we analyze the performance of NGU(N=1) on the two most popular sparse reward games: Montezuma's Revenge and Pitfall!.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.1 SIZE OF CONTROLLABLE STATES</head><p>In <ref type="figure">Fig. 8</ref> and <ref type="figure">Fig. 9</ref> we can see the performance of NGU(N=1) with different sizes of the size of the controllable state on Pitfall! and Montezuma's Revenge respectively. As we can observe, that there is small to no impact on Pitfall!, with scores that sometimes reach more than 25,000 points. On Montezuma's Revenge 32 is the value that is consistently better than 64. A size of 16 as the controllable state size sometimes solves the level, but is in general less stable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.2 NEAREST NEIGHBORS USED</head><p>We proceed to show a similar analysis on <ref type="figure">Fig. 10</ref>   setting the target policy, or more precisely the sequence of target policies, depends on the sequence of Q-functions that will be generated through the process of approximating Q * . To do so, we consider trajectories ? starting from the state-action couple (x, a) and then following the behaviour policy ? of the form:</p><p>The expectation E ? is over all admissible trajectories ? generated by the behaviour policy ? starting in state x doing action a and then following the behaviour policy ?.</p><p>The general Retrace operator T , that depends on ? and ?, is:</p><p>where the temporal difference ? t is defined as:</p><p>and the cutting traces coefficients c s as:</p><p>Theorem 2 of  explains in which conditions the sequence of Q-functions:</p><p>where T k depends on the policy-couple (? k , ? k ) converges to the optimal Q-value Q * . In particular one of the conditions is that the sequence of target policies ? k is greedy or -greedy with respect to Q k (more details can be found in ).</p><p>In practice, at a given time t, we can only consider finite sampled sequences (x s , a s , r s , x s+1 ) t+k s=t starting from (x t , a t ) and then following the behaviour policy ?. Therefore, we define the finite sampled-Retrace operator as:</p><p>In addition, we use two neural networks. One target network Q(x, a; ? ? ) and an online network Q(x, a; ?). The target network is used to compute the target value? t that the online network will try to fit:  </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Learning dexterous in-hand manipulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marcin</forename><surname>Andrychowicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bowen</forename><surname>Baker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Maciek</forename><surname>Chociej</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rafal</forename><surname>Jozefowicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bob</forename><surname>Mcgrew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jakub</forename><surname>Pachocki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arthur</forename><surname>Petron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthias</forename><surname>Plappert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Glenn</forename><surname>Powell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Ray</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1808.00177</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabriel</forename><surname>Barth-Maron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Matthew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Hoffman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Will</forename><surname>Budden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Dabney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Horgan</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1804.08617</idno>
		<title level="m">Alistair Muldal, Nicolas Heess, and Timothy Lillicrap. Distributed distributional deterministic policy gradients</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Unifying count-based exploration and intrinsic motivation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Bellemare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sriram</forename><surname>Srinivasan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georg</forename><surname>Ostrovski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>Schaul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Saxton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Remi</forename><surname>Munos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="1471" to="1479" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The arcade learning environment: An evaluation platform for general agents</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yavar</forename><surname>Marc G Bellemare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joel</forename><surname>Naddaf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Veness</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bowling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Artificial Intelligence Research</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="page" from="253" to="279" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Mulex: Disentangling exploitation from exploration in deep rl</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lucas</forename><surname>Beyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Damien</forename><surname>Vincent</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Olivier</forename><surname>Teboul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sylvain</forename><surname>Gelly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthieu</forename><surname>Geist</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Olivier</forename><surname>Pietquin</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1907.00868</idno>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><surname>Blundell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benigno</forename><surname>Uria</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><surname>Pritzel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yazhe</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Avraham</forename><surname>Ruderman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joel</forename><forename type="middle">Z</forename><surname>Leibo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jack</forename><surname>Rae</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1606.04460</idno>
		<title level="m">Daan Wierstra, and Demis Hassabis. Model-free episodic control</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Signature verification using a&quot; siamese&quot; time delay neural network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jane</forename><surname>Bromley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Isabelle</forename><surname>Guyon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yann</forename><surname>Lecun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eduard</forename><surname>S?ckinger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roopak</forename><surname>Shah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="737" to="744" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Large-scale study of curiosity-driven learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuri</forename><surname>Burda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Harri</forename><surname>Edwards</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Deepak</forename><surname>Pathak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amos</forename><surname>Storkey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Trevor</forename><surname>Darrell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexei</forename><forename type="middle">A</forename><surname>Efros</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1808.04355</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Exploration by random network distillation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuri</forename><surname>Burda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Harrison</forename><surname>Edwards</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amos</forename><surname>Storkey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oleg</forename><surname>Klimov</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1810.12894</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jongwook</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yijie</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marcin</forename><surname>Moczulski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Junhyuk</forename><surname>Oh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Neal</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohammad</forename><surname>Norouzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Honglak</forename><surname>Lee</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1811.01483</idno>
		<title level="m">Contingency-aware exploration in reinforcement learning</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Go-explore: a new approach for hard-exploration problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adrien</forename><surname>Ecoffet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joost</forename><surname>Huizinga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joel</forename><surname>Lehman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Kenneth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeff</forename><surname>Stanley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Clune</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1901.10995</idno>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lasse</forename><surname>Espeholt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hubert</forename><surname>Soyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Remi</forename><surname>Munos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Karen</forename><surname>Simonyan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Volodymir</forename><surname>Mnih</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yotam</forename><surname>Doron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vlad</forename><surname>Firoiu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Harley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Iain</forename><surname>Dunning</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1802.01561</idno>
		<title level="m">Scalable distributed deep-rl with importance weighted actor-learner architectures</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">An introduction to deep reinforcement learning. Foundations and Trends R in Machine Learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vincent</forename><surname>Fran?ois-Lavet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Henderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Riashat</forename><surname>Islam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Marc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joelle</forename><surname>Bellemare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Pineau</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018" />
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="219" to="354" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Learning to play with intrinsically-motivated, self-aware agents</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nick</forename><surname>Haber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Damian</forename><surname>Mrowca</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephanie</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><forename type="middle">L</forename><surname>Fei-Fei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Yamins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2018" />
			<biblScope unit="page" from="8388" to="8399" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Horgan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Quan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Budden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabriel</forename><surname>Barth-Maron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matteo</forename><surname>Hessel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hado</forename><surname>Van Hasselt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Silver</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1803.00933</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Distributed prioritized experience replay</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Vime: Variational information maximizing exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rein</forename><surname>Houthooft</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xi</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yan</forename><surname>Duan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Schulman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Filip</forename><forename type="middle">De</forename><surname>Turck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pieter</forename><surname>Abbeel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="1109" to="1117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Reinforcement learning with unsupervised auxiliary tasks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Max</forename><surname>Jaderberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Volodymyr</forename><surname>Mnih</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wojciech</forename><forename type="middle">Marian</forename><surname>Czarnecki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>Schaul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joel</forename><forename type="middle">Z</forename><surname>Leibo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Koray</forename><surname>Kavukcuoglu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1611.05397</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Max</forename><surname>Jaderberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Valentin</forename><surname>Dalibard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Simon</forename><surname>Osindero</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wojciech</forename><forename type="middle">M</forename><surname>Czarnecki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeff</forename><surname>Donahue</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ali</forename><surname>Razavi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oriol</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Iain</forename><surname>Dunning</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Karen</forename><surname>Simonyan</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1711.09846</idno>
		<title level="m">Population based training of neural networks</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Recurrent experience replay in distributed reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><surname>Kapturowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georg</forename><surname>Ostrovski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Will</forename><surname>Dabney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Quan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Remi</forename><surname>Munos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Emi: Exploration with mutual information maximizing state and action embeddings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hyoungseok</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jaekyeom</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yeonwoo</forename><surname>Jeong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hyun Oh</forename><surname>Song</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1810.01176</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Siamese neural networks for one-shot image recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><surname>Koch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><surname>Zemel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ruslan</forename><surname>Salakhutdinov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML deep learning workshop</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="volume">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Human-level control through deep reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Volodymyr</forename><surname>Mnih</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Koray</forename><surname>Kavukcuoglu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrei</forename><forename type="middle">A</forename><surname>Rusu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joel</forename><surname>Veness</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Marc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Bellemare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andreas</forename><forename type="middle">K</forename><surname>Riedmiller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georg</forename><surname>Fidjeland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ostrovski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">518</biblScope>
			<biblScope unit="issue">7540</biblScope>
			<biblScope unit="page">529</biblScope>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Safe and efficient off-policy reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R?mi</forename><surname>Munos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>Stepleton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anna</forename><surname>Harutyunyan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Bellemare</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="1046" to="1054" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Action-conditional video prediction using deep networks in atari games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Junhyuk</forename><surname>Oh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoxiao</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Honglak</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Richard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Satinder</forename><surname>Lewis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Singh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="2863" to="2871" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Deep exploration via bootstrapped dqn</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ian</forename><surname>Osband</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><surname>Blundell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><surname>Pritzel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benjamin</forename><surname>Van Roy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances In Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="4026" to="4034" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Count-based exploration with neural density models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georg</forename><surname>Ostrovski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Marc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A?ron</forename><surname>Bellemare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R?mi</forename><surname>Van Den Oord</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Munos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 34th International Conference on Machine Learning</title>
		<meeting>the 34th International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="volume">70</biblScope>
			<biblScope unit="page" from="2721" to="2730" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Curiosity-driven exploration by self-supervised prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Deepak</forename><surname>Pathak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pulkit</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexei</forename><forename type="middle">A</forename><surname>Efros</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Trevor</forename><surname>Darrell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition Workshops</title>
		<meeting>the IEEE Conference on Computer Vision and Pattern Recognition Workshops</meeting>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="16" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Observe and look further: Achieving consistent performance on atari</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tobias</forename><surname>Pohlen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bilal</forename><surname>Piot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Todd</forename><surname>Hester</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohammad</forename><forename type="middle">Gheshlaghi</forename><surname>Azar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Horgan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Budden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabriel</forename><surname>Barth-Maron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hado</forename><surname>Van Hasselt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Quan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mel</forename><surname>Ve?er?k</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1805.11593</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Adri? Puigdom?nech, Oriol Vinyals, Demis Hassabis, Daan Wierstra, and Charles Blundell</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><surname>Pritzel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benigno</forename><surname>Uria</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sriram</forename><surname>Srinivasan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural episodic control</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nikolay</forename><surname>Savinov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anton</forename><surname>Raichuk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rapha?l</forename><surname>Marinier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Damien</forename><surname>Vincent</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Pollefeys</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Timothy</forename><surname>Lillicrap</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sylvain</forename><surname>Gelly</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1810.02274</idno>
		<title level="m">Episodic curiosity through reachability</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Universal value function approximators</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>Schaul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Horgan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Karol</forename><surname>Gregor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Silver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1312" to="1320" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Prioritized experience replay. CoRR</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>Schaul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Quan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ioannis</forename><surname>Antonoglou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Silver</surname></persName>
		</author>
		<idno>abs/1511.05952</idno>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Mastering the game of go with deep neural networks and tree search</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aja</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><forename type="middle">J</forename><surname>Maddison</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arthur</forename><surname>Guez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Laurent</forename><surname>Sifre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">George</forename><surname>Van Den</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Julian</forename><surname>Driessche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ioannis</forename><surname>Schrittwieser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Veda</forename><surname>Antonoglou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Panneershelvam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Lanctot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">nature</title>
		<imprint>
			<biblScope unit="volume">529</biblScope>
			<biblScope unit="issue">7587</biblScope>
			<biblScope unit="page" from="484" to="489" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Network Architectures</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
				<title level="m">ARCHITECTURE OF THE EMBEDDING NETWORK WITH INVERSE DYNAMICS PREDICTION Conv (Kernel:8x8 Stride:4x4 Channels:32)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
				<title level="m">Conv (Kernel:4x4 Stride:2x2 Channels:64)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
				<title level="m">Conv (Kernel:3x3 Stride:1x1 Channels:64) RELU Fully Connected (Units: 32) RELU RELU RELU Conv (Kernel:8x8 Stride:4x4 Channels:32)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
				<title level="m">Conv (Kernel:4x4 Stride:2x2 Channels:64)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
				<title level="m">Conv (Kernel:3x3 Stride:1x1 Channels:64) RELU Fully Connected (Units: 32) RELU RELU RELU Fully Connected (Units: 128) RELU Fully Connected (Units: 18) Softmax Figure 15: Embedding Network Architecture</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
				<title level="m">ARCHITECTURE OF THE RANDOM NETWORK DISTILLATION Conv (Kernel:8x8 Stride:4x4 Channels:32)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
				<title level="m">Conv (Kernel:4x4 Stride:2x2 Channels:64)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
				<title level="m">Conv (Kernel:3x3 Stride:1x1 Channels:64) RELU Fully Connected</title>
		<meeting><address><addrLine>Units</addrLine></address></meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Relu Relu Conv</surname></persName>
		</author>
		<idno>Kernel:8x8 Stride:4x4 Channels:32</idno>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
				<title level="m">Conv (Kernel:4x4 Stride:2x2 Channels:64)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
				<title level="m">Conv (Kernel:3x3 Stride:1x1 Channels:64) RELU Fully Connected</title>
		<meeting><address><addrLine>Units</addrLine></address></meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">RELU RELU Figure</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<publisher>RND Network Architecture</publisher>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
