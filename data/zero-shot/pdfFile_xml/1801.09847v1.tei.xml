<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Open3D: A Modern Library for 3D Data Processing</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qian-Yi</forename><surname>Zhou</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Intel Labs</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jaesik</forename><surname>Park</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Intel Labs</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vladlen</forename><surname>Koltun</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Intel Labs</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Open3D: A Modern Library for 3D Data Processing</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2022-11-12T08:39+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Open3D is an open-source library that supports rapid development of software that deals with 3D data. The Open3D frontend exposes a set of carefully selected data structures and algorithms in both C++ and Python. The backend is highly optimized and is set up for parallelization. Open3D was developed from a clean slate with a small and carefully considered set of dependencies. It can be set up on different platforms and compiled from source with minimal effort. The code is clean, consistently styled, and maintained via a clear code review mechanism. Open3D has been used in a number of published research projects and is actively deployed in the cloud. We welcome contributions from the open-source community.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The world is three-dimensional. Systems that operate in the physical world or deal with its simulation must often process three-dimensional data. Such data takes the form of point clouds, meshes, and other representations. Data in this form is produced by sensors such as LiDAR and depth cameras, and by software systems that support 3D reconstruction and modeling.</p><p>Despite the central role of 3D data in fields such as robotics and computer graphics, writing software that processes such data is quite laborious in comparison to other data types. For example, an image can be efficiently loaded and visualized with a few lines of OpenCV code <ref type="bibr" target="#b2">[3]</ref>. A similarly easy to use software framework for 3D data has not emerged. A notable prior effort is the Point Cloud Library (PCL) <ref type="bibr" target="#b17">[18]</ref>. Unfortunately, after an initial influx of opensource contributions, PCL became encumbered by bloat and is now largely dormant. Other open-source efforts include MeshLab <ref type="bibr" target="#b5">[6]</ref>, which provides a graphical user interface for processing meshes; libigl <ref type="bibr" target="#b10">[11]</ref>, which supports discrete differential geometry and related research; and a variety of solutions for image-based reconstruction <ref type="bibr" target="#b12">[13]</ref>. Nevertheless, there is currently no open-source library that is fast, easy to use, supports common 3D data processing workflows, and is developed in accordance with modern software engineer-ing practices.</p><p>Open3D was created to address this need.</p><p>It is an opensource library that supports rapid development of software that deals with 3D data. The Open3D frontend exposes a set of carefully selected data structures and algorithms in both C++ and Python. The Open3D backend is implemented in C++11, is highly optimized, and is set up for OpenMP parallelization. Open3D was developed from a clean slate with a small and carefully considered set of dependencies. It can be set up on different platforms and compiled from source with minimal effort. The code is clean, consistently styled, and maintained via a clear code review mechanism.</p><p>Open3D has been in development since 2015 and has been used in a number of published research projects <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b11">12]</ref>. It has been deployed and is currently running in the Tanks and Temples evaluation server <ref type="bibr" target="#b12">[13]</ref>.</p><p>Open3D is released open-source under the permissive MIT license and is available at http://www.open3d. org. We welcome contributions from the open-source community.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Design</head><p>Two primary design principles of Open3D are usefulness and ease of use <ref type="bibr" target="#b7">[8]</ref>. Our key decisions can be traced to these two principles. Usefulness motivated support for popular representations, algorithms, and platforms. Ease of use served as a countervailing force that guarded against heavyweight dependencies and feature creep.</p><p>Open3D provides data structures for three kinds of representations: point clouds, meshes, and RGB-D images. For each representation, we have implemented a complete set of basic processing algorithms such as I/O, sampling, visualization, and data conversion. In addition, we have implemented a collection of widely used algorithms, such as normal estimation <ref type="bibr" target="#b15">[16]</ref>, ICP registration <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b3">4]</ref>, and volumetric integration <ref type="bibr" target="#b6">[7]</ref>. We have verified that the functionality of Open3D is sufficient by using it to implement complete workflows such as large-scale scene reconstruction <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b14">15]</ref>.</p><p>We carefully chose a small set of lightweight dependencies, including Eigen for linear algebra <ref type="bibr" target="#b8">[9]</ref>, GLFW for OpenGL window support, and FLANN for fast nearest neighbor search <ref type="bibr" target="#b13">[14]</ref>. For easy compilation, powerful 1 arXiv:1801.09847v1 [cs.CV] 30 Jan 2018 but heavyweight libraries such as Boost and Ceres are excluded. Instead we use either lightweight alternatives (e.g., pybind11 instead of Boost.Python) or in-house implementations (e.g., for Gauss-Newton and Levenberg-Marquardt graph optimization). The source code of all dependencies is distributed as part of Open3D. The dependencies can thus be compiled from source if not automatically detected by the configuration script. This is particularly useful for compilation on operating systems that lack package management software, such as Microsoft Windows.</p><p>The development of Open3D started from a clean slate and the library is kept as simple as possible. Only algorithms that solve a problem of broad interest are added. If a problem has multiple solutions, we choose one that the community considers standard. A new algorithm is added only if its implementation demonstrates significantly stronger results on a well-known benchmark.</p><p>Open3D is written in standard C++11 and uses CMake to support common C++ toolchains including</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>? GCC 4.8 and later on Linux</head><p>? XCode 8.0 and later on OS X</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>? Visual Studio 2015 and later on Windows</head><p>A key feature of Open3D is ubiquitous Python binding. We follow the practice of successful computer vision and deep learning libraries <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b2">3]</ref>: the backend is implemented in C++ and is exposed through frontend interfaces in Python. Developers use Python as a glue language to assemble components implemented in the backend. <ref type="figure" target="#fig_1">Figure 1</ref> shows code snippets for a simple 3D data processing workflow. An implementation using the Open3D Python interface is compared to an implementation using the Open3D C++ interface and to an implementation based on PCL <ref type="bibr" target="#b17">[18]</ref>. The implementation using the Open3D Python interface is approximately half the length of the implementation using the Open3D C++ interface, and about five times shorter than the implementation based on PCL. As an added benefit, the Python code can be edited and debugged interactively in a Jupyter Notebook.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Functionality</head><p>Open3D has nine modules, listed in <ref type="table">Table 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Data</head><p>The Geometry module implements three geometric representations: PointCloud, TriangleMesh, and Image.</p><p>The PointCloud data structure has three data fields: PointCloud.points, PointCloud.normals, PointCloud.colors. They are used to store coordinates, normals, and colors. The master data field is PointCloud.points. The other two fields are considered valid only when they have the same number of records as PointCloud.points. Open3D provides direct memory access to these data fields via a numpy array. The following code sample demonstrates reading and accessing the point coordinates of a point cloud.</p><p>from py3d import * import numpy as np pointcloud = read_point_cloud('pointcloud.ply') print(np.asarray(pointcloud.points))</p><p>Similarly, TriangleMesh has two master data fields -TriangleMesh.vertices and TriangleMesh.trianglesas well as three auxiliary data fields:</p><p>Trian-gleMesh.vertex normals, TriangleMesh.vertex colors, and TriangleMesh.triangle normals.</p><p>The Image data structure is implemented as a 2D or 3D array and can be directly converted to a numpy array. A pair of depth and color images of the same resolution can be combined into a data structure named RGBDImage. Since there is no standard depth image format, we have implemented depth image support for multiple datasets including NYU <ref type="bibr" target="#b18">[19]</ref>, TUM <ref type="bibr" target="#b19">[20]</ref>, SUN3D <ref type="bibr" target="#b20">[21]</ref>, and Redwood <ref type="bibr" target="#b4">[5]</ref>. The following code sample reads a pair of RGB-D images from the TUM dataset and converts them to a point cloud.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Visualization</head><p>Open3D provides a function draw geometries() for visualization. It takes a list of geometries as input, creates a window, and renders them simultaneously using OpenGL. We have implemented many functions in the visualizer, such as rotation, translation, and scaling via mouse operations, changing rendering style, and screen capture. A code sample using draw geometries() and its result are shown in <ref type="figure" target="#fig_2">Figure 2</ref>.</p><p>In addition to draw geometries(), Open3D has a number of sibling functions with more advanced functionality.</p><p>draw geometries with custom animation() allows the programmer to define a custom view trajectory and play an animation in the GUI. draw geometries with animation callback() and draw geometries with key callback() accept Python callback functions as input. The callback function is called in an automatic animation loop, or upon a key press event.</p><p>The following code sample shows a rotating point cloud using draw geometries with animation callback().     In the backend of Open3D, these functions are implemented using the Visualizer class. This class is also exposed in the Python interface. We used profiling tools to analyze the RANSAC-based algorithm and found that its most time-consuming part is the validation of matching results. Thus, we give the user an option to specify a termination criterion via the RANSAC-ConvergenceCriteria parameter. In addition, we provide a set of functions that prune false matches early, including CorrespondenceCheckerBasedOnEdgeLength and Cor-respondenceCheckerBasedOnDistance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Registration</head><p>The final part of the pairwise registration workflow is ICP refinement <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b3">4]</ref>, applied to the original dense point clouds: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">Reconstruction</head><p>A sophisticated workflow that is demonstrated in an Open3D tutorial is a complete scene reconstruction system <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b14">15]</ref>. The system is implemented as a Python script that uses many algorithms implemented in Open3D. It takes an RGB-D sequence as input and proceeds through three major steps. 2. Globally align the fragments to obtain fragment poses {T i } and a camera calibration function C(?). There are four substeps: global registration between fragment pairs, robust pose graph optimization, ICP registration, and global non-rigid alignment.</p><p>3. Integrate RGB-D images to generate a mesh model for the scene. <ref type="figure" target="#fig_6">Figure 4</ref> shows a reconstruction produced by this pipeline for a scene from the SceneNN dataset <ref type="bibr" target="#b9">[10]</ref>. The visualization was also done via Open3D.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Optimization</head><p>Open3D was engineered for high performance. We have optimized the C++ backend such that Open3D implementations are generally faster than their counterparts in other 3D processing libraries. For each major function, we used profiling tools to benchmark the execution of key steps. This analysis accelerated the running time of many functions by multiplicative factors. For example, our optimized implementation of the ICP algorithm is up to 25 times faster than its counterpart in PCL <ref type="bibr" target="#b17">[18]</ref>. Our implementation of the reconstruction pipeline of Choi et al. <ref type="bibr" target="#b4">[5]</ref> is up to an order of magnitude faster than the original implementation released by the authors.</p><p>A large number of functions are parallelized with OpenMP. Many functions, such as normal estimation, can be easily parallelized across data samples using "#pragma omp for" declarations. Another example of consequential parallelization can be found in our non-linear least-squares solvers. These functions optimize objectives of the form</p><formula xml:id="formula_0">L(x) = i r 2 i (x),<label>(1)</label></formula><p>where r i (x) is a residual term. A step in a Gauss-Newton solver takes the current solution x k and updates it to</p><formula xml:id="formula_1">x k+1 = x k ? (J r J r ) ?1 (J r r),<label>(2)</label></formula><p>where J r is the Jacobian matrix for the residual vector r, both evaluated at x k . In the Open3D implementation, the most time-consuming part is the evaluation of J r J r and J r r. These were parallelized using OpenMP reduction. A lambda function specifies the computation of J r J r and J r r for each data record. This lambda function is called in a reduction loop that sums over the matrices. The parallelization of the Open3D backend accelerated the most time-consuming Open3D functions by a factor of 3-6 on a modern CPU.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Release</head><p>Open3D is released open-source under the permissive MIT license and is available at http://www.open3d. org. Ongoing development is coordinated via GitHub. Code changes are integrated via the following steps.</p><p>1. An issue is opened for a feature request or a bug fix.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">A developer starts a new branch on a personal fork of</head><p>Open3D, writes code, and submits a pull request when ready.</p><p>3. The code change is reviewed and discussed in the pull request. Modifications are made to address issues raised in the discussion. 4. One of the admins merges the pull request to the master branch and closes the issue.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>A simple 3D data processing task: load a point cloud, downsample it, and estimate normals.from py3d import * pointcloud = read_point_cloud('pointcloud.ply') downsampled = voxel_down_sample(pointcloud, voxel_size = 0.05) estimate_normals(downsampled, KDTreeSearchParamHybrid(radius = 0.1, max_nn = 30)) draw_geometries([downsampled]) (b) An implementation using the Open3D Python interface.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Code snippets for a simple 3D data processing workflow. (a) An illustration of the task. (b) An implementation using the Open3D Python interface. (b) An implementation using the Open3D C++ interface. (c) An implementation based on PCL<ref type="bibr" target="#b17">[18]</ref>. The implementation using the Open3D Python interface is dramatically shorter and clearer than the implementation based on PCL.3Module Functionality</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Visualize a mesh and a point cloud using draw geometries(). from py3d import * pointcloud = read_point_cloud('pointcloud.pcd') def rotate_view(vis): # Rotate the view by 10 degrees ctr = vis.get_view_control() ctr.rotate(10.0, 0.0) return False draw_geometries_with_animation_callback([ pointcloud], rotate_view)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>Open3D provides implementations of multiple stateof-the-art surface registration methods, including pairwise global registration, pairwise local refinement, and multiway registration using pose graph optimization. This section gives an example of a complete pairwise registration workflow for point clouds. The workflow begins by reading raw point clouds, downsampling them, and estimating normals:from py3d import * source = read_point_cloud('source.pcd') target = read_point_cloud('target.pcd') source_down = voxel_down_sample(source, 0.05) target_down = voxel_down_sample(target, 0.05) estimate_normals(source_down, KDTreeSearchParamHybrid(radius = 0.1, max_nn = 30)) estimate_normals(target_down, KDTreeSearchParamHybrid(radius = 0.1, max_nn = 30))We then compute FPFH features and apply a RANSACbased global registration algorithm<ref type="bibr" target="#b16">[17]</ref>:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>result_icp = registration_icp(source, target, max_correspondence_distance = 0.02, result_ransac.transformation, TransformationEstimationPointToPlane())Here TransformationEstimationPointToPlane() invokes a point-to-plane ICP algorithm. Other ICP variants are implemented as well. Intermediate and final results of the demonstrated registration procedure are shown inFigure 3.Global registrationLocal refinement Intermediate and final results of pairwise registration.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>1 .</head><label>1</label><figDesc>Build local geometric surfaces {P i } (referred to as fragments) from short subsequences of the input RGB-D sequence. There are three substeps: matching pairs of RGB-D images, robust pose graph optimization, and volumetric integration.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 :</head><label>4</label><figDesc>A scene reconstructed and visualized in Open3D.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>An implementation using the Open3D C++ interface.</figDesc><table><row><cell>#include &lt;Core/Core.h&gt;</cell></row><row><cell>#include &lt;IO/IO.h&gt;</cell></row><row><cell>#include &lt;Visualization/Visualization.h&gt;</cell></row><row><cell>void main(int argc, char * argv[]) {</cell></row><row><cell>using namespace three;</cell></row><row><cell>auto pointcloud = CreatePointCloudFromFile(argv[1]);</cell></row><row><cell>auto downsampled = VoxelDownSample(pointcloud, 0.05)</cell></row><row><cell>EstimateNormals( * downsampled, KDTreeSearchParamHybrid(0.1, 30)); DrawGeometry(downsampled);</cell></row><row><cell>}</cell></row><row><cell>(c) #include &lt;pcl/point_types.h&gt;</cell></row><row><cell>#include &lt;pcl/point_cloud.h&gt;</cell></row><row><cell>#include &lt;pcl/features/normal_3d.h&gt;</cell></row><row><cell>#include &lt;pcl/filters/voxel_grid.h&gt;</cell></row><row><cell>#include &lt;pcl/io/pcd_io.h&gt;</cell></row><row><cell>#include &lt;pcl/visualization/cloud_viewer.h&gt;</cell></row><row><cell>void main(int argc, char * argv[]) {</cell></row><row><cell>using namespace pcl;</cell></row><row><cell>PointCloud&lt;PointNormal&gt;::Ptr pcd(new PointCloud&lt;PointNormal&gt;());</cell></row><row><cell>io::loadPCDFile&lt;PointNormal&gt;(argv[1], * pcd); VoxelGrid&lt;PointNormal&gt; grid;</cell></row><row><cell>grid.setLeafSize(0.05, 0.05, 0.05);</cell></row><row><cell>grid.setInputCloud(pcd);</cell></row><row><cell>grid.filter( * pcd); PointCloud&lt;PointNormal&gt;::Ptr result(new PointCloud&lt;PointNormal&gt;());</cell></row><row><cell>NormalEstimation&lt;PointNormal, PointNormal&gt; est;</cell></row><row><cell>est.setInputCloud(pcd);</cell></row><row><cell>est.setRadiusSearch(0.1);</cell></row><row><cell>est.compute( * result); pcl::visualization::PCLVisualizer viewer("PCL Viewer");</cell></row><row><cell>viewer.addPointCloudNormals&lt;PointNormal, PointNormal&gt;(pcd, result, 1, 0.05);</cell></row><row><cell>while (!viewer.wasStopped())</cell></row><row><cell>{</cell></row><row><cell>viewer.spinOnce();</cell></row><row><cell>}</cell></row><row><cell>}</cell></row><row><cell>(d) An implementation based on PCL.</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The code review process maintains a consistent coding style and adherence to modern C++ programming guidelines. Pull requests are automatically checked by a continuous integration service.</p><p>We hope that Open3D will be useful to a broad community of developers who deal with 3D data.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">TensorFlow: A system for large-scale machine learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Abadi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Barham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dean</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">OSDI</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A method for registration of 3-D shapes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Besl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">D</forename><surname>Mckay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PAMI</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The OpenCV library</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Bradski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Dr. Dobb&apos;s Journal</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">11</biblScope>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Object modelling by registration of multiple range images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">G</forename><surname>Medioni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Image and Vision Computing</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Robust reconstruction of indoor scenes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q.-Y</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Koltun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">MeshLab: An opensource mesh processing tool</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Callieri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Corsini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dellepiane</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Ganovelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Ranzuglia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics Italian Chapter Conference</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A volumetric method for building complex models from range images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Curless</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIG-GRAPH</title>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Perceived usefulness, perceived ease of use, and user acceptance of information technology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">D</forename><surname>Davis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">MIS Quarterly</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Guennebaud</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Jacob</surname></persName>
		</author>
		<title level="m">Eigen v3</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">SceneNN: A scene meshes dataset with annotations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hua</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Pham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">T</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Yeung</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="volume">3</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Jacobson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Panozzo</surname></persName>
		</author>
		<title level="m">A simple C++ geometry processing library</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Learning compact geometric features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Khoury</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q.-Y</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Koltun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCV</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Tanks and temples: Benchmarking large-scale scene reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Knapitsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Koltun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Scalable nearest neighbor algorithms for high dimensional data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Muja</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">G</forename><surname>Lowe</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
			<publisher>PAMI</publisher>
			<biblScope unit="volume">36</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Colored point cloud registration revisited</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q.-Y</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Koltun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCV</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Point primitives for interactive modeling and processing of 3D geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Pauly</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
			<pubPlace>ETH Z?rich</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Fast point feature histograms (FPFH) for 3D registration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Rusu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Blodow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Beetz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICRA</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">3D is here: Point Cloud Library (PCL)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Rusu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Cousins</surname></persName>
		</author>
		<editor>ICRA</editor>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Indoor segmentation and support inference from RGBD images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Silberman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hoiem</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Kohli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fergus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ECCV</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A benchmark for the evaluation of RGB-D SLAM systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sturm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Engelhard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Endres</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Burgard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cremers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IROS</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">SUN3D: A database of big spaces reconstructed using SfM and object labels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Owens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Torralba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCV</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Fast global registration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q.-Y</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Koltun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ECCV</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
