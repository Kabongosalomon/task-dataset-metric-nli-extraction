<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Continuous Relaxation of Beam Search for End-to-end Training of Neural Sequence Models</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kartik</forename><surname>Goyal</surname></persName>
							<email>kartikgo@cs.cmu.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Graham</forename><surname>Neubig</surname></persName>
							<email>gneubig@cs.cmu.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><forename type="middle">Dyer</forename><surname>Deepmind</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Taylor</forename><surname>Berg-Kirkpatrick</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">A Continuous Relaxation of Beam Search for End-to-end Training of Neural Sequence Models</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2022-11-11T19:19+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Beam search is a desirable choice of test-time decoding algorithm for neural sequence models because it potentially avoids search errors made by simpler greedy methods. However, typical cross entropy training procedures for these models do not directly consider the behaviour of the final decoding method. As a result, for cross-entropy trained models, beam decoding can sometimes yield reduced test performance when compared with greedy decoding. In order to train models that can more effectively make use of beam search, we propose a new training procedure that focuses on the final loss metric (e.g. Hamming loss) evaluated on the output of beam search. While well-defined, this "direct loss" objective is itself discontinuous and thus difficult to optimize. Hence, in our approach, we form a sub-differentiable surrogate objective by introducing a novel continuous approximation of the beam search decoding procedure. In experiments, we show that optimizing this new training objective yields substantially better results on two sequence tasks (Named Entity Recognition and CCG Supertagging) when compared with both cross entropy trained greedy decoding and cross entropy trained beam decoding baselines.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Sequence-to-sequence (seq2seq) models have been successfully used for many sequential decision tasks such as machine translation <ref type="bibr" target="#b9">(Sutskever, Vinyals, and Le 2014;</ref><ref type="bibr" target="#b0">Bahdanau, Cho, and Bengio 2015)</ref>, parsing <ref type="bibr" target="#b1">(Dyer et al. 2016;</ref><ref type="bibr" target="#b1">Dyer et al. 2015)</ref>, summarization (Rush, Chopra, and Weston 2015), dialog generation <ref type="bibr" target="#b8">(Serban et al. 2015)</ref>, and image captioning . Beam search is a desirable choice of test-time decoding algorithm for such models because it potentially avoids search errors made by simpler greedy methods. However, the typical approach to training neural sequence models is to use a locally normalized maximum likelihood objective (cross-entropy training) <ref type="bibr" target="#b9">(Sutskever, Vinyals, and Le 2014)</ref>. This objective does not directly reason about the behaviour of the final decoding method. As a result, for cross-entropy trained models, beam decoding can sometimes yield reduced test performance when compared with greedy decoding <ref type="bibr" target="#b5">(Koehn and Knowles 2017;</ref><ref type="bibr">Neubig 2017;</ref><ref type="bibr" target="#b0">Cho et al. 2014)</ref>. These negative results are not unexpected. The training procedure was not search-aware: it was not able to consider the effect that changing the model's scores might have on the ease of search while using a beam decoding, greedy decoding, or otherwise.</p><p>We hypothesize that the under-performance of beam search in certain scenarios can be resolved by using a better designed training objective. Because beam search potentially offers more accurate search when compared to greedy decoding, we hope that appropriately trained models should be able to leverage beam search to improve performance. In order to train models that can more effectively make use of beam search, we propose a new training procedure that focuses on the final loss metric (e.g. Hamming loss) evaluated on the output of beam search. While well-defined and a valid training criterion, this "direct loss" objective is discontinuous and thus difficult to optimize. Hence, in our approach, we form a sub-differentiable surrogate objective by introducing a novel continuous approximation of the beam search decoding procedure. In experiments, we show that optimizing this new training objective yields substantially better results on two sequence tasks (Named Entity Recognition and CCG Supertagging) when compared with both cross-entropy trained greedy decoding and cross-entropy trained beam decoding baselines.</p><p>Several related methods, including reinforcement learning <ref type="bibr" target="#b6">(Ranzato et al. 2016;</ref><ref type="bibr" target="#b0">Bahdanau et al. 2017)</ref>, imitation learning <ref type="bibr" target="#b0">(Daum?, Langford, and Marcu 2009;</ref><ref type="bibr" target="#b7">Ross, Gordon, and Bagnell 2011;</ref>, and discrete search based methods <ref type="bibr" target="#b12">(Wiseman and Rush 2016;</ref><ref type="bibr" target="#b0">Andor et al. 2016;</ref><ref type="bibr" target="#b0">Daum? III and Marcu 2005;</ref><ref type="bibr" target="#b1">Gormley, Dredze, and Eisner 2015)</ref>, have also been proposed to make training searchaware. These methods include approaches that forgo direct optimization of a global training objective, instead incorporating credit assignment for search errors by using methods like early updates (Collins and Roark 2004) that explicitly track the reachability of the gold target sequence during the search procedure. While addressing a related problem -credit assignment for search errors during training -in this paper, we propose an approach with a novel property: we directly optimize a continuous and global training objective using backpropagation. As a result, in our approach, credit assignment is handled directly via gradient optimization in an end-to-end computation graph. The most closely related work to our own approach was proposed by <ref type="bibr" target="#b2">Goyal et al. (Goyal, Dyer, and Berg-Kirkpatrick 2017)</ref>. They do not consider beam search, but develop a continuous approximation of greedy decod-Algorithm 1 Standard Beam Search 1: Initialize: h 0,i ? 0, e 0,i ? embedding(&lt;s&gt;), s 0,i ? 0, i = 1, . . . , k 2: for t = 0 to T do 3:</p><formula xml:id="formula_0">for i = 1 to k do 4: for all v ? V do 5:s t [i, v] ? s t,i + f (h t,i , v)</formula><p>f is the local output scoring function 6:</p><formula xml:id="formula_1">s t+1 ? top-k-max(s t ) Top k values of the input matrix 7: b t+1, * , y t, * ? top-k-argmax(s t )</formula><p>Top k argmax index pairs of the input matrix 8:</p><p>for i = 1 to k do 9: e t+1,i ? embedding(y t,i ) 10:</p><formula xml:id="formula_2">h t+1,i ? r(h t,i , e t+1,i )</formula><p>r is a nonlinear recurrent function that returns state at next step 11:? ? follow-backpointer((b 1, * , y 1, * ), . . . , (b T, * , y T, * )) 12: s(?) ? max(s T )</p><p>ing for scheduled sampling objectives. Other related work involves training a generator with a Gumbel reparamterized sampling module to more reliably find the MAP sequences at decode-time <ref type="bibr" target="#b3">(Gu, Im, and Li 2017)</ref>, and constructing surrogate loss functions <ref type="bibr" target="#b0">(Bahdanau et al. 2016</ref>) that are close to task losses.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Model</head><p>We denote the seq2seq model parameterized by ? as M(?).</p><p>We denote the input sequence as x, the gold output sequence as y * and the result of beam search over M(?) a? y = Beam(x, M(?)). Ideally, we would like to directly minimize a final evaluation loss, L(?, y * ), evaluated on the result of running beam search with input x and model M(?). Throughout this paper we assume that the evaluation loss decomposes over time steps t as: L(?, y * ) = T t=1 d(? t , y * ) 1 . We refer to this idealized training objective that directly evaluates prediction loss as the "direct loss" objective and define it as:</p><formula xml:id="formula_3">min ? G DL (x, ?, y * ) = min ? L(Beam(x, M(?)), y * ) (1)</formula><p>Unfortunately, optimizing this objective using gradient methods is difficult because the objective is discontinuous. The two sources of discontinuity are: 1. As we describe later in more detail, beam search decoding (referred to as the function Beam) involves discrete argmax decisions and thus represents a discontinuous function. 2. The output,?, of the Beam function, which is the input to the loss function, L(?, y * ), is discrete and hence the evaluation of the final loss is also discontinuous. We introduce a surrogate training objective that avoids these problems and as a result is fully continuous. In order to accomplish this, we propose a continuous relaxation to the composition of our final loss metric, L, and our decoder function, Beam:</p><formula xml:id="formula_4">softLB(x, M(?), y * ) ? (L ? Beam)(x, M(?), y * )</formula><p>Specifically, we form a continuous function softLB that seeks to approximate the result of running our decoder on input x and then evaluating the result against y * using L. By introducing this new module, we are now able to construct our surrogate training objective:</p><formula xml:id="formula_5">min ?G DL (x, ?, y * ) = min ? softLB(x, M(?), y * ) (2)</formula><p>Specified in more detail in Section 2.3, our surrogate objective in Equation 2 will additionally take a hyperparameter ? that trades approximation quality for smoothness of the objective. Under certain conditions, Equation 2 converges to the objective in Equation 1 as ? is increased. We first describe the standard discontinuous beam search procedure and then our training approach (Equation 2) involving a continuous relaxation of beam search.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Discontinuity in Beam Search</head><p>Formally, beam search is a procedure with hyperparameter k that maintains a beam of k elements at each time step and expands each of the k elements to find the k-best candidates for the next time step. The procedure finds an approximate argmax of a scoring function defined on output sequences.</p><p>We describe beam search in the context of seq2seq models in Algorithm 1 -more specifically, for an encoderdecoder <ref type="bibr" target="#b9">(Sutskever, Vinyals, and Le 2014)</ref> model with a nonlinear auto-regressive decoder (e.g. an LSTM (Hochreiter and Schmidhuber 1997)). We define the global model score of a sequence y with length T to be the sum of local output scores at each time step of the seq2seq model:</p><formula xml:id="formula_6">s(y) = T t=1 f (h t , y t ).</formula><p>In neural models, the function f is implemented as a differentiable mapping, R |h| ? R |V | , which yields scores for vocabulary elements using the recurrent hidden states at corresponding time steps. In our notation, h t,i is the hidden state of the decoder at time step t for beam element i, e t,i is the embedding of the output symbol at timestep t for beam element i, and s t,i is the cumulative model score at step t for beam element i. In Algorithm 1, we denote bys t ? R k?|V | the cumulative candidate score matrix which represents the model score of each successor candidate in the vocabulary for each beam element. This score is obtained by adding the local output score (computed as f (h t,i , w)) to the Algorithm 2 continuous-top-k-argmax 1: Inputs: s ? R k?|V | 2: Outputs:</p><formula xml:id="formula_7">p i ? R k?|V | , s.t. j p ij = 1, i = 1, . . . , k 3: m ? R k = top-k-max(s) 4: for i = 1 to k do</formula><p>peaked-softmax will be dominated by scores closer to m i 5:</p><formula xml:id="formula_8">p i = peaked-softmax ? (?(s ? m i ? 1) 2 )</formula><p>The square operation is element-wise running total of the score for the candidate. The function r in Algorithms 1 and 3 yields successive hidden states in recurrent neural models like RNNs, LSTMs etc. The embedding operation maps a word in the vocabulary V , to a continuous embedding vector. Finally, backpointers at each time step to the beam elements at the previous time step are also stored for identifying the best sequence?, at the conclusion of the search procedure. A backpointer at time step t for a beam element i is denoted by b t,i ? {1, . . . , k} which points to one of the k elements at the previous beam. We denote a vector of backpointers for all the beam elements by b t, * .</p><p>The follow-backpointer operation takes as input backpointers (b t, * ) and candidates (y t, * ? {1, . . . , |V |} k ) for all the beam elements at each time step and traverses the sequence in reverse (from time-step T through 1) following backpointers at each time step and identifying candidate words associated with each backpointer that results in a sequence?, of length T . The procedure described in Algorithm 1 is discontinuous because of the top-k-argmax procedure that returns a pair of vectors corresponding to the k highest-scoring indices for backpointers and vocabulary items from the score matrixs t . This index selection results in hard backpointers at each time step which restrict the gradient flow during backpropagation. In the next section, we describe a continuous relaxation to the top-k-argmax procedure which forms the crux of our approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Continuous Approximation to top-k-argmax</head><p>The key property that we use in our approximation is that for a real valued vector z, the argmax with respect to a vector of scores, s, can be approximated by a temperature controlled softmax operation. The argmax operation can be represented as:?</p><formula xml:id="formula_9">= i z i 1[?i = i, s i &gt; s i ],</formula><p>which can be relaxed by replacing the indicator function with a peaked-softmax operation with hyperparameter ?:</p><formula xml:id="formula_10">z = i z i exp (? s i ) i exp (? s i ) =z T ? elem-exp(? s) i exp (? s i ) = z T ? peaked-softmax ? (s)</formula><p>As ? ? ?,z ?? so long as there is only one maximum value in the vector z. This peaked-softmax operation has been shown to be effective in recent work <ref type="bibr" target="#b6">(Maddison, Mnih, and Teh 2017;</ref><ref type="bibr" target="#b5">Jang, Gu, and Poole 2016;</ref><ref type="bibr" target="#b2">Goyal, Dyer, and Berg-Kirkpatrick 2017)</ref> involving continuous relaxation to the argmax operation, although to our knowledge, this is the first work to apply it to approximate the beam search procedure.</p><p>Using this peaked-softmax operation, we propose an iterative algorithm for computing a continuous relaxation to the top-k-argmax procedure in Algorithm 2 which takes as input a score matrix of size k ? |V | and returns k peaked matrices p of size k ? |V |. Each matrix p i represents the index of i-th max. For example, p 1 will have most of its mass concentrated on the index in the matrix that corresponds to the argmax, while p 2 will have most of its mass concentrated on the index of the 2nd-highest scoring element. Specifically, we obtain matrix p i by computing the squared difference between the i-highest score and all the scores in the matrix and then using the peaked-softmax operation over the negative squared differences. This results in scores closer to the i-highest score to have a higher mass than scores far away from the i-highest score.</p><p>Hence, the continuous relaxation to top-k-argmax operation can be simply implemented by iteratively using the max operation which is continuous and allows for gradient flow during backpropagation. As ? ? ?, each p vector converges to hard index pairs representing hard backpointers and successor candidates described in Algorithm 1. For finite ?, we introduce a notion of a soft backpointer, represented as a vectorb ? R k in the k-probability simplex, which represents the contribution of each beam element from the previous time step to a beam element at current time step. This is obtained by a row-wise sum over p to get k values representing soft backpointers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Training with Continuous Relaxation of Beam Search</head><p>We describe our approach in detail in Algorithm 3 and illustrate the soft beam recurrence step in <ref type="figure">Figure 1</ref>. For composing the loss function and the beam search function for our optimization as proposed in Equation 2, we make use of decomposability of the loss function across timesteps. Thus for a sequence y, the total loss is: L(y, y * ) = Algorithm 3 Continuous relaxation to beam search 1: Initialize:</p><formula xml:id="formula_11">h 0,i ? 0, e 0,i ? embedding(&lt;s&gt;), s 0,i ? 0, D t ? R k ? 0, i = 1, . . . , k 2: for t = 0 to T do 3: for all w ? V do 4: for i=1 to k do 5:s t [i, w] ? s t,i + f (h t,i , w)</formula><p>f is a local output scoring function</p><formula xml:id="formula_12">6:D t,w = d(w) D t is used to compute D t+1 7: p 1 , . . . , p k ? continuous-top-k-argmax(s t ) Call Algorithm 2 8: for i = 1 to k do 9:b t,i ? row_sum(p i )</formula><p>Soft back pointer computation 10: </p><formula xml:id="formula_13">a i ? R |V | ? column_sum(p i )<label>Contribution</label></formula><formula xml:id="formula_14">D t+1,i ? a T i ?D t 13: s t+1,i = sum(s t p i ) 14:h t,i ? 0 15:</formula><p>for j = 1 to k do Get contributions from soft backpointers for each beam element 16:</p><formula xml:id="formula_15">h t,i + = h t,j * b t,i [j] 17: D t+1,i + = D t,j * b t,i [j] 18: h t+1,i ? r(h t,i , e t+1,i )</formula><p>r is a nonlinear recurrent function that returns state at next step 19: L = peaked-softmax ? (s T ) ? D T Pick the loss for the sequence with highest model score on the beam in a soft manner.</p><p>structured prediction <ref type="bibr" target="#b10">(Taskar, Guestrin, and Koller 2004;</ref><ref type="bibr" target="#b10">Tsochantaridis et al. 2005</ref>) has made due with this assumption, often using decomposable losses as surrogates for nondecomposable ones. We detail the continuous relaxation to beam search in Algorithm 3 with D t,i being the cumulative loss of beam element i at time step t and E being the embedding matrix of the target vocabulary which is of size |V | ? l where l is the size of the embedding vector.</p><p>In Algorithm 3, all the discrete selection functions have been replaced by their soft, continuous counterparts which can be backpropagated through. This results in all the operations being matrix and vector operations which is ideal for a GPU implementation. An important aspect of this algorithm is that we no longer rely on exactly identifying a discrete search prediction? since we are only interested in a continuous approximation to the direct loss L (line 18 of Algorithm 3), and all the computation is expressed via the soft beam search formulation which eliminates all the sources of discontinuities associated with the training objective in Equation 1. The computational complexity of our approach for training scales linearly with the beam size and hence is roughly k times slower than standard CE training for beam size k. Since we have established the pointwise convergence of peaked-softmax to argmax as ? ? ? for all vectors that have a unique maximum value, we can establish pointwise convergence of objective in Equation 2 to objective in Equation 1 as ? ? ?, as long as there are no ties among the top-k scores of the beam expansion candidates at any time step. We posit that absolute ties are unlikely due to random initialization of weights and the domain of the scores being R. Empirically, we did not observe any noticeable impact of potential ties on the training procedure and our approach performed well on the tasks as discussed in Section 4.</p><formula xml:id="formula_16">G DL,? (x, M(?), y * ) ??? ? ??? ? p G DL (x, ?, y * )<label>(3)</label></formula><p>We experimented with different annealing schedules for ? starting with non-peaked softmax moving toward peakedsoftmax across epochs so that learning is stable with informative gradients. This is important because cost functions like Hamming distance with very high ? tend to be non-smooth and are generally flat in regions far away from changepoints and have a very large gradient near the changepoints which makes optimization difficult.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Decoding</head><p>The motivation behind our approach is to make the optimization aware of beam search decoding while maintaining the continuity of the objective. However, since our approach doesn't introduce any new model parameters and optimization is agnostic to the architecture of the seq2seq model, we were able to experiment with various decoding schemes like locally normalized greedy decoding, and hard beam search, once the model has been trained. However, to reduce the gap between the training procedure and test procedure, we also experimented with soft beam search decoding. This decoding approach closely follows Algorithm 3, but along with soft back pointers, we also compute hard back pointers at each time step. After computing all the relevant quantities like model score, loss etc., we follow the hard backpointers to obtain the best sequence?. This is very different from hard beam decoding because at each time step, the selection decisions are made via our soft continuous relaxation which influences the scores, LSTM hidden states and input embeddings at subsequent time-steps. The hard backpointers are essentially the MAP estimate of the soft  <ref type="figure">Figure 1</ref>: Illustration of our approximate continuous beam search (Algorithm 3) module to obtain hidden states for beam elements at the next time step (h t+1, * ), starting from the hidden states corresponding to beam elements are current time step (h t, * ) with beam size of 2. 'Beam recurrence' module has been expanded for h t+1,2 and similar procedure is carried out for h t+1,1 . backpointers at each step. With small, finite ?, we observe differences between soft beam search and hard beam search decoding in our experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Comparison with Max-Margin Objectives</head><p>Max-margin based objectives are typically motivated as another kind of surrogate training objective which avoid the discontinuities associated with direct loss optimization. Hinge loss for structured prediction typically takes the form:</p><formula xml:id="formula_17">G hinge = max(0, max y?Y (?(y, y * ) + s(y)) ? s(y * ))</formula><p>where x is the input sequence, y * is the gold target sequence, Y is the output search space and ?(y, y * ) is the discontinuous cost function which we assume is decomposable across the time-steps of a sequence. Finding the cost augmented maximum score is generally difficult in large structured models and often involves searching over the output space and computing the approximate cost augmented maximal output sequence and the score associated with it via beam search. This procedure introduces discontinuities in the training procedure of structured max-margin objectives and renders it non amenable to training via backpropagation. Related work (Wiseman and Rush 2016) on incorporating beam search into the training of neural sequence models does involve costaugmented max-margin loss but it relies on discontinuous beam search forward passes and an explicit mechanism to ensure that the gold sequence stays in the beam during training, and hence does not involve back propagation through the beam search procedure itself. Our continuous approximation to beam search can very easily be modified to compute an approximation to the struc-tured hinge loss so that it can be trained via backpropagation if the cost function is decomposable across time-steps. In Algorithm 3, we only need to modify line 5 as:</p><formula xml:id="formula_18">s t [i, w] ? s t,i + d(w) + f (h t,i , w)</formula><p>and instead of computing L in Algorithm 3, we first compute the cost augmented maximum score as:</p><formula xml:id="formula_19">s max = peaked-softmax ? (s T ) ? s T</formula><p>and also compute the target score s(y * ) by simply running the forward pass of the LSTM decoder over the gold target sequence. The continuous approximation to the hinge loss to be optimized is then:G hinge,? = max(0, s max ? s(y * )). We empirically compare this approach with the proposed approach to optimize direct loss in experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Experimental Setup</head><p>Since our goal is to investigate the efficacy of our approach for training generic seq2seq models, we perform experiments on two NLP tagging tasks with very different characteristics and output search spaces: Named Entity Recognition (NER) and CCG supertagging. While seq2seq models are appropriate for CCG supertagging task because of the long-range correlations between the sequential output elements and a large search space, they are not ideal for NER which has a considerably smaller search space and weaker correlations between predictions at subsequent time steps. In our experiments, we observe improvements from our approach on both of the tasks. We use a seq2seq model with a bi-directional LSTM encoder (1 layer with tanh activation function) for the input sequence x, and an LSTM decoder (1 layer with tanh activation function) with a fixed attention mechanism that deterministically attends to the i-th input token when decoding the i-th output, and hence does not involve learning of any attention parameters. Since, computational complexity of our approach for optimization scales linearly with beam size for each instance, it is impractical to use very large beam sizes for training. Hence, beam size for all the beam search based experiments was set to 3 which resulted in improvements on both the tasks as discussed in the results. For both tasks, the direct loss function was the Hamming distance cost which aims to maximize word level accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Named Entity Recognition</head><p>For named entity recognition, we use the CONLL 2003 shared task data <ref type="bibr" target="#b10">(Tjong Kim Sang and De Meulder 2003)</ref> for German language and use the provided data splits. We perform no preprocessing on the data. The output vocabulary length (label space) is 10. A peculiar characteristic of this problem is that the training data is naturally skewed toward one default label ('O') because sentences typically do not contain many named entities and the evaluation focuses on the performance recognizing entities. Therefore, we modify the Hamming cost such that incorrect prediction of 'O' is doubly penalized compared to other incorrect predictions. We use the hidden layers of size 64 and label embeddings of size 8. As mentioned earlier, seq2seq models are not an ideal choice for NER (tag-level correlations are short-ranged in NER -the unnecessary expressivity of full seq2seq models over simple encoder-classifier neural models makes training harder). However, we wanted to evaluate the effectiveness of our approach on different instantiations of seq2seq models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">CCG Supertagging</head><p>We used the standard splits of CCG bank <ref type="bibr" target="#b4">(Hockenmaier and Steedman 2002)</ref> for training, development, and testing. The label space of supertags is 1,284 which is much larger than NER. The distribution of supertags in the training data exhibits a long tail because these supertags encode specific syntactic information about the words' usage. The supertag labels are correlated with each other and many tags encode similar information about the syntax. Moreover, this task is sensitive to the long range sequential decisions and search effects because of how it holistically encodes the syntax of the entire sentence. We perform minor preprocessing on the data similar to the preprocessing in <ref type="bibr" target="#b11">(Vaswani et al. 2016)</ref>. For this task, we used hidden layers of size 512 and the supertag label embeddings were also of size 512. The standard evaluation metric for this task is the word level label accuracy which directly corresponds to Hamming loss.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Hyperparameter tuning</head><p>For tuning all the hyperparameters related to optimization we trained our models for 50 epochs and picked the models with the best performance on the development set. We also ran multiple random restarts for all the systems evaluated to account for performance variance across randomly started runs. We pretrained all our models with standard cross entropy training which was important for stable optimization of the non convex neural objective with a large parameter search space. This warm starting is a common practice in prior work on complex neural models <ref type="bibr" target="#b6">(Ranzato et al. 2016;</ref><ref type="bibr" target="#b7">Rush, Chopra, and Weston 2015;</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Comparison</head><p>We report performance on validation and test sets for both the tasks in Tables 1 and 2. The baseline model is a cross entropy trained seq2seq model (Baseline CE) which is also used to warm start the the proposed optimization procedures in this paper. This baseline has been compared against the approximate direct loss training objective (Section 2.3), referred to asG DL,? in the tables, and the approximate max-margin training objective (Section 2.5), referred to asG hinge,? in the tables. Results are reported for models when trained with annealing ?, and also with a constant setting of ? = 1.0 which is a very smooth but inaccurate approximation of the original direct loss that we aim to optimize 2 . Comparisons have been made on the basis of performance of the models under different decoding paradigms (represented as different column in the tables): locally normalized decoding (CE greedy), hard beam search decoding and soft beam search decoding described in Section 2.4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Results</head><p>As shown in Tables 1 and 2, our approachG DL,? shows significant improvements over the locally normalized CE baseline with greedy decoding for both the tasks (+5.5 accuracy points gain for supertagging and +1.5 F1 points for NER). The improvement is more pronounced on the supertagging task, which is not surprising because: (i) the evaluation metric is tag-level accuracy which is congruent with the Hamming loss thatG DL,? directly optimizes and (ii) the supertagging task itself is very sensitive to the search procedure because tags across time-steps tend to exhibit long range dependencies as they encode specialized syntactic information about word usage in the sentence.</p><p>Another common trend to observe is that annealing ? always results in better performance than training with a constant ? = 1.0 for bothG DL,? (Section 2.3) andG hinge,? (Section 2.5). This shows that a stable training scheme that smoothly approaches minimizing the actual direct loss is important for our proposed approach. Additionally, we did not observe a large difference when our soft approximation is used for decoding (Section 2.4) compared to hard beam search decoding, which suggests that our approximation to the hard beam search is as effective as its discrete counterpart.</p><p>For supertagging, we observe that the baseline cross entropy trained model improves its predictions with beam search decoding compared to greedy decoding by 2 accuracy points, which suggests that beam search is already helpful for this task, even without search-aware training. Both the optimization schemes proposed in this paper improve upon the baseline with soft direct loss optimization (G DL,? ), per-  forming better than the approximate max-margin approach.</p><p>3 For NER, we observe that optimizingG DL,? outperforms all the other approaches but we also observe interesting behaviour of beam search decoding and the approximate maxmargin objective for this task. The pretrained CE baseline model yields worse performance when beam search is done instead of greedy locally normalized decoding. This is because the training data is heavily skewed toward the 'O' label and hence the absolute score resolution between different tags at each time-step during decoding isn't enough to avoid leading beam search toward a wrong hypothesis path. We observed in our experiments that hard beam search resulted in predicting more 'O's which also hurt the prediction of tags at future time steps and hurt precision as well as recall. Encouragingly,G DL,? optimization, even though warm started with a CE trained model that performs worse with beam search, led to the NER model becoming more search aware, which resulted in superior performance. However, we also observe that the approximate max-margin approach (G hinge,? ) performs poorly here. We attribute this to a deficiency in the max-margin objective when coupled with approximate search methods like beam search that do not provide guarantees on finding the supremum: one way to drive this objective down is to learn model scores such that the search for the 3 Separately, we also ran experiments with a max-margin objective that used hard beam search to compute loss-augmented decodes. This objective is discontinuous, but we evaluated the performance of gradient optimization nonetheless. While not included in the result tables, we found that this approach was unstable and considerably underperformed both approximate max-margin and direct loss objectives. best hypothesis is difficult, so that the value of the loss augmented decode is low, while the gold sequence maintains higher model score. Because we also warm started with a pre-trained model that results in a worse performance with beam search decode than with greedy decode, we observe the adverse effect of this deficiency. The result is a model that scores the gold hypothesis highly, but yields poor decoding outputs. This observation indicates that using max-margin based objectives with beam search during training actually may achieve the opposite of our original intent: the objective can be driven down by introducing search errors.</p><p>The observation that our optimization method led to improvements on both the tasks-even on NER for which hard beam search during decoding on a CE trained model hurt the performance-by making the optimization more search aware, indicates the effectiveness of our approach for training seq2seq models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>While beam search is a method of choice for performing search in neural sequence models, as our experiments confirm, it is not necessarily guaranteed to improve accuracy when applied to cross-entropy-trained models. In this paper, we propose a novel method for optimizing model parameters that directly takes into account the process of beam search itself through a continuous, end-to-end sub-differentiable relaxation of beam search composed with the final evaluation loss. Experiments demonstrate that our method is able to improve overall test-time results for models using beam search as a test-time inference method, leading to substantial improvements in accuracy.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Results on CCG Supertagging. Tag-level accuracy is reported in this table which is a standard evaluation metric for</figDesc><table><row><cell>supertagging</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Training procedure</cell><cell cols="2">Greedy</cell><cell cols="4">Hard Beam Search Soft Beam Search</cell></row><row><cell></cell><cell>Dev</cell><cell>Test</cell><cell>Dev</cell><cell>Test</cell><cell>Dev</cell><cell>Test</cell></row><row><cell>Baseline CE</cell><cell cols="4">80.15 80.35 82.17 82.42</cell><cell cols="2">81.62 82.00</cell></row><row><cell cols="2">G hinge,? annealed ? -</cell><cell>-</cell><cell cols="2">83.03 83.54</cell><cell cols="2">82.82 83.05</cell></row><row><cell>G hinge,? ?=1.0</cell><cell>-</cell><cell>-</cell><cell cols="2">83.02 83.36</cell><cell cols="2">82.49 82.85</cell></row><row><cell>G DL,? ?=1.0</cell><cell>-</cell><cell>-</cell><cell cols="2">83.23 82.65</cell><cell cols="2">82.58 82.82</cell></row><row><cell>G DL,? annealed ?</cell><cell>-</cell><cell>-</cell><cell cols="2">85.69 85.82</cell><cell cols="2">85.58 85.78</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc>Results on Named Entity Recognition. Macro F1 over the prediction of different named entities is reported that is a standard evaluation metric for this task.</figDesc><table><row><cell>Training procedure</cell><cell cols="2">CE Greedy</cell><cell cols="4">Hard Beam Search Soft Beam Search</cell></row><row><cell></cell><cell>Dev</cell><cell>Test</cell><cell>Dev</cell><cell>Test</cell><cell>Dev</cell><cell>Test</cell></row><row><cell>Baseline CE</cell><cell cols="4">50.21 54.92 46.22 51.34</cell><cell cols="2">47.50 52.78</cell></row><row><cell cols="2">G hinge,? annealed ? -</cell><cell>-</cell><cell cols="2">41.10 45.98</cell><cell cols="2">41.24 46.34</cell></row><row><cell>G hinge,? ?=1.0</cell><cell>-</cell><cell>-</cell><cell cols="2">40.09 44.67</cell><cell cols="2">39.67 43.82</cell></row><row><cell>G DL,? ?=1.0</cell><cell>-</cell><cell>-</cell><cell cols="2">49.88 54.08</cell><cell cols="2">50.73 54.77</cell></row><row><cell>G DL,? annealed ?</cell><cell>-</cell><cell>-</cell><cell cols="2">51.86 56.15</cell><cell cols="2">51.96 56.38</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">This assumption does not hold for some popular evaluation metrics (e.g. BLEU). In these cases, surrogate evaluation losses such as Hamming distance can be used .</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">T t=1 d(y t ). In our experiments, d(y t ) is the Hamming loss which can be easily computed at each time-step by simply comparing gold y * t with y t . While exact computation of d(y) will vary according to the loss, our proposed procedure will be applicable as long as the total loss is decomposable across time-steps. While decomposability of loss is a strong assumption, existing literature on</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">Our pilot experiments that involved training with a very large constant ? resulted in unstable optimization.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Learning as search optimization: Approximate large margin methods for structured prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>References</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Andor</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1409.1259</idno>
		<idno>arXiv:1505.08075</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 42nd Annual Meeting on Association for Computational Linguistics, 111. Association for Computational Linguistics</title>
		<meeting>the 42nd Annual Meeting on Association for Computational Linguistics, 111. Association for Computational Linguistics</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2004" />
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="page" from="297" to="325" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Search-based structured prediction. Dyer et al. 2015] Dyer, C.; Ballesteros, M.; Ling, W.; Matthews, A.; and Smith, N. A. 2015. Transition-based dependency parsing with stack long short-term memory</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Approximation-aware dependency parsing by belief propagation</title>
	</analytic>
	<monogr>
		<title level="m">Proceedings of NAACL-HLT</title>
		<meeting>NAACL-HLT</meeting>
		<imprint>
			<publisher>TACL</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="199" to="209" />
		</imprint>
	</monogr>
	<note>Recurrent neural network grammars</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Differentiable scheduled sampling for credit assignment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dyer</forename><surname>Goyal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Berg-Kirkpatrick ;</forename><surname>Goyal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Dyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Berg-Kirkpatrick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Association for Computational Linguistics</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Long short-term memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Im</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Li ;</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Im</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">O</forename><surname>Hochreiter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Schmidhuber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
		<idno type="arXiv">arXiv:1706.07518</idno>
	</analytic>
	<monogr>
		<title level="m">Neural machine translation with gumbel-greedy decoding</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="1735" to="1780" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Acquiring compact lexicalized grammars from a cleaner treebank</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hockenmaier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Steedman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">LREC</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Categorical reparameterization with gumbel-softmax</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gu</forename><surname>Jang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Poole</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Jang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Poole</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Koehn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Knowles</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1706.03872</idno>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Six challenges for neural machine translation</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The concrete distribution: A continuous relaxation of discrete random variables</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mnih</forename><surname>Maddison</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">J</forename><surname>Teh ; Maddison</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mnih</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">W</forename><surname>Teh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ranzato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chopra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Auli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zaremba</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1703.01619</idno>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>International Conference on Learning Representations</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A reduction of imitation learning and structured prediction to no-regret online learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gordon</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">J</forename><surname>Gordon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bagnell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M</forename><surname>Rush</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chopra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Weston</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Empirical Methods in Natural Language Processing</title>
		<meeting><address><addrLine>Weston</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
	<note>AISTATS</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Building end-to-end dialogue systems using generative hierarchical neural network models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Serban</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI&apos;16 Proceedings of the Thirtieth AAAI Conference on Artificial Intelligence</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Sequence to sequence learning with neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vinyals</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Le</forename><forename type="middle">;</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Le</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><forename type="middle">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="3104" to="3112" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Introduction to the conll-2003 shared task: Language-independent named entity recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guestrin</forename><surname>Taskar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Koller ; Taskar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Guestrin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">F</forename><surname>Tjong Kim Sang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">De</forename><surname>Meulder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Tsochantaridis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Joachims</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hofmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Altun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the seventh conference on Natural language learning at HLT-NAACL 2003</title>
		<meeting>the seventh conference on Natural language learning at HLT-NAACL 2003</meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2003" />
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="1453" to="1484" />
		</imprint>
	</monogr>
	<note>Large margin methods for structured and interdependent output variables</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Supertagging with lstms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Vaswani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of NAACL-HLT</title>
		<meeting>NAACL-HLT</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="232" to="237" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Show, attend and tell: Neural image caption generation with visual attention</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wiseman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M</forename><surname>Rush</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kiros</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">C</forename><surname>Courville</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Salakhutdinov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Zemel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<idno>Xu et al. 2015</idno>
	</analytic>
	<monogr>
		<title level="m">Empirical Methods in Natural Language Processing</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="77" to="81" />
		</imprint>
	</monogr>
	<note>ICML</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
