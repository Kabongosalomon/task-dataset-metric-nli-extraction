<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">In-Place Activated BatchNorm for Memory-Optimized Training of DNNs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Samuel</forename><forename type="middle">Rota</forename><surname>Bul?</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lorenzo</forename><surname>Porzi</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Kontschieder</surname></persName>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mapillary</forename><surname>Research</surname></persName>
							<email>research@mapillary.com</email>
						</author>
						<title level="a" type="main">In-Place Activated BatchNorm for Memory-Optimized Training of DNNs</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2022-11-12T03:01+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this work we present In-Place Activated Batch Normalization (INPLACE-ABN) -a novel approach to drastically reduce the training memory footprint of modern deep neural networks in a computationally efficient way. Our solution substitutes the conventionally used succession of BatchNorm + Activation layers with a single plugin layer, hence avoiding invasive framework surgery while providing straightforward applicability for existing deep learning frameworks. We obtain memory savings of up to 50% by dropping intermediate results and by recovering required information during the backward pass through the inversion of stored forward results, with only minor increase (0.8-2%) in computation time. Also, we demonstrate how frequently used checkpointing approaches can be made computationally as efficient as INPLACE-ABN. In our experiments on image classification, we demonstrate on-par results on ImageNet-1k with state-of-the-art approaches. On the memory-demanding task of semantic segmentation, we report results for COCO-Stuff, Cityscapes and Mapillary Vistas, obtaining new state-of-the-art results on the latter without additional training data but in a single-scale and -model scenario. Code can be found at https</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>High-performance computer vision recognition models typically take advantage of deep network backbones, generating rich feature representations for target applications to operate on. For example, top-ranked architectures used in the 2017 LSUN or MS COCO segmentation/detection challenges are predominantly based on ResNet/ResNeXt <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b31">32]</ref> models comprising &gt;100 layers.</p><p>Obviously, depth/width of networks strongly correlate with GPU memory requirements and at given hardware memory limitations, trade-offs have to be made to balance feature extractor performance vs. application-specific parameters like network output resolution or training data size. A particularly memory-demanding task is semantic seg-+ + store buffer store buffer store buffer store buffer store buffer store buffer store buffer store buffer store buffer <ref type="figure" target="#fig_2">Figure 1</ref>. Example of residual block with identity mapping <ref type="bibr" target="#b11">[12]</ref>. Left: Implementation with standard BN and in-place activation layers, which requires storing 6 buffers for the backward pass. Right: Implementation with our proposed INPLACE-ABN layer, which requires storing only 3 buffers. Our solution avoids storing the buffers that are typically kept for the backward pass through BN and exhibits a lower computational overhead compared to state-of-the-art memory-reduction methods. mentation, where one has to compromise significantly on the number of training crops per minibatch and their spatial resolution. In fact, many recent works based on modern backbone networks have to set the training batch size to no more than a single crop per GPU <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b29">30]</ref>, which is partially also due to suboptimal memory management in some deep learning frameworks. In this work, we focus on increasing the memory efficiency of the training process of modern network architectures in order to further leverage performance of deep neural networks in tasks like image classification and semantic segmentation. We introduce a novel and unified layer that replaces the commonly used succession of batch normalization (BN) and nonlinear activation layers (ACT), which are integral with modern deep learning architectures like ResNet <ref type="bibr" target="#b10">[11]</ref>, ResNeXt <ref type="bibr" target="#b31">[32]</ref>, Inception-ResNet <ref type="bibr" target="#b27">[28]</ref>, WideResNet <ref type="bibr" target="#b33">[34]</ref>, Squeeze-and-Excitation Networks <ref type="bibr" target="#b12">[13]</ref>, DenseNet <ref type="bibr" target="#b13">[14]</ref>, etc. Our solution is coined INPLACE-ABN and proposes to merge batch normalization and activation layers in order to enable in-place computation, using only a single memory buffer for storing the results (see illustration in <ref type="figure" target="#fig_2">Figure 1</ref>). During the backward pass, we can efficiently recover all required quantities from this buffer by inverting the forward pass computations. Our approach yields a theoretical memory reduction of up to 50%, and our experiments on semantic segmentation show additional data throughput of up to +75% during training, when compared to prevailing sequential execution of BN+ACT. Our memory gains are obtained without introducing noticeable computational overhead, i.e. side-by-side runtime comparisons show only between +0.8-2% increase in computation time.</p><p>As additional contribution, we review the checkpointing memory management strategy <ref type="bibr" target="#b3">[4]</ref> and propose a computationally optimized application of this idea in the context of BN layers. This optimization allows us to drop recomputation of certain quantities needed during the backward pass, eventually leading to reduced computation times as per our INPLACE-ABN. However, independent of the proposed optimized application of <ref type="bibr" target="#b3">[4]</ref>, conventional checkpointing in general suffers from higher implementation complexity (with the necessity to invasively manipulate the computation graph), while our main INPLACE-ABN contribution can be easily implemented as self-contained, standard plug-in layer and therefore simply integrated in any modern deep learning framework.</p><p>Our experimental evaluations demonstrate on-par performance with state-of-the-art models trained for image classification on ImageNet <ref type="bibr" target="#b25">[26]</ref> (in directly comparable memory settings), and significantly improved results for the memory-critical application of semantic segmentation.</p><p>To summarize, we provide the following contributions:</p><p>? Introduction of a novel, self-contained INPLACE-ABN layer that enables joint, in-place computation of BN+ACT, approximately halvening the memory requirements during training of modern deep learning models.</p><p>? A computationally more efficient application of the checkpointing memory management strategy in the context of BN layers, inspired by optimizations used for INPLACE-ABN.</p><p>? Experimental evaluations for i) image classification on ImageNet-1k showing approximately on-par performance with state-of-the-art models and ii) semantic segmentation on COCO-Stuff, Cityscapes and Mapillary Vistas, considerably benefiting from the additional available memory and generating new high-scores on the challenging Vistas dataset.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Related Work</head><p>The topic of optimizing memory management in deep learning frameworks is typically addressed at different levels. Efficient deep learning frameworks like TensorFlow, MxNet or PyTorch follow distinct memory allocation strategies. Among them is checkpointing <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b20">21]</ref>, which provides additional memory at the cost of runtime via storing activation buffers as so-called checkpoints, from where required quantities can be re-computed during the backward pass. The paper in <ref type="bibr" target="#b3">[4]</ref> describes how to recursively apply such a variant on sub-graphs between checkpoints. In <ref type="bibr" target="#b9">[10]</ref> this is further optimized with dynamic programming, where a storage policy is determined that minimizes the computational costs for re-computation at a fixed memory budget.</p><p>Virtually all deep learning frameworks based on NVIDIA hardware exploit low-level functionality libraries CUDA and cuDNN 1 , providing GPU-accelerated and performance-optimized primitives and basic functionalities. Another line of research has focused on training CNNs with reduced precision and therefore smaller memoryfootprint datatypes. Such works include (partially) binarized weights/activations/gradients <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b15">16]</ref>, which however typically lead to degraded overall performance. With mixed precision training <ref type="bibr" target="#b21">[22]</ref>, this issue seems to be overcome and we plan to exploit this as complementary technique in future work, freeing up even more memory for training deep networks without sacrificing runtime.</p><p>In <ref type="bibr" target="#b8">[9]</ref> the authors modify ResNet in a way to contain reversible residual blocks, i.e. residual blocks whose activations can be reconstructed backwards. Backpropagation through reversible blocks can be performed without having stored intermediate activations during the forward pass, which allows to save memory. However, the cost to pay is twofold. First, one has to recompute each residual function during the backward pass, thus having the same overhead as checkpointing <ref type="bibr" target="#b20">[21]</ref>. Second, the network design is limited to using blocks with certain restrictions, i.e. reversible blocks cannot be generated for bottlenecks where information is supposed to be discarded.</p><p>Finally, we stress that only training time memoryefficiency is targeted here while test-time optimization as done e.g. in NVIDIAs TensorRT 2 is beyond our scope.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">In-Place Activated Batch Normalization</head><p>Here, we describe our contribution to avoid the storage of a buffer that is typically needed for the gradient computation during the backward pass through the batch normalization layer. As opposed to existing approaches we also show that our solution minimizes the computational overhead we have to trade for saving additional memory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Batch Normalization Review</head><p>Batch Normalization has been introduced in <ref type="bibr" target="#b16">[17]</ref> as an effective tool to reduce internal covariate shift in deep networks and accelerate the training process. Ever since, BN plays a key role in most modern deep learning architectures.</p><p>The key idea consists in having a normalization layer that applies an axis-aligned whitening of the input distribution, followed by a scale-and-shift operation aiming at preserving the network's representation capacity. The whitening operation exploits statistics computed on a minibatch level only. The by-product of this approximation is an additional regularizing effect for the training process.</p><p>In details, we can fix a particular unit x in the network and let x B = {x 1 , . . . , x m } be the set of values x takes from a minibatch B of m training examples. The batch normalization operation applied to x i first performs a whitening of the activation using statistics computed from the minibatch:</p><formula xml:id="formula_0">x i = BN(x i ) = x i ? ? B ? 2 B + .<label>(1)</label></formula><p>Here &gt; 0 is a small constant that is introduced to prevent numerical issues, and ? B and ? 2 B are the empirical mean and variance of the activation unit x, respectively, computed with respect to the minibatch B, i.e.</p><formula xml:id="formula_1">? B = 1 m m j=1 x j , ? 2 B = 1 m m j=1 (x j ? ? B ) 2 .</formula><p>The whitened activationsx i are then scaled and shifted by learnable parameters ? and ?, obtaining</p><formula xml:id="formula_2">y i = BN ?,? (x i ) = ?x i + ? .</formula><p>The BN transformation described above can in principle be applied to any activation in the network and is typically adopted with channel-specific (?, ?)-parameters. Using BN renders training resilient to the scale of parameters, thus enabling the use of higher learning rates. At test time, the BN statistics are fixed to ? T and ? T , estimated from the entire training set T . These statistics are typically updated at training time with a running mean over the respective minibatch statistics, but could also be recomputed before starting the testing phase. Also, the computation of networks trained with batch normalization can be sped up by absorbing BN parameters into the preceding CONV layer, by performing a simple update of the convolution weights and biases. This is possible because at testtime BN becomes a linear operation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Memory Optimization Strategies</head><p>Here we sketch our proposed memory optimization strategies after introducing both, the standard (memoryinefficient) use of batch normalization and the state-of-theart coined checkpointing <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b20">21]</ref>. In <ref type="figure" target="#fig_0">Figure 2</ref>, we provide diagrams showing the forward and backward passes of a typical building block BN+ACT+CONV 3 that we find in modern deep architectures. The activation function (e.g. RELU) is denoted by ?. Computations occurring during the forward pass are shown in green and involve the entire minibatch B (we omit the subscript B). Computations happening during the backward pass are shown in cyan and gray. The gray part aims at better highlighting the additional computation that has been introduced to compensate for the memory savings. Rectangles are in general volatile buffers holding intermediate results, except for rectangles surrounded by a dashed frame, which represent buffers that need to be stored for the backward pass and thus significantly impact the training memory footprint. E.g., in <ref type="figure" target="#fig_0">Figure 2</ref>(a) only x and z will be stored for the backward pass, while in <ref type="figure" target="#fig_0">Figure 2</ref>(b) only x is stored. For the sake of presentation clarity, we have omitted two additional buffers holding ? B and ? B for the BN backward phase. Nevertheless, these buffers represent in general a small fraction of the total allocated memory. Moreover, we have also omitted the gradients with respect to the model parameters (i.e. ?, ? and CONV weights).</p><p>Standard. In <ref type="figure" target="#fig_0">Figure 2</ref>(a) we present the standard implementation of the reference building block, as used in all deep learning frameworks. During the forward pass both, the input x to BN and the output of the activation function ? need to be stored for the backward pass. Variable x is used during the backward pass through BN ?,? to compute both the gradient w.r.t. its input and ?, i.e. ?L ?x and ?L ?? where L denotes the loss, while z is required for the backward pass through the activation ? as well as potential subsequent operations like e.g. the convolution shown in the figure.</p><p>Checkpointing <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b20">21]</ref>. This technique allows to trade computation for memory when training neural networks, applicable in a very broad setting. In <ref type="figure" target="#fig_0">Figure 2</ref>(b), we limit its application to the building block under consideration like in <ref type="bibr" target="#b23">[24]</ref>. In contrast to the standard implementation, which occupies two buffers for the backward pass of the shown building block, checkpointing requires only a single buffer. The trick consists in storing only x and recomputing z during the backward pass by reiterating the forward operations starting from x (see gray-colored operations). Clearly, the computational overhead to be paid comprises both, recomputation of the BN and activation layers. It is worth observing that recomputing BN ?,? (gray) during the backward phase can reuse values for ? B and ? B available from the forward pass and fuse together the normalization and subsequent affine transformation into a single scale-and-shift operation. Accordingly, the cost of the second forward pass over BN ?,? becomes less expensive (see also <ref type="bibr" target="#b23">[24]</ref>).</p><p>The three approaches that follow are all contributions of this work. The first represents a variation of checkpointing, which allows us to save additional computations in the context of BN. The second and third are our main contributions, providing strategies that yield the same memory savings and even lower computational costs compared to the proposed, optimized checkpointing, but are both selfcontained and thus much easier to integrate in existing deep learning frameworks.</p><p>Checkpointing (proposed version). Direct application of the checkpointing technique in the sketched building block, which is adopted also in <ref type="bibr" target="#b23">[24]</ref>, is not computationally optimal since additional operations could be saved by storin? x, i.e. the normalized value of x as per Eq. (1), instead of x. Indeed, as we will see in the next subsection, the backward pass through BN requires recomputingx if not already stored. For this reason, we propose in <ref type="figure" target="#fig_0">Figure 2</ref>(c) an alternative implementation that is computationally more efficient by retainingx from the forward pass through the BN layer. Fromx we can recover z during the backward pass by applying the scale-and-shift operation ? ?,? (x) = ?x + ?, followed by the activation function ? (see gray-colored operations). In this way, the computation of z becomes slightly more efficient than the one shown in <ref type="figure" target="#fig_0">Figure 2</ref>(b), for we save the fusion operation. Finally, an additional saving of the normalization step derives from using the storedx in the backward implementation of BN rather than recomputing it from x. To distinguish the efficient backward implementation of BN from the standard one we write BN * ?,? in place of BN ?,? (cyan-colored, see additionally ? 3.3).</p><p>In-Place Activated Batch Normalization I. A limitation of the memory-reduction strategy described above is that the last layer, namely CONV in the example, depends on non-local quantities like x (orx) for the computation of the gradient. This makes the implementation of the approach within standard frameworks somewhat cumbersome, because the backward pass of any layer that follows ?, which relies on the existence of z, has to somehow trigger its recomputation. To render the implementation of the proposed memory savings easier and self-contained, we suggest an alternative strategy shown in <ref type="figure" target="#fig_0">Figure 2(d)</ref>, which relies on having only z as the saved buffer during the forward pass, thus operating an in-place computation through the BN layer (therefrom the paper's title). By doing so, any layer that follows the activation ? would have the information for the gradient computation locally available. Having stored z, we need to recomputex backwards, for it will be needed in the backward pass through the BN layer. <ref type="bibr" target="#b3">4</ref> However, this operation is only possible if the activation func-tion is invertible. Even though this requirement does not hold for RELU, i.e. one of the most dominantly used activation functions, we show in ? 4.1 that an invertible function like LEAKY RELU <ref type="bibr" target="#b19">[20]</ref> with a small slope works well as a surrogate of RELU without compromising on the model quality. We also need to invert the scale-and-shift operation ? ?,? , which is in general possible if ? = 0.</p><p>In-Place Activated Batch Normalization II. The complexity of the computation ofx = ? ?1 ?,? (y) = y?? ? used in the backward pass of INPLACE-ABN I can be further reduced by rewriting the gradients ?L ?? and ?L ?x directly as functions of y instead ofx. The explicit inversion of ? ?,? to recoverx applies m scale-and-shift operations (per feature channel). If the partial derivatives are however based on y directly, the resulting modified gradients (derivations given in the Appendix) show that the same computation can be absorbed into the gradient ?L ?xi at O(1) cost (per feature channel). In <ref type="figure" target="#fig_0">Figure 2</ref>(e) we show the diagram of this optimization, where we denote as BN ? ?,? the implementation of the backward pass as a function of y.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Technical Details</head><p>The key components of our method are the computation of the inverse of both the activation function (INPLACE-ABN I &amp; II) and ? ?,? (INPLACE-ABN I), and the implementation of a backward pass through the batch normalization layer that depends on y, i.e. the output of the forward pass through the same layer.</p><p>Invertible activation function. Many activation functions are actually invertible and can be computed in-place (e.g. sigmoid, hyperbolic tangent, LEAKY RELU, and others), but the probably most commonly used one, namely RELU, is not invertible. However, we can replace it with LEAKY RELU (see, <ref type="figure" target="#fig_1">Figure 3</ref>) with slope 0.01 without impacting the quality of the trained models <ref type="bibr" target="#b32">[33]</ref>. This will be the activation function that we use in our experimental evaluation due to its affinity to standard RELU, even though other activation functions could be used. The corresponding forward pass through the activation function with slope a for negative inputs and its inverse used in our backward pass are given as follows:</p><formula xml:id="formula_3">f (y) = y if y ? 0 ay if y &lt; 0 , f ?1 (z) = z if z ? 0 z a if z &lt; 0 .</formula><p>LEAKY RELU and its inverse share the same computational cost, i.e. an elementwise sign check and scaling operation. Hence, the overhead deriving from the recomputation of ? in the backward pass of the previously shown, checkpointing-based approaches and its inverse ? ?1 employed in the backward pass of our method are equivalent.</p><p>To give further evidence of the interchangeability of RELU and LEAKY RELU with slope a = 0.01, we have successfully retrained well-known models like ResNeXt and WideResNet on ImageNet using LEAKY RELU (see ? 4.1).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INPLACE-ABN I:</head><p>Backward pass through BN. The gradient ?L ?x = { ?L ?x1 , . . . , ?L ?xm }, which is obtained from the backward pass through the BN layer, can be written as a function ofx = {x 1 , . . . ,x m } and ?L ?y = { ?L ?y1 , . . . , ?L ?ym } as</p><formula xml:id="formula_4">?L ?x i = ?L ?y i ? 1 m ?L ??x i ? 1 m ?L ?? ? ? 2 B + ,</formula><p>where the gradients of the BN parameters are given by</p><formula xml:id="formula_5">?L ?? = m i=1 ?L ?y ix i , ?L ?? = m i=1 ?L ?y i .</formula><p>The expression above differs from what is found in the original BN paper <ref type="bibr" target="#b16">[17]</ref>, but the refactoring was already used in the Caffe <ref type="bibr" target="#b17">[18]</ref> framework. It is implemented by BN * ?,? in the proposed solutions in Figures 2(c) and 2(d) and does not depend on ? B . Hence, we store during the forward pass only ? B (this dependency was omitted from the diagrams). Instead, BN ?,? in Figures 2(a) and 2(b), which depends on x, requires the additional recomputation ofx from x via Eq. (1). Hence, it also requires storing ? B . Our solution is hence memory-wise more efficient than the state-of-the-art from <ref type="figure" target="#fig_0">Figure 2</ref></p><formula xml:id="formula_6">(b).</formula><p>Inversion of ? ?,? . In the configuration of INPLACE-ABN I, the inversion of ? ?,? becomes critical if ? = 0 since ? ?1 ?,? (y) = y?? ? . While we never encountered such a case in practice, one can protect against it by preventing ? from getting less than a given tolerance. We can even avoid this problem by simply not considering ? a learnable parameter and by fixing it to 1, in case the activation function is scale covariant (e.g. all RELU-like activations) and when a CONV layer follows. Indeed, it is easy to show that the network retains the exact same capacity in that case, for ? can be absorbed into the subsequent CONV layer.</p><p>INPLACE-ABN II: Backward pass through BN. We obtain additional memory savings for our solution illustrated </p><formula xml:id="formula_7">?L ?x i = ?L ?y i ? 1 ?m ?L ?? y i ? 1 m ?L ?? ? ? ? ?L ?? ? ? 2 B + .</formula><p>For the gradients of the BN parameters, ?L ?? remains as above but we get</p><formula xml:id="formula_8">?L ?? = 1 ? ? ? m j=1 ?L ?y j y j ? ? ?L ?? ? ?</formula><p>and we write BN ? ?,? for the actual backward implementation in <ref type="figure" target="#fig_0">Figure 2</ref>(e). Detailed derivations are provided in the Appendix of this paper.</p><p>In summary, both of our optimized main contributions are memory-wise more efficient than the state-of-the-art solution in <ref type="figure" target="#fig_0">Figure 2</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">Implementation Details</head><p>We have implemented the proposed INPLACE-ABN I layer in PyTorch, by simply creating a new layer that fuses batch normalization with an (invertible) activation function. In this way we can deal with the computation ofx from z internally in the layer, thus keeping the implementation selfcontained. We have released code at https://github. com/mapillary/inplace_abn for easy plug-in replacement of the block BN+ACT in modern architectures. The forward and backward implementations are also given as pseudocode in Algorithm 1 and 2. In the forward pass, in line 3, we explicitly indicate the buffers that are stored and needed for the backward pass. Any other buffer can be overwritten with in-place computations, e.g. x, y and z can point to the same memory location. In the backward pass, we recover the stored buffers in line 1 and, again, every computation can be done in-place if the buffer is not needed anymore (e.g. ?L ?x , ?L ?y , ?L ?z can share the same memory location as well asx, y and z). As opposed to <ref type="figure" target="#fig_0">Figure 2</ref>, the pseudocode shows also the dependencies on additional, small, buffers like ? B and reports the gradients with respect to the BN layer parameters ? and ?. Please note the difference during backward computation when applying INPLACE-ABN I or INPLACE-ABN II, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 2 INPLACE-ABN Backward</head><p>Require: ?L ?z , ?, ? 1: z, ? B ? saved tensors during forward <ref type="figure" target="#fig_0">Fig. 2(d</ref> <ref type="figure" target="#fig_0">Fig. 2(e</ref> </p><formula xml:id="formula_9">2: ?L ?y ? ? backward (z, ?L ?z ) 3: y ? ? ?1 (z) 4: if INPLACE-ABN I (see</formula><formula xml:id="formula_10">)) then 5:x ? ? ?1 ?,? (y) 6: ?L ?x , ?L ?? , ?L ?? ? BN * ?,? (x, ?L ?y , ? B ) 7: else if INPLACE-ABN II (see</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Experiments</head><p>We assess the effectiveness of our proposed, memory efficient INPLACE-ABN layer for the tasks of image classification and semantic segmentation in ? 4.1 and 4.2, respectively. Additionally, we provide timing analyses in ? 4.3. Experiments were run and timed on machines comprising four NVIDIA Titan Xp cards (with 12GB of RAM each). Where not otherwise noted, the activation function used in all experiments is LEAKY RELU with slope a = 0.01.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Image Classification</head><p>We have trained several residual-unit-based models on ImageNet-1k <ref type="bibr" target="#b25">[26]</ref> to demonstrate the effectiveness of INPLACE-ABN for the task of image classification. In particular, we focus our attention on two main questions: i) whether using an invertible activation function (i.e. LEAKY RELU in our experiments) impacts on the performance of the models, and ii) how the memory savings obtained with our method can be exploited to improve classification accuracy. Our results are summarized in <ref type="table">Table 2</ref> and described in this subsection.</p><p>ResNeXt-101/ResNeXt-152. This is a variant of the original ResNet <ref type="bibr" target="#b10">[11]</ref> architecture in which the bottleneck residual units are replaced with a multi-branch version. In practice, this equates to "grouping" the 3 ? 3 convolutions of each residual unit. The number of groups, i.e. parallel branches, is known as cardinality and is an additional hyperparameter to be set. We follow the best performing design guidelines described in <ref type="bibr" target="#b31">[32]</ref> and train models with cardinality 64, while considering the 101-and 152-layers configurations. During training, we proportionally scale input images so that their smallest side equals 256 pixels, before randomly taking 224 ? 224 crops. Additionally, we perform per-channel mean and variance normalization and color augmentation as described in <ref type="bibr" target="#b31">[32]</ref>. We train using stochastic gradient descent (SGD) with Nesterov updates, initial learning rate 0.1, weight decay 10 ?4 and momentum 0.9. The training is run for a total of 90 epochs, reducing the learning rate every 30 epochs by a factor 10.</p><p>WideResNet-38. This is another modern architecture built by stacking residual units. Compared to the original ResNet, WideResNet trades depth for width, i.e. it uses units with an increased number of feature channels while reducing the total number of stacked units. For training, we use the same setup and hyperparameters as for ResNeXt, with one exception: following <ref type="bibr" target="#b30">[31]</ref> we train for 90 epochs, linearly decreasing the learning rate from 0.1 to 10 ?6 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Discussion of results.</head><p>In our experiments we also compared the validation accuracy obtained when replacing RELU with LEAKY RELU in a ResNeXt-101 trained with RELU. We also considered the opposite case, replacing LEAKY RELU with RELU in a LEAKY RELU-trained network (see <ref type="table">Table 1</ref>). Our results are in line with <ref type="bibr" target="#b32">[33]</ref>, and never differ by more than a single point per training except for the 320 2 center crop evaluation top-1 results, probably also due to non-deterministic training behaviour.</p><p>Our results may slightly differ from what was reported in the original papers, as our training protocol does not exactly match the one in <ref type="bibr" target="#b31">[32]</ref> (e.g. data augmentation regarding scale and aspect ratio settings, learning rate schedule, etc.) or due to changes in reference implementations. <ref type="bibr" target="#b4">5</ref> Next, we focus on how to better exploit the memory savings due to our proposed INPLACE-ABN for improving classification accuracy. As a baseline, we train ResNeXt-101 with standard Batch Normalization and the maximum batch size that fits in GPU memory, i.e. 256 images per batch. Then, we consider two different options: i) using the extra memory to fit more images per training batch while fixing the network architecture, or ii) fixing the batch size while training a larger network. For option i) we double the batch size to 512 (ResNeXt-101, INPLACE-ABN, 512 in <ref type="table">Table 2</ref>), while for option ii) we train ResNeXt-152 and WideResNet-38. Note that neither ResNeXt-152 nor WideResNet-38 would fit in memory when using 256 images per training batch and when using standard BN. As it is clear from the table, both i) and ii) result in a noticeable performance increase. Interestingly, training ResNeXt-101 with an increased batch size results in similar accuracy to the deeper (and computationally more expensive) ResNeXt-152 model. As an additional reference, we train ResNeXt-101 with synchronized Batch Normalization (INPLACE-ABN sync ), which can be seen as a "virtual" increase of batch size applied to the computation of BN statistics. In this case we only observe small accuracy improvements when compared to the baseline model. For the future, we plan to conduct further experiments with deeper variants of DenseNet <ref type="bibr" target="#b13">[14]</ref>, and investigate effects of INPLACE-ABN on Squeeze &amp; Excitation networks <ref type="bibr" target="#b12">[13]</ref> or deformable convolutional networks <ref type="bibr" target="#b6">[7]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Semantic Segmentation</head><p>The goal of semantic segmentation is to assign categorical labels to each pixel in an image. State-of-the-art segmentations are typically obtained by combining classification models pretrained on ImageNet (typically referred to as body) with segmentation-specific head architectures and jointly fine-tuning them on suitable, (densely) annotated training data like Cityscapes <ref type="bibr" target="#b4">[5]</ref>, COCO-Stuff <ref type="bibr" target="#b0">[1]</ref>, ADE20K <ref type="bibr" target="#b36">[37]</ref> or Mapillary Vistas <ref type="bibr" target="#b22">[23]</ref>.</p><p>Datasets used for Evaluation. We report results on Cityscapes <ref type="bibr" target="#b4">[5]</ref>, COCO-Stuff <ref type="bibr" target="#b0">[1]</ref> and Mapillary Vistas <ref type="bibr" target="#b22">[23]</ref>, since these datasets have complementary properties in terms of image content, size, number of class labels and annotation quality. Cityscapes shows street-level images captured in central Europe and comprises a total of 5k densely annotated images (19 object categories + 1 void class, all images sized 2048?1024), split into 2975/500/1525 images for training, validation and test, respectively. While there exist additional 20k images with so-called coarse annotations, we learn only from the high-quality (fine) annotations in the training set and test on the corresponding validation set (for which ground truth is publicly available). We also show results on COCO-Stuff, which provides stuff -class annotations for the well-known MS COCO dataset <ref type="bibr" target="#b18">[19]</ref>. This dataset comprises 65k COCO images (with 40k for training, 5k for validation, 5k for test-dev and 15k as challenge test set) with annotations for 91 stuff classes and 1 void class. Images are smaller than in Cityscapes and with varying sizes, and the provided semantic annotations are based on superpixel segmentations, consequently suffering from considerable mislabelings. Finally, we also report results on Mapillary Vistas (research edition), a novel and large-scale street-level image dataset comprising 25k densely annotation images (65 object categories + 1 void class, images have varying aspect ratios and sizes up to 22 Megapixel), split into 18k/2k/5k images for training, validation and test, respectively. Similar to the aforementioned datasets, we train on training data and test on validation data.</p><p>Segmentation approach. We chose to adopt the recently introduced DeepLabV3 [3] segmentation approach as head, and evaluate its performance with body networks from ? 4.1. DeepLabV3 is exploiting atrous (dilated) convolutions in a cascaded way for capturing contextual information, together with crop-level features encoding global context (close in spirit to PSPNet's <ref type="bibr" target="#b35">[36]</ref> global feature). We follow the parameter choices suggested in <ref type="bibr" target="#b2">[3]</ref>, assembling the head as 4 parallel CONV blocks with 256 output channels each and dilation rates (1, 12, 24, 36) (with x8 downsampled crop sizes from the body) and kernel sizes (1 2 , 3 2 , 3 2 , 3 2 ), respectively. The global 1 ? 1 features are computed in a channel-specific way and CONVed into 256 additional channels. Each output block is followed by BatchNorm before all 1280 features are stacked and reduced by another CONV+BN+ACT block (into 256 features) and finally CONVed to the number of target classes. We exploit our proposed INPLACE-ABN strategy also in the head architecture. Finally, we apply bilinear upsampling to the logits to obtain the original input crop resolution before computing the loss using an online bootstrapping strategy as described in <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b29">30]</ref> (setting p = 1.0 and m = 25%). We did not apply hybrid dilated convolutions <ref type="bibr" target="#b28">[29]</ref> nor added an auxiliary loss as proposed in <ref type="bibr" target="#b35">[36]</ref>. Training data is sampled in a uniform way (by shuffling the database in each epoch) and all Cityscapes experiments are run for 360 epochs using an initial learning rate of 2.5 ? 10 ?3 and polynomial learning rate decay (1 ? iter max_iter ) 0.9 , following <ref type="bibr" target="#b2">[3]</ref>. COCO-Stuff experiments were trained only for 30 epochs, which however approximately matches the number of iterations on Cityscapes due to the considerably larger dataset size. For optimization, we use stochastic gradient descent with momentum 0.9 and weight decay 10 ?4 . For training data augmentation, we apply random horizontal flipping (with prob. 0.5) and random scaling selected from 0.7 -2.0 before cropping the actual patches. <ref type="table" target="#tab_2">Table 3</ref>, we provide results on validation data for Cityscapes and COCO-Stuff under different BN layer configurations. We distinguish between standard BN layers <ref type="bibr" target="#b16">[17]</ref> (coined STD-BN) and our proposed variants using in-place, activated BN (INPLACE-ABN) as well as its gradient-synchronized version INPLACE-ABN sync . All experiments are based on LEAKY RELU activations. Trainings were conducted in a way to maximize GPU memory utilization by i) fixing the training crop size and therefore pushing the amount of crops per minibatch to the limit (denoted as FIXED CROP) or ii) fixing the number of crops per minibatch and maximizing the training crop resolutions (FIXED BATCH). Experiments are conducted for ResNeXt-101 and WideResNet-38 network bodies, where the latter seems preferable for segmentation tasks. Both body networks were solely trained on ImageNet-1k. All results derive from single-scale testing without horizontal image flipping, deliberately avoiding dilution of results by well-known bells and whistles. <ref type="table" target="#tab_2">Table 3</ref> shows the positive effects of applying more training data (in terms of both, #training crops per minibatch and input crop resolutions) on the validation results. The increase of data (w.r.t. pixels/minibatch) we can put in GPU memory, relative to the baseline (top row) is reported in square brackets. We observe that higher input resolution is in general even more beneficial than adding more crops to the batch. For the sake of direct comparability we left the learning rates unchanged, but there might be better hyper-parameters for our variants of INPLACE-ABN and INPLACE-ABN sync . In essence, our results closely approach reported numbers for Cityscapes in e.g. <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b35">36]</ref>, which however include more training data in the body model training or are based on already trained models like DeepLabV2 <ref type="bibr" target="#b1">[2]</ref>. For COCO-Stuff, results are not directly comparable to the original publication <ref type="bibr" target="#b0">[1]</ref> since they used a lower-performing VGG-16 <ref type="bibr" target="#b26">[27]</ref> network for the body. However, all experiments show significant improvements w.r.t. the baseline method in the first line of  Optimizing Settings for Cityscapes and Vistas Datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Discussion of Results. In</head><p>Here we show further experiments when tuning settings like #training crops and crop sizes in favor of our method (as opposed to maintaining comparability with baselines above). First, we report Cityscapes results in <ref type="table" target="#tab_5">Table 4</ref>   <ref type="table" target="#tab_2">Table 3</ref> (INPLACE-ABN with 20 crops at 640 ? 640). We also list a non-gradient synchronized experiment (as this gave the highest score on Cityscapes before), where an increase of the crop size yields to minor improvements, climbing from 78.31% to 78.45%.</p><p>Finally, we have run another experiment with 12 crops at 872 ? 872 where we however used a different training data sampling strategy. Instead of just randomly perturbing the dataset and taking training crops from random positions, we compiled the minibatches per epoch in a way to show all classes approximately uniformly (thus following an oversampling strategy for underrepresented categories). In practice, we tracked object class presence for all images and eventually class-uniformly sampled from eligible image candidates, making sure to take training crops from areas containing the class of interest. Applying this sampling strategy coined CLASS-UNIFORM SAM-PLING yields 79.40%, which matches the highest reported score on Cityscapes validation data reported in <ref type="bibr" target="#b7">[8]</ref>, without however using additional training data. Next, we provide results for the Mapillary Vistas dataset, using hyperparameter settings inspired by our highest scoring configuration for Cityscapes. Vistas is considerably larger than Cityscapes (in terms of #classes, #images and image resolution), so running an exhaustive amount of experiments is prohibitive in terms of training time. Due to the increase of object classes (19 for Cityscapes and 65 for Vistas), we used minibatches of 12 crops at 776 ? 776 (with INPLACE-ABN sync ), increased the initial learning rate to 3.5 ? 10 ?3 and trained for 90 epochs. This setting leads to the highest reported single-scale score of 53.12% on validation data so far, significantly outperforming the LSUN 2017 segmentation winner's single-scale approach <ref type="bibr" target="#b34">[35]</ref> of 51.59%. As also listed in <ref type="table" target="#tab_5">Table 4</ref>, their approach additionally used hybrid dilated convolutions <ref type="bibr" target="#b28">[29]</ref>, applied an inverse frequency weighting for correcting training data class imbalance as well as pretrained on Cityscapes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Timing analyses</head><p>Besides the discussed memory improvements and their impact on computer vision applications, we also provide actual runtime comparisons and analyses for the INPLACE-ABN I setting shown in 2(d), as this is the implementation we made publicly available <ref type="bibr" target="#b5">6</ref> . Isolating a single BN+ACT+CONV block, we evaluate the computational times required for a forward and backward pass over it ( <ref type="figure">Figure 4)</ref>. We compare the conventional approach of serially executing layers and storing intermediate results (STANDARD), our proposed INPLACE-ABN I and the CHECKPOINTING approach. In order to obtain fair timing <ref type="bibr" target="#b5">6</ref>  comparisons, we re-implemented the checkpointing idea in PyTorch. The results are obtained by running all operations over a batch comprising 32-images and setting the meta-parameters (number of feature channels, spatial dimensions) to those encountered in the four modules of ResNeXt-101, denoted as CONV1-CONV4. The actual runtimes were averaged over 200 iterations. We observe consistent speed advantages in favor of our method when comparing against CHECKPOINTING, with the actual percentage difference depending on block's metaparameters. As we can see, INPLACE-ABN induces computation time increase between 0.8 ? 2% over STANDARD while CHECKPOINTING is almost doubling our overheads.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Conclusions</head><p>In this work we have presented INPLACE-ABN, which is a novel, computationally efficient fusion of batch normalization and activation layers, targeting memoryoptimization for modern deep neural networks during training time. We reconstruct necessary quantities for the backward pass by inverting the forward computation from the storage buffer, and manage to free up almost 50% of the memory needed in conventional BN+ACT implementations at little additional computational costs. In contrast to stateof-the-art checkpointing attempts, our method is reconstructing discarded buffers backwards during the backward pass, thus allowing us to encapsulate BN+ACT as selfcontained layer, which is easy to implement and deploy in virtually all modern deep learning frameworks. We have validated our approach with experiments for image classification on ImageNet-1k and semantic segmentation on Cityscapes, COCO-Stuff and Mapillary Vistas. Our obtained networks have performed consistently and considerably better when trained with larger batch sizes (or training crop sizes), leading to a new high-score on the challenging Mapillary Vistas dataset in a single-scale, single-model inference setting. In future works, we will investigate the consequences of our approach for problems like object detection, instance-specific segmentation and learning in 3D. Derivations for gradient computation are provided in the Appendix. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>?L</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 .</head><label>2</label><figDesc>(a) Standard building block (memory-inefficient) (b) Checkpointing<ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b20">21]</ref> (c) Checkpointing (proposed version) (d) In-Place Activated Batch Normalization I (proposed method) (e) In-Place Activated Batch Normalization II (proposed method) Comparison of standard BN, state-of-the-art checkpointing from<ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b20">21]</ref> and our proposed methods. See ? 3.2 for a detailed description.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 .</head><label>3</label><figDesc>LEAKY RELU with slope a (left) and its inverse (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Algorithm 1</head><label>1</label><figDesc>INPLACE-ABN Forward Require: x, ?, ? 1: y, ? B ? BN ?,? (x) 2: z ? ?(y) 3: save for backward z, ? B 4: return z in Figure 2(e) and as outlined in ? 3.2. The gradient ?L ?x when written as a function of y instead ofx becomes</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>(b) and INPLACE-ABN II is computationally even more efficient than the proposed, optimized checkpointing from Figure 2(c).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .Table 2 .</head><label>12</label><figDesc>93.86 79.21 94.67 79.17 94.67 ResNeXt-101 RELU LEAKY RELU 76.88 93.42 78.74 94.46 78.37 94.25 ResNeXt-101 LEAKY RELU LEAKY RELU 77.04 93.50 78.72 94.47 77.92 94.28 ResNeXt-101 LEAKY RELU RELU 76.81 93.53 78.46 94.38 77.84 94.20 Imagenet validation set results using ResNeXt-101 and RELU/LEAKY RELU exchanged activation functions during training and validation. Imagenet validation set results using different architectures and training batch sizes.</figDesc><table><row><cell>Network</cell><cell>activation</cell><cell></cell><cell>224 2 center</cell><cell>224 2 10-crops</cell><cell>320 2 center</cell></row><row><cell>training</cell><cell cols="2">validation</cell><cell cols="3">top-1 top-5 top-1 top-5 top-1 top-5</cell></row><row><cell cols="4">ResNeXt-101 77.74 Network RELU RELU 224 2 center</cell><cell>224 2 10-crops</cell><cell>320 2 center</cell></row><row><cell></cell><cell></cell><cell cols="4">batch size top-1 top-5 top-1 top-5 top-1 top-5</cell></row><row><cell>ResNeXt-101, STD-BN</cell><cell></cell><cell>256</cell><cell cols="3">77.04 93.50 78.72 94.47 77.92 94.28</cell></row><row><cell cols="2">ResNeXt-101, INPLACE-ABN</cell><cell>512</cell><cell cols="3">78.08 93.79 79.52 94.66 79.38 94.67</cell></row><row><cell cols="2">ResNeXt-152, INPLACE-ABN</cell><cell>256</cell><cell cols="3">78.28 94.04 79.73 94.82 79.56 94.67</cell></row><row><cell cols="2">WideResNet-38, INPLACE-ABN</cell><cell>256</cell><cell cols="3">79.72 94.78 81.03 95.43 80.69 95.27</cell></row><row><cell cols="2">ResNeXt-101, INPLACE-ABN sync</cell><cell>256</cell><cell cols="3">77.70 93.78 79.18 94.60 78.98 94.56</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 .</head><label>3</label><figDesc>BN + LEAKY RELU 16 ? 512 2 74.42 16 ? 480 2 20.30 20 ? 512 2 75.82 20 ? 496 2 22.44 INPLACE-ABN, FIXED CROP 28 ? 512 2 [+75%] 75.80 24 ? 480 2 [+50%] 22.63 28 ? 512 2 [+40%] 77.75 28 ? 496 2 [+40%] 22.96 INPLACE-ABN, FIXED BATCH 16 ? 672 2 [+72%] 77.04 16 ? 600 2 [+56%] 23.35 20 ? 640 2 [+56%] 78.31 20 ? 576 2 [+35%] 24.10 INPLACE-ABN sync , FIXED BATCH 16 ? 672 2 [+72%] 77.58 16 ? 600 2 [+56%] 24.91 20 ? 640 2 [+56%] 78.06 20 ? 576 2 [+35%]25.11    </figDesc><table><row><cell>BATCHNORM</cell><cell>ResNeXt-101</cell><cell cols="2">WideResNet-38</cell></row><row><cell>Cityscapes</cell><cell>COCO-Stuff</cell><cell>Cityscapes</cell><cell>COCO-Stuff</cell></row><row><cell>STD-</cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 .</head><label>3</label><figDesc>Validation data results (single scale test) for semantic segmentation experiments on Cityscapes and COCO-Stuff, using ResNeXt-101 and WideResNet-38 network bodies and different batch normalization settings (see text). All result numbers in [%].</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>ABN sync ). Going deeper with the body results in a validation set score of 78.49%, improving over the score of 77.58% obtained by ResNeXt-101, INPLACE-ABN sync . We provide additional results using WideResNet-38 INPLACE-ABN sync -based settings, where we trained the model with i) 16 crops at 712 ? 712 yielding 79.02% and ii) 12 crops at 872 ? 872, resulting in 79.16%. As can be seen, the combination of INPLACE-ABN sync with larger crop sizes improves by ? 0.9% over the best performing setting in</figDesc><table><row><cell>when</cell></row><row><cell>fine-tuning our INPLACE-ABN ResNeXt-152 ImageNet</cell></row><row><cell>model from  ? 4.1, using 12 crops of size 680?680 per mini-</cell></row><row><cell>batch (using the gradient-synchronized variant INPLACE-</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 4 .</head><label>4</label><figDesc>https://github.com/mapillary/inplace_abn Validation data results (single scale test, no horizontal flipping) for semantic segmentation experiments on Cityscapes and Vistas, using ResNeXt-152 and WideResNet-38 bodies with different settings for #crops per minibatch and crop sizes. All results in [%].</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell cols="7">BN+Act+Conv forward and backward</cell></row><row><cell>Batch time (ms)</cell><cell>40 50</cell><cell>0%</cell><cell>1.8%</cell><cell>4%</cell><cell>0%</cell><cell>2%</cell><cell>3.7%</cell><cell></cell><cell>Standard InPlace-ABN I 0% 0.8% 1.2% Checkpointing</cell></row><row><cell></cell><cell>30</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>0%</cell><cell>1.6%</cell><cell>3.1%</cell></row><row><cell></cell><cell></cell><cell cols="3">Conv1</cell><cell cols="3">Conv2</cell><cell cols="2">Conv3</cell><cell>Conv4</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="5">ResNeXt-101 modules</cell></row><row><cell cols="10">Figure 4. Computation time required for a forward and</cell></row><row><cell cols="10">backward pass through basic BN+ACT+CONV blocks from</cell></row><row><cell cols="10">ResNeXt-101, using different BN strategies.</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head></head><label></label><figDesc>For INPLACE-ABN II, we write gradients ?L ?? and ?L ?x as functions of y instead ofx in the following way:</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">?x j ?? 2 B</cell><cell cols="4">= ?</cell><cell cols="6">1 2(? 2 B + )</cell><cell cols="6">x j ? ? B ? 2 B +</cell><cell cols="4">= ?x 2(? 2 B + ) j</cell><cell>,</cell><cell>?x j ?? B</cell><cell>= ?</cell><cell>1 ? 2 B +</cell><cell>,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="3">?L ?? 2 B</cell><cell>=</cell><cell></cell><cell cols="2">m j=1</cell><cell cols="3">?L ?x j</cell><cell cols="3">?x j ?? 2 B</cell><cell cols="3">= ?</cell><cell>? 2(? 2 B + )</cell><cell>m j=1</cell><cell>?L ?y jx</cell><cell>j = ?</cell><cell>? 2(? 2 B + )</cell><cell>?L ??</cell><cell>,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="3">?L ?? B</cell><cell>=</cell><cell></cell><cell cols="2">m j=1</cell><cell cols="3">?L ?x j</cell><cell cols="3">?x j ?? B</cell><cell cols="4">= ?</cell><cell>? ? 2 B +</cell><cell>m j=1</cell><cell>?L ?y j</cell><cell>= ?</cell><cell>? ? 2 B +</cell><cell>?L ??</cell><cell>,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">?? 2 B ?x i</cell><cell cols="2">=</cell><cell cols="7">2(x i ? ? B ) m</cell><cell>,</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>?? B ?x i</cell><cell>=</cell><cell>1 m</cell><cell>,</cell><cell>?x i ?x i</cell><cell>=</cell><cell>1 ? 2 B +</cell><cell>,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">?L ?x i</cell><cell cols="2">=</cell><cell></cell><cell cols="2">?L ?x i</cell><cell cols="2">?x i ?x i</cell><cell></cell><cell>+</cell><cell cols="3">?L ?? 2 B</cell><cell cols="3">?? 2 B ?x i</cell><cell></cell><cell>+</cell><cell></cell><cell cols="2">?L ?? B</cell><cell>?? B ?x i</cell><cell>=</cell><cell>?L ?y i</cell><cell>?</cell><cell>1 m</cell><cell>?L ??x i ?</cell><cell>1 m</cell><cell>?L ??</cell><cell>? ? 2 B +</cell><cell>.</cell></row><row><cell></cell><cell></cell><cell>?L ??</cell><cell cols="2">=</cell><cell cols="2">m j=1</cell><cell cols="4">?L ?y jx</cell><cell cols="2">j =</cell><cell cols="2">m j=1</cell><cell cols="3">?L ?y j</cell><cell cols="5">y j ? ? ?</cell><cell></cell><cell>=</cell><cell>1 ?</cell><cell>m j=1</cell><cell>?L ?y j</cell><cell>y j ?</cell><cell>? ?</cell><cell>m j=1</cell><cell>?L ?y j</cell><cell>=</cell><cell>1 ?</cell><cell>? ?</cell><cell>m j=1</cell><cell>?L ?y j</cell><cell>y j ? ?</cell><cell>?L ??</cell><cell>? ? ,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="3">?L ?x i</cell><cell>=</cell><cell></cell><cell></cell><cell cols="3">?L ?y i</cell><cell>?</cell><cell cols="2">1 m</cell><cell cols="3">?L ??x</cell><cell>i ?</cell><cell>1 m</cell><cell>?L ??</cell><cell>? ? 2 B +</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>=</cell><cell></cell><cell></cell><cell cols="3">?L ?y i</cell><cell>?</cell><cell cols="2">1 m</cell><cell cols="2">?L ??</cell><cell>y i ? ? ?</cell><cell>?</cell><cell>1 m</cell><cell>?L ??</cell><cell>? ? 2 B +</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>=</cell><cell></cell><cell></cell><cell cols="2">?L ?y i</cell><cell></cell><cell>?</cell><cell cols="3">1 ?m</cell><cell cols="2">?L ??</cell><cell>y i ?</cell><cell>1 m</cell><cell>?L ??</cell><cell>?</cell><cell>? ?</cell><cell>?L ??</cell><cell>? ? 2 B +</cell><cell>.</cell></row><row><cell>??</cell><cell>=</cell><cell cols="2">m j=1</cell><cell cols="2">?L ?y j</cell><cell cols="3">?y j ??</cell><cell cols="2">=</cell><cell cols="2">m j=1</cell><cell cols="4">?L ?y jx</cell><cell>j ,</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="3">?L ??</cell><cell>=</cell><cell>m j=1</cell><cell>?L ?y j</cell><cell>?y j ??</cell><cell>=</cell><cell>m j=1</cell><cell>?L ?y j</cell><cell>,</cell><cell>?L ?x j</cell><cell>=</cell><cell>?L ?y j</cell><cell>?y j ?x j</cell><cell>=</cell><cell>?L ?y j</cell><cell>? ,</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">https://developer.nvidia.com 2 https://developer.nvidia.com/tensorrt</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">Having the convolution at the end of the block is not strictly necessary, but supports comprehension.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">This solution can technically still be considered as a form of checkpointing, but instead of recovering information forwards as in<ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b20">21]</ref>, we recover it backwards, thus bearing a similarity to reversible nets<ref type="bibr" target="#b8">[9]</ref>.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5">See note in https://github.com/itijyou/ademxapp mentioning subtle differences in implementation, e.g., different cropping strategies, interpolation methods, and padding strategies.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgements. We acknowledge financial support from project DIGIMAP, funded under grant #860375 by the Austrian Research Promotion Agency (FFG).</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Appendix -Derivation of Gradient ?L ?x</head><p>We follow the gradient derivations as provided in the original batch normalization paper <ref type="bibr" target="#b16">[17]</ref> and rewrite them as a function ofx, starting with generally required derivatives for INPLACE-ABN and particular ones of INPLACE-ABN I. ?y j ?? =x j , ?y j ?? = 1 , ?y j ?x j = ? ,</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">COCO-Stuff: Thing and stuff classes in context</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Caesar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R R</forename><surname>Uijlings</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Ferrari</surname></persName>
		</author>
		<idno>abs/1612.03716</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Deeplab: Semantic image segmentation with deep convolutional nets, atrous convolution, and fully connected CRFs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Papandreou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Kokkinos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Murphy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">L</forename><surname>Yuille</surname></persName>
		</author>
		<idno>abs/1606.00915</idno>
		<imprint>
			<date type="published" when="2016" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Rethinking atrous convolution for semantic image segmentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Papandreou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Schroff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Adam</surname></persName>
		</author>
		<idno>abs/1706.05587</idno>
		<imprint>
			<date type="published" when="2017" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Training deep nets with sublinear memory cost</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Guestrin</surname></persName>
		</author>
		<idno>abs/1604.06174</idno>
		<imprint>
			<date type="published" when="2016" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">The Cityscapes dataset for semantic urban scene understanding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cordts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Omran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ramos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Rehfeld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Enzweiler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Benenson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Schiele</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Binaryconnect: Training deep neural networks with binary weights during propagations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Courbariaux</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-P</forename><surname>David</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Qi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Xiong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wei</surname></persName>
		</author>
		<idno>abs/1703.06211</idno>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Semantic video cnns through representation warping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gadde</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Jampani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">V</forename><surname>Gehler</surname></persName>
		</author>
		<idno>abs/1708.03088</idno>
		<imprint>
			<date type="published" when="2017" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The reversible residual network: Backpropagation without storing activations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">N</forename><surname>Gomez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Urtasun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Grosse</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
		<imprint>
			<date type="published" when="2017-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Memory-efficient backpropagation through time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gruslys</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Munos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Danihelka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lanctot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Graves</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Deep residual learning for image recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<idno>abs/1512.03385</idno>
		<imprint>
			<date type="published" when="2015" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Identity mappings in deep residual networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<idno>abs/1603.05027</idno>
		<imprint>
			<date type="published" when="2016" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Squeeze-and-excitation networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Sun</surname></persName>
		</author>
		<idno>abs/1709.01507</idno>
		<imprint>
			<date type="published" when="2017" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Densely connected convolutional networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Van Der Maaten</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">Q</forename><surname>Weinberger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2017-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Hubara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Courbariaux</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Soudry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>El-Yaniv</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<title level="m">Binarized neural networks. In (NIPS)</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Quantized neural networks: Training neural networks with low precision weights and activations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Hubara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Courbariaux</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Soudry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>El-Yaniv</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<idno>abs/1609.07061</idno>
		<imprint>
			<date type="published" when="2016" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Batch normalization: Accelerating deep network training by reducing internal covariate shift</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ioffe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Szegedy</surname></persName>
		</author>
		<idno>abs/1502.03167</idno>
		<imprint>
			<date type="published" when="2015" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Shelhamer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Donahue</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Karayev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Long</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Girshick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Guadarrama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Darrell</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1408.5093</idno>
		<title level="m">Caffe: Convolutional architecture for fast feature embedding</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Maire</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Belongie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">D</forename><surname>Bourdev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Girshick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hays</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Perona</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ramanan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Doll?r</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Zitnick</surname></persName>
		</author>
		<idno>abs/1405.0312</idno>
		<title level="m">Microsoft COCO: Common objects in context. CoRR</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Rectifier nonlinearities improve neural network acoustic models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">L</forename><surname>Maas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">Y</forename><surname>Hannun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">Y</forename><surname>Ng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML Workshop on Deep Learning for Audio, Speech and Language Processing</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Training Deep and Recurrent Networks with Hessian-Free Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Martens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<imprint>
			<biblScope unit="page" from="479" to="535" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Micikevicius</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Narang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Alben</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">F</forename><surname>Diamos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Elsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Garcia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Ginsburg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Houston</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Kuchaiev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Venkatesh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note>Mixed precision training. CoRR, abs/1710.03740</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">The mapillary vistas dataset for semantic understanding of street scenes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Neuhold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ollmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">Rota</forename><surname>Bul?</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Kontschieder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCV</title>
		<imprint>
			<date type="published" when="2017-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Memory-efficient implementation of densenets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Pleiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Van Der Maaten</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">Q</forename><surname>Weinberger</surname></persName>
		</author>
		<idno>abs/1707.06990</idno>
		<imprint>
			<date type="published" when="2017" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Loss maxpooling for semantic image segmentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bul?</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Neuhold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Kontschieder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2017-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Russakovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Krause</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Satheesh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Karphathy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Khosla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bernstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">C</forename><surname>Berg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Fei-Fei</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note>Imagenet large scale visual recognition challenge. (IJCV</note>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Very deep convolutional networks for large-scale image recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Simonyan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zisserman</surname></persName>
		</author>
		<idno>abs/1409.1556</idno>
		<imprint>
			<date type="published" when="2014" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Inception-v4, inception-resnet and the impact of residual connections on learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Szegedy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ioffe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Vanhoucke</surname></persName>
		</author>
		<idno>abs/1602.07261</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Understanding convolution for semantic segmentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Hou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">W</forename><surname>Cottrell</surname></persName>
		</author>
		<idno>abs/1702.08502</idno>
		<imprint>
			<date type="published" when="2017" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">High-performance semantic segmentation using very deep fully convolutional networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Den</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hengel</surname></persName>
		</author>
		<idno>abs/1604.04339</idno>
		<imprint>
			<date type="published" when="2016" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Wider or deeper: Revisiting the resnet model for visual recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Den</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hengel</surname></persName>
		</author>
		<idno>abs/1611.10080</idno>
		<imprint>
			<date type="published" when="2016" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Aggregated residual transformations for deep neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Girshick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Doll?r</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Tu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>He</surname></persName>
		</author>
		<idno>abs/1611.05431</idno>
		<imprint>
			<date type="published" when="2016" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Empirical evaluation of rectified activations in convolutional network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Li</surname></persName>
		</author>
		<idno>abs/1505.00853</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Zagoruyko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Komodakis</surname></persName>
		</author>
		<title level="m">Wide residual networks. In (BMVC)</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">LSUN2017 segmentation challenge winning team PSPNet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Pyramid scene parsing network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Qi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jia</surname></persName>
		</author>
		<idno>abs/1612.01105</idno>
		<imprint>
			<date type="published" when="2016" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">Semantic understanding of scenes through the ADE20K dataset</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Puig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Fidler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Barriuso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Torralba</surname></persName>
		</author>
		<idno>abs/1608.05442</idno>
		<imprint>
			<date type="published" when="2016" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
