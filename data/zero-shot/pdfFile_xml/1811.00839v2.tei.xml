<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">ATP: Directed Graph Embedding with Asymmetric Transitivity Preservation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiankai</forename><surname>Sun</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bortik</forename><surname>Bandyopadhyay</surname></persName>
							<email>bandyopadhyay.14@cse.ohio-state.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Armin</forename><surname>Bashizade</surname></persName>
							<email>bashizade.1@cse.ohio-state.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiongqian</forename><surname>Liang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Sadayappan</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Srinivasan</forename><surname>Parthasarathy</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">ATP: Directed Graph Embedding with Asymmetric Transitivity Preservation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2022-11-12T11:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Directed graphs have been widely used in Community Question Answering services (CQAs) to model asymmetric relationships among different types of nodes in CQA graphs, e.g., question, answer, user. Asymmetric transitivity is an essential property of directed graphs, since it can play an important role in downstream graph inference and analysis. Question difficulty and user expertise follow the characteristic of asymmetric transitivity. Maintaining such properties, while reducing the graph to a lower dimensional vector embedding space, has been the focus of much recent research. In this paper, we tackle the challenge of directed graph embedding with asymmetric transitivity preservation and then leverage the proposed embedding method to solve a fundamental task in CQAs: how to appropriately route and assign newly posted questions to users with the suitable expertise and interest in CQAs. The technique incorporates graph hierarchy and reachability information naturally by relying on a nonlinear transformation that operates on the core reachability and implicit hierarchy within such graphs. Subsequently, the methodology levers a factorization-based approach to generate two embedding vectors for each node within the graph, to capture the asymmetric transitivity. Extensive experiments show that our framework consistently and significantly outperforms the state-of-the-art baselines on three diverse realworld tasks: link prediction, and question difficulty estimation and expert finding in online forums like Stack Exchange. Particularly, our framework can support inductive embedding learning for newly posted questions (unseen nodes during training), and therefore can properly route and assign these kinds of questions to experts in CQAs.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>Community Question Answering services (CQAs) such as Stack Exchange and Yahoo! Answers are examples of social media sites, with their usage being examples of an important type of computer supported cooperative work in practice. In recent years, the usage of CQAs has seen a dramatic increase in both the frequency of questions posted and general user activity. This, in turn, has given rise to several interesting problems ranging from expertise estimation to question difficulty estimation, and from automated question routing to incentive mechanism design on such CQAs (Fang et Copyright c 2019, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved. al. 2016; <ref type="bibr" target="#b12">Sun et al. 2018a)</ref>. Previous work <ref type="bibr" target="#b17">(Wang, Jing Liu, and Guo 2014;</ref><ref type="bibr" target="#b12">Sun et al. 2018a)</ref> proposed to assign a scalar value to represent question difficulty (and user expertise). However, question difficulty and user expertise can vary in different topics. In Stack Exchange sites, users are required to use tags (a tag is a word or phrase) to describe the topic(s) of the question 1 . Each question can be assigned multi-tags to represent its most relevant topics. For example, in our experiments, the average number of tags per question is 2.82 and 2.96 in Stack Exchange site Apple and Physics respectively. Hence a solely scalar value to represent question difficulty level or user expertise is not thorough.</p><p>Some graph embedding methods <ref type="bibr" target="#b2">(Fang et al. 2016;</ref> are then proposed to address the above limitation. The problem of graph embedding seeks to represent vertices of a graph in a low-dimensional vector space in which meaningful semantic, relational and structural information conveyed by the graph can be accurately captured ). Recently, one has seen a surge of interest in developing such methods including ones for learning such representations for directed graphs (while preserving important properties) <ref type="bibr" target="#b8">(Ou et al. 2016)</ref>, which is the focus of our research. A property of singular importance within a directed graph is asymmetric transitivity, which plays a very important role in tasks of graph inference and analysis <ref type="bibr" target="#b8">(Ou et al. 2016)</ref>. Question difficulty and user expertise follow the characteristic of asymmetric transitivity. For example, given a question q 1 is easier than q 2 and q 2 is easier than q 3 , we can infer that q 1 is easier than q 3 easily. It happens to estimating user expertise too. We can infer that u 1 has more expertise than u 3 based on the fact that u 1 has more expertise than u 2 and u 2 has more expertise than u 3 in a specific domain. In this paper, we tackle the challenge of directed graph embedding with asymmetric transitivity preservation and then leverage the proposed embedding method to solve a fundamental task in CQAs: how to appropriately route and assign newly posted questions to users with the suitable expertise and interest in CQAs.</p><p>HOPE <ref type="bibr" target="#b8">(Ou et al. 2016</ref>), one of the state-of-art directed graph embedding methods, relies on high-order proximity features (e.g. Adamic Adar (AA), Katz Index (KI), Common Neighbors (CN)) to approximate asymmetric transitivity. <ref type="figure">Figure 1</ref>: Illustration of the limitation of using high order proximities for preserving asymmetric transitivity due to the existence of cycles in the graph: the KI proximity from B to E (inner product between the source vector u s B and the target vector u t E , generated by HOPE) represented as KI(B, E) is 0.0041, which is smaller than the KI proximity from E to B (inner product between the source vector u s E and the target vector u t B ) represented as KI(E, B) = 0.0067. HOPE will predict the edge direction is from E to B, which is opposite to the real edge (B, E). A similar problem occurs with RPR too, since RP R(B, E) = 0.2129, which is smaller than RP R(E, B) = 0.2446. Due to the existence of cycles among node B, C, D, and E, CN and AA are the same for node pair (B, E) and (E, B). The AA proximity predicted by HOPE are AA(B, E) = AA(E, B) = 0.5, and CN proximity are CN (B, E) = CN (E, B) = 0. Hence neither AA or CN can make a confident prediction for the transitivity between B and E. However, with using our framework ATP, we can address above limitation. For example, ATP can predict AT P (B, E) = 1.48 and AT P (E, B) = 8.18e ?10 , which strongly indicates that the edge direction is from B to E. <ref type="bibr" target="#b24">Zhou et al. (Zhou et al. 2017</ref>) proposed a random walk based graph embedding method named as APP which can implicitly preserve the Rooted PageRank (RPR), another higherorder proximity feature, in the embedding space. However, cycles in directed graphs are very common, and these cycles can undermine the performance of embedding strategies such as HOPE and APP, and hence severely limit the capability of the learned embedding vectors in graph inference and analysis. <ref type="figure">Figure 1</ref> illustrates the limitation of using high order proximities for preserving asymmetric transitivity.</p><p>A strong hierarchical structure in the context of directed networks can help explain complex interactions in many real-world phenomena <ref type="bibr" target="#b15">(Tatti 2015)</ref>, including asymmetric transitivity. Each node can be assigned a ranking score to represent where it stands in the entire network. The relationship among nodes in such a scenario is fully transitive. For example, if a node i has a lower hierarchy than j, and j has a lower hierarchy than k, we then can infer that i must have a lower hierarchy than k. In graphs with strong hierarchical structure, edges are expected to flow from lower hierarchies to higher hierarchies <ref type="bibr" target="#b3">(Gupte et al. 2011;</ref><ref type="bibr" target="#b15">Tatti 2015)</ref>. However, when transitivity is being predicted leveraging the graph hierarchy alone, without incorporating the inherent graph reachability property, it can sometimes lead to false positive predictions. For example, a lower hierarchy node in a subgraph may not reach a higher hierar-chy node in another subgraph which has no connection with the previous subgraph. To redress such problems, one may want to explicitly account for graph reachability as discussed next.</p><p>Transitive closure (TC) of a directed graph is a methodology (usually housed in a simple data structure) that makes it possible to answer reachability questions. The TC of a graph G = (V, E) is a graph G + = (V, E + ) such that for all v, w in V there is an edge (v, w) in E + if and only if there is a non-null path from v to w in G. However, computing TC for large directed graphs with cycles is expensive, while computing TC of directed acyclic graphs (DAGs) is practical (Simon 1988). To leverage the above intuition, we propose to first remove a subset of cycle edges which violate the graph hierarchy to reduce a directed graph to a DAG and then leverage the TC of the reduced DAG to represent graph reachability. We examined several strategies for breaking cycles while preserving the graph hierarchy as much as possible <ref type="bibr" target="#b3">(Herbrich, Minka, and Graepel 2007;</ref><ref type="bibr" target="#b15">Tatti 2015)</ref>, and found an ensemble approach proposed by Jiankai et al. ) coupling some of these approaches can meet our requirements. Another benefit of breaking cycles is that the reduced DAG has a very strict hierarchy, and each vertex can be assigned a ranking score effectively and efficiently.</p><p>A key challenge now is how to incorporate graph hierarchy and reachability in a unified framework to preserve the asymmetric transitivity in the embedding space. To this end, we build an asymmetric matrix M , which is a nonlinear transformation of a diagonal matrix D and an adjacency matrix A. Here, A is the adjacency matrix of the transitive closure of the reduced DAG which implicitly contains graph reachability information, and D is a diagonal matrix storing the nodes' hierarchical ranking score along the diagonal entries of a square matrix. Then a factorization based method is applied to M to generate approximate embeddings. In our experiments, an efficient non-negative matrix factorization (NMF) <ref type="bibr" target="#b1">(Cheng et al. 2017)</ref> using Cyclic Coordinate Descent(CCD) (Nisa et al. 2017) with appropriate regularization is leveraged to generate the embedding. Two embedding vectors, source and target vector, are learned for each node to capture the asymmetric transitivity. Through the time complexity analysis of all procedures in our proposed Asymmetric Transitivity Preserving graph embedding framework (ATP), we demonstrate that ATP can be applied to large directed graphs efficiently.</p><p>We also conducted extensive experiments to verify the usefulness and generality of the learned embedding in various tasks such as link prediction, and question difficulty estimation and expert finding in online CQAs such as Stack Exchange sites. Particularly, ATP can support inductive embedding learning for newly posted questions (unseen nodes during training), and therefore can route and assign these kinds of questions to approximate experts in CQAs, which tackles a fundamental challenge in crowdsourcing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Related Works</head><p>Graph embedding approaches fall into three broad categories classified by Goyal et al. (Goyal and Ferrara 2017):</p><p>(1) Factorization based, (2) Random Walk based (Perozzi, Al-Rfou, and Skiena 2014; <ref type="bibr">Gao et al. 2018)</ref>, and (3) Deep Learning based <ref type="bibr" target="#b9">(Pan et al. 2016;</ref><ref type="bibr" target="#b2">Dong, Chawla, and Swami 2017;</ref><ref type="bibr" target="#b6">Liang et al. 2018)</ref>. Our proposed ATP is factorization based, and hence we focus on discussing about factorization based techniques in this section.</p><p>Factorization based graph embedding usually solves the graph embedding problem in two steps as follows: (1) represent the connections between nodes in the form of a matrix, and (2) factorize the matrix to get a set of node embedding <ref type="bibr" target="#b0">(Cai, Zheng, and Chang 2017;</ref><ref type="bibr" target="#b2">Goyal and Ferrara 2017)</ref>. Based on how we construct the input matrix, matrix factorization based approaches are categorized into two types: One is to factorize graph Laplacian, and the other is to directly factorize the node proximity matrix <ref type="bibr" target="#b0">(Cai, Zheng, and Chang 2017)</ref>. The node proximity is preserved by minimizing the loss during the factorizing the node proximity matrix.</p><p>It has been recently shown that many popular random walk based approaches such as DeepWalk (Perozzi, Al-Rfou, and Skiena 2014), LINE <ref type="bibr" target="#b14">(Tang et al. 2015)</ref>, and node2vec (Grover and Leskovec 2016) can be unified into the matrix factorization framework with closed forms <ref type="bibr" target="#b10">(Qiu et al. 2018</ref>). However, these methods ignore the asymmetric nature of the path sampling procedure and train the model symmetrically, which restricts their applications. Since node pairs from two hop away will be regarded as negative labels, LINE can only preserve symmetric second-order proximity when applied to directed graphs <ref type="bibr" target="#b24">(Zhou et al. 2017)</ref>.</p><p>Higher order proximity is considered by many traditional similarity measurements, and has been shown to be effective in many real world tasks. HOPE <ref type="bibr" target="#b8">(Ou et al. 2016</ref>) proposed to use high-order proximities (AA, CN, RPR, and KI) to approximate asymmetric transitivity. Theoretical analysis shows that APP implicitly preserves the RPR <ref type="bibr" target="#b24">(Zhou et al. 2017)</ref>. However cycles in directed graphs as shown in <ref type="figure">Figure 1</ref> can hurt the performance of asymmetric transitivity preserving for HOPE and APP, and hence severely limit the capability of the learned embedding vectors in graph inference and analysis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Our Framework ATP</head><p>We now describe the 4-step work-flow of ATP framework, which is illustrated in <ref type="figure">Figure-2</ref> with a toy example, and then present the computational complexity of our methodology. In the first step (Section 3.1: Breaking Cycles), an input directed graph G is reduced to a DAG G by removing a small set of cycle edges which violate the graph hierarchy. Then in the second step (Section 3.2: Inferring Graph Hierarchy), each node is assigned a ranking score efficiently based on the hierarchical structure of G . The third step (Section 3.3: Incorporating Hierarchy and Reachability) involves the construction of the proposed novel objective matrix M to incorporate both graph hierarchy and reachability information. Nodes' hierarchical information can be represented using a diagonal matrix D, while the transitive closure of G is represented by A. These two matrices (A and D) are used to build the matrix M using a non-linear transformation which can preserve hierarchical rankings between local nodes much better than an ordinary linear model. The final step (Section 3.4: Generating Asymmetric Transitivity Preserving Graph Embedding from M ) involves the efficient application of NMF on M to produce two matrices S and T , which can be interpreted as asymmetric transitivity preserving source vectors and target vectors of all the nodes in the graph.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Breaking Cycles</head><p>Reducing a directed graph G = (V, E) to a DAG G = (V, E ) has two obvious advantages: 1) making it possible for us to compute the transitive closure of G ; 2) inferring the hierarchy of G becomes easier, since a DAG has a very strict hierarchy.</p><p>We examined several strategies for breaking cycles while preserving the graph hierarchy as much as possible, and found an ensemble approach H Voting proposed by Jiankai et al.  can meet our requirements. H Voting selects the edge with the highest voting score for removal in a fast, scalable, and fully automated way. The voting score of each edge is determined by the severity of their violation, which means that edges that respect the hierarchy receive a score of 0 and score increase linearly as the hierarchy violation becomes more severe. The corresponding hierarchy is inferred by ensembling TrueSkill <ref type="bibr" target="#b3">(Herbrich, Minka, and Graepel 2007)</ref> and Social Agony <ref type="bibr" target="#b3">(Gupte et al. 2011;</ref><ref type="bibr" target="#b15">Tatti 2015)</ref>. <ref type="figure">Figure 1</ref> illustrates that edges (C,B), (D,B), (E,C) and (E,D) are removed by H Voting to break cycles. Empirically, it has been shown that H Voting, can accurately identify the edges to be removed, even in noisy and large-scale real-world graphs. The time complexity of breaking cycles is O(E 2 ) in the worst case, which happens in directed complete graphs 2 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Inferring Graph Hierarchy</head><p>Given that the graph has been converted to a DAG using the previous step, graph hierarchy can be inferred based on this reduced DAG. Given a graph G = (V, E), inferring graph hierarchy means that we have to construct a function r : V ? Z, which maps each vertex to an integer, representing corresponding vertex's hierarchy in G. The computed graph hierarchy is fully transitive and can be used to infer the asymmetric transitivity in G. One straightforward way to compute a ranking score for each vertex is to use topological sorting. However, topological sorting is non-deterministic. Hence we modify topological sorting algorithm by assigning a ranking score to each vertex in a DAG recursively following the steps below:</p><p>Step 1) assign the current ranking score o 3 to all nodes with zero in-degree;</p><p>Step 2) update the target graph by removing all zero in-degree nodes and their corresponding out-going edges;</p><p>Step 3) update the current ranking score o by increasing 1. <ref type="figure">Figure 1</ref> shows each node's ranking score inferred by the above procedures. For example, node A's in-degree in <ref type="figure">Figure 2</ref>: Illustration of Asymmetric Transitivity Preserving (ATP) graph embedding framework the reduced DAG is 0 while its hierarchy is represented as r(A) = 1. The time complexity of above procedure is the same as topological sorting, which is O(|V | + |E|).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Incorporating Hierarchy and Reachability</head><p>The hierarchical ranking score inferred by the methodology in Section 3.2 reflects where a node stands in the entire network, and it is fully transitive. However, the sole assumption that edges are from lower to higher hierarchy nodes fails to incorporate the inherent graph reachability property, and hence is prone to generating many false positive predictions during down-stream analysis tasks (eg: link prediction using the generated node embeddings). Thus the key challenge is to combine both graph hierarchy and reachability inside a unified framework, which we discuss next.</p><p>TC can be thought of as constructing a data structure that makes it possible to answer reachability questions. Instead of computing TC of the original directed graph G, we compute the TC of the reduced DAG G and represent it as its adjacency matrix A ? R |V |?|V | . If node i can reach j in G , then the corresponding element A i,j = 1, otherwise A i,j = 0. A contains the information of graph reachability, but it treats the hierarchical difference between any reachable node pairs the same (equal to 1). To emphasize the impact of these non-zero elements in A and leverage graph hierarchy, a simple way is to replace each non-zero element by corresponding node pair's hierarchical difference, which is equivalent to applying a linear function to transform A to L ? R |V |?|V | . For each non-zero element</p><formula xml:id="formula_0">A i,j = 1 in A, its corresponding L i,j in L is ? i,j = r(j) ? r(i) and ? i,j ? 1.</formula><p>Suppose D ? R |V |?|V | is a diagonal matrix, where each non-zero element in the diagonal is D i,i = r(i). Then we have:</p><formula xml:id="formula_1">L = AD ? DA<label>(1)</label></formula><p>Empirically, the maximum value of ? in L is much larger than the minimum value (which is 1). The high (and varying) range of values in ? will unfavourably amplify the effect of large hierarchical difference values while damping the effects of smaller values, thereby negatively impacts the transitivity preserving property in local sub-graphs. To overcome this limitation, we seek to reduce the absolute values of ? to smaller ones, while preserving its important mono-tonic property. We observe that a simple yet popular harmonic series, which is a non-linear and non-decreasing function, can satisfy our requirements very well and can be used to build the proximity matrix M ? R |V |?|V | . Each non-zero</p><formula xml:id="formula_2">entry L i,j ? L is transformed to M i,j = 1 + 1 2 + ... + 1 ?i,j in M . Since a harmonic number h(? i,j ) = ?i,j k=1</formula><p>1 k can be approximated by (? + log(? i,j )) 4 , without loss of generality, we represent each non-zero element M i,j = c + log(e + ? i,j ), where c is a constant, and e is the mathematical constant satisfying log(e + ?) &gt; 0. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Generating Asymmetric Transitivity Preserving Graph Embedding from M</head><p>We have discussed how to build the non-negative proximity matrix M , which is a function of the adjacency matrix of the transitive closure of the reduced DAG and a diagonal matrix which contains graph hierarchy. In this section, we propose to use factorization models to generate asymmetric transitivity preserving embedding for the given directed graph.</p><p>The most straightforward way is to apply NMF on M to generate asymmetric transitivity preserving embedding for the given directed graph. NMF of the (|V | ? |V |) matrix M generates a low-rank approximation of it: M ? ST , where S ? R |V |?k and T ? R k?|V | , as shown in <ref type="figure">Figure 2</ref>. Each row in S represents a node's out-reach (source) vector, and each column in T represents a node's in-reach (target) vector. k is the dimension size of the source/target embedding space. NMF step is a core part in generating the embedding and we apply a multi-core GPU version of NMF using CCD GPUCCD++ (Nisa et al. 2017) with appropriate regularization to generate the embedding for large graphs efficiently. The time complexity per iteration of GPUCCD++ is O(k|V | 2 ) in the worst case.</p><p>To predict whether there is a directed path from node i to node j, we check the value of ?( s i , t j ), where ? is the sigmoid function, s i is node i's source vector and t j is node j's target vector respectively. If ?( s i , t j ) &gt; ?, there is a predicted path from i to j. ? is a threshold with range in [0.5, 1). We set ? = 0.5 in our experiments, which we empirically found to work well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Complexity Analysis</head><p>In this section, we analyze the complexity of the whole framework of ATP, given a directed graph G = (V, E) as input. Fundamental procedures of ATP are breaking cycles, inferring graph hierarchy, constructing M , and factorization of M . In the worst case, their corresponding time complexity is O(|E| 2 ), O(|E| + |V |), O(|V | 2 loglog(|V |)), and O(|V | 2 k) per iteration (NMF) respectively. By combining them, the time complexity of ATP is O(|E| 2 ) in the worst case (G is a directed complete graph). The bound is very pessimistic in practice, and the bottleneck part (breaking cycles) can be parallelized since it can perform on each SCC independently to remove cycle edges.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Experiments and Analyses</head><p>We apply our graph embedding framework ATP to three diverse tasks: link prediction, and question difficulty estimation and expert finding in CQAs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Link Prediction</head><p>In link prediction, we would like to predict these missing edges given a network with a certain fraction of edges removed. The labeled dataset of edges (or node pairs) consists of positive and negative examples. Given a random edge e, if the removal of this edge will not disconnect the residual network, e will be selected as a positive example. We select r = 10% edges as positive examples. To generate negative examples, we randomly select an equal number of node pairs from the network which have no edges connecting them 5 . Hence 2r edges and node pairs are selected for evaluation.</p><p>Datasets used for evaluation are Wiki-Vote 6 , GNU 7 , Cit-HepPH 8 , which were used in prior work <ref type="bibr" target="#b6">(Lai et al. 2017)</ref>. GNM-30K is a random directed graph generated with cycles (30K nodes and 155K edges).  Following existing literature <ref type="bibr" target="#b2">(Grover and Leskovec 2016;</ref><ref type="bibr" target="#b16">Tran 2018)</ref>, we use Area Under Curve (AUC) to evaluate the link prediction performance. We compare our method with the most recent work for asymmetric proximity preserving.  <ref type="bibr" target="#b14">Tang et al. 2015)</ref>: It is worth mentioning that LINE can only preserve symmetric second-order proximity when applied to a directed graph. In our experimental settings, vertex vectors are considered as source vectors, and context vectors are used as target vectors.</p><p>Performance Analysis We can conclude from the performance as shown in <ref type="table" target="#tab_0">Table 1</ref> that:</p><p>? Since Harmonic numbers can be approximated by log functions, log and Harmonic transformation can achieve similar performance in both ATP and SVDM. By default, we use log function as our non-linear transformation. It is noticeable that ATP performs better than SVDM. In average, ATP improves over SVDM by 22.01% among all datasets (from 12.45% to 40.67%), which shows the advantage of leveraging NMF to perform transitivity preserving graph embedding. ? ATP and SVDM perform better than HOPE. In average, SVDM improves over HOPE-KI by 13.72% among all datasets, and ATP improves over HOPE-KI from 19.84% to 51.97%. The only difference between SVDM and HOPE is the technique used to build M . The results demonstrate the advantage of incorporating graph reachability and hierarchy to construct M , in comparison to building a higher order proximity matrix based on AA, CN, and KI. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Question Difficulty Estimation and Expert Finding in CQAs</head><p>In this section, we start by discussing how to apply ATP to estimate question difficulty and user expertise. We then show how to embed newly posted questions (unseen nodes in the training) inductively and identify best answerers for newly posted questions in CQAs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Question Difficulty and User Expertise Estimation in CQAs</head><p>We first talk about how to apply our graph embedding technique into question difficulty and user expertise estimation, which is a central part of automated question routing in CQAs. We select 5 large and popular sites from Stack Exchange 9 for evaluation. More details about the Stack Exchange sites can be found in the <ref type="table" target="#tab_1">Table 2</ref>. For each Stack Exchange site, ATP uses the same competition graph as the input as QDEE <ref type="bibr" target="#b12">(Sun et al. 2018a</ref>) which assigns solely scalar value to represent question difficulty level and user expertise. In this section, we will show the advantages of learning latent representations for question difficulty (question nodes) and user expertise (user nodes) by leveraging ATP. Following the same setting as QDEE <ref type="bibr" target="#b12">(Sun et al. 2018a</ref>), questions which were provided non-zero bounty scores are selected as our ground truth for evaluation, and pairwise accuracy (Acc) 10 , as used by previous studies <ref type="bibr" target="#b17">(Wang, Jing Liu, and Guo 2014;</ref><ref type="bibr" target="#b12">Sun et al. 2018a)</ref>, are used to measure the effectiveness of different estimation techniques. Higher accuracy indicates better performance of the technique. The number of questions with bounty used for evaluation is shown in <ref type="table" target="#tab_1">Table 2</ref>. We evaluate ATP and other state-of-the-art methods such as TrueSkill <ref type="bibr" target="#b17">(Wang, Jing Liu, and Guo 2014)</ref> Question difficulty estimation performance is shown in <ref type="figure" target="#fig_4">Figure 3</ref>. We can conclude that ATP performs the best on almost all of the Stack Exchange sites. For example, ATP improves over TrueSkill, Number-of-Answer, and QDEE on average by 6.56%, 5.92%, and 5.06% respectively in 5 Stack Exchange sites. TrueSkill suffers from the data sparsity problem. Each question has only one in-edge (from questioner) and one out-edge (to the best answerer), which limits the accuracy of TrueSkill. ATP can leverage graph reachability and hence each question can have interactions with other questions and users, which can overcome the data sparseness.</p><p>Inductive Embedding Learning for Cold Question Routing in CQAs Usually, there are two types of questions in CQAs -resolved (questions with answers) and newly posted questions (questions that have not received any answers). We refer to these newly posted questions as cold questions. The majority of approaches have focused on evaluating content quality after the fact (after questions have been resolved) <ref type="bibr" target="#b18">(Yang et al. 2013</ref>). Yet, as the CQAs continue to grow, routing the cold questions to matching experts before answers have been provided has become a critical problem. For example, in Stack Overflow, about 4.8 million questions have not been answered 11 .</p><p>In this section, we show that ATP can generate quality embedding for new vertices (cold questions) unseen during training, therefore supporting inductive learning in nature. Our idea is to leverage Expertise Gain Assumption (EGA) <ref type="bibr" target="#b12">(Sun et al. 2018a)</ref> to bridge the gap between coldstart and well-resolved questions asked by the same user. Given a cold question q * asked by a user u * , the most recent k questions asked by the same user u * are q 1 , q 2 , ..., q k and their associated embedding are available to us (they can be seen during training). We use the embedding of the question which has the highest difficulty level among q 1 , q 2 , ..., q k to approximate q * 's embedding. A question q max is considered to have the highest difficulty level if ?( s qi , t qmax ) &gt; ?( s qmax , t qi ) for all i ? [1, k] and q i = q max . Then s q * = s qmax and t q * = t qmax . We note that it is possible that the user posing the question is a new user (or one that has not posted a sufficient number of questions). In this case, k well-resolved questions that are closest (i.e. cosine similarity) to q * in textual descriptions 12 , are picked as its nearest neighbors. The source and target embedding of q * is predicted as the averaged source and target embedding of its nearest neighbors respectively.</p><p>Our task of cold question routing is to select the user who has the highest possibility to be selected as the best answerer for a newly posted question. Given the testing question set Q t , the predicted ranking list of all potential answerers for a test question q * is R q * for all q * ? Q t . The ranking score of a potential answerer u for the cold question q * is computed as ?( s q * , t u ). The answerer who has the highest ranking score will be selected as the best answerer for q * .</p><p>We compare ATP with state-of-the-art methods ( BoW  <ref type="bibr" target="#b13">Sun et al. 2018b)</ref>. We followed the same settings proposed by Jiankai et al. <ref type="bibr" target="#b13">(Sun et al. 2018b)</ref> to select cold questions for evaluation. <ref type="table" target="#tab_2">Table 3</ref> shows the performance of different approaches on the task of cold question routing, evaluated by MRR, Precision@3 and Accuracy. Jiankai et al. <ref type="bibr" target="#b13">(Sun et al. 2018b)</ref> reported that ColdRoute performed consistently better than BoW, Doc2Vec and LDA. To save space, we omitted their performance <ref type="table" target="#tab_2">Table 3</ref>. Based on the results, we can make the following observations:</p><p>? ATP performs the best overall evaluation metrics in almost all Stack Exchange sites. For example, ATP improves upon routing metric Accuracy over ColdRoute by 6.14%, since ColdRoute fails to take the interactions between questions (asked by the same asker) into consideration. ATP improves upon routing metric MRR over QDEE by 7.59%, which indicates that incorporating graph reachability and representing user expertise and question difficulty as a feature vector can help ATP identify matching experts for cold questions more accurately and robustly than the state-of-the-art methods.</p><p>? ATP performs better than CQARank. The reason is that CQARank's Q&amp;A graph contain more noise than the competition graph used by ATP. The direction of edges in CQARank's Q&amp;A graph is from the asker to the answerer. The underlying assumption is that askers have lower expertise than corresponding answerers. However, Wang et al. <ref type="bibr" target="#b17">(Wang, Jing Liu, and Guo 2014)</ref> shows that the expertise of the asker is not assumed to be lower than the expertise score of a non-best answerer, since such a user may just happen to see the question and responded that, rather than knowing the answer well. These kinds 12 Each question can be represented as a feature vector by LDA <ref type="bibr" target="#b5">(Ji et al. 2012)</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusion</head><p>In this paper, we have proposed a novel asymmetric transitivity preserving directed graph embedding framework (ATP). Our scalable embedding technique incorporates both graph hierarchy and reachability information by constructing a novel asymmetric matrix, which is a non-linear transformation of an adjacency matrix (graph reachability) and a diagonal matrix (graph hierarchy). An efficient factorization based approach is used to generate two embedding vectors for each node to capture the asymmetric transitivity. With incorporating graph hierarchy and reachability, ATP can perform better than the state-of-the-art in various tasks such as link prediction, and question difficulty estimation and cold question routing in CQAs. And we have proposed several approaches to combine both graph hierarchy and reachability inside a unified framework, and empirically the non-linear transformation works the best.</p><p>As extension of current study, we plan to apply our model to other applications such as community detection in dynamic networks ) and exception-tolerant abduction <ref type="bibr" target="#b22">(Zhang, Mathew, and Juba 2017)</ref> in attributed networks <ref type="bibr" target="#b6">(Liang et al. 2018)</ref>. We also would like to address the problem of routing newly posted questions (item coldstart) to newly registered users (user cold-start) in CQAs, with hoping to increase the expertise of the entire community.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Figure 2provides an example of computing M , where c = 0. After this non-linear transformation, the gap of hierarchical rankings between local nodes can be noticed and well preserved compared to the linear model. Thus, the final matrix M incorporating both graph hierarchy and reachability, is computed as:M = cA+log(eA+L) = cA+log(eA+AD?DA) (2)Constructing the adjacency matrix A is equivalent to computing the transitive closure of G , which has a worstcase time complexity of O(|V | 2 loglog(|V |)) (Simon 1988). The time complexity of computing L with Equation 1 is equal to the number of non-zero elements in A, which is O(|V | 2 ) in the worst case. Hence, the time complexity of constructing M is O(|V | 2 loglog(|V |)) in the worst case.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>5</head><label></label><figDesc>Each node pair (u, v) in negative samples satisfies the condition that v can reach u, but u cannot reach v in the network. 6 https://snap.stanford.edu/data/wiki-Vote. html 7 https://snap.stanford.edu/data/ p2p-Gnutella31.html 8 https://snap.stanford.edu/data/cit-HepPh. html</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>?</head><label></label><figDesc>ATP and its variants: ATP-Constant (M = A), ATP-Linear (M = L), ATP-Harmonic, and ATP-log (By default ATP refers to ATP-log). ATP-Harmonic, and ATPlog transforms L to M by harmonic and log function respectively. ? HOPE(Ou et al. 2016): As the time complexity of computation of RPR is too high, we only report performances of HOPE-AA, HOPE-CN, and HOPE-KI here. ? SVDM: SVD-Harmonic and SVD-log use the same way to build M as ATP-Harmonic and ATP-log respectively. However, unlike ATP, SVD-Harmonic and SVD-log performs Singular Value Decomposition (SVD) as used in HOPE on M and selects the largest k singular values and corresponding singular vectors to construct the embedding. ? LINE (</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>?</head><label></label><figDesc>Both ATP-Harmonic and ATP-log perform better than ATP-Linear and ATP-Constant as expected, and ATP-Linear performs better than ATP-Constant. For example, ATP-log improves over ATP-Constant by 8.51% in average among all datasets. ATP-log improves over ATP-Linear by 4.74% on the largest dataset GNU. It shows the efficacy of applying non-linear transformation to M .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>, Number-Of-Answers (Yang et al. 2014), Time-First-Answer, Time-Best-Answer (Huna, Srba, and 9 We used the data dump which is released on June 12, 2017 and is available online at https://archive.org/details/ stackexchange 10 Acc = # correctly predicted question pairs # all question pairs Pairwise accuracy of different approaches to estimate question difficulty Bielikova 2016) and QDEE (Sun et al. 2018a) on the task of question difficulty estimation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>(Figueroa and Neumann 2013), Doc2Vec (Dong et al. 2015), LDA (Ji et al. 2012), CQARank (Yang et al. 2013)), QDEE (Sun et al. 2018a), and ColdRoute (Sun et al. 2018b), based on several popular evaluation criteria such as Mean Reciprocal Rank (MRR) (Zhu et al. 2014), Precision@3 (Zhao et al. 2017; Sun et al. 2018b), and Accuracy</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Comparisons between ATP and the state-of-the-art methods on link prediction, evaluated by AUC</figDesc><table><row><cell></cell><cell>AUC</cell><cell cols="2">Wiki-Vote Cit-HepPH GNU GNM-30K</cell></row><row><cell cols="3">LINE 2-nd order 0.4423</cell><cell>0.3310 0.4748 0.4109</cell></row><row><cell></cell><cell>AA</cell><cell>0.7672</cell><cell>0.7385 0.5565 0.5747</cell></row><row><cell>HOPE</cell><cell>CN</cell><cell>0.7860</cell><cell>0.7570 0.5736 0.5836</cell></row><row><cell></cell><cell>AI</cell><cell>0.7784</cell><cell>0.7440 0.6159 0.5784</cell></row><row><cell cols="3">SVDM Harmonic 0.8200</cell><cell>0.7522 0.8166 0.6255</cell></row><row><cell></cell><cell>log</cell><cell>0.8215</cell><cell>0.7929 0.8162 0.6248</cell></row><row><cell></cell><cell>Constant</cell><cell>0.9123</cell><cell>0.7939 0.8684 0.7845</cell></row><row><cell></cell><cell>Linear</cell><cell>0.9462</cell><cell>0.8682 0.8893 0.8530</cell></row><row><cell>ATP</cell><cell>log</cell><cell>0.9481</cell><cell>0.8916 0.9314 0.8789</cell></row><row><cell></cell><cell cols="2">Harmonic 0.9478</cell><cell>0.8892 0.9288 0.8777</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>Statistics of Stack Exchange Sites</figDesc><table><row><cell>Stack Exchange Sites</cell><cell cols="3">Apple Gaming Physics Scifi Unix</cell></row><row><cell># nodes in Graph</cell><cell cols="3">133K 117K 127K 59K 167K</cell></row><row><cell># edges in Graph</cell><cell cols="3">161K 190K 188K 97K 249K</cell></row><row><cell># questions with bounty</cell><cell cols="3">1,834 1,562 1,922 980 1,614</cell></row><row><cell cols="2"># cold questions for evaluation 234</cell><cell>313</cell><cell>196 279 297</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 :</head><label>3</label><figDesc>Comparisons between ATP and the state of the art methods on cold question routing in CQAs, evaluated by MRR, Precision@3 (P@3), and Accuracy. Apple Gaming Physics Scifi Unix MRR CQARank 0.4914 0.4463 0.5315 0.4628 0.5258 QDEE 0.5579 0.6011 0.524 0.5895 0.5158 ColdRoute 0.5365 0.6445 0.5288 0.6462 0.54338 ATP 0.574 0.6242 0.5814 0.6405 0.5756</figDesc><table><row><cell cols="2">P@3 CQARank 0.5855 0.5144</cell><cell>0.699</cell><cell>0.552</cell><cell>0.67</cell></row><row><cell>QDEE</cell><cell cols="4">0.7094 0.8019 0.6888 0.7455 0.6566</cell></row><row><cell cols="5">ColdRoute 0.6581 0.7796 0.7194 0.7741 0.6869</cell></row><row><cell>ATP</cell><cell cols="4">0.7564 0.8179 0.7398 0.8064 0.7205</cell></row><row><cell cols="5">Acc. CQARank 0.5555 0.4979 0.6483 0.5693 0.6134</cell></row><row><cell>QDEE</cell><cell>0.6852 0.737</cell><cell cols="3">0.6401 0.711 0.6218</cell></row><row><cell cols="5">ColdRoute 0.6324 0.7387 0.6354 0.7369 0.6404</cell></row><row><cell>ATP</cell><cell cols="4">0.7041 0.7504 0.6895 0.7695 0.6713</cell></row><row><cell cols="5">of answers do not show corresponding answerers' ex-</cell></row><row><cell cols="5">pertise are higher than the asker's expertise. The gen-</cell></row><row><cell cols="5">erated noise edges in CQARank's Q&amp;A graph can un-</cell></row><row><cell cols="5">dermine CQARank's performance on experts finding for</cell></row><row><cell>cold questions.</cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">Every pair of distinct vertices is connected by a pair of unique edges (one in each direction).3 Ranking score o is initialized to 1.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">? is the Euler-Mascheroni constant, log is the Natural logarithm</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="11">https://stackoverflow.com/unanswered</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgments This work is supported by NSF grants CCF-1645599, IIS-1550302, and CNS-1513120, RI xxxxxx, and a grant from the Ohio Supercomputer Center (PAS0166). All content represents the opinion of the authors, which is not necessarily shared or endorsed by their sponsors.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zheng</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chang ;</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">W</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">C</forename></persName>
		</author>
		<idno>arXiv abs/1709.07604</idno>
		<title level="m">A comprehensive survey of graph embedding: Problems, techniques and applications</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Learning to recommend accurate and diverse items</title>
	</analytic>
	<monogr>
		<title level="m">Predicting best answerers for new questions: An approach leveraging distributed representations of words in community question answering</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note>FCST</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Learning to rank effective paraphrases from query logs for community question answering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chawla</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">V</forename><surname>Chawla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Swami</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Fang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Duan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhuang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ester</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Figueroa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Neumann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Goyal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Ferrara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Grover</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<idno>arXiv abs/1705.02801</idno>
	</analytic>
	<monogr>
		<title level="m">Graph embedding techniques, applications, and performance: A survey</title>
		<meeting><address><addrLine>Leskovec</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
	<note>KDD</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Finding hierarchy in directed online social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Gupte</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Trueskill TM : A bayesian skill rating system. In NIPS</title>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
	<note>WWW. [Herbrich, Minka, and Graepel</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Exploiting content quality and question difficulty in CQA reputation systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Srba</forename><surname>Bielikova ; Huna</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Srba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Bielikova</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<editor>NetSci-X</editor>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Question-answer topic model for question retrieval in community question answering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Ji</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CIKM</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Prune: Preserving proximity and global ranking for network embedding</title>
		<idno>Liang et al. 2018</idno>
	</analytic>
	<monogr>
		<title level="m">SIAM SDM</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note>WSDM</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Parallel ccd++ on gpu for matrix factorization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nisa</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">GPGPU</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Asymmetric transitivity preserving graph embedding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Ou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Deepwalk: Online learning of social representations</title>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
		<editor>IJCAI. [Perozzi, Al-Rfou, and Skiena</editor>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
	<note>Tri-party deep network representation</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Network embedding as matrix factorization: Unifying deepwalk, line, pte, and node2vec</title>
	</analytic>
	<monogr>
		<title level="m">Theoretical Computer Science</title>
		<imprint>
			<date type="published" when="1988" />
		</imprint>
	</monogr>
	<note>WSDM</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Breaking cycles in noisy hierarchies</title>
	</analytic>
	<monogr>
		<title level="m">WebSci</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">QDEE: Question Difficulty and Expertise Estimation in Community Question Answering Sites</title>
	</analytic>
	<monogr>
		<title level="m">ICWSM</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Coldroute: effective routing of cold questions in stack exchange sites</title>
	</analytic>
	<monogr>
		<title level="m">ECML PKDD</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Line: Large-scale information network embedding</title>
	</analytic>
	<monogr>
		<title level="m">WWW</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Hierarchies in directed networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Tatti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDM</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Learning to make predictions on graphs with autoencoders. arXiv abs/1802.08352</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">V</forename><surname>Tran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MLG</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note>Spread sampling for graphs: Theory and applications</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A regularized competition model for question difficulty estimation in community question answering services</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jing</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">W</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">CQArank: Jointly model topics and expertise in community question answering</title>
	</analytic>
	<monogr>
		<title level="m">CIKM</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Sparrows and owls: Characterisation of expert behaviour in stackoverflow</title>
	</analytic>
	<monogr>
		<title level="m">UMAP</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Network representation learning with rich text information</title>
	</analytic>
	<monogr>
		<title level="m">IJCAI</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Fast network embedding enhancement via high order proximity approximation</title>
	</analytic>
	<monogr>
		<title level="m">IJCAI</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Expert finding for community-based question answering via ranking metric network learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mathew</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mathew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Juba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhuang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI</title>
		<editor>IJ-CAI</editor>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note>An improved algorithm for learning to perform exception-tolerant abduction</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Community-based question answering via asymmetric multi-faceted ranking network learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Scalable graph embedding for asymmetric proximity</title>
	</analytic>
	<monogr>
		<title level="m">AAAI</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Ranking user authority with relevant knowledge categories for expert finding</title>
	</analytic>
	<monogr>
		<title level="m">WWW</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
