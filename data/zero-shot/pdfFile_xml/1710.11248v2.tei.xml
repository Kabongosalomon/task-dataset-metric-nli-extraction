<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Published as a conference paper at ICLR 2018 LEARNING ROBUST REWARDS WITH ADVERSARIAL INVERSE REINFORCEMENT LEARNING</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Justin</forename><surname>Fu</surname></persName>
							<email>justinjfu@eecs.berkeley.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical Engineering and Computer Science</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>94720</postCode>
									<settlement>Berkeley Berkeley</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Katie</forename><surname>Luo</surname></persName>
							<email>katieluo@berkeley.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical Engineering and Computer Science</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>94720</postCode>
									<settlement>Berkeley Berkeley</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergey</forename><surname>Levine</surname></persName>
							<email>svlevine@eecs.berkeley.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical Engineering and Computer Science</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>94720</postCode>
									<settlement>Berkeley Berkeley</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Published as a conference paper at ICLR 2018 LEARNING ROBUST REWARDS WITH ADVERSARIAL INVERSE REINFORCEMENT LEARNING</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2022-11-11T15:12+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Reinforcement learning provides a powerful and general framework for decision making and control, but its application in practice is often hindered by the need for extensive feature and reward engineering. Deep reinforcement learning methods can remove the need for explicit engineering of policy or value features, but still require a manually specified reward function. Inverse reinforcement learning holds the promise of automatic reward acquisition, but has proven exceptionally difficult to apply to large, high-dimensional problems with unknown dynamics. In this work, we propose AIRL, a practical and scalable inverse reinforcement learning algorithm based on an adversarial reward learning formulation. We demonstrate that AIRL is able to recover reward functions that are robust to changes in dynamics, enabling us to learn policies even under significant variation in the environment seen during training. Our experiments show that AIRL greatly outperforms prior methods in these transfer settings.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>While reinforcement learning (RL) provides a powerful framework for automating decision making and control, significant engineering of elements such as features and reward functions has typically been required for good practical performance. In recent years, deep reinforcement learning has alleviated the need for feature engineering for policies and value functions, and has shown promising results on a range of complex tasks, from vision-based robotic control <ref type="bibr" target="#b12">(Levine et al., 2016)</ref> to video games such as Atari <ref type="bibr" target="#b13">(Mnih et al., 2015)</ref> and Minecraft <ref type="bibr" target="#b16">(Oh et al., 2016)</ref>. However, reward engineering remains a significant barrier to applying reinforcement learning in practice. In some domains, this may be difficult to specify (for example, encouraging "socially acceptable" behavior), and in others, a na?vely specified reward function can produce unintended behavior <ref type="bibr" target="#b2">(Amodei et al., 2016)</ref>. Moreover, deep RL algorithms are often sensitive to factors such as reward sparsity and magnitude, making well performing reward functions particularly difficult to engineer.</p><p>Inverse reinforcement learning (IRL) <ref type="bibr" target="#b19">(Russell, 1998;</ref><ref type="bibr" target="#b14">Ng &amp; Russell, 2000)</ref> refers to the problem of inferring an expert's reward function from demonstrations, which is a potential method for solving the problem of reward engineering. However, inverse reinforcement learning methods have generally been less efficient than direct methods for learning from demonstration such as imitation learning <ref type="bibr" target="#b10">(Ho &amp; Ermon, 2016)</ref>, and methods using powerful function approximators such as neural networks have required tricks such as domain-specific regularization and operate inefficiently over whole trajectories <ref type="bibr" target="#b6">(Finn et al., 2016b)</ref>. There are many scenarios where IRL may be preferred over direct imitation learning, such as re-optimizing a reward in novel environments <ref type="bibr" target="#b7">(Finn et al., 2017)</ref> or to infer an agent's intentions, but IRL methods have not been shown to scale to the same complexity of tasks as direct imitation learning. However, adversarial IRL methods <ref type="bibr" target="#b6">(Finn et al., 2016b;</ref><ref type="bibr">a)</ref> hold promise for tackling difficult tasks due to the ability to adapt training samples to improve learning efficiency.</p><p>Part of the challenge is that IRL is an ill-defined problem, since there are many optimal policies that can explain a set of demonstrations, and many rewards that can explain an optimal policy <ref type="bibr" target="#b15">(Ng et al., 1999)</ref>. The maximum entropy (MaxEnt) IRL framework introduced by <ref type="bibr" target="#b24">Ziebart et al. (2008)</ref> handles the former ambiguity, but the latter ambiguity means that IRL algorithms have difficulty distinguishing the true reward functions from those shaped by the environment dynamics. While shaped rewards can increase learning speed in the original training environment, when the reward is deployed at test-time on environments with varying dynamics, it may no longer produce optimal behavior, as we discuss in Sec. 5. To address this issue, we discuss how to modify IRL algorithms to learn rewards that are invariant to changing dynamics, which we refer to as disentangled rewards.</p><p>In this paper, we propose adversarial inverse reinforcement learning (AIRL), an inverse reinforcement learning algorithm based on adversarial learning. Our algorithm provides for simultaneous learning of the reward function and value function, which enables us to both make use of the efficient adversarial formulation and recover a generalizable and portable reward function, in contrast to prior works that either do not recover a reward functions <ref type="bibr" target="#b10">(Ho &amp; Ermon, 2016)</ref>, or operates at the level of entire trajectories, making it difficult to apply to more complex problem settings <ref type="bibr" target="#b6">(Finn et al., 2016b;</ref><ref type="bibr">a)</ref>. Our experimental evaluation demonstrates that AIRL outperforms prior IRL methods <ref type="bibr" target="#b6">(Finn et al., 2016b)</ref> on continuous, high-dimensional tasks with unknown dynamics by a wide margin. When compared to GAIL <ref type="bibr" target="#b10">(Ho &amp; Ermon, 2016)</ref>, which does not attempt to directly recover rewards, our method achieves comparable results on tasks that do not require transfer. However, on tasks where there is considerable variability in the environment from the demonstration setting, GAIL and other IRL methods fail to generalize. In these settings, our approach, which can effectively disentangle the goals of the expert from the dynamics of the environment, achieves superior results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Inverse reinforcement learning (IRL) is a form of imitation learning and learning from demonstration <ref type="bibr" target="#b3">(Argall et al., 2009)</ref>. Imitation learning methods seek to learn policies from expert demonstrations, and IRL methods accomplish this by first inferring the expert's reward function. Previous IRL approaches have included maximum margin approaches <ref type="bibr" target="#b0">(Abbeel &amp; Ng, 2004;</ref><ref type="bibr" target="#b18">Ratliff et al., 2006)</ref>, and probabilistic approaches such as <ref type="bibr" target="#b24">Ziebart et al. (2008)</ref>; <ref type="bibr" target="#b4">Boularias et al. (2011)</ref>. In this work, we work under the maximum causal IRL framework of <ref type="bibr" target="#b23">Ziebart (2010)</ref>. Some advantages of this framework are that it removes ambiguity between demonstrations and the expert policy, and allows us to cast the reward learning problem as a maximum likelihood problem, connecting IRL to generative model training.</p><p>Our proposed method most closely resembles the algorithms proposed by <ref type="bibr" target="#b21">Uchibe (2017);</ref><ref type="bibr" target="#b10">Ho &amp; Ermon (2016);</ref><ref type="bibr" target="#b5">Finn et al. (2016a)</ref>. Generative adversarial imitation learning (GAIL) <ref type="bibr" target="#b10">(Ho &amp; Ermon, 2016)</ref> differs from our work in that it is not an IRL algorithm that seeks to recover reward functions. The critic or discriminator of GAIL is unsuitable as a reward since, at optimality, it outputs 0.5 uniformly across all states and actions. Instead, GAIL aims only to recover the expert's policy, which is a less portable representation for transfer. <ref type="bibr" target="#b21">Uchibe (2017)</ref> does not interleave policy optimization with reward learning within an adversarial framework. Improving a policy within an adversarial framework corresponds to training an amortized sampler for an energy-based model, and prior work has shown this is crucial for performance <ref type="bibr" target="#b6">(Finn et al., 2016b)</ref>. <ref type="bibr" target="#b22">Wulfmeier et al. (2015)</ref> also consider learning cost functions with neural networks, but only evaluate on simple domains where analytically solving the problem with value iteration is tractable. Previous methods which aim to learn nonlinear cost functions have used boosting <ref type="bibr" target="#b17">(Ratliff et al., 2007)</ref> and Gaussian processes <ref type="bibr" target="#b11">(Levine et al., 2011)</ref>, but still suffer from the feature engineering problem.</p><p>Our IRL algorithm builds on the adversarial IRL framework proposed by <ref type="bibr" target="#b5">Finn et al. (2016a)</ref>, with the discriminator corresponding to an odds ratio between the policy and exponentiated reward distribution. The discussion in <ref type="bibr" target="#b5">Finn et al. (2016a)</ref> is theoretical, and to our knowledge no prior work has reported a practical implementation of this method. Our experiments show that direct implementation of the proposed algorithm is ineffective, due to high variance from operating over entire trajectories. While it is straightforward to extend the algorithm to single state-action pairs, as we discuss in Section 4, a simple unrestricted form of the discriminator is susceptible to the reward ambiguity described in <ref type="bibr" target="#b15">(Ng et al., 1999)</ref>, making learning the portable reward functions difficult. As illustrated in our experiments, this greatly limits the generalization capability of the method: the learned reward functions are not robust to environment changes, and it is difficult to use the algo-rithm for the purpose of inferring the intentions of agents. We discuss how to overcome this issue in Section 5. <ref type="bibr" target="#b1">Amin et al. (2017)</ref> consider learning reward functions which generalize to new tasks given multiple training tasks. Our work instead focuses on how to achieve generalization within the standard IRL formulation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">BACKGROUND</head><p>Our inverse reinforcement learning method builds on the maximum causal entropy IRL framework <ref type="bibr" target="#b23">(Ziebart, 2010)</ref>, which considers an entropy-regularized Markov decision process (MDP), defined by the tuple (S, A, T , r, ?, ? 0 ). S, A are the state and action spaces, respectively, ? ? (0, 1) is the discount factor. The dynamics or transition distribution T (s |a, s), the initial state distribution ? 0 (s), and the reward function r(s, a) are unknown in the standard reinforcement learning setup and can only be queried through interaction with the MDP.</p><p>The goal of (forward) reinforcement learning is to find the optimal policy ? * that maximizes the expected entropy-regularized discounted reward, under ?, T , and ? 0 :</p><formula xml:id="formula_0">? * = arg max ? E ? ?? T t=0 ? t (r(s t , a t ) + H(?(?|s t ))) ,</formula><p>where ? = (s 0 , a 0 , ...s T , a T ) denotes a sequence of states and actions induced by the policy and dynamics. It can be shown that the trajectory distribution induced by the optimal policy ? * (a|s) takes the form ? * (a|s) ? exp{Q * soft (s t , a t )} <ref type="bibr" target="#b23">(Ziebart, 2010;</ref><ref type="bibr" target="#b9">Haarnoja et al., 2017)</ref></p><formula xml:id="formula_1">, where Q * soft (s t , a t ) = r t (s, a) + E (st+1,...)?? [</formula><p>Inverse reinforcement learning instead seeks infer the reward function r(s, a) given a set of demonstrations D = {? 1 , ..., ? N }. In IRL, we assume the demonstrations are drawn from an optimal policy ? * (a|s). We can interpret the IRL problem as solving the maximum likelihood problem:</p><formula xml:id="formula_2">max ? E ? ?D [log p ? (? )] ,<label>(1)</label></formula><p>Where p ? (? ) ? p(s 0 ) T t=0 p(s t+1 |s t , a t )e ? t r ? (st,at) parametrizes the reward function r ? (s, a) but fixes the dynamics and initial state distribution to that of the MDP. Note that under deterministic dynamics, this simplifies to an energy-based model where for feasible trajectories, p ? (? ) ? e T t=0 ? t r ? (st,at) <ref type="bibr" target="#b24">(Ziebart et al., 2008)</ref>. <ref type="bibr" target="#b5">Finn et al. (2016a)</ref> propose to cast optimization of Eqn. 1 as a GAN <ref type="bibr" target="#b8">(Goodfellow et al., 2014)</ref> optimization problem. They operate in a trajectory-centric formulation, where the discriminator takes on a particular form (f ? (? ) is a learned function; ?(? ) is precomputed and its value "filled in"):</p><formula xml:id="formula_3">D ? (? ) = exp{f ? (? )} exp{f ? (? )} + ?(? ) ,<label>(2)</label></formula><p>and the policy ? is trained to maximize R(? ) = log(1 ? D(? )) ? log D(? ). Updating the discriminator can be viewed as updating the reward function, and updating the policy can be viewed as improving the sampling distribution used to estimate the partition function. If trained to optimality, it can be shown that an optimal reward function can be extracted from the optimal discriminator as f * (? ) = R * (? )+const, and ? recovers the optimal policy. We refer to this formulation as generative adversarial network guided cost learning (GAN-GCL) to discriminate it from guided cost learning (GCL) <ref type="bibr" target="#b5">(Finn et al., 2016a)</ref>. This formulation shares similarities with GAIL <ref type="bibr" target="#b10">(Ho &amp; Ermon, 2016)</ref>, but GAIL does not place special structure on the discriminator, so the reward cannot be recovered.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">ADVERSARIAL INVERSE REINFORCEMENT LEARNING (AIRL)</head><p>In practice, using full trajectories as proposed by GAN-GCL can result in high variance estimates as compared to using single state, action pairs, and our experimental results show that this results in very poor learning. We could instead propose a straightforward conversion of Eqn. 2 into the single state and action case, where:</p><formula xml:id="formula_4">D ? (s, a) = exp{f ? (s, a)} exp{f ? (s, a)} + ?(a|s) .</formula><p>As in the trajectory-centric case, we can show that, at optimality, f * (s, a) = log ? * (a|s) = A * (s, a), the advantage function of the optimal policy. We justify this, as well as a proof that this algorithm solves the IRL problem in Appendix A .</p><p>This change results in an efficient algorithm for imitation learning. However, it is less desirable for the purpose of reward learning. While the advantage is a valid optimal reward function, it is a heavily entangled reward, as it supervises each action based on the action of the optimal policy for the training MDP. Based on the analysis in the following Sec. 5, we cannot guarantee that this reward will be robust to changes in environment dynamics. In our experiments we demonstrate several cases where this reward simply encourages mimicking the expert policy ? * , and fails to produce desirable behavior even when changes to the environment are made.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">THE REWARD AMBIGUITY PROBLEM</head><p>We now discuss why IRL methods can fail to learn robust reward functions. First, we review the concept of reward shaping. <ref type="bibr" target="#b15">Ng et al. (1999)</ref> describe a class of reward transformations that preserve the optimal policy. Their main theoretical result is that under the following reward transformation,</p><formula xml:id="formula_5">r(s, a, s ) = r(s, a, s ) + ??(s ) ? ?(s) ,<label>(3)</label></formula><p>the optimal policy remains unchanged, for any function ? : S ? R. Moreover, without prior knowledge of the dynamics, this is the only class of reward transformations that exhibits policy invariance.</p><p>Because IRL methods only infer rewards from demonstrations given from an optimal agent, they cannot in general disambiguate between reward functions within this class of transformations, unless the class of learnable reward functions is restricted.</p><p>We argue that shaped reward functions may not be robust to changes in dynamics. We formalize this notion by studying policy invariance in two MDPs M, M which share the same reward and differ only in the dynamics, denoted as T and T , respectively. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">DISENTANGLING REWARDS FROM DYNAMICS</head><p>First, let the notation Q * r,T (s, a) denote the optimal Q-function with respect to a reward function r and dynamics T , and ? * r,T (a|s) denote the same for policies. We first define our notion of a "disentangled" reward. Definition 5.1 (Disentangled Rewards). A reward function r (s, a, s ) is (perfectly) disentangled with respect to a ground-truth reward r(s, a, s ) and a set of dynamics T such that under all dynamics T ? T , the optimal policy is the same: ? * r ,T (a|s) = ? * r,T (a|s)</p><p>We could also expand this definition to include a notion of suboptimality. However, we leave this direction to future work.</p><p>Under maximum causal entropy RL, the following condition is equivalent to two optimal policies being equal, since Q-functions and policies are equivalent representations (up to arbitrary functions of state f (s)):</p><formula xml:id="formula_6">Q * r ,T (s, a) = Q * r,T (s, a) ? f (s)</formula><p>To remove unwanted reward shaping with arbitrary reward function classes, the learned reward function can only depend on the current state s. We require that the dynamics satisfy a decomposability Collect trajectories ? i = (s 0 , a 0 , ..., s T , a T ) by executing ?.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5:</head><p>Train D ?,? via binary logistic regression to classify expert data ? E i from samples ? i .</p><p>6:</p><formula xml:id="formula_7">Update reward r ?,? (s, a, s ) ? log D ?,? (s, a, s ) ? log(1 ? D ?,? (s, a, s )) 7:</formula><p>Update ? with respect to r ?,? using any policy optimization method. 8: end for condition where functions over current states f (s) and next states g(s ) can be isolated from their sum f (s) + g(s ). This can be satisfied for example by adding self transitions at each state to an ergodic MDP, or any of the environments used in our experiments. The exact definition of the condition, as well as proof of the following statements are included in Appendix B. In the traditional IRL setup, where we learn the reward in a single MDP, our analysis motivates learning reward functions that are solely functions of state. If the ground truth reward is also only a function of state, this allows us to recover the true reward up to a constant.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">LEARNING DISENTANGLED REWARDS WITH AIRL</head><p>In the method presented in Section 4, we cannot learn a state-only reward function, r ? (s), meaning that we cannot guarantee that learned rewards will not be shaped. In order to decouple the reward function from the advantage, we propose to modify the discriminator of Sec. 4 with the form:</p><formula xml:id="formula_8">D ?,? (s, a, s ) = exp{f ?,? (s, a, s )} exp{f ?,? (s, a, s )} + ?(a|s) ,</formula><p>where f ?,? is restricted to a reward approximator g ? and a shaping term h ? as</p><formula xml:id="formula_9">f ?,? (s, a, s ) = g ? (s, a) + ?h ? (s ) ? h ? (s).<label>(4)</label></formula><p>The additional shaping term helps mitigate the effects of unwanted shaping on our reward approximator g ? (and as we will show, in some cases it can account for all shaping effects). The entire training procedure is detailed in Algorithm 1. Our algorithm resembles GAIL <ref type="bibr" target="#b10">(Ho &amp; Ermon, 2016)</ref> and GAN-GCL <ref type="bibr" target="#b5">(Finn et al., 2016a)</ref>, where we alternate between training a discriminator to classify expert data from policy samples, and update the policy to confuse the discriminator.</p><p>The advantage of this approach is that we can now parametrize g ? (s) as solely a function of the state, allowing us to extract rewards that are disentangled from the dynamics of the environment in which they were trained. In fact, under this restricted case, we can show the following under deterministic environments with a state-only ground truth reward (proof in Appendix C):</p><formula xml:id="formula_10">g * (s) = r * (s) + const, h * (s) = V * (s) + const,</formula><p>where r * is the true reward function. Since f * must recover to the advantage as shown in Sec. 4, h recovers the optimal value function V * , which serves as the reward shaping term.</p><p>To be consistent with Sec. 4, an alternative way to interpret the form of Eqn. 4 is to view f ?,? as the advantage under deterministic dynamics f * (s, a, s ) = r * (s) + ?V * (s )</p><formula xml:id="formula_11">Q(s,a) ? V * (s) V (s) = A * (s, a)</formula><p>In stochastic environments, we can instead view f (s, a, s ) as a single-sample estimate of A * (s, a).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">EXPERIMENTS</head><p>In our experiments, we aim to answer two questions:</p><p>1. Can AIRL learn disentangled rewards that are robust to changes in environment dynamics?</p><p>2. Is AIRL efficient and scalable to high-dimensional continuous control tasks?</p><p>To answer 1, we evaluate AIRL in transfer learning scenarios, where a reward is learned in a training environment, and optimized in a test environment with significantly different dynamics. We show that rewards learned with our algorithm under the constraint presented in Section 5 still produce optimal or near-optimal behavior, while na?ve methods that do not consider reward shaping fail. We also show that in small MDPs, we can recover the exact ground truth reward function.</p><p>To answer 2, we compare AIRL as an imitation learning algorithm against GAIL <ref type="bibr" target="#b10">(Ho &amp; Ermon, 2016)</ref> and the GAN-based GCL algorithm proposed by <ref type="bibr" target="#b5">Finn et al. (2016a)</ref>, which we refer to as GAN-GCL, on standard benchmark tasks that do not evaluate transfer. Note that <ref type="bibr" target="#b5">Finn et al. (2016a)</ref> does not implement or evaluate GAN-GCL and, to our knowledge, we present the first empirical evaluation of this algorithm. We find that AIRL performs on par with GAIL in a traditional imitation learning setup while vastly outperforming it in transfer learning setups, and outperforms GAN-GCL in both settings. It is worth noting that, except for <ref type="bibr" target="#b6">(Finn et al., 2016b)</ref>, our method is the only IRL algorithm that we are aware of that scales to high dimensional tasks with unknown dynamics, and although GAIL <ref type="bibr" target="#b10">(Ho &amp; Ermon, 2016)</ref> resembles an IRL algorithm in structure, it does not recover disentangled reward functions, making it unable to re-optimize the learned reward under changes in the environment, as we illustrate below.</p><p>For our continuous control tasks, we use trust region policy optimization <ref type="bibr" target="#b20">(Schulman et al., 2015)</ref> as our policy optimization algorithm across all evaluated methods, and in the tabular MDP task, we use soft value iteration. We obtain expert demonstrations by training an expert policy on the ground truth reward, but hide the ground truth reward from the IRL algorithm. In this way, we simulate a scenario where we wish to use RL to solve a task but wish to refrain from manual reward engineering and instead seek to learn a reward function from demonstrations. Our code and additional supplementary material including videos will be available at https://sites.google.com/view/ adversarial-irl, and hyper-parameter and architecture choices are detailed in Appendix D.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">RECOVERING TRUE REWARDS IN TABULAR MDPS</head><p>We first consider MaxEnt IRL in a toy task with randomly generated MDPs. The MDPs have 16 states, 4 actions, randomly drawn transition matrices, and a reward function that always gives a reward of 1.0 when taking an action from state 0. The initial state is always state 1.</p><p>The optimal reward, learned reward with a state-only reward function, and learned reward using a state-action reward function are shown in <ref type="figure">Fig. 1</ref>. We subtract a constant offset from all reward functions so that they share the same mean for visualization -this does not influence the optimal policy. AIRL with a state-only reward function is able to recover the ground truth reward, but AIRL with a state-action reward instead recovers a shaped advantage function.</p><p>We also show that in the transfer learning setup, under a new transition matrix T , the optimal policy under the state-only reward achieves optimal performance (it is identical to the ground truth reward) whereas the state-action reward only improves marginally over uniform random policy. The learning curve for this experiment is shown in <ref type="figure">Fig 2.</ref> Figure 1: Ground truth (a) and learned rewards (b, c) on the random MDP task. Dark blue corresponds to a reward of 1, and white corresponds to 0. Note that AIRL with a state-only reward recovers the ground truth, whereas the state-action reward is shaped.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 2:</head><p>Learning curve for the transfer learning experiment on tabular MDPs. Value iteration steps are plotted on the x-axis, against returns for the policy on the y-axis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">DISENTANGLING REWARDS IN CONTINUOUS CONTROL TASKS</head><p>To evaluate whether our method can learn disentangled rewards in higher dimensional environments, we perform transfer learning experiments on continuous control tasks. In each task, a reward is learned via IRL on the training environment, and the reward is used to reoptimize a new policy on a test environment. We train two IRL algorithms, AIRL and GAN-GCL, with state-only and stateaction rewards. We also include results for directly transferring the policy learned with GAIL, and an oracle result that involves optimizing the ground truth reward function with TRPO. Numerical results for these environment transfer experiments are given in <ref type="table" target="#tab_1">Table 1</ref>.</p><p>The first task involves a 2D point mass navigating to a goal position in a small maze when the position of the walls are changed between train and test time. At test time, the agent cannot simply mimic the actions learned during training, and instead must successfully infer that the goal in the maze is to reach the target. The task is shown in <ref type="figure">Fig. 3</ref>. Only AIRL trained with state-only rewards is able to consistently navigate to the goal when the maze is modified. Direct policy transfer and state-action IRL methods learn rewards which encourage the agent to take the same path taken in the training environment, which is blocked in the test environment. We plot the learned reward in <ref type="figure">Fig. 4</ref>.</p><p>In our second task, we modify the agent itself. We train a quadrupedal "ant" agent to run forwards, and at test time we disable and shrink two of the front legs of the ant such that it must significantly change its gait.We find that AIRL is able to learn reward functions that encourage the ant to move forwards, acquiring a modified gait that involves orienting itself to face the forward direction and crawling with its two hind legs. Alternative methods, including transferring a policy learned by GAIL (which achieves near-optimal performance with the unmodified agent), fail to move forward at all. We show the qualitative difference in behavior in <ref type="figure" target="#fig_2">Fig. 5</ref>.</p><p>We have demonstrated that AIRL can learn disentangled rewards that can accommodate significant domain shift even in high-dimensional environments where it is difficult to exactly extract the true reward. GAN-GCL can presumably learn disentangled rewards, but we find that the trajectorycentric formulation does not perform well even in learning rewards in the original task, let alone transferring to a new domain. GAIL learns successfully in the training domain, but does not acquire a representation that is suitable for transfer to test domains.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 3:</head><p>Illustration of the shifting maze task, where the agent (blue) must reach the goal (green). During training the agent must go around the wall on the left side, but during test time it must go around on the right. <ref type="figure">Figure 4</ref>: Reward learned on the point mass shifting maze task. The goal is located at the green star and the agent starts at the white circle. Note that there is little reward shaping, which enables the reward to transfer well. Bottom row: Behavior acquired by optimizing a state-only reward learned with AIRL on the disabled ant environment. Note that the ant must orient itself before crawling forward, which is a qualitatively different behavior from the optimal policy in the original environment, which runs sideways. Finally, we evaluate AIRL as an imitation learning algorithm against the GAN-GCL and the stateof-the-art GAIL on several benchmark tasks. Each algorithm is presented with 50 expert demonstrations, collected from a policy trained with TRPO on the ground truth reward function. For AIRL, we use an unrestricted state-action reward function as we are not concerned with reward transfer. Numerical results are presented in <ref type="table" target="#tab_2">Table 2</ref>.These experiments do not test transfer, and in a sense can be regarded as "testing on the training set," but they match the settings reported in prior work <ref type="bibr" target="#b10">(Ho &amp; Ermon, 2016)</ref>.</p><p>We find that the performance difference between AIRL and GAIL is negligible, even though AIRL is a true IRL algorithm that recovers reward functions, while GAIL does not. Both methods achieve close to the best possible result on each task, and there is little room for improvement. This result goes against the belief that IRL algorithms are indirect, and less efficient that direct imitation learning algorithms <ref type="bibr" target="#b10">(Ho &amp; Ermon, 2016)</ref>. The GAN-GCL method is ineffective on all but the simplest Pendulum task when trained with the same number of samples as AIRL and GAIL. We find that a discriminator trained over trajectories easily overfits and provides poor learning signal for the policy.</p><p>Our results illustrate that AIRL achieves the same performance as GAIL on benchmark imitation tasks that do not require any generalization. On tasks that require transfer and generalization, illustrated in the previous section, AIRL outperforms GAIL by a wide margin, since our method is able to recover disentangled rewards that transfer effectively in the presence of domain shift. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSION</head><p>We presented AIRL, a practical and scalable IRL algorithm that can learn disentangled rewards and greatly outperforms both prior imitation learning and IRL algorithms. We show that rewards learned with AIRL transfer effectively under variation in the underlying domain, in contrast to unmodified IRL methods which tend to recover brittle rewards that do not generalize well and GAIL, which does not recover reward functions at all. In small MDPs where the optimal policy and reward are unambiguous, we also show that we can exactly recover the ground-truth rewards up to a constant.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDICES A JUSTIFICATION OF AIRL</head><p>In this section, we show that the objective of AIRL matches that of solving the maximum causal entropy IRL problem. We use a similar method as <ref type="bibr" target="#b5">Finn et al. (2016a)</ref>, which shows the justification of GAN-GCL for the trajectory-centric formulation. For simplicity we derive everything in the undiscounted case.</p><p>A.1 SETUP As mentioned in Section 3, the goal of IRL can be seen as training a generative model over trajectories as: max</p><formula xml:id="formula_12">? J(?) = max ? E ? ?D [log p ? (? )]</formula><p>Where the distribution p ? (? ) is parametrized as p ? (? ) ? p(s 0 ) <ref type="bibr">st,at)</ref> . We can compute the gradient with respect to ? as follows:</p><formula xml:id="formula_13">T ?1 t=0 p(s t+1 |s t , a t )e r ? (</formula><formula xml:id="formula_14">? ?? J(?) = E D [ ? ?? log p ? (? )] == E D [ T t=0 ? ?? r ? (s t , a t )] ? ? ?? log Z ? = E D [ T t=0 ? ?? r ? (s t , a t )] ? E p ? [ T t=0 ? ?? r ? (s t , a t )]</formula><p>Let p ?,t (s t , a t ) = s t =t ,a t =t p ? (? ) denote the state-action marginal at time t. Rewriting the above equation, we have:</p><formula xml:id="formula_15">? ?? J(?) = T t=0 E D [ ? ?? r ? (s t , a t )] ? E p ?,t [ ? ?? r ? (s t , a t )]</formula><p>As it is difficult to draw samples from p ? , we instead train a separate importance sampling distribution ?(? ). For the choice of this distribution, we follow <ref type="bibr" target="#b5">Finn et al. (2016a)</ref> and use a mixture policy ?(a|s) = 1 2 ?(a|s) + 1 2p (a|s), wherep(a|s) is a rough density estimate trained on the demonstrations. This is justified as reducing the variance of the importance sampling estimate when the policy ?(a|s) has poor coverage over the demonstrations in the early stages of training. Thus, our new gradient is:</p><formula xml:id="formula_16">? ?? J(?) = T t=0 E D [ ? ?? r ? (s t , a t )] ? E ?t [ p ?,t (s t , a t ) ? t (s t , a t ) ? ?? r ? (s t , a t )]<label>(5)</label></formula><p>We additionally wish to adapt the importance sampler ? to reduce variance, by minimizing D KL (?(? )||p ? (? )).</p><p>The policy trajectory distribution factorizes as ?(? ) = p(s 0 ) T ?1 t=0 p(s t+1 |s t , a t )?(a t |s t ). The dynamics and initial state terms inside ?(? ) and p ? (? ) cancel, leaving the entropy-regularized policy objective:</p><formula xml:id="formula_17">max ? E ? [ T t=0 r ? (s t , a t ) ? log ?(a t |s t ))]<label>(6)</label></formula><p>In AIRL, we replace the cost learning objective with training a discriminator of the following form:</p><formula xml:id="formula_18">D ? (s, a) = exp{f ? (s, a)} exp{f ? (s, a)} + ?(a|s)<label>(7)</label></formula><p>The objective of the discriminator is to minimize cross-entropy loss between expert demonstrations and generated samples:</p><formula xml:id="formula_19">L(?) = T t=0 ?E D [log D ? (s t , a t )] ? E ?t [log(1 ? D ? (s t , a t ))]</formula><p>We replace the policy optimization objective with the following reward: r(s, a) = log(D ? (s, a)) ? log(1 ? D ? (s, a))</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 DISCRIMINATOR OBJECTIVE</head><p>First, we show that training the gradient of the discriminator objective is the same as Eqn. 5. We write the negative loss to turn the minimization problem into maximization, and use ? to denote a mixture between the dataset and policy samples.</p><formula xml:id="formula_20">?L(?) = T t=0 E D [log D ? (s t , a t )] + E ?t [log(1 ? D ? (s t , a t ))] = T t=0 E D log exp{f ? (s t , a t )} exp{f ? (s t , a t )} + ?(a t |s t ) + E ?t log ?(a t |s t ) exp{f ? (s t , a t )} + ?(a t |s t ) = T t=0 E D [f ? (s t , a t )] + E ?t [log ?(a t |s t )] ? 2E? t [log (exp{f ? (s t , a t )} + ?(a t |s t ))]</formula><p>Taking the derivative w.r.t. ?, ? ?? L(?) =</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B STATE-ONLY INVERSE REINFORCEMENT LEARNING</head><p>In this section we include proofs for Theorems 5.1 and 5.2, and the condition on the dynamics necessary for them to hold. Definition B.1 (Decomposability Condition). Two states s 1 , s 2 are defined as "1-step linked" under a dynamics or transition distribution T (s |a, s) if there exists a state s that can reach s 1 and s 2 with positive probability in one time step. Also, we define that this relationship can transfer through transitivity: if s 1 and s 2 are linked, and s 2 and s 3 are linked, then we also consider s 1 and s 3 to be linked.</p><p>A transition distribution T satisfies the decomposability condition if all states in the MDP are linked with all other states.</p><p>The key reason for needing this condition is that it allows us to decompose the functions state dependent f (s) and next state dependent g(s ) from their sum f (s) + g(s ), as stated below: We consider the case when the ground truth reward is state-only. We now show that if the learned reward is also state-only, then we guarantee learning disentangled rewards, and vice-versa (sufficiency and necessity). Theorem 5.1. Let r(s) be a ground-truth reward, and T be a dynamics model satisfying the decomposability condition. Suppose IRL recovers a state-only reward r (s) such that it produces an optimal policy in T : Q * r ,T (s, a) = Q * r,T (s, a) ? f (s) Then, r (s) is disentangled with respect to all dynamics.</p><p>Proof. We show that r (s) must equal the ground-truth reward up to constants (modifying rewards by constants does not change the optimal policy).</p><p>Let r (s) = r(s) + ?(s) for some arbitrary function of state ?(s). We have: Then r is only a function of state.</p><p>Proof. We show the converse, namely that if r (s, a, s ) can depend on a or s , then there exists a dynamics model T such that the optimal policy is changed, i.e. Q * r,T (s, a) = Q * r ,T (s, a) + f (s) ?s, a.</p><p>Consider the following 3-state MDP with deterministic dynamics and starting state S: We denote the action with a small letter, i.e. taking the action a from S brings the agent to state A, receiving a reward of 0. For simplicity, assume the discount factor ? = 1. The optimal policy here takes the a action, returns to s, and repeat for infinite positive reward. An action-dependent reward which induces the same optimal policy would be to move the reward from the action returning to s to the action going to a or s: Optimizing r on this new MDP results in a different policy than optimizing r, as the agent visits B, resulting in infinite negative reward.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C AIRL RECOVERS REWARDS UP TO CONSTANTS</head><p>In this section, we prove that AIRL can recover the ground truth reward up to constants if the ground truth is only a function of state r(s). For simplicity, we consider deterministic environments, so that s is uniquely defined by s, a, and we restrict AIRL's reward estimator g to only be a function of state.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Suppose an IRL algorithm recovers a shaped, policy invariant rewardr(s, a, s ) under MDP M where ? = 0. Then, there exists MDP pairs M, M where changing the transition model from T to T breaks policy invariance on MDP M . As a simple example, consider deterministic dynamics T (s, a) ? s and state-action rewardsr(s, a) = r(s, a) + ??(T (s, a)) ? ?(s). It is easy to see that changing the dynamics T to T such that T (s, a) = T (s, a) means thatr(s, a) no longer lies in the equivalence class of Eqn. 3 for M .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>Theorem 5.1. Let r(s) be a ground-truth reward, and T be a dynamics model satisfying the decomposability condition. Suppose IRL recovers a state-only reward r (s) such that it produces an optimal policy in T : Q * r ,T (s, a) = Q * r,T (s, a) ? f (s) Then, r (s) is disentangled with respect to all dynamics. Theorem 5.2. If a reward function r (s, a, s ) is disentangled for all dynamics functions, then it must be state-only. i.e. If for all dynamics T , Q * r,T (s, a) = Q * r ,T (s, a) + f (s) ?s, a Then r is only a function of state.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 :</head><label>5</label><figDesc>Top row: An ant running forwards (right in the picture) in the training environment.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>Lemma B.1. Suppose the dynamics for an MDP satisfy the decomposability condition. Then, for functions a(s), b(s), c(s), d(s), if for all s, s : a(s) + b(s ) = c(s) + d(s ) Then for for all s, a(s) = c(s) + const b(s) = d(s) + const Proof. Rearranging, we have: a(s) ? c(s) = b(s ) ? d(s ) Let us rewrite f (s) = a(s) ? c(s). This means we have f (s) = b(s ) ? d(s ) for some function only dependent on s. In order for this to be representable, the term b(s ) ? d(s ) must be equal for all successor states s from s. Under the decomposability condition, all successor states must therefore be equal in this manner through transitivity, meaning we have b(s ) ? d(s ) must be constant with respect to s. Therefore, a(s) = c(s) + const. We can then substitute this expression back in to the original equation to derive b(s) = d(s) + const.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>Q * r (s, a) = r(s) + ?E s [softmax a Q * r (s , a )]Q * r (s, a) ? f (s) = r(s) ? f (s) + ?E s [softmax a Q * r (s , a )] Q * r (s, a) ? f (s) = r(s) + ?E s [f (s )] ? f (s) + ?E s [softmax a Q * r (s , a ) ? f (s )] Q * r (s, a) = r(s) + ?E s [f (s )] ? f (s) + ?E s [softmax a Q * r (s , a )]From here, we see that:r (s) = r(s) + ?E s [f (s )] ? f (s)Meaning we must have for all s, a:?(s) = ?E s [f (s )] ? f (s)This places the requirement that all successor states from s must have the same potential f (s). Under the decomposability condition, every state in the MDP can be linked with such an equality statement, meaning that f (s) is constant. Thus, r (s) = r(s) + const.Theorem 5.2. If a reward function r (s, a, s ) is disentangled for all dynamics functions, then it must be state-only. i.e. If for all dynamics T , Q * r,T (s, a) = Q * r ,T (s, a) + f (s) ?s, a</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>the shaping potential ?(S) = 0, ?(A) = 1, ?(B) = ?1. Now suppose we modify the dynamics such that action a leads to B and action b leads to A:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Algorithm 1 Adversarial inverse reinforcement learning 1: Obtain expert trajectories ? E i 2: Initialize policy ? and discriminator D ?,? . 3: for step t in {1, . . . , N} do</figDesc><table><row><cell>4:</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Results on transfer learning tasks. Mean scores (higher is better) are reported over 5 runs. We also include results for TRPO optimizing the ground truth reward, and the performance of a policy learned via GAIL on the training environment.</figDesc><table><row><cell></cell><cell cols="3">State-Only? Point Mass-Maze Ant-Disabled</cell></row><row><cell>GAN-GCL</cell><cell>No</cell><cell>-40.2</cell><cell>-44.8</cell></row><row><cell>GAN-GCL</cell><cell>Yes</cell><cell>-41.8</cell><cell>-43.4</cell></row><row><cell>AIRL (ours)</cell><cell>No</cell><cell>-31.2</cell><cell>-41.4</cell></row><row><cell>AIRL (ours)</cell><cell>Yes</cell><cell>-8.82</cell><cell>130.3</cell></row><row><cell>GAIL, policy transfer</cell><cell>N/A</cell><cell>-29.9</cell><cell>-58.8</cell></row><row><cell>TRPO, ground truth</cell><cell>N/A</cell><cell>-8.45</cell><cell>315.5</cell></row><row><cell cols="2">7.3 BENCHMARK TASKS FOR IMITATION LEARNING</cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2</head><label>2</label><figDesc></figDesc><table><row><cell cols="5">: Results on imitation learning benchmark tasks. Mean scores (higher is better) are reported</cell></row><row><cell>across 5 runs.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>Pendulum</cell><cell>Ant</cell><cell cols="2">Swimmer Half-Cheetah</cell></row><row><cell>GAN-GCL</cell><cell>-261.5</cell><cell>460.6</cell><cell>-10.6</cell><cell>-670.7</cell></row><row><cell>GAIL</cell><cell>-226.0</cell><cell>1358.7</cell><cell>140.2</cell><cell>1642.8</cell></row><row><cell>AIRL (ours)</cell><cell>-204.7</cell><cell>1238.6</cell><cell>139.1</cell><cell>1839.8</cell></row><row><cell>AIRL State Only (ours)</cell><cell>-221.5</cell><cell>1089.3</cell><cell>136.4</cell><cell>891.9</cell></row><row><cell>Expert (TRPO)</cell><cell>-179.6</cell><cell>1537.9</cell><cell>141.1</cell><cell>1811.2</cell></row><row><cell>Random</cell><cell>-654.5</cell><cell>-108.1</cell><cell>-11.5</cell><cell>-988.4</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">T t =t ? t (r(s t , a t ) + H(?(?|s t ))] denotes the soft Qfunction.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>This research was supported by the National Science Foundation through IIS-1651843, IIS-1614653, and IIS-1637443. We would like to thank Roberto Calandra for helpful feedback on the paper.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Multiplying the top and bottom of the fraction in the second expectation by the state marginal ?(s t ) = a ? t (s t , a t ), and grouping terms we get:</p><p>Where we have writtenp ?,t (s t , a t ) = exp{f ? (s t , a t )}? t (s t ), and? to denote a mixture between p ? (s, a) and policy samples.</p><p>This expression matches Eqn. 5, with f ? (s, a) serving as the reward function, when ? maximizes the policy objective so thatp ? (s, a) = p ? (s, a).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3 POLICY OBJECTIVE</head><p>Next, we show that the policy objective matches that of the sampler of Eqn. 6. The objective of the policy is to maximize with respect to the rewardr t (s, a). First, note that:</p><p>Thus, whenr(s, a) is summed over entire trajectories, we obtain the entropy-regularized policy objective</p><p>Where f ? serves as the reward function.</p><p>A.4 f ? (s, a) RECOVERS THE ADVANTAGE The global minimum of the discriminator objective is achieved when ? = ? E , where ? denotes the learned policy (the "generator" of a GAN) and ? E denotes the policy under which demonstrations were collected <ref type="bibr" target="#b8">(Goodfellow et al., 2014)</ref>. At this point, the output of the discriminator is 1 2 for all values of s, a, meaning we have exp{f ? (s, a)} = ? E (a|s), or f * (s, a) = log ? E (a|s) = A * (s, a).</p><p>Theorem C.1. Suppose we use AIRL with a discriminator of the form</p><p>We also assume we have deterministic dynamics, in addition to the decomposability condition on the dynamics from Thm 5.1.</p><p>Then if AIRL recovers the optimal f * (s, a, s ), we have </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D EXPERIMENT DETAILS</head><p>In this section we detail hyperparameters and training procedures used for our experiments. These hyperparameters were selected via a grid search.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.1 NETWORK ARCHITECTURES</head><p>For the tabular MDP environment, we also use a tabular representation for function approximators.</p><p>For continuous control experiments, we use a two-layer ReLU network with 32 units for the discriminator of GAIL and GAN-GCL. For AIRL, we use a linear function approximator for the reward term g and a 2-layer ReLU network for the shaping term h. For the policy, we use a two-layer (32 units) ReLU gaussian policy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.2 OTHER HYPERPARAMETERS</head><p>Entropy regularization: We use an entropy regularizer weight of 0.1 for Ant, Swimmer, and HalfCheetah across all methods. We use an entropy regularizer weight of 1.0 on the point mass environment.</p><p>TRPO Batch Size: For Ant, Swimmer and HalfCheetah environments, we use a batch size of 10000 steps per TRPO update. For pendulum, we use a batch size of 2000.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.3 OTHER TRAINING DETAILS</head><p>IRL methods commonly learn rewards which explain behavior locally for the current policy, because the reward can "forget" the signal that it gave to an earlier policy. This makes rewards obtained at the end of training difficult to optimize from scratch, as they overfit to samples from the current iteration. To somewhat migitate this effect, we mix policy samples from the previous 20 iterations of training as negatives when training the discriminator. We use this strategy for both AIRL and GAN-GCL.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Apprenticeship learning via inverse reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pieter</forename><surname>Abbeel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Ng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning (ICML)</title>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Repeated inverse reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kareem</forename><surname>Amin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nan</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Satinder</forename><forename type="middle">P</forename><surname>Singh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Concrete problems in AI safety</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dario</forename><surname>Amodei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Olah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jacob</forename><surname>Steinhardt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Christiano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Schulman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Man?</surname></persName>
		</author>
		<idno>abs/1606.06565</idno>
	</analytic>
	<monogr>
		<title level="j">ArXiv Preprint</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A survey of robot learning from demonstration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brenna</forename><forename type="middle">D</forename><surname>Argall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sonia</forename><surname>Chernova</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Manuela</forename><surname>Veloso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brett</forename><surname>Browning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Robotics and autonomous systems</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="469" to="483" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Relative entropy inverse reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abdeslam</forename><surname>Boularias</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jens</forename><surname>Kober</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan</forename><surname>Peters</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Artificial Intelligence and Statistics (AISTATS)</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">A connection between generative adversarial networks, inverse reinforcement learning, and energy-based models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chelsea</forename><surname>Finn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Christiano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pieter</forename><surname>Abbeel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
		<idno>abs/1611.03852</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Guided cost learning: Deep inverse optimal control via policy optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chelsea</forename><surname>Finn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pieter</forename><surname>Abbeel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning (ICML)</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Generalizing skills with semisupervised reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chelsea</forename><surname>Finn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tianhe</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Justin</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pieter</forename><surname>Abbeel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations (ICLR</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Generative adversarial nets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ian</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jean</forename><surname>Pouget-Abadie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mehdi</forename><surname>Mirza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bing</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Warde-Farley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sherjil</forename><surname>Ozair</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron</forename><surname>Courville</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Reinforcement learning with deep energy-based policies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tuomas</forename><surname>Haarnoja</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Haoran</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pieter</forename><surname>Abbeel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning (ICML)</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Generative adversarial imitation learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefano</forename><surname>Ermon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Nonlinear inverse reinforcement learning with gaussian processes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zoran</forename><surname>Popovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vladlen</forename><surname>Koltun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">End-to-end training of deep visuomotor policies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chelsea</forename><surname>Finn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Trevor</forename><surname>Darrell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pieter</forename><surname>Abbeel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning (JMLR)</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Human-level control through deep reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Volodymyr</forename><surname>Mnih</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Koray</forename><surname>Kavukcuoglu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrei</forename><forename type="middle">A</forename><surname>Rusu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joel</forename><surname>Veness</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Marc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Bellemare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andreas</forename><forename type="middle">K</forename><surname>Riedmiller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georg</forename><surname>Fidjeland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stig</forename><surname>Ostrovski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Petersen</surname></persName>
		</author>
		<idno>0028-0836</idno>
	</analytic>
	<monogr>
		<title level="m">Shane Legg, and Demis Hassabis</title>
		<meeting><address><addrLine>Charles Beattie, Amir Sadik, Ioannis Antonoglou, Helen King, Dharshan Kumaran, Daan Wierstra</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2015-02" />
			<biblScope unit="volume">518</biblScope>
			<biblScope unit="page" from="529" to="533" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Algorithms for reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuart</forename><surname>Russell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning (ICML)</title>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Policy invariance under reward transformations: Theory and application to reward shaping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daishi</forename><surname>Harada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuart</forename><surname>Russell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning (ICML)</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Control of memory, active perception, and action in minecraft</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Junhyuk</forename><surname>Oh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Valliappa</forename><surname>Chockalingam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Satinder</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Honglak</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning (ICML)</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Boosting structured prediction for imitation learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nathan</forename><surname>Ratliff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Bradley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">Andrew</forename><surname>Bagnell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joel</forename><surname>Chestnutt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Maximum margin planning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nathan</forename><forename type="middle">D</forename><surname>Ratliff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">Andrew</forename><surname>Bagnell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><forename type="middle">A</forename><surname>Zinkevich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning (ICML)</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Learning agents for uncertain environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuart</forename><surname>Russell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Conference On Learning Theory (COLT)</title>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Trust Region Policy Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Schulman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergey</forename><surname>Levine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Philipp</forename><surname>Moritz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">I</forename><surname>Jordan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pieter</forename><surname>Abbeel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning (ICML)</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Model-free deep inverse reinforcement learning by logistic regression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eiji</forename><surname>Uchibe</surname></persName>
		</author>
		<idno type="DOI">10.1007/s11063-017-9702-7</idno>
	</analytic>
	<monogr>
		<title level="m">Neural Processing Letters</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Maximum entropy deep inverse reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Markus</forename><surname>Wulfmeier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Ondruska</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ingmar</forename><surname>Posner</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1507.04888</idno>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note type="report_type">In arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Modeling purposeful adaptive behavior with the principle of maximum causal entropy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Ziebart</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
		<respStmt>
			<orgName>Carnegie Mellon University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Maximum entropy inverse reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Ziebart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Maas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Bagnell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anind</forename><surname>Dey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI Conference on Artificial Intelligence (AAAI)</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
