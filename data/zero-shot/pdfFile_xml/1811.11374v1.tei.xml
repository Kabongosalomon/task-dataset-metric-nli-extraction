<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Deep Cascade Model for Multi-Document Reading Comprehension</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ming</forename><surname>Yan</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Alibaba Group</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiangnan</forename><surname>Xia</surname></persName>
							<email>jiangnan.xjn@alibaba-inc.com</email>
							<affiliation key="aff0">
								<orgName type="laboratory">Alibaba Group</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chen</forename><surname>Wu</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Alibaba Group</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bin</forename><surname>Bi</surname></persName>
							<email>bi@alibaba-inc.com</email>
							<affiliation key="aff0">
								<orgName type="laboratory">Alibaba Group</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhongzhou</forename><surname>Zhao</surname></persName>
							<email>zhongzhou.zhaozz@alibaba-inc.com</email>
							<affiliation key="aff0">
								<orgName type="laboratory">Alibaba Group</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ji</forename><surname>Zhang</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Alibaba Group</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luo</forename><surname>Si</surname></persName>
							<email>luo.si@alibaba-inc.com</email>
							<affiliation key="aff0">
								<orgName type="laboratory">Alibaba Group</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rui</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Alibaba Group</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Alibaba Group</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Haiqing</forename><surname>Chen</surname></persName>
							<email>haiqing.chenhq@alibaba-inc.com</email>
							<affiliation key="aff0">
								<orgName type="laboratory">Alibaba Group</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">A Deep Cascade Model for Multi-Document Reading Comprehension</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2022-11-12T10:02+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>A fundamental trade-off between effectiveness and efficiency needs to be balanced when designing an online question answering system. Effectiveness comes from sophisticated functions such as extractive machine reading comprehension (MRC), while efficiency is obtained from improvements in preliminary retrieval components such as candidate document selection and paragraph ranking. Given the complexity of the real-world multi-document MRC scenario, it is difficult to jointly optimize both in an end-to-end system. To address this problem, we develop a novel deep cascade learning model, which progressively evolves from the documentlevel and paragraph-level ranking of candidate texts to more precise answer extraction with machine reading comprehension. Specifically, irrelevant documents and paragraphs are first filtered out with simple functions for efficiency consideration. Then we jointly train three modules on the remaining texts for better tracking the answer: the document extraction, the paragraph extraction and the answer extraction. Experiment results show that the proposed method outperforms the previous state-of-the-art methods on two large-scale multidocument benchmark datasets, i.e., TriviaQA and DuReader. In addition, our online system can stably serve typical scenarios with millions of daily requests in less than 50ms.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>Machine reading comprehension (MRC), which empowers computers with the ability to read and comprehend knowledge and then answer questions from textual data, has made rapid progress in recent years. From the early cloze-style test <ref type="bibr" target="#b2">(Hermann et al. 2015;</ref><ref type="bibr" target="#b3">Hill et al. 2015)</ref> to answer extraction from a single paragraph <ref type="bibr" target="#b7">(Rajpurkar et al. 2016)</ref>, and to the more complex open-domain question answering from web data <ref type="bibr" target="#b5">(Joshi et al. 2017;</ref><ref type="bibr" target="#b7">Nguyen et al. 2016)</ref>, great efforts have been made to push the MRC technique to more practical applications.</p><p>The rapid progress of MRC in recent years mostly owes to the release of the single-paragraph benchmark dataset SQuAD <ref type="bibr" target="#b7">(Rajpurkar et al. 2016</ref>), on which various deep attention-based methods have been proposed to constantly push the state-of-the-art performance <ref type="bibr" target="#b8">(Seo et al. 2016;</ref><ref type="bibr" target="#b13">Wang et al. 2017c;</ref><ref type="bibr" target="#b15">Yu et al. 2018)</ref>. It is a significant mile-Copyright c 2019, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved. stone that several MRC models have exceeded the performance of human annotators on the SQuAD dataset 1 . However, the SQuAD dataset makes a strong assumption that the answers are contained in the given paragraphs. Besides, the parapraphs are rather short, approximately 200 words on average, while a real-world scenario usually involves multiple documents of much longer length. Therefore, several latest studies <ref type="bibr" target="#b5">(Joshi et al. 2017;</ref><ref type="bibr" target="#b1">Clark and Gardner 2017;</ref><ref type="bibr" target="#b8">Tan et al. 2017)</ref> begin to re-design the task into more realistic settings: the MRC models are required to read and comprehend multiple documents to reach the final answer.</p><p>In multi-document MRC, depending on the way of combining the two components, document selection and extractive reading comprehension, there are two categories of approaches: 1) The pipeline approach treats the document selection and extractive reading comprehension as two separate parts, where a document is firstly selected through document ranking and then passed to the MRC model for extracting the final answer <ref type="bibr" target="#b5">(Joshi et al. 2017;</ref><ref type="bibr" target="#b11">Wang et al. 2017a)</ref>; 2) Several recent studies <ref type="bibr" target="#b8">(Tan et al. 2017;</ref><ref type="bibr" target="#b1">Clark and Gardner 2017;</ref><ref type="bibr" target="#b15">Wang et al. 2018</ref>) adopt a joint learning method to optimize both sub-tasks in a unified framework simultaneously.</p><p>The pipeline method relies heavily on the quality of the document ranking module. When it fails to give the relevant documents higher ranks or filters out the ones that contain the correct answers, the downstream MRC module has no way to recover and extract the answers of interest. For the joint learning method, it is computationally expensive to jointly optimize both tasks with all the documents. This computation cost limits its application to the operational online environment, such as Amazon 2 and Taobao 3 , where efficiency is a critical factor to be considered.</p><p>To address the above problems, we propose a deep cascade model which combines the advantages of both methods in a coarse-to-fine manner. The deep cascade model is designed to properly keep the balance between the effectiveness and efficiency. At early stages of the model, simple features and ranking functions are used to select a candidate set of most relevant contents, filtering out the irrelevant documents and paragraphs as much as possible. Then the selected paragraphs are passed to the attention-based deep MRC model for extracting the actual answer span at word level. To better support the answer extraction, we also introduce the document extraction and paragraph extraction as two auxiliary tasks, which helps to quickly narrow down the entire search space. We jointly optimize all the three tasks in a unified deep MRC model, which shares some common bottom layers. This cascaded structure enables the models to perform a coarse-to-fine pruning at different stages, better models can be learnt effectively and efficiently.</p><p>The overall framework of our model is demonstrated in <ref type="figure" target="#fig_0">Figure 1</ref>, which consists of three modules: document retrieval, paragraph retrieval and answer extraction. The first module takes the question and a collection of raw documents as input. The module at each subsequent stage consumes the output from the previous stage, and further prunes the documents, paragraphs and answer spans given the question. For each of the first two modules, we define a ranking function and an extraction function. The ranking function is first used as a preliminary filter to discard most of the irrelevant documents or paragraphs, so as to keep our framework efficient. The extraction function is then designed to deal with the auxiliary document and paragraph extraction tasks, which is jointly optimized with the final answer extraction module for better extraction performance. The local ranking functions in different modules gradually increase in cost and complexity, to properly keep the balance between the effectiveness and efficiency.</p><p>The main contributions can be summarized as follow: ? We propose a deep cascade learning framework to address the practical multi-document machine reading comprehension task, which considers both the effectiveness and efficiency in a coarse-to-fine manner. ? We incorporate the auxiliary document extraction and paragraph extraction tasks to the pure answer span prediction, which helps to narrow down the search space and improves the final extraction result in multi-document MRC scenario. ? We conduct extensive experiments on two largescale multi-document MRC benchmark datasets: Trivi-aQA <ref type="bibr" target="#b5">(Joshi et al. 2017)</ref> and DuReader .</p><p>The results show that our deep cascade model can outperform the previous state-of-the-art performance on both datasets. Besides, the proposed model has also been successfully applied in our online system and stably serve various scenarios in a quick response time of less than 50ms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Related Work Machine Reading Comprehension</head><p>Recently, we can see emerging interests in multi-document MRC research <ref type="bibr" target="#b7">(Nguyen et al. 2016;</ref><ref type="bibr" target="#b1">Clark and Gardner 2017;</ref><ref type="bibr" target="#b12">Wang et al. 2017b;</ref><ref type="bibr" target="#b15">Wang et al. 2018)</ref>, where multiple documents are given as input. There are two categories of approaches: the pipeline-based approaches and the joint learning models. The pipeline approach firstly selects a single document via ranking and then pass it to the MRC model to extract the precise answer <ref type="bibr" target="#b5">(Joshi et al. 2017;</ref><ref type="bibr" target="#b11">Wang et al. 2017a</ref>). This approach gives huge burden to the document ranking model, in which the downstream MRC model has no way to extract the right answer if the relevant documents are missed. The joint learning approaches take all the documents into consideration and extract the answer by comparing it against other documents (Clark and Gardner 2017; <ref type="bibr" target="#b9">Tan et al. 2018;</ref><ref type="bibr" target="#b15">Wang et al. 2018)</ref>. (Clark and Gardner 2017) proposes a confidence-based method with a shared normalization training objective, which enables the model to produce globally correct output. <ref type="bibr" target="#b9">(Tan et al. 2018)</ref> proposes an extraction-then-synthesis framework, by also incorporating passage ranking to answer span prediction.  further proposes a verification method to make use of the extracted answers in different documents to verify each other for more accurate prediction. However, taking all the documents into consideration will inevitably bring more computation cost, which can be unbearable in the operational online environment. Our deep cascade model can serve as a proper tradeoff between the pipeline method and joint learning method. It has a coarse-to-fine structure which can eliminate irrelevant documents and paragraphs in the early stages with simple features and models, and better identify more relevant answers in a well-designed multi-task deep MRC model on the remaining content.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cascade Learning</head><p>In designing online systems, trade-off between effectiveness and efficiency remains a long-standing problem. Cascade learning is an alternative strategy that can better balance these two, which utilizes a sequence of functions in different stages and allows using different sets of features for different instances. It is firstly introduced in the traditional classification and detection problems such as fast visual object detection <ref type="bibr" target="#b7">(Schneiderman 2004;</ref><ref type="bibr" target="#b0">Bourdev and Brandt 2005)</ref>, and then widely applied in ranking applications for achieving high top-k rank effectiveness in an efficient manner (Lefakis and Fleuret 2010; <ref type="bibr" target="#b14">Wang, Lin, and Metzler 2011;</ref>. <ref type="bibr" target="#b14">(Wang, Lin, and Metzler 2011)</ref> uses an Adaboost style framework with two independent ranking functions in each stage, one for pruning the input ranked documents and the other for refining the rank order. We apply the idea of cascade learning to machine reading comprehension, from a preliminary document-level and paragraph-level ranking of the candidate texts, to a more precise answer span extraction. The extracted answer spans are progressively narrowed down across different levels, and the ranking and extraction functions also progressively increase in complexity for more precise answer prediction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Deep Cascade Model</head><p>Following the overview in <ref type="figure" target="#fig_0">Figure 1</ref>, our approach consists of three cascade modules: document retrieval, paragraph retrieval and answer extraction. The cascade ranking functions in the first two modules aim to fast filter out the irrelevant document content based on the basic statistical and structural features, and obtain a coarse ranking for the candidate documents. For the remaining document content, we design three extraction tasks at different granularities, with the goal to simultaneously extract the right document, paragraph and also the answer span. A deep attention-based MRC model is designed to jointly optimize all the three extraction tasks, by sharing the common bottom layers, as is shown in <ref type="figure" target="#fig_1">Figure 2</ref>. The final answer is thus determined by not only the answer span prediction score, but also the corresponding document and paragraph prediction score.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cascade Ranking Functions</head><p>Given a question Q and a set of candidate documents {D i }, we first introduce the cascade ranking functions of the first two modules for pruning the documents, which gradually increases in complexity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Document Ranking</head><p>This part aims at fast filtering out the irrelevant documents and obtaining a coarse ranking for the candidate documents. We utilize the traditional information retrieval methods, such as BM25 and TF-IDF distance, to measure the relevance between the question and document.</p><p>The matching is conducted between the textual metadata of question and document, including the document title and main content. Besides, the recall ratio of the question words from the document metadata is used as another feature to indicate the relevance of the document.</p><p>To learn the importance of different features, we use a learning-to-rank model to assign a weighted relevance score to each retrieved document. By design, the first stage needs to be quick and simple, so we cast the task as a binary classification problem and adopt the pointwise logistic regression as the ranking function. The documents containing the answer are labeled as positive. After this ranking, we only keep the top-K ranked documents for further processing.</p><p>Paragraph Ranking This part aims at fast discarding the irrelevant content within each document at a paragraph level. Specifically, given an output document D i = {P ij } from the previous stage, we first prune the noisy paragraphs without word or entity match. The simple question and paragraph textual matching features are also extracted as in that of document ranking. Moreover, the document structure can contain some sort of inherent information, for example, the first paragraph within a document may tend to possess more informative content as a document abstract. Therefore, we also add some structural features, such as whether the paragraph is the first or last paragraph of the document, the length of the paragraph, the length of the previous or subsequent paragraphs. To understand the question, we also incorporate the question type information as several binary features if is given, e.g. for DuReader dataset.</p><p>To better combine different kinds of features, we adopt a scalable tree boosting method XGBoost (Chen and Guestrin 2016) for ranking, which is widely used to achieve state-ofthe-art results on many large-scale machine learning challenges. Again, we use the binary logistic loss for model training and label the paragraph containing the answer as positive. As a result, we select the top-N paragraphs from each document for the subsequent answer prediction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Multi-task Deep Attention Model</head><p>Given the selected P paragraphs from the top-ranked K documents, the final task is to extract an answer span to answer the question Q. A deep attention-based MRC model is designed to achieve this goal. However, with all these documents and paragraphs, it may be still difficult to directly conduct the pure answer prediction at a precise word level, as in that of SQuAD dataset. The document and paragraph information is also not fully exploited. Therefore, we split the answer prediction task into three joint tasks: document extraction, paragraph extraction and answer span extraction. The three tasks share the same bottom layers, which represents the semantics of the document context with respect to the question words, as is shown in <ref type="figure" target="#fig_1">Figure 2</ref>. By introducing the auxiliary document extraction and paragraph extraction tasks, the proposed model can progressively narrow down the search space from coarse to fine, which helps to better locate on the final answer span. The final answer prediction is based on the results of all the three tasks, which is jointly optimized with a joint learning method.</p><p>Shared Q&amp;D Modeling Given a question Q and a set of selected documents {D i }, one of the keys in MRC model lies in how to incorporate the question context into the document, so that important information can be highlighted. We follow the attention &amp; fusion mechanism used in <ref type="bibr" target="#b15">(Wang, Yan, and Wu 2018)</ref>, which is a previous state-of-the-art MRC method on SQuAD dataset.</p><p>Specifically, we first map each word into the vector space by concatenating its word embedding and CNN-based character embedding. Then we use bi-directional LSTM (BiL-STM) to encode the question Q and documents {D i } as:</p><formula xml:id="formula_0">u Q t = BiLSTM Q (u Q t?1 , [e Q t , c Q t ]) u D t = BiLSTM D (u D t?1 , [e D t , c D t ])<label>(1)</label></formula><p>where e t and c t are the word embedding and character embedding of the t th word. u Q t and u D t are the encoding vectors of the t th word in Q and D, respectively.</p><p>After the encoding, we use the co-attention method to effectively incorporate the question information into the document context, and obtain the question-aware document representation? D t = j ? tj ? u D j . We adopt the attention function used in DrQA <ref type="bibr" target="#b1">(Chen et al. 2017a)</ref>, which computes the attention score ? ij by the dot products between nonlinear mappings of word representations:</p><formula xml:id="formula_1">? ij = softmax(ReLU(W l u Q i ) ? ReLU(W l u D j )) (2)</formula><p>where W l is a linear projection matrix, softmax is the normalization function, and ReLU is the nonlinear activation function.</p><p>To combine the original representation u D t and the attention vector? D t , we adopt the fusion kernel used in <ref type="bibr" target="#b15">(Wang, Yan, and Wu 2018)</ref> for better semantic understanding:</p><formula xml:id="formula_2">v D t = Fuse(u D t ,? D t )</formula><p>(3) where the fusion kernel Fuse(?, ?) is actually a gating layer to combine two representations, we do not give the details here due to space limitation.</p><p>To model the long distance dependency issue of document context, we also introduce the self-attention layer to further align the document representation v D t against itself, as:</p><formula xml:id="formula_3">? ij = softmax(v D i ? W s ? v D j ) v D t = j ? tj ? v D j d D t = Fuse(v D t ,? D t )<label>(4)</label></formula><p>where W s is a trainable bilinear projection matrix. Another fusion kernel is again used to combine the original and selfattentive representations. For all the previous encoding and attention steps, we process each document independently given the question. Finally, we obtain a question-aware representation D Di = {d Di t } for each word in each document. For the question side, since it is generally short, we directly self-align the question to a vector r Q , which is independent from the document, as</p><formula xml:id="formula_4">? t = softmax(w q ? u Q t ) r Q = t ? t ? u Q t<label>(5)</label></formula><p>where w q is a trainable linear weight vector.</p><p>The shared question and document modeling lay the foundation for the subsequent three extraction tasks. Based on the document and question representations D Di = {d Di t } and r Q , we introduce the three joint extraction tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Document Extraction</head><p>In multi-document MRC, in addition to annotating the answer span, the benchmark datasets generally also annotate which documents are correct for extracting the answer, or it can also be easily obtained given the labeled answer. Therefore, we also introduce an auxiliary document extraction task, to help improve the answer prediction. Compared to the answer span extraction, the document extraction is relatively easier. The aim is to better lay the foundation for the answer prediction and help learn the shared bottom layers.</p><p>Firstly, we also self-align the document representation D Di = {d Di t } for each selected document D i , to obtain a weighted document vector r Di as:</p><formula xml:id="formula_5">? t = softmax(w d ? d Di t ) r Di = t ? t ? d Di t (6)</formula><p>Next, the question vector r Q and document vector r Di are matched in a bilinear function for a relevance score as,</p><formula xml:id="formula_6">s Di = r Q ? W qd ? r Di<label>(7)</label></formula><p>where W qd is a trainable bilinear projection matrix, which helps to match the two vectors in the same space. For one question, each selected document D i has a matching score s Di . We normalize their scores and optimize the following objective function:</p><formula xml:id="formula_7">s Di = 1/(1 + exp ?s D i )<label>(8)</label></formula><formula xml:id="formula_8">L DE = ? 1 K K i=1 [y Di logs Di + (1 ? y Di )log(1 ?s Di )] (9)</formula><p>where K is the number of selected documents. y Di ? {0, 1} denotes the label, y Di = 1 means document D i contains one golden answer, otherwise y Di = 0.</p><p>Paragraph Extraction In general, the golden answer usually comes from one or two paragraphs in each document. We can also annotate the correct paragraphs where the answer is extracted from, by some distant supervision method <ref type="bibr" target="#b1">(Chen et al. 2017a</ref>). Therefore, we introduce a midlevel paragraph extraction task, so that our model can not only distinguish among different documents, but it can also select the relevant paragraphs within each document. We first organize each selected document with paragraphs, and follow the same way as in document extraction to calculate a question-paragraph matching score for each paragraph. Specifically, for each paragraph in document D i with D Di = {V Pi1 , ? ? ? , V PiN }, we first self-align the wordlevel paragraph representation V Pij to a weighted vector representation r Pij as in Equ. 6. Then a bilinear matching function is used between r Q and r Pij to obtain the corresponding relevance score as:</p><formula xml:id="formula_9">s Pij = r Q ? W qp ? r Pij<label>(10)</label></formula><p>where W qp is the trainable bilinear projection matrix between question and paragraph. For one document, each paragraph P ij in the document has a matching score s Pij . We normalize the scores among each document and obtains Pij as in Equ. 8. In this sub-task, we optimize the average cross-entropy loss among all the selected documents and paragraphs as:</p><formula xml:id="formula_10">L P E = ? 1 K 1 N K i=1 N j=1 [y Pij logs Pij +(1?y Pij )log(1?s Pij )]</formula><p>(11) where N is the number of remaining paragraphs for each document. y Pij ? {0, 1} denotes the paragraph-level label for the j th paragraph in i th document.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Answer Span Extraction</head><p>The ultimate goal is to predict a correct answer, where the afore-mentioned document extraction and paragraph extraction actually act as two auxiliary tasks, so that the shallow semantic representations can be better learnt. In this stage, we aim to combine all the available information to accurately extract the answer from all the selected documents at a span level. To make the document representation aware of information in different documents and enable a direct comparison across different documents, we concatenate all the selected documents together and introduce a muilti-document shared LSTM layer for contextual modeling as:</p><formula xml:id="formula_11">g D t = BiLSTM(g D t?1 , [d D t ; r Q ; f])<label>(12)</label></formula><p>where f is a manual feature vector including the popular features such as whether each document word occurs in the question words and whether the word is a sentence ending separator. Here we also concatenate the question vector r Q to each word representation d D t of the document for better modeling the interaction.</p><p>Since all the words from different documents will be passed to the shared LSTM layer, the sequence order is thus very important. We follow the document ranking order obtained via the document ranking function in document retrieval module, as is shown in top of <ref type="figure" target="#fig_1">Figure 2</ref>. In this way, we expect that the answer prediction model can also bear the ranking relevance in document retrieval module in mind and it shows good performance in our experiment.</p><p>Finally, the pointer network (Wang and Jiang 2016) is used to predict the start and end position of the answer with the probabilities ? 1 t and ? 2 t , and the answer extraction model can be trained by minimizing the negative log probabilities of the true start and end indices:</p><formula xml:id="formula_12">? t = exp(w a g D t )/ |Dw| j=1 exp(w a g D j ) (13) L AE = ? 1 M M i=1 (log? 1 y 1 i + log? 2 y 2 i )<label>(14)</label></formula><p>where w a is a trainable vector, |D w | is the total number of words. M is the number of question samples, y 1 i , y 2 i are the golden start and end positions across the entire documents.</p><p>Joint Training and Prediction According to the design, the three extraction tasks share the same embedding, encoding and matching layers. Therefore, we propose to train them together as multi-task learning. The joint objective function is formulated as follows:</p><formula xml:id="formula_13">L = L AE + ? 1 L DE + ? 2 L P E (15)</formula><p>where ? 1 and ? 2 are two hyper-parameters that control the weights of those tasks.</p><p>To keep the training process stable, we adopt a coarseto-fine joint training strategy and progressively finetune one upper task with the joint loss. Specifically, we first train the downside document extraction and paragraph extraction tasks to obtain an initial shallow representation, and then jointly train the three tasks with Equ.15 based on it. Besides, when training a new upper task, we follow the method in <ref type="bibr" target="#b1">(Hashimoto et al. 2016</ref>) and introduce a successive regularization term on the shared parameters, as:</p><formula xml:id="formula_14">L = L + ?||? s ? ? s || 2<label>(16)</label></formula><p>where ? s , ? s are the shared parameters at successive training stages. In this way, we can restrain the joint training process so that the shared parameters will not change so much. When predicting the final answer, we take the document matching score, paragraph matching score and answer span score into consideration and choose the answer with the highest prediction score, given as:</p><formula xml:id="formula_15">s = (? 1 k ? ? 2 k ) ?s Di ?s Pij (17)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Experiments</head><p>This section presents the experimental methodology. We first verify the effectiveness of our model on two benchmark datasets: TriviaQA <ref type="bibr" target="#b5">(Joshi et al. 2017)</ref> and DuReader ). Then we test our model in operational online environment, which can stably and effectively serve different scenarios promptly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Datasets</head><p>Off-line Benchmark Dataset We choose the TriviaQA Web and DuReader benchmark datasets to test our method, since both of them are multi-document MRC datasets which is more realistic and challenging.</p><p>TriviaQA is a recently released large-scale multidocument MRC datasets, which consists of 650K contextquery-answer triples. There are 95K distinct questionanswer pairs, which are authored by Trivia enthusiasts, with 6 evidence documents (context) per question on average, which are generated from either Wikipedia or Web search. In this paper, we focus on the TriviaQA Web dataset, which contains more context data for each question.</p><p>DuReader is so far the largest Chinese MRC dataset, which contains 200K questions, 1M documents and more than 420K human-summarized answers. All the questions and documents are extracted from real data, by the largest Chinese search engine Baidu. The average length of the documents is 396.0 words, and on average each question has 5 evidence documents, each document has about 7 paragraphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>On-line Environment</head><p>We also apply our model to the Al-iMe Chatbot system, which is an intelligent online assistant designed for creating an innovative online shopping experience in e-commerce. Currently, it serves millions of customer questions per day. We test our model in two practical scenarios, i.e., e-commerce promotion and tax policy reading. E-commerce promotion scenario is about consulting instructions on shopping games and sales promotion, which mostly involves with a short document with no more than 500 words. Tax policy scenario is about reading tax policy articles, which can be viewed as a multi-document MRC task. The length of the article is much longer, which consist of many sections and paragraphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Implementation Details</head><p>For the cascade ranking functions, the number of selected documents K and paragraphs N are the key factors to balance the effectiveness and efficiency trade-off. We choose K = 4 and N = 2 for the good performance when evaluating on the dev set. Since the TriviaQA documents often contain many small paragraphs, we also restructure the documents by merging consecutive paragraphs to a maximum size of 600 words for each paragraph as in (Clark and Gardner 2017). The detailed analysis will be given and discussed in the next section.</p><p>For the multi-task deep attention framework, we adopt the Adam optimizer for training, with a mini-batch size of 32 and initial learning rate of 0.0005. We use the GloVe 300 dimensional word embeddings in TriviaQA and train a word2vec word embeddings with the whole DuReader corpus for DuReader. The word embeddings are fixed during training. The hidden size of LSTM is set as 150 for TriviaQA and 128 for DuReader. The task-specific hyper-parameters ? 1 and ? 2 in Equ. 15 are set as ? 1 = ? 2 = 0.5. Regularization parameter ? in Equ. 16 is set as a small value of 0.01. All models are trained on Nvidia Tesla M40 GPU with Cudnn LSTM cell in Tensorflow 1.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Off-line Evaluation</head><p>Main Results The results of our single deep cascade model 4 on TriviaQA Web and DuReader 1.0 are summarized in <ref type="table" target="#tab_0">Table 1 and Table 2</ref>, respectively. We can see that by adopting the deep cascade learning framework, the proposed model outperforms the previous state-of-the-art methods by an evident margin on both datasets, which validates the effectiveness of the proposed method in addressing the challenging multi-document MRC task.</p><p>Ablation Study To get better insight into our model architecture, we conduct an in-depth ablation study on the development set of DuReader and TriviaQA, which is shown in <ref type="table" target="#tab_3">Table 3</ref>. The main goal is to validate the effectiveness of the critical components in our architecture including the manual features and multi-document shared LSTM in the pure answer span extraction task, the cascade document and paragraph ranking functions for pruning irrelevant document content and the adoption of multi-task learning strategy. <ref type="bibr">4</ref> We only submit the single model without any model ensemble.   <ref type="bibr" target="#b8">(Seo et al. 2016)</ref> 31.9 39.2 PR + BiDAF  37.55 41.81 Cross-Passage Verify  40.97 44.18 R-net <ref type="bibr" target="#b13">(Wang et al. 2017c)</ref> 44 From the results, we can see that: 1) the shared LSTM plays an important role in answer extraction among multiple documents, the benefit lies in two parts: a) it helps to normalize the content probability score from multiple documents so that the answers extracted from different documents can be directly compared; b) it can keep the ranking order from document ranking component in mind, which may serve as an additional signal when predicting the best answer. By incorporating the manual features, the performance can be further improved slightly. 2) Both the preliminary cascade ranking and multi-task answer extraction strategy are vital for the final performance, which serve as a good trade-off between the pure pipeline method and fully joint learning method. By removing the rich irrelevant noisy data in the cascade document and paragraph ranking stage, the downside MRC model can better extract the answer from the more relevant content data. Jointly training the three extraction tasks can provide great benefits, which shows that the three tasks are actually closely related and can boost each other with shared representations at bottom layers.</p><p>Effectiveness v.s. Efficiency Trade-off Now we further examine how the performance of our model changes with respect to the number of selected documents and paragraphs in cascade ranking stage, which is the key factor to control the effectiveness and efficiency trade-off. The result on DuReader development set is presented in <ref type="table" target="#tab_4">Table 4</ref>. We can see that: 1) By properly taking more documents or paragraphs into consideration, the performance of the model gradually increases when it reaches 4 documents and 2 paragraphs, and then the performance decreases slightly which may be due to that much noisy data is introduced. 2) The time cost can be largely reduced by removing more irrelevant documents and paragraphs in the cascade ranking stage, while keeping the performance not change that much. For example, for the best setting at 4 documents and 2 paragraphs, if we instead only keep the top-1 paragraph for each document, the time cost will be reduced by 36.7%, while the  performance only decreases about 2.4%. As a result, we can adaptively change our model to meet the practical situation and we choose 4 documents and 2 paragraphs in our off-line experiment where effectiveness is most emphasized.</p><p>Advantage of Multi-task Learning Next, we also analyze the benefits brought in via the adoption of the multitask learning strategy in detail. The performance of jointly training the answer extraction module with different auxiliary tasks on DuReader development set is shown in Table 5. We can see that by incorporating the auxiliary document extraction or paragraph extraction task in the joint learning framework, the performance can always improve which again shows the advantage of introducing auxiliary tasks for helping to learn shared bottom representations. Besides, the performance gain by adding document extraction task is larger, which may be due to that it can better lay the foundation of the model with that information from different documents can be distinguished.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>On-line Evaluation</head><p>Results on E-commerce and Tax data We also test the effectiveness and efficiency of our model in two practical scenarios, E-commerce and tax policy reading, where realtime responses are expected and a large number of customers are being served simultaneously. The comparative result is shown in <ref type="table" target="#tab_6">Table 6</ref>. We can see that by introducing the cascade ranking stage and keeping the selected number properly, our method can serve the requests with a much higher speed of less than 50ms, especially for tax scenario  where the improvement is about 3 times. Besides, the performance with respect to F1 score is also largely improved with the proposed multi-document MRC model, which demonstrates the effectiveness of our method for removing the rich irrelevant noisy content in our online scenario.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Results on Different Document Lengths</head><p>We further examine how the F1 score and response time change on tax scenario when processing documents with different lengths, ranging from 50 to 2000 words. The result is shown in <ref type="figure" target="#fig_2">Figure 3</ref>. We can see that without incorporating with the cascade ranking module, the answer extraction module performs rather poorly both in effectiveness and efficiency as the document length increases. In particular, when the document length exceeds 1,000 the total response time increases 3 to 6 times, while for our full cascade model only 15ms more are needed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusion</head><p>In this paper, we propose a novel deep cascade learning framework to balance the effectiveness and efficiency in the more realistic multi-document MRC. We design three cascade modules, which can eliminate irrelevant document content in the earlier stages with simple features and models, and discern more relevant answers at later stages. The experiment results show that our method can achieve state-ofthe-art performance on two large-scale benchmark datasets. Besides, the proposed method has also been effectively and efficiently applied in our online system.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>The overall framework of our deep cascade model, which consists of the document retrieval, paragraph retrieval and answer extraction modules.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>The deep attention-based multi-task MRC model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>F1 score and average response time w.r.t different document lengths.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Performance of our method and competing models on the TriviaQA Web leaderboard.</figDesc><table><row><cell>Full</cell><cell>Verified</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>Performance on the DuReader 1.0 test set.</figDesc><table><row><cell>Model</cell><cell>BLEU-4</cell><cell>ROUGE-L</cell></row><row><cell>Match-LSTM (Wang and Jiang 2016)</cell><cell>31.8</cell><cell>39.0</cell></row><row><cell>BiDAF</cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 :</head><label>3</label><figDesc>Ablation study on model components.</figDesc><table><row><cell>Model</cell><cell>DuReader Bleu-4 score</cell><cell>?</cell><cell cols="2">TriviaQA F1 ?</cell></row><row><cell>Complete Model</cell><cell>50.8</cell><cell>-</cell><cell>73.8</cell><cell>-</cell></row><row><cell>w/o Manual Features</cell><cell>49.8</cell><cell>-1.0</cell><cell>73.0</cell><cell>-0.8</cell></row><row><cell>w/o Shared LSTM</cell><cell>48.7</cell><cell>-2.1</cell><cell>70.5</cell><cell>-3.3</cell></row><row><cell>w/o Cascade Ranking</cell><cell>47.0</cell><cell>-3.8</cell><cell>71.1</cell><cell>-2.7</cell></row><row><cell>w/o Multi-task Learning</cell><cell>48.5</cell><cell>-2.3</cell><cell>70.9</cell><cell>-2.9</cell></row><row><cell>Boundary Baseline</cell><cell>41.0</cell><cell>-9.8</cell><cell>61.5</cell><cell>-12.3</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 4 :</head><label>4</label><figDesc>Effectiveness and efficiency w.r.t document and paragraph selection number on DuReader development set (Efficiency is indicated by time cost at prediction stage).</figDesc><table><row><cell>Document No.</cell><cell>Paragraph No.</cell><cell>Time cost(s) / batch</cell><cell>Bleu-4 score</cell></row><row><cell></cell><cell>1</cell><cell>0.42</cell><cell>32.1</cell></row><row><cell>1</cell><cell>2</cell><cell>0.53</cell><cell>35.4</cell></row><row><cell></cell><cell>3</cell><cell>0.69</cell><cell>36.0</cell></row><row><cell></cell><cell>1</cell><cell>0.56</cell><cell>40.5</cell></row><row><cell>2</cell><cell>2</cell><cell>0.89</cell><cell>44.8</cell></row><row><cell></cell><cell>3</cell><cell>1.14</cell><cell>44.2</cell></row><row><cell></cell><cell>1</cell><cell>0.71</cell><cell>48.1</cell></row><row><cell>3</cell><cell>2</cell><cell>1.09</cell><cell>49.5</cell></row><row><cell></cell><cell>3</cell><cell>1.36</cell><cell>49.0</cell></row><row><cell></cell><cell>1</cell><cell>0.88</cell><cell>49.6</cell></row><row><cell>4</cell><cell>2</cell><cell>1.39</cell><cell>50.8</cell></row><row><cell></cell><cell>3</cell><cell>1.75</cell><cell>50.0</cell></row><row><cell></cell><cell>1</cell><cell>0.98</cell><cell>49.6</cell></row><row><cell>5</cell><cell>2</cell><cell>1.70</cell><cell>50.0</cell></row><row><cell></cell><cell>3</cell><cell>2.03</cell><cell>48.8</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 5 :</head><label>5</label><figDesc>Performance with different extraction tasks.</figDesc><table><row><cell>Task</cell><cell>Bleu-4 score</cell><cell>?</cell></row><row><cell>Pure Answer Span Extraction</cell><cell>48.5</cell><cell>-</cell></row><row><cell>+ Document Extraction</cell><cell>49.7</cell><cell>+1.2</cell></row><row><cell>+ Paragraph Extraction</cell><cell>49.2</cell><cell>+0.7</cell></row><row><cell>+ Document &amp; Paragraph Extraction</cell><cell>50.8</cell><cell>+2.3</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 6 :</head><label>6</label><figDesc>Performance and response time (RT) in two realworld online scenarios.</figDesc><table><row><cell>Tax</cell><cell>E-Commerce</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Robust object detection via soft cascade</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Bourdev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Brandt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision and Pattern Recognition, 2005. CVPR 2005. IEEE Computer Society Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="236" to="243" />
		</imprint>
	</monogr>
	<note>and Brandt</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Simple and effective multi-paragraph reading comprehension</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Guestrin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Chen</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1704.00051</idno>
		<idno>arXiv:1611.01587</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd acm sigkdd international conference on knowledge discovery and data mining</title>
		<meeting>the 22nd acm sigkdd international conference on knowledge discovery and data mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="785" to="794" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>A joint many-task model: Growing a neural network for multiple nlp tasks</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Dureader: a chinese machine reading comprehension dataset from real-world applications</title>
		<idno type="arXiv">arXiv:1711.05073</idno>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1693" to="1701" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Teaching machines to read and comprehend</note>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">The goldilocks principle: Reading children&apos;s books with explicit memory representations</title>
		<idno type="arXiv">arXiv:1511.02301</idno>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Reinforced mnemonic reader for machine comprehension</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peng</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Qiu</surname></persName>
		</author>
		<idno>abs/1705.02798</idno>
		<imprint>
			<date type="published" when="2017" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Triviaqa: A large scale distantly supervised challenge dataset for reading comprehension</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Joshi</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1705.03551</idno>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="1315" to="1323" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Joint cascade optimization using a product of boosted classifiers</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Cascade ranking for operational e-commerce search</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="1557" to="1565" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Ms marco: A human generated machine reading comprehension dataset</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Nguyen</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1611.09268</idno>
		<idno>arXiv:1606.05250</idno>
	</analytic>
	<monogr>
		<title level="m">Squad: 100,000+ questions for machine comprehension of text</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2004" />
			<biblScope unit="volume">2</biblScope>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Proceedings of the 2004 IEEE Computer Society Conference on. II-II</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">S-net: From answer extraction to answer generation for machine reading comprehension</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Seo</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1611.01603</idno>
		<idno>arXiv:1706.04815</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Bidirectional attention flow for machine comprehension</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">S-net: From answer extraction to answer synthesis for machine reading comprehension</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Machine comprehension using match-lstm and answer pointer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jiang</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1608.07905</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Wang</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1709.00023</idno>
		<title level="m">Reinforced readerranker for open-domain question answering</title>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="volume">3</biblScope>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Wang</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1711.05116</idno>
		<title level="m">Evidence aggregation for answer reranking in open-domain question answering</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Multi-passage machine reading comprehension with cross-passage answer verification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Wang</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1805.02220</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics</title>
		<meeting>the 55th Annual Meeting of the Association for Computational Linguistics</meeting>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="189" to="198" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Gated self-matching networks for reading comprehension and question answering</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A cascade ranking model for efficient ranked retrieval</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lin</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Metzler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Metzler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 34th international ACM SI-GIR conference on Research and development in Information Retrieval</title>
		<meeting>the 34th international ACM SI-GIR conference on Research and development in Information Retrieval</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="105" to="114" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Multi-granularity hierarchical attention fusion networks for reading comprehension and question answering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yan</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">W</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Dohan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-T</forename><surname>Luong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Norouzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><forename type="middle">V</forename><surname>Le</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1706.02596</idno>
		<idno>arXiv:1804.09541</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics</title>
		<meeting>the 56th Annual Meeting of the Association for Computational Linguistics</meeting>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="1705" to="1714" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Qanet: Combining local convolution with global self-attention for reading comprehension</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
