<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Are Transformers Effective for Time Series Forecasting?</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ailing</forename><surname>Zeng</surname></persName>
							<email>alzeng@cse.cuhk.edu.hk</email>
							<affiliation key="aff0">
								<orgName type="institution">The Chinese University of Hong Kong</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Muxi</forename><surname>Chen</surname></persName>
							<email>mxchen21@cse.cuhk.edu.hk</email>
							<affiliation key="aff0">
								<orgName type="institution">The Chinese University of Hong Kong</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lei</forename><surname>Zhang</surname></persName>
							<email>leizhang@idea.edu.cn</email>
							<affiliation key="aff1">
								<orgName type="department">International Digital Economy Academy (IDEA)</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qiang</forename><surname>Xu</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">The Chinese University of Hong Kong</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Are Transformers Effective for Time Series Forecasting?</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2022-11-11T13:22+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Recently, there has been a surge of Transformer-based solutions for the long-term time series forecasting (LTSF) task. Despite the growing performance over the past few years, we question the validity of this line of research in this work. Specifically, Transformers is arguably the most successful solution to extract the semantic correlations among the elements in a long sequence. However, in time series modeling, we are to extract the temporal relations in an ordered set of continuous points. While employing positional encoding and using tokens to embed sub-series in Transformers facilitate preserving some ordering information, the nature of the permutation-invariant self-attention mechanism inevitably results in temporal information loss.</p><p>To validate our claim, we introduce a set of embarrassingly simple one-layer linear models named LTSF-Linear for comparison. Experimental results on nine real-life datasets show that LTSF-Linear surprisingly outperforms existing sophisticated Transformer-based LTSF models in all cases, and often by a large margin. Moreover, we conduct comprehensive empirical studies to explore the impacts of various design elements of LTSF models on their temporal relation extraction capability. We hope this surprising finding opens up new research directions for the LTSF task. We also advocate revisiting the validity of Transformer-based solutions for other time series analysis tasks (e.g., anomaly detection) in the future. Code is available at: https://github.com/cure-lab/LTSF-Linear.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Time series are ubiquitous in today's data-driven world. Given historical data, time series forecasting (TSF) is a long-standing task that has a wide range of applications, including but not limited to traffic flow estimation, en-* Equal contribution ergy management, and financial investment. Over the past several decades, TSF solutions have undergone a progression from traditional statistical methods (e.g., ARIMA <ref type="bibr" target="#b0">[1]</ref>) and machine learning techniques (e.g., GBRT <ref type="bibr" target="#b6">[11]</ref>) to deep learning-based solutions, e.g., Recurrent Neural Networks <ref type="bibr" target="#b10">[15]</ref> and Temporal Convolutional Networks <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b12">17]</ref>.</p><p>Transformer <ref type="bibr" target="#b21">[26]</ref> is arguably the most successful sequence modeling architecture, demonstrating unparalleled performances in various applications, such as natural language processing (NLP) <ref type="bibr">[7]</ref>, speech recognition <ref type="bibr" target="#b3">[8]</ref>, and computer vision <ref type="bibr" target="#b14">[19,</ref><ref type="bibr" target="#b24">29]</ref>. Recently, there has also been a surge of Transformer-based solutions for time series analysis, as surveyed in <ref type="bibr" target="#b22">[27]</ref>. Most notable models, which focus on the less explored and challenging long-term time series forecasting (LTSF) problem, include LogTrans <ref type="bibr" target="#b11">[16]</ref> (NeurIPS 2019), Informer <ref type="bibr" target="#b25">[30]</ref> (AAAI 2021 Best paper), Autoformer <ref type="bibr" target="#b23">[28]</ref> (NeurIPS 2021), Pyraformer <ref type="bibr" target="#b13">[18]</ref> (ICLR 2022 Oral), Triformer [5] (IJCAI 2022) and the recent FEDformer <ref type="bibr" target="#b26">[31]</ref> (ICML 2022).</p><p>The main working power of Transformers is from its multi-head self-attention mechanism, which has a remarkable capability of extracting semantic correlations among elements in a long sequence (e.g., words in texts or 2D patches in images). However, self-attention is permutationinvariant and "anti-order" to some extent. While using various types of positional encoding techniques can preserve some ordering information, it is still inevitable to have temporal information loss after applying self-attention on top of them. This is usually not a serious concern for semanticrich applications such as NLP, e.g., the semantic meaning of a sentence is largely preserved even if we reorder some words in it. However, when analyzing time series data, there is usually a lack of semantics in the numerical data itself, and we are mainly interested in modeling the temporal changes among a continuous set of points. That is, the order itself plays the most crucial role. Consequently, we pose the following intriguing question: Are Transformers really effective for long-term time series forecasting?</p><p>Moreover, while existing Transformer-based LTSF so-lutions have demonstrated considerable prediction accuracy improvements over traditional methods, in their experiments, all the compared (non-Transformer) baselines perform autoregressive or iterated multi-step (IMS) forecasting <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b17">22,</ref><ref type="bibr" target="#b19">24]</ref>, which are known to suffer from significant error accumulation effects for the LTSF problem. Therefore, in this work, we challenge Transformer-based LTSF solutions with direct multi-step (DMS) forecasting strategies to validate their real performance.</p><p>Not all time series are predictable, let alone long-term forecasting (e.g., for chaotic systems). We hypothesize that long-term forecasting is only feasible for those time series with a relatively clear trend and periodicity. As linear models can already extract such information, we introduce a set of embarrassingly simple models named LTSF-Linear as a new baseline for comparison. LTSF-Linear regresses historical time series with a one-layer linear model to forecast future time series directly. We conduct extensive experiments on nine widely-used benchmark datasets that cover various real-life applications: traffic, energy, economics, weather, and disease predictions. Surprisingly, our results show that LTSF-Linear outperforms existing complex Transformerbased models in all cases, and often by a large margin (20% ? 50%). Moreover, we find that, in contrast to the claims in existing Transformers, most of them fail to extract temporal relations from long sequences, i.e., the forecasting errors are not reduced (sometimes even increased) with the increase of look-back window sizes. Finally, we conduct various ablation studies on existing Transformer-based TSF solutions to study the impact of various design elements in them.</p><p>To sum up, the contributions of this work include:</p><p>? To the best of our knowledge, this is the first work to challenge the effectiveness of the booming Transformers for the long-term time series forecasting task.</p><p>? To validate our claims, we introduce a set of embarrassingly simple one-layer linear models, named LTSF-Linear, and compare them with existing Transformer-based LTSF solutions on nine benchmarks. LTSF-Linear can be a new baseline for the LTSF problem.</p><p>? We conduct comprehensive empirical studies on various aspects of existing Transformer-based solutions, including the capability of modeling long inputs, the sensitivity to time series order, the impact of positional encoding and sub-series embedding, and efficiency comparisons. Our findings would benefit future research in this area.</p><p>With the above, we conclude that the temporal modeling capabilities of Transformers for time series are exaggerated, at least for the existing LTSF benchmarks. At the same time, while LTSF-Linear achieves a better prediction accuracy compared to existing works, it merely serves as a simple baseline for future research on the challenging longterm TSF problem. With our findings, we also advocate revisiting the validity of Transformer-based solutions for other time series analysis tasks in the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Preliminaries: TSF Problem Formulation</head><p>For time series containing C variates, given historical data X = {X t 1 , ..., X t C } L t=1 , wherein L is the look-back window size and X t i is the value of the i th variate at the t th time step. The time series forecasting task is to predict the valuesX = {X t 1 , ...,X t C } L+T t=L+1 at the T future time steps. When T &gt; 1, iterated multi-step (IMS) forecasting <ref type="bibr" target="#b18">[23]</ref> learns a single-step forecaster and iteratively applies it to obtain multi-step predictions. Alternatively, direct multistep (DMS) forecasting [4] directly optimizes the multi-step forecasting objective at once.</p><p>Compared to DMS forecasting results, IMS predictions have smaller variance thanks to the autoregressive estimation procedure, but they inevitably suffer from error accumulation effects. Consequently, IMS forecasting is preferable when there is a highly-accurate single-step forecaster, and T is relatively small. In contrast, DMS forecasting generates more accurate predictions when it is hard to obtain an unbiased single-step forecasting model, or T is large.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Transformer-Based LTSF Solutions</head><p>Transformer-based models <ref type="bibr" target="#b21">[26]</ref> have achieved unparalleled performances in many long-standing AI tasks in natural language processing and computer vision fields, thanks to the effectiveness of the multi-head self-attention mechanism. This has also triggered lots of research interest in Transformer-based time series modeling techniques <ref type="bibr" target="#b15">[20,</ref><ref type="bibr" target="#b22">27]</ref>. In particular, a large amount of research works are dedicated to the LTSF task (e.g., <ref type="bibr" target="#b11">[16,</ref><ref type="bibr" target="#b13">18,</ref><ref type="bibr" target="#b23">28,</ref><ref type="bibr" target="#b25">30,</ref><ref type="bibr" target="#b26">31]</ref>). Considering the ability to capture long-range dependencies with Transformer models, most of them focus on the lessexplored long-term forecasting problem (T 1) 1 . When applying the vanilla Transformer model to the LTSF problem, it has some limitations, including the quadratic time/memory complexity with the original selfattention scheme and error accumulation caused by the autoregressive decoder design. Informer <ref type="bibr" target="#b25">[30]</ref> addresses these issues and proposes a novel Transformer architecture with reduced complexity and a DMS forecasting strategy. Later, more Transformer variants introduce various time series features into their models for performance or efficiency improvements <ref type="bibr" target="#b13">[18,</ref><ref type="bibr" target="#b23">28,</ref><ref type="bibr" target="#b26">31]</ref>. We summarize the design elements of existing Transformer-based LTSF solutions as follows (see <ref type="figure">Figure 1</ref>).  <ref type="figure">Figure 1</ref>. The pipeline of existing Transformer-based TSF solutions. In (a) and (b), the solid boxes are essential operations, and the dotted boxes are applied optionally. (c) and (d) are distinct for different methods <ref type="bibr" target="#b11">[16,</ref><ref type="bibr" target="#b13">18,</ref><ref type="bibr" target="#b23">28,</ref><ref type="bibr" target="#b25">30,</ref><ref type="bibr" target="#b26">31]</ref>.</p><p>Time series decomposition: For data preprocessing, normalization with zero-mean is common in TSF. Besides, Autoformer <ref type="bibr" target="#b23">[28]</ref> first applies seasonal-trend decomposition behind each neural block, which is a standard method in time series analysis to make raw data more predictable <ref type="bibr">[6,</ref><ref type="bibr" target="#b8">13]</ref>. Specifically, they use a moving average kernel on the input sequence to extract the trend-cyclical component of the time series. The difference between the original sequence and the trend component is regarded as the seasonal component. On top of the decomposition scheme of Autoformer, FEDformer <ref type="bibr" target="#b26">[31]</ref> further proposes the mixture of experts' strategies to mix the trend components extracted by moving average kernels with various kernel sizes. Input embedding strategies: The self-attention layer in the Transformer architecture cannot preserve the positional information of the time series. However, local positional information, i.e. the ordering of time series, is important. Besides, global temporal information, such as hierarchical timestamps (week, month, year) and agnostic timestamps (holidays and events), is also informative <ref type="bibr" target="#b25">[30]</ref>. To enhance the temporal context of time-series inputs, a practical design in the SOTA Transformer-based methods is injecting several embeddings, like a fixed positional encoding, a channel projection embedding, and learnable temporal embeddings into the input sequence. Moreover, temporal embeddings with a temporal convolution layer <ref type="bibr" target="#b11">[16]</ref> or learnable timestamps <ref type="bibr" target="#b23">[28]</ref> are introduced. Self-attention schemes: Transformers rely on the selfattention mechanism to extract the semantic dependencies between paired elements. Motivated by reducing the O L 2 time and memory complexity of the vanilla Transformer, recent works propose two strategies for efficiency. On the one hand, LogTrans and Pyraformer explicitly introduce a sparsity bias into the self-attention scheme. Specifically, LogTrans uses a Logsparse mask to reduce the computational complexity to O (LlogL) while Pyraformer adopts pyramidal attention that captures hierarchically multi-scale temporal dependencies with an O (L) time and memory complexity. On the other hand, Informer and FEDformer use the low-rank property in the self-attention matrix. Informer proposes a ProbSparse self-attention mechanism and a self-attention distilling operation to decrease the complexity to O (LlogL), and FEDformer designs a Fourier enhanced block and a wavelet enhanced block with random selection to obtain O (L) complexity. Lastly, Autoformer designs a series-wise auto-correlation mechanism to replace the original self-attention layer. Decoders: The vanilla Transformer decoder outputs sequences in an autoregressive manner, resulting in a slow inference speed and error accumulation effects, especially for long-term predictions. Informer designs a generative-style decoder for DMS forecasting. Other Transformer variants employ similar DMS strategies. For instance, Pyraformer uses a fully-connected layer concatenating Spatio-temporal axes as the decoder. Autoformer sums up two refined decomposed features from trend-cyclical components and the stacked auto-correlation mechanism for seasonal components to get the final prediction. FEDformer also uses a decomposition scheme with the proposed frequency attention block to decode the final results.</p><p>The premise of Transformer models is the semantic correlations between paired elements, while the self-attention mechanism itself is permutation-invariant, and its capability of modeling temporal relations largely depends on positional encodings associated with input tokens. Considering the raw numerical data in time series (e.g., stock prices or electricity values), there are hardly any point-wise semantic correlations between them. In time series modeling, we are mainly interested in the temporal relations among a continuous set of points, and the order of these elements instead of the paired relationship plays the most crucial role. While employing positional encoding and using tokens to embed sub-series facilitate preserving some ordering information, the nature of the permutation-invariant self-attention mechanism inevitably results in temporal information loss. Due to the above observations, we are interested in revisiting the effectiveness of Transformer-based LTSF solutions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">An Embarrassingly Simple Baseline</head><p>In the experiments of existing Transformer-based LTSF solutions (T 1), all the compared (non-Transformer) baselines are IMS forecasting techniques, which are known to suffer from significant error accumulation effects. We hypothesize that the performance improvements in these works are largely due to the DMS strategy used in them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Forecasting Output</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>? ? ? ???</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>History timesteps</head><p>Future timesteps (b) One Linear Layer To validate this hypothesis, we present the simplest DMS model via a temporal linear layer, named LTSF-Linear, as a baseline for comparison. The basic formulation of LTSF-Linear directly regresses historical time series for future prediction via a weighted sum operation (as illustrated in <ref type="figure" target="#fig_0">Figure 2</ref>). The mathematical expression isX i = W X i , where W ? R T ?L is a linear layer along the temporal axis. X i and X i are the prediction and input for each i th variate. Note that LTSF-Linear shares weights across different variates and does not model any spatial correlations.</p><p>LTSF-Linear is a set of linear models. Vanilla Linear is a one-layer linear model. To handle time series across different domains (e.g., finance, traffic, and energy domains), we further introduce two variants with two preprocessing methods, named DLinear and NLinear.</p><p>? Specifically, DLinear is a combination of a Decomposition scheme used in Autoformer and FEDformer with linear layers. It first decomposes a raw data input into a trend component by a moving average kernel and a remainder (seasonal) component. Then, two one-layer linear layers are applied to each component, and we sum up the two features to get the final prediction. By explicitly handling trend, DLinear enhances the performance of a vanilla linear when there is a clear trend in the data.</p><p>? Meanwhile, to boost the performance of LTSF-Linear when there is a distribution shift in the dataset, NLinear first subtracts the input by the last value of the sequence. Then, the input goes through a linear layer, and the subtracted part is added back before making the final prediction. The subtraction and addition in NLinear are a simple normalization for the input sequence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Experiments</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Experimental Settings</head><p>Dataset. We conduct extensive experiments on nine widely-used real-world datasets, including ETT (Electricity Transformer Temperature) <ref type="bibr" target="#b25">[30]</ref> (ETTh1, ETTh2, ETTm1, ETTm2), Traffic, Electricity, Weather, ILI, Exchange-Rate <ref type="bibr" target="#b10">[15]</ref>. All of them are multivariate time series. We leave data descriptions in the Appendix.</p><p>Evaluation metric. Following previous works <ref type="bibr" target="#b23">[28,</ref><ref type="bibr" target="#b25">30,</ref><ref type="bibr" target="#b26">31]</ref>, we use Mean Squared Error (MSE) and Mean Absolute Error (MAE) as the core metrics to compare performance.</p><p>Compared methods.</p><p>We include five recent Transformer-based methods: FEDformer <ref type="bibr" target="#b26">[31]</ref>, Autoformer <ref type="bibr" target="#b23">[28]</ref>, Informer <ref type="bibr" target="#b25">[30]</ref>, Pyraformer <ref type="bibr" target="#b13">[18]</ref>, and LogTrans <ref type="bibr" target="#b11">[16]</ref>. Besides, we include a naive DMS method: Closest Repeat (Repeat), which repeats the last value in the look-back window, as another simple baseline. Since there are two variants of FEDformer, we compare the one with better accuracy (FEDformer-f via Fourier transform).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Comparison with Transformers</head><p>Quantitative results. In <ref type="table" target="#tab_3">Table 2</ref>, we extensively evaluate all mentioned Transformers on nine benchmarks, following the experimental setting of previous work <ref type="bibr" target="#b23">[28,</ref><ref type="bibr" target="#b25">30,</ref><ref type="bibr" target="#b26">31]</ref>. Surprisingly, the performance of LTSF-Linear surpasses the SOTA FEDformer in most cases by 20% ? 50% improvements on the multivariate forecasting, where LTSF-Linear even does not model correlations among variates. For different time series benchmarks, NLinear and DLinear show the superiority to handle the distribution shift and trend-seasonality features. We also provide results for univariate forecasting of ETT datasets in the Appendix, where LTSF-Linear still consistently outperforms Transformerbased LTSF solutions by a large margin.</p><p>FEDformer achieves competitive forecasting accuracy on ETTh1. This because FEDformer employs classical time series analysis techniques such as frequency processing, which brings in time series inductive bias and benefits the ability of temporal feature extraction. In summary, these results reveal that existing complex Transformer-based LTSF solutions are not seemingly effective on the existing nine benchmarks while LTSF-Linear can be a powerful baseline.</p><p>Another interesting observation is that even though the naive Repeat method shows worse results when predicting long-term seasonal data (e.g., Electricity and Traffic), it surprisingly outperforms all Transformer-based methods on Exchange-Rate (around 45%). This is mainly caused by the wrong prediction of trends in Transformer-based solutions, which may overfit toward sudden change noises in the training data, resulting in significant accuracy degradation (see <ref type="figure" target="#fig_1">Figure 3</ref>(b)). Instead, Repeat does not have the bias.</p><p>Qualitative results. As shown in <ref type="figure" target="#fig_1">Figure 3</ref>, we plot  <ref type="table" target="#tab_2">7  7  862  321  8  21  7  Timesteps  17,420  69,680  17,544  26,304  7,588  52,696  966  Granularity  1hour  5min  1hour  1hour  1day  10min</ref> 1week  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">More Analyses on LTSF-Transformers</head><p>Can existing LTSF-Transformers extract temporal relations well from longer input sequences? The size of the look-back window greatly impacts forecasting accuracy as it determines how much we can learn from historical data. Generally speaking, a powerful TSF model with a strong temporal relation extraction capability should be able to achieve better results with larger look-back window sizes.</p><p>To study the impact of input look-back window sizes, we conduct experiments with L ? {24, 48, 72, 96, 120, 144, 168, 192, 336, 504, 672, 720} for long-term forecasting (T=720). <ref type="figure" target="#fig_2">Figure 4</ref> demonstrates the MSE results on two datasets. Similar to the observations from previous studies <ref type="bibr" target="#b22">[27,</ref><ref type="bibr" target="#b25">30]</ref>, existing Transformer-based models' performance deteriorates or stays stable when the look-back window size increases. In contrast, the performances of all LTSF-Linear are significantly boosted with the increase of look-back window size. Thus, existing solutions tend to overfit temporal noises instead of extracting temporal information if given a longer sequence, and the input size 96 is exactly suitable for most Transformers. Additionally, we provide more quantitative results in the Appendix, and our conclusion holds in almost all cases.  What can be learned for long-term forecasting? While the temporal dynamics in the look-back window significantly impact the forecasting accuracy of short-term time series forecasting, we hypothesize that long-term forecasting depends on whether models can capture the trend and periodicity well only. That is, the farther the forecasting horizon, the less impact the look-back window itself has. To validate the above hypothesis, in <ref type="table" target="#tab_5">Table 3</ref>, we compare the forecasting accuracy for the same future 720 time steps with data from two different look-back windows: (i). the original input L=96 setting (called Close) and (ii). the far input L=96 setting (called Far) that is before the original 96 time steps. From the experimental results, the performance of the SOTA Transformers drops slightly, indicating these models only capture similar temporal information from the adjacent time series sequence. Since capturing the intrinsic characteristics of the dataset generally does not require a large number of parameters, i,e. one parameter can represent the periodicity. Using too many parameters will even cause overfitting, which partially explains why LTSF-Linear performs better than Transformer-based methods.</p><p>Are the self-attention scheme effective for LTSF? We verify whether these complex designs in the existing Transformer (e.g., Informer) are essential. In <ref type="table">Table 4</ref>, we gradually transform Informer to Linear. First, we replace each self-attention layer by a linear layer, called Att.-Linear, since a self-attention layer can be regarded as a fullyconnected layer where weights are dynamically changed. Furthermore, we discard other auxiliary designs (e.g., FFN) in Informer to leave embedding layers and linear layers, named Embed + Linear. Finally, we simplify the model to one linear layer. Surprisingly, the performance of Informer grows with the gradual simplification, indicating the unnecessary of the self-attention scheme and other complex modules at least for existing LTSF benchmarks. invariant, i.e., regardless of the order. However, in timeseries forecasting, the sequence order often plays a crucial role. We argue that even with positional and temporal embeddings, existing Transformer-based methods still suffer from temporal information loss. In <ref type="table" target="#tab_6">Table 5</ref>, we shuffle the raw input before the embedding strategies. Two shuffling strategies are presented: Shuf. randomly shuffles the whole input sequences and Half-Ex. exchanges the first half of the input sequence with the second half. Interestingly, compared with the original setting (Ori.) on the Exchange Rate, the performance of all Transformer-based methods does not fluctuate even when the input sequence is randomly shuffled. By contrary, the performance of LTSF-Linear is damaged significantly. These indicate that LTSF-Transformers with different positional and temporal embeddings preserve quite limited temporal relations and are prone to overfit on noisy financial data, while the LTSF-Linear can model the order naturally and avoid overfitting with fewer parameters. For the ETTh1 dataset, FEDformer and Autoformer introduce time series inductive bias into their models, making them can extract certain temporal information when the dataset has more clear temporal patterns (e.g., periodicity) than the Exchange Rate. Therefore, the average drops of the two Transformers are 73.28% and 56.91% under the Shuf. setting, where it loses the whole order information. Moreover, Informer still suffers less from both Shuf. and Half-Ex. settings due to its no such temporal inductive bias. Overall, the average drops of LTSF-Linear are larger than Transformer-based methods for all cases, indicating the existing Transformers do not preserve temporal order well.</p><p>How effective are different embedding strategies? We study the benefits of position and timestamp embeddings used in Transformer-based methods. In <ref type="table" target="#tab_7">Table 6</ref>, the forecasting errors of Informer largely increase without positional embeddings (wo/Pos.). Without timestamp embeddings (wo/Temp.) will gradually damage the performance of Informer as the forecasting lengths increase. Since Informer uses a single time step for each token, it is necessary to introduce temporal information in tokens. Rather than using a single time step in each token, FEDformer and Autoformer input a sequence of timestamps to embed the temporal information. Hence, they can achieve comparable or even better performance without fixed positional embeddings. However, without timestamp embeddings, the performance of Autoformer declines rapidly because of the loss of global temporal information. Instead, thanks to the frequency-enhanced module proposed in FEDformer to introduce temporal inductive bias, it suffers less from removing any position/timestamp embeddings.</p><p>Is training data size a limiting factor for existing LTSF-Transformers? Some may argue that the poor performance of Transformer-based solutions is due to the small sizes of the benchmark datasets. Unlike computer vision or natural language processing tasks, TSF is performed on collected time series, and it is difficult to scale up the training data size. In fact, the size of the training data would indeed have a significant impact on the model performance. Accordingly, we conduct experiments on Traffic, comparing the performance of the model trained on a full dataset (17,544*0.7 hours), named Ori., with that trained on a shortened dataset (8,760 hours, i.e., 1 year), called Short. Unexpectedly, <ref type="table">Table 7</ref> presents that the prediction errors with reduced training data are lower in most cases. This might because the whole-year data maintains more clear temporal features than a longer but incomplete data size. While we cannot conclude that we should use less data for training, it demonstrates that the training data scale is not the limiting reason for the performances of Autoformer and FEDformer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Methods</head><p>FEDformer Autoformer Dataset</p><p>Ori Is efficiency really a top-level priority? Existing LTSF-Transformers claim that the O L 2 complexity of the vanilla Transformer is unaffordable for the LTSF problem. Although they prove to be able to improve the theoretical time and memory complexity from O L 2 to O (L), it is unclear whether 1) the actual inference time and memory cost on devices are improved, and 2) the memory issue is unacceptable and urgent for today's GPU (e.g., an NVIDIA Titan XP here). In <ref type="table" target="#tab_10">Table 8</ref>, we compare the average practical efficiencies with 5 runs. Interestingly, compared with the vanilla Transformer (with the same DMS decoder), most Transformer variants incur similar or even worse inference time and parameters in practice. These follow-ups introduce more additional design elements to make practical costs high. Moreover, the memory cost of the vanilla Transformer is practically acceptable, even for output length L = 720, which weakens the importance of developing a memoryefficient Transformers, at least for existing benchmarks.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusion and Future Work</head><p>Conclusion. This work questions the effectiveness of emerging favored Transformer-based solutions for the longterm time series forecasting problem. We use an embarrassingly simple linear model LTSF-Linear as a DMS forecasting baseline to verify our claims. Note that our contributions do not come from proposing a linear model but rather from throwing out an important question, showing surprising comparisons, and demonstrating why LTSF-Transformers are not as effective as claimed in these works through various perspectives. We sincerely hope our comprehensive studies can benefit future work in this area.</p><p>Future work. LTSF-Linear has a limited model capacity, and it merely serves a simple yet competitive baseline with strong interpretability for future research. For example, the one-layer linear network is hard to capture the temporal dynamics caused by change points <ref type="bibr" target="#b20">[25]</ref>. Consequently, we believe there is a great potential for new model designs, data processing, and benchmarks to tackle the challenging LTSF problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Appendix: Are Transformers Effective for Time Series Forecasting?</head><p>In this Appendix, we provide descriptions of non-Transformer-based TSF solutions, detailed experimental settings, more comparisons under different look-back window sizes, and the visualization of LTSF-Linear on all datasets. We also append our code to reproduce the results shown in the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Related Work: Non-Transformer-Based TSF Solutions</head><p>As a long-standing problem with a wide range of applications, statistical approaches (e.g., autoregressive integrated moving average (ARIMA) <ref type="bibr" target="#b0">[1]</ref>, exponential smoothing <ref type="bibr" target="#b7">[12]</ref>, and structural models <ref type="bibr" target="#b9">[14]</ref>) for time series forecasting have been used from the 1970s onward. Generally speaking, the parametric models used in statistical methods require significant domain expertise to build.</p><p>To relieve this burden, many machine learning techniques such as gradient boosting regression tree (GBRT) <ref type="bibr" target="#b5">[10,</ref><ref type="bibr" target="#b6">11]</ref> gain popularity, which learns the temporal dynamics of time series in a data-driven manner. However, these methods still require manual feature engineering and model designs. With the powerful representation learning capability of deep neural networks (DNNs) from abundant data, various deep learning-based TSF solutions are proposed in the literature, achieving better forecasting accuracy than traditional techniques in many cases.</p><p>Besides Transformers, the other two popular DNN architectures are also applied for time series forecasting:</p><p>? Recurrent neural networks (RNNs) based methods (e.g., <ref type="bibr" target="#b16">[21]</ref>) summarize the past information compactly in internal memory states and recursively update themselves for forecasting.</p><p>? Convolutional neural networks (CNNs) based methods (e.g., <ref type="bibr" target="#b2">[3]</ref>), wherein convolutional filters are used to capture local temporal features.</p><p>RNN-based TSF methods belong to IMS forecasting techniques. Depending on whether the decoder is implemented in an autoregressive manner, there are either IMS or DMS forecasting techniques for CNN-based TSF methods <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b12">17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Experimental Details</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.1. Data Descriptions</head><p>We use nine wildly-used datasets in the main paper. The details are listed in the following.</p><p>? ETT (Electricity Transformer Temperature) [30] 2 consists of two hourly-level datasets (ETTh) and two 15minute-level datasets (ETTm). Each of them contains seven oil and load features of electricity transformers from July 2016 to July 2018.</p><p>? Traffic 3 describes the road occupancy rates. It contains the hourly data recorded by the sensors of San Francisco freeways from 2015 to 2016.</p><p>? Electricity 4 collects the hourly electricity consumption of 321 clients from 2012 to 2014.</p><p>? Exchange-Rate <ref type="bibr" target="#b10">[15]</ref> 5 collects the daily exchange rates of 8 countries from 1990 to 2016.</p><p>? Weather 6 includes 21 indicators of weather, such as air temperature, and humidity. Its data is recorded every 10 min for 2020 in Germany.</p><p>? ILI 7 describes the ratio of patients seen with influenzalike illness and the number of patients. It includes weekly data from the Centers for Disease Control and Prevention of the United States from 2002 to 2021.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.2. Implementation Details</head><p>For existing Transformer-based TSF solutions: the implementation of Autoformer <ref type="bibr" target="#b23">[28]</ref>, Informer <ref type="bibr" target="#b25">[30]</ref>, and the vanilla Transformer <ref type="bibr" target="#b21">[26]</ref> are all taken from the Autoformer work <ref type="bibr" target="#b23">[28]</ref>; the implementation of FEDformer <ref type="bibr" target="#b26">[31]</ref> and Pyraformer <ref type="bibr" target="#b13">[18]</ref> are from their respective code repository. We also adopt their default hyper-parameters to train the models. For DLinear, the moving average kernel size for decomposition is 25, which is the same as Autoformer. The total parameters of a vanilla linear model and a NLinear are TL. The total parameters of the DLinear are 2TL. Since LTSF-Linear will be underfitting when the input length is short, and LTSF-Transformers tend to overfit on a long lookback window size. To compare the best performance of existing LTSF-Transformers with LTSF-Linear, we report L=336 for LTSF-Linear and L=96 for Transformers by default. For more hyper-parameters of LTSF-Linear, please refer to our code.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Additional Comparison with Transformers</head><p>We further compare LTSF-Linear with LTSF-Transformer for Univariate Forecasting on four ETT datasets. Moreover, in <ref type="figure" target="#fig_2">Figure 4</ref> of the main paper, we demonstrate that existing Transformers fail to exploit large look-back window sizes with two examples. Here, we give comprehensive comparisons between LTSF-Linear and Transformer-based TSF solutions under various look-back window sizes on all benchmarks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.1. Comparison of Univariate Forecasting</head><p>We present the univariate forecasting results on the four ETT datasets in table 9. Similarly, LTSF-Linear, especially for NLinear can consistently outperform all transformerbased methods by a large margin in most time. We find that there are serious distribution shifts between training and test sets (as shown in <ref type="figure">Fig. 5 (a)</ref>, (b)) on ETTh1 and ETTh2 datasets. Simply normalization via the last value from the lookback window can greatly relieve the distribution shift problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.2. Comparison under Different Look-back Windows</head><p>In <ref type="figure">Figure 6</ref>, we provide the MSE comparisons of five LTSF-Transformers with LTSF-Linear under different lookback window sizes to explore whether existing Transformers can extract temporal well from longer input sequences. For hourly granularity datasets (ETTh1, ETTh2, Traffic, and Electricity), the increasing look-back window sizes are <ref type="bibr">{24, 48, 72, 96, 120, 144, 168, 192, 336, 504</ref> As shown in <ref type="figure">Figure 6</ref>, with increased look-back window sizes, the performance of LTSF-Linear is significantly boosted for most datasets (e.g., ETTm1 and Traffic), while this is not the case for Transformer-based TSF solutions. Most of their performance fluctuates or gets worse as the input lengths increase. To be specific, the results of Exchange-Rate do not show improved results with a long look-back window (from Figure 6(m) and (n)), and we at-tribute it to the low information-to-noise ratio in such financial data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Ablation study on the LTSF-Linear</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.1. Motivation of NLinear</head><p>If we normalize the test data by the mean and variance of train data, there could be a distribution shift in testing data, i.e, the mean value of testing data is not 0. If the model made a prediction that is out of the distribution of true value, a large error would occur. For example, there is a large error between the true value and the true value minus/add one. Therefore, in NLinear, we use the subtraction and addition to shift the model prediction toward the distribution of true value. Then, large errors are avoided, and the model performances can be improved. <ref type="figure">Figure 5</ref> illustrates histograms of the trainset-test set distributions, where each bar represents the number of data points. Clear distribution shifts between training and testing data can be observed in ETTh1, ETTh2, and ILI. Accordingly, from <ref type="table" target="#tab_12">Table 9</ref> and <ref type="table" target="#tab_3">Table 2</ref> in the main paper, we can observe that there are great improvements in the three datasets comparing the NLinear to the Linear, showing the effectiveness of the NLinear in relieving distribution shifts. Moreover, for the datasets without obvious distribution shifts, like Electricity in <ref type="figure">Figure 5</ref>(c), using the vanilla Linear can be enough, demonstrating the similar performance with NLinear and DLinear.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.2. The Features of LTSF-Linear</head><p>Although LTSF-Linear is simple, it has some compelling characteristics:</p><p>? An O(1) maximum signal traversing path length:</p><p>The shorter the path, the better the dependencies are captured <ref type="bibr" target="#b13">[18]</ref>, making LTSF-Linear capable of capturing both short-range and long-range temporal relations.</p><p>? High-efficiency: As LTSF-Linear is a linear model with two linear layers at most, it costs much lower memory and fewer parameters and has a faster inference speed than existing Transformers (see <ref type="table" target="#tab_10">Table 8</ref> in main paper).</p><p>? Interpretability: After training, we can visualize weights from the seasonality and trend branches to have some insights on the predicted values <ref type="bibr" target="#b4">[9]</ref>.</p><p>? Easy-to-use: LTSF-Linear can be obtained easily without tuning model hyper-parameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.3. Interpretability of LTSF-Linear</head><p>Because LTSF-Linear is a set of linear models, the weights of linear layers can directly reveal how LTSF-Linear works. The weight visualization of LTSF-Linear can  also reveal certain characteristics in the data used for forecasting.</p><p>Here we take DLinear as an example. Accordingly, we visualize the trend and remainder weights of all datasets with a fixed input length of 96 and four different forecasting horizons. To obtain a smooth weight with a clear pattern in visualization, we initialize the weights of the linear layers in DLinear as 1/L rather than random initialization. That is, we use the same weight for every forecasting time step in the look-back window at the start of training.</p><p>How the model works: <ref type="figure" target="#fig_4">Figure 7</ref>(c) visualize the weights of the trend and the remaining layers on the Exchange-Rate dataset. Due to the lack of periodicity and seasonality in financial data, it is hard to observe clear patterns, but the trend layer reveals greater weights of information closer to the outputs, representing their larger contributions to the predicted values.</p><p>Periodicity of data: For Traffic data, as shown in <ref type="figure" target="#fig_4">Figure 7(d)</ref>, the model gives high weights to the latest time step of the look-back window for the 0,23,47...719 forecast-ing steps. Among these forecasting time steps, the 0, 167, 335, 503, 671 time steps have higher weights. Note that 24 time steps are a day, and 168 time steps are a week. This indicates that Traffic has a daily periodicity and a weekly periodicity. <ref type="bibr" target="#b19">24</ref>   <ref type="figure">Figure 6</ref>. The MSE results (Y-axis) of models with different look-back window sizes (X-axis) of the long-term forecasting (e.g., 720-time steps) and the short-term forecasting (e.g., 24 time steps) on different benchmarks. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Weather</head><p>In-96, Out-720</p><p>In-36, Out-60</p><p>In-96, Out-720</p><p>In-96, Out-720</p><p>In-96, Out-96 </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 .</head><label>2</label><figDesc>Illustration of the basic linear model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 .</head><label>3</label><figDesc>Illustration of the long-term forecasting output (Y-axis) of five models with an input length L=96 and output length T =192 (X-axis) on Electricity, Exchange-Rate, and ETTh2, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 .</head><label>4</label><figDesc>The MSE results (Y-axis) of models with different lookback window sizes (X-axis) of long-term forecasting (T=720) on the Traffic and Electricity datasets.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>MSE MAE MAE MSE MAE MSE MAE MSE MAE MSE MAE MSE MAE ET T h1 96 0.189 0.359 0.053 0.177 0.056 0.180 0.079 0.215 0.080 0.214 0.071 0.206 0.193 0.377 0.283 0.468 192 0.078 0.212 0.069 0.204 0.071 0.204 0.104 0.245 0.105 0.256 0.114 0.262 0.217 0.395 0.234 0.409 336 0.091 0.237 0.081 0.226 0.098 0.244 0.119 0.270 0.120 0.269 0.107 0.258 0.202 0.381 0.386 0.546 720 0.172 0.340 0.080 0.226 0.189 0.359 0.142 0.299 0.127 0.280 0.126 0.283 0.183 0.355 0.475 0.629 ET T h2 96 0.133 0.283 0.129 0.278 0.131 0.279 0.128 0.271 0.156 0.306 0.153 0.306 0.213 0.373 0.217 0.379 192 0.176 0.330 0.169 0.324 0.176 0.329 0.185 0.330 0.238 0.380 0.204 0.351 0.227 0.387 0.281 0.429 336 0.213 0.371 0.194 0.355 0.209 0.367 0.231 0.378 0.271 0.412 0.246 0.389 0.242 0.401 0.293 0.437 720 0.292 0.440 0.225 0.381 0.276 0.426 0.278 0.420 0.288 0.438 0.268 0.409 0.291 0.439 0.218 0.387 ET T m1 96 0.028 0.125 0.026 0.122 0.028 0.123 0.033 0.140 0.036 0.149 0.056 0.183 0.109 0.277 0.049 0.171 192 0.043 0.154 0.039 0.149 0.045 0.156 0.058 0.186 0.069 0.206 0.081 0.216 0.151 0.310 0.157 0.317 336 0.059 0.180 0.052 0.172 0.061 0.182 0.084 0.231 0.071 0.209 0.076 0.218 0.427 0.591 0.289 0.459 720 0.080 0.211 0.073 0.207 0.080 0.210 0.102 0.250 0.105 0.248 0.110 0.267 0.438 0.586 0.430 0.579 ET T m2 96 0.066 0.189 0.063 0.182 0.063 0.183 0.067 0.198 0.063 0.189 0.065 0.189 0.088 0.225 0.075 0.208 192 0.094 0.230 0.090 0.223 0.092 0.227 0.102 0.245 0.110 0.252 0.118 0.256 0.132 0.283 0.129 0.275 336 0.120 0.263 0.117 0.259 0.119 0.261 0.130 0.279 0.147 0.301 0.154 0.305 0.180 0.336 0.154 0.302 720 0.175 0.320 0.170 0.318 0.175 0.320 0.178 0.325 0.219 0.368 0.182 0.335 0.300 0.435 0.160 0.321</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 7 .</head><label>7</label><figDesc>Visualization of the weights(T*L) of LTSF-Linear on several benchmarks. Models are trained with a look-back window L (X-axis) and different forecasting time steps T (Y-axis). We show weights in the remainder and trend layer. Kristina Toutanova. Bert: Pre-training of deep bidirec-tional transformers for language understanding. arXiv</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 .</head><label>1</label><figDesc>The statistics of the nine popular datasets for the LTSF problem.</figDesc><table><row><cell cols="2">Methods</cell><cell>IMP.</cell><cell>Linear*</cell><cell>NLinear*</cell><cell cols="2">DLinear*</cell><cell cols="2">FEDformer</cell><cell cols="2">Autoformer</cell><cell>Informer</cell><cell>Pyraformer*</cell><cell>LogTrans</cell><cell>Repeat*</cell></row><row><cell cols="2">Metric</cell><cell>MSE</cell><cell>MSE MAE</cell><cell cols="2">MSE MAE MSE</cell><cell>MAE</cell><cell>MSE</cell><cell>MAE</cell><cell>MSE</cell><cell cols="2">MAE MSE MAE MSE MAE MSE MAE MSE MAE</cell></row><row><cell>Electricity</cell><cell cols="6">96 27.40% 0.140 0.237 0.141 0.237 0.140 0.237 192 23.88% 0.153 0.250 0.154 0.248 0.153 0.249 336 21.02% 0.169 0.268 0.171 0.265 0.169 0.267 720 17.47% 0.203 0.301 0.210 0.297 0.203 0.301</cell><cell>0.193 0.201 0.214 0.246</cell><cell>0.308 0.315 0.329 0.355</cell><cell cols="3">0.201 0.317 0.274 0.368 0.386 0.449 0.258 0.357 1.588 0.946 0.222 0.334 0.296 0.386 0.386 0.443 0.266 0.368 1.595 0.950 0.231 0.338 0.300 0.394 0.378 0.443 0.280 0.380 1.617 0.961 0.254 0.361 0.373 0.439 0.376 0.445 0.283 0.376 1.647 0.975</cell></row><row><cell>Exchange</cell><cell cols="6">96 45.27% 0.082 0.207 0.089 0.208 0.081 0.203 192 42.06% 0.167 0.304 0.180 0.300 0.157 0.293 336 33.69% 0.328 0.432 0.331 0.415 0.305 0.414 720 46.19% 0.964 0.750 1.033 0.780 0.643 0.601</cell><cell>0.148 0.271 0.460 1.195</cell><cell>0.278 0.380 0.500 0.841</cell><cell cols="3">0.197 0.323 0.847 0.752 0.376 1.105 0.968 0.812 0.081 0.196 0.300 0.369 1.204 0.895 1.748 1.151 1.040 0.851 0.167 0.289 0.509 0.524 1.672 1.036 1.874 1.172 1.659 1.081 0.305 0.396 1.447 0.941 2.478 1.310 1.943 1.206 1.941 1.127 0.823 0.681</cell></row><row><cell>Traffic</cell><cell cols="6">96 30.15% 0.410 0.282 0.410 0.279 0.410 0.282 192 29.96% 0.423 0.287 0.423 0.284 0.423 0.287 336 29.95% 0.436 0.295 0.435 0.290 0.436 0.296</cell><cell>0.587 0.604 0.621</cell><cell>0.366 0.373 0.383</cell><cell cols="3">0.613 0.388 0.719 0.391 2.085 0.468 0.684 0.384 2.723 1.079 0.616 0.382 0.696 0.379 0.867 0.467 0.685 0.390 2.756 1.087 0.622 0.337 0.777 0.420 0.869 0.469 0.734 0.408 2.791 1.095</cell></row><row><cell></cell><cell cols="6">720 25.87% 0.466 0.315 0.464 0.307 0.466 0.315</cell><cell>0.626</cell><cell>0.382</cell><cell cols="3">0.660 0.408 0.864 0.472 0.881 0.473 0.717 0.396 2.811 1.097</cell></row><row><cell>Weather</cell><cell cols="6">96 18.89% 0.176 0.236 0.182 0.232 0.176 0.237 192 21.01% 0.218 0.276 0.225 0.269 0.220 0.282 336 22.71% 0.262 0.312 0.271 0.301 0.265 0.319 720 19.85% 0.326 0.365 0.338 0.348 0.323 0.362</cell><cell>0.217 0.276 0.339 0.403</cell><cell>0.296 0.336 0.380 0.428</cell><cell cols="3">0.266 0.336 0.300 0.384 0.896 0.556 0.458 0.490 0.259 0.254 0.307 0.367 0.598 0.544 0.622 0.624 0.658 0.589 0.309 0.292 0.359 0.395 0.578 0.523 0.739 0.753 0.797 0.652 0.377 0.338 0.419 0.428 1.059 0.741 1.004 0.934 0.869 0.675 0.465 0.394</cell></row><row><cell></cell><cell cols="6">24 47.86% 1.947 0.985 1.683 0.858 2.215 1.081</cell><cell>3.228</cell><cell>1.260</cell><cell cols="3">3.483 1.287 5.764 1.677 1.420 2.012 4.480 1.444 6.587 1.701</cell></row><row><cell>ILI</cell><cell cols="6">36 36.43% 2.182 1.036 1.703 0.859 1.963 0.963 48 34.43% 2.256 1.060 1.719 0.884 2.130 1.024</cell><cell>2.679 2.622</cell><cell>1.080 1.078</cell><cell cols="3">3.103 1.148 4.755 1.467 7.394 2.031 4.799 1.467 7.130 1.884 2.669 1.085 4.763 1.469 7.551 2.057 4.800 1.468 6.575 1.798</cell></row><row><cell></cell><cell cols="6">60 34.33% 2.390 1.104 1.819 0.917 2.368 1.096</cell><cell>2.857</cell><cell>1.157</cell><cell cols="3">2.770 1.125 5.264 1.564 7.662 2.100 5.278 1.560 5.893 1.677</cell></row><row><cell>ETTh1</cell><cell cols="6">96 192 3.57% 0.418 0.429 0.408 0.415 0.405 0.416 0.80% 0.375 0.397 0.374 0.394 0.375 0.399 336 6.54% 0.479 0.476 0.429 0.427 0.439 0.443</cell><cell>0.376 0.420 0.459</cell><cell cols="4">0.419 0.449 0.459 0.865 0.713 0.664 0.612 0.878 0.740 1.295 0.713 0.448 0.500 0.482 1.008 0.792 0.790 0.681 1.037 0.824 1.325 0.733 0.465 0.521 0.496 1.107 0.809 0.891 0.738 1.238 0.932 1.323 0.744</cell></row><row><cell></cell><cell cols="6">720 13.04% 0.624 0.592 0.440 0.453 0.472 0.490</cell><cell>0.506</cell><cell>0.507</cell><cell cols="3">0.514 0.512 1.181 0.865 0.963 0.782 1.135 0.852 1.339 0.756</cell></row><row><cell>ETTh2</cell><cell cols="6">96 19.94% 0.288 0.352 0.277 0.338 0.289 0.353 192 19.81% 0.377 0.413 0.344 0.381 0.383 0.418 336 25.93% 0.452 0.461 0.357 0.400 0.448 0.465</cell><cell>0.346 0.429 0.496</cell><cell cols="4">0.388 0.358 0.397 3.755 1.525 0.645 0.597 2.116 1.197 0.432 0.422 0.439 0.456 0.452 5.602 1.931 0.788 0.683 4.315 1.635 0.534 0.473 0.487 0.482 0.486 4.721 1.835 0.907 0.747 1.124 1.604 0.591 0.508</cell></row><row><cell></cell><cell cols="6">720 14.25% 0.698 0.595 0.394 0.436 0.605 0.551</cell><cell>0.463</cell><cell>0.474</cell><cell cols="3">0.515 0.511 3.647 1.625 0.963 0.783 3.188 1.540 0.588 0.517</cell></row><row><cell>ETTm1</cell><cell cols="6">96 21.10% 0.308 0.352 0.306 0.348 0.299 0.343 192 21.36% 0.340 0.369 0.349 0.375 0.335 0.365 336 17.07% 0.376 0.393 0.375 0.388 0.369 0.386 720 21.73% 0.440 0.435 0.433 0.422 0.425 0.421</cell><cell cols="5">0.379 0.419 0.426 0.441 0.553 0.496 0.795 0.669 0.557 0.537 0.837 0.700 1.261 0.690 0.505 0.475 0.672 0.571 0.543 0.510 0.600 0.546 1.214 0.665 0.445 0.459 0.621 0.537 1.212 0.871 0.754 0.655 1.124 0.832 1.283 0.707 0.543 0.490 0.671 0.561 1.166 0.823 0.908 0.724 1.153 0.820 1.319 0.729</cell></row><row><cell>ETTm2</cell><cell cols="6">96 17.73% 0.168 0.262 192 17.84% 0.232 0.308 0.221 0.293 0.224 0.303 0.167 0.255 0.167 0.260 336 15.69% 0.320 0.373 0.274 0.327 0.281 0.342 720 12.58% 0.413 0.435 0.368 0.384 0.397 0.421</cell><cell cols="5">0.203 0.287 0.269 0.328 0.325 0.366 0.339 0.372 1.363 0.887 1.201 0.845 1.334 0.872 0.412 0.410 0.255 0.339 0.365 0.453 0.435 0.507 0.768 0.642 0.266 0.328 0.281 0.340 0.533 0.563 0.730 0.673 0.989 0.757 0.340 0.371 0.421 0.415 0.433 0.432 3.379 1.338 3.625 1.451 3.048 1.328 0.521 0.465</cell></row></table><note>-Methods* are implemented by us; Other results are from FEDformer [31].</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 2 .</head><label>2</label><figDesc>Multivariate long-term forecasting errors in terms of MSE and MAE, the lower the better. Among them, ILI dataset is with forecasting horizon T ? {24, 36, 48, 60}. For the others, T ? {96, 192, 336, 720}. Repeat repeats the last value in the look-back window. The best results are highlighted in bold and the best results of Transformers are highlighted with a underline. Accordingly, IMP. is the best result of linear models compared to the results of Transformer-based solutions.</figDesc><table /><note>the prediction results on three selected time series datasets with Transformer-based solutions and LTSF-Linear: Elec- tricity (Sequence 1951, Variate 36), Exchange-Rate (Se- quence 676, Variate 3), and ETTh2 ( Sequence 1241, Vari- ate 2), where these datasets have different temporal patterns. When the input length is 96 steps, and the output horizon is 336 steps, Transformers [28, 30, 31] fail to capture the scale and bias of the future data on Electricity and ETTh2. Moreover, they can hardly predict a proper trend on aperi- odic data such as Exchange-Rate. These phenomena further indicate the inadequacy of existing Transformer-based solu- tions for the LTSF task.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 3 .</head><label>3</label><figDesc>Comparison of different input sequences under the MSE metric to explore what LTSF-Transformers depend on. If the input is Close, we use the 96 th , ..., 191 th time steps as the input sequence. If the input is Far, we use the 0 th , ..., 95 th time steps. Both of them forecast the 192 th , ..., (192 + 720) th time steps.</figDesc><table><row><cell>Methods</cell><cell cols="2">FEDformer</cell><cell cols="2">Autoformer</cell></row><row><cell>Input</cell><cell>Close</cell><cell>Far</cell><cell>Close</cell><cell>Far</cell></row><row><cell cols="5">Electricity 0.251 0.265 0.255 0.287</cell></row><row><cell>Traffic</cell><cell cols="4">0.631 0.645 0.677 0.675</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 5 .</head><label>5</label><figDesc>Linear from the left to right columns. Att.-Linear is a structure that replaces each attention layer with a linear layer. The MSE comparisons of models when shuffling the raw input sequence. Shuf. randomly shuffles the input sequence. Half-EX. randomly exchanges the first half of the input sequences with the second half. Average Drop is the average performance drop under all forecasting lengths after shuffling. All results are the average test MSE of five runs.</figDesc><table><row><cell cols="6">Methods Informer Att.-Linear Embed + Linear Linear</cell></row><row><cell>Exchange</cell><cell>96 192 336 720</cell><cell>0.847 1.204 1.672 2.478</cell><cell>1.003 0.979 1.498 2.102</cell><cell>0.173 0.443 1.288 2.026</cell><cell>0.084 0.155 0.301 0.763</cell></row><row><cell>ETTh1</cell><cell>96 192 336</cell><cell>0.865 1.008 1.107</cell><cell>0.613 0.759 0.921</cell><cell>0.454 0.686 0.821</cell><cell>0.400 0.438 0.479</cell></row><row><cell></cell><cell>720</cell><cell>1.181</cell><cell>0.902</cell><cell>1.051</cell><cell>0.515</cell></row><row><cell cols="6">Table 4. The MSE comparisons of gradually transforming In-</cell></row><row><cell cols="6">former to a Can existing LTSF-Transformers preserve temporal</cell></row><row><cell cols="6">order well? Self-attention is inherently permutation-</cell></row></table><note>Embed + Linear is to drop other designs and only keeps embed- ding layers and a linear layer. The look-back window size is 96.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 6 .</head><label>6</label><figDesc>The MSE comparisons of different embedding strategies on Transformer-based methods with look-back window size 96 and forecasting lengths {96, 192, 336, 720}.</figDesc><table><row><cell>Methods</cell><cell>Embedding</cell><cell>96</cell><cell>Traffic 192 336</cell><cell>720</cell></row><row><cell></cell><cell>All</cell><cell cols="3">0.597 0.606 0.627 0.649</cell></row><row><cell>FEDformer</cell><cell>wo/Pos. wo/Temp.</cell><cell cols="3">0.587 0.604 0.621 0.626 0.613 0.623 0.650 0.677</cell></row><row><cell></cell><cell cols="4">wo/Pos.-Temp. 0.613 0.622 0.648 0.663</cell></row><row><cell></cell><cell>All</cell><cell cols="3">0.629 0.647 0.676 0.638</cell></row><row><cell>Autoformer</cell><cell>wo/Pos. wo/Temp.</cell><cell cols="3">0.613 0.616 0.622 0.660 0.681 0.665 0.908 0.769</cell></row><row><cell></cell><cell cols="4">wo/Pos.-Temp. 0.672 0.811 1.133 1.300</cell></row><row><cell></cell><cell>All</cell><cell cols="3">0.719 0.696 0.777 0.864</cell></row><row><cell>Informer</cell><cell>wo/Pos. wo/Temp.</cell><cell cols="3">1.035 1.186 1.307 1.472 0.754 0.780 0.903 1.259</cell></row><row><cell></cell><cell cols="4">wo/Pos.-Temp. 1.038 1.351 1.491 1.512</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head></head><label></label><figDesc>? is modified into the same one-step decoder, which is implemented in the source code from Autoformer. - * 236.7M parameters of Pyraformer come from its linear decoder.</figDesc><table><row><cell>Method</cell><cell cols="2">MACs Parameter</cell><cell>Time</cell><cell>Memory</cell></row><row><cell>DLinear</cell><cell>0.04G</cell><cell>139.7K</cell><cell>0.4ms</cell><cell>687MiB</cell></row><row><cell cols="2">Transformer? 4.03G</cell><cell>13.61M</cell><cell cols="2">26.8ms 6091MiB</cell></row><row><cell>Informer</cell><cell>3.93G</cell><cell>14.39M</cell><cell cols="2">49.3ms 3869MiB</cell></row><row><cell>Autoformer</cell><cell>4.41G</cell><cell>14.91M</cell><cell cols="2">164.1ms 7607MiB</cell></row><row><cell>Pyraformer</cell><cell cols="2">0.80G 241.4M  *</cell><cell>3.4ms</cell><cell>7017MiB</cell></row><row><cell>FEDformer</cell><cell>4.41G</cell><cell>20.68M</cell><cell cols="2">40.5ms 4143MiB</cell></row></table><note>-</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>Table 8 .</head><label>8</label><figDesc>Comparison of practical efficiency of LTSF-Transformers under L=96 and T=720 on the Electricity. MACs are the number of multiply-accumulate operations. We use Dlinear for comparison since it has the double cost in LTSF-Linear. The inference time averages 5 runs.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12"><head>Table 9 .</head><label>9</label><figDesc>Univariate long sequence time-series forecasting results on ETT full benchmark. The best results are highlighted in bold and the best results of Transformers are highlighted with a underline.</figDesc><table><row><cell>(a) ETTh1 channel6</cell><cell>(b) ETTh2 channel3</cell><cell>(c) Electricity channel3</cell><cell>(d) ILI channel6</cell></row><row><cell cols="4">Figure 5. Distribution of ETTh1, ETTh2, Electricity, and ILI dataset. A clear distribution shift between training and testing data can be</cell></row><row><cell>observed in ETTh1, ETTh2, and ILI.</cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_14"><head></head><label></label><figDesc>Razvan-Gabriel Cirstea, Chenjuan Guo, Bin Yang, Tung Kieu, Xuanyi Dong, and Shirui Pan. Triformer: Triangular, variable-specific attentions for long sequence multivariate time series forecasting-full version. arXiv preprint arXiv:2204.13767, 2022. 1 [6] R. B. Cleveland. Stl : A seasonal-trend decomposition procedure based on loess. Journal of Office Statistics,</figDesc><table><row><cell>Electricity</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>(b1) Remainder</cell><cell>(b2) Trend</cell><cell cols="2">(b3) Remainder</cell><cell cols="2">(b4) Trend</cell><cell>(b5) Remainder</cell><cell>(b6) Trend</cell><cell>(b7) Remainder (b8) Trend</cell></row><row><cell cols="2">In-96, Out-96</cell><cell cols="3">In-96, Out-192</cell><cell></cell><cell cols="2">In-96, Out-336</cell><cell>In-96, Out-720</cell></row><row><cell>Exchange-Rate</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>(c1) Remainder</cell><cell>(c2) Trend</cell><cell cols="2">(c3) Remainder</cell><cell cols="2">(c4) Trend</cell><cell>(c5) Remainder</cell><cell>(c6) Trend (c7) Remainder (c8) Trend</cell></row><row><cell cols="2">In-96, Out-96</cell><cell cols="3">In-96, Out-192</cell><cell></cell><cell cols="2">In-96, Out-336</cell></row><row><cell>Traffic</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>(d1) Remainder</cell><cell>(d2) Trend</cell><cell cols="2">(d3) Remainder</cell><cell cols="2">(d4) Trend</cell><cell>(d5) Remainder</cell><cell>(d6) Trend (d7) Remainder (d8) Trend</cell></row><row><cell cols="2">In-96, Out-96</cell><cell cols="3">In-96, Out-192</cell><cell></cell><cell cols="2">In-96, Out-336</cell></row><row><cell>(e1) Remainder</cell><cell>(e2) Trend</cell><cell cols="2">(e3) Remainder</cell><cell cols="2">(e4) Trend</cell><cell>(e5) Remainder</cell><cell>(e6) Trend (e7) Remainder (e8) Trend</cell></row><row><cell cols="2">In-96, Out-96</cell><cell cols="3">In-96, Out-192</cell><cell></cell><cell cols="2">In-96, Out-336</cell></row><row><cell>ILI</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>(f1) Remainder</cell><cell>(f2) Trend</cell><cell>(f3) Remainder</cell><cell cols="2">(f4) Trend</cell><cell cols="2">(f5) Remainder</cell><cell>(f6) Trend</cell><cell>(f7) Remainder (f8) Trend</cell></row><row><cell cols="4">recurrent networks for sequence modeling. arXiv In-36, Out-24 In-36, Out-36</cell><cell></cell><cell></cell><cell cols="2">In-36, Out-48</cell></row><row><cell cols="2">preprint arXiv:1803.01271, 2018. 1, 9</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">[4] Guillaume Chevillon. Direct multi-step estimation</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>and forecasting.</cell><cell cols="2">Journal of Economic Surveys,</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">21(4):746-785, 2007. 2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="6">[5] 1990. 3</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">[7] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">Due to page limit, we leave the discussion of non-Transformer forecasting solutions in the Appendix.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">https://github.com/zhouhaoyi/ETDataset 3 http://pems.dot.ca.gov 4 https : / / archive . ics . uci . edu / ml / datasets / ElectricityLoadDiagrams20112014 5 https : / / github . com / laiguokun / multivariatetime-series-data 6 https://www.bgc-jena.mpg.de/wetter/ 7 https : / / gis . cdc . gov / grasp / fluview / fluportaldashboard.html</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Stock price prediction using the arima model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Adebiyi A Ariyo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Adewumi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><forename type="middle">K</forename><surname>Adewumi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ayo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">UKSim-AMSS 16th International Conference on Computer Modelling and Simulation</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">9</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Neural machine translation by jointly learning to align and translate. arXiv: Computation and Language</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dzmitry</forename><surname>Bahdanau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kyunghyun</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">An empirical evaluation of generic convolutional and preprint</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shaojie</forename><surname>Bai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zico</forename><surname>Kolter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vladlen</forename><surname>Koltun</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1810.04805</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Speechtransformer: a no-recurrence sequence-to-sequence model for speech recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Linhao</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shuang</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bo</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2018 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2018" />
			<biblScope unit="page" from="5884" to="5888" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A granular time series approach to long-term forecasting and trend forecasting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ruijun</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Witold</forename><surname>Pedrycz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Physica A: Statistical Mechanics and its Applications</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="volume">387</biblScope>
			<biblScope unit="page" from="3253" to="3270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shereen</forename><surname>Elsayed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniela</forename><surname>Thyssens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ahmed</forename><surname>Rashed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lars</forename><surname>Hadi Samer Jomaa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Schmidt-Thieme</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2101.02118</idno>
		<title level="m">Do we really need deep learning models for time series forecasting? arXiv preprint</title>
		<imprint>
			<date type="published" when="2021" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Greedy function approximation: a gradient boosting machine</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Jerome</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Friedman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of statistics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">9</biblScope>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Exponential smoothing: The state of the art</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Everette</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Gardner</surname><genName>Jr</genName></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of forecasting</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="28" />
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Time series analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Douglas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hamilton</forename></persName>
		</author>
		<imprint>
			<publisher>Princeton university press</publisher>
			<biblScope unit="volume">2020</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Forecasting, structural time series models and the kalman filter</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Andrew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Harvey</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Modeling long-and short-term temporal patterns with deep neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guokun</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei-Cheng</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yiming</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hanxiao</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">international acm sigir conference on research and development in information retrieval</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Enhancing the locality and breaking the memory bottleneck of transformer on time series forecasting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shiyang</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoyong</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yao</forename><surname>Xuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiyou</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wenhu</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yu-Xiang</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xifeng</forename><surname>Yan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="volume">32</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Time series is a special sequence: Forecasting with sample convolution and interaction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Minhao</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ailing</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhijian</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qiuxia</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qiang</forename><surname>Xu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2106.09305</idno>
		<imprint>
			<date type="published" when="2021" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">9</biblScope>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Pyraformer: Low-complexity pyramidal attention for long-range time series modeling and forecasting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shizhan</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hang</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cong</forename><surname>Liao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jianguo</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Weiyao</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><forename type="middle">X</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Schahram</forename><surname>Dustdar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">10</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Swin transformer: Hierarchical vision transformer using shifted windows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ze</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yutong</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yue</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Han</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yixuan</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zheng</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Baining</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE/CVF International Conference on Computer Vision</title>
		<meeting>the IEEE/CVF International Conference on Computer Vision</meeting>
		<imprint>
			<date type="published" when="2021" />
			<biblScope unit="page" from="10012" to="10022" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">T-wavenet: A treestructured wavelet neural network for time series signal analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ailing</forename><surname>Liu Minhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ruiyuan</forename><surname>Lai Qiuxia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Min</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jing</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qiang</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2021" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G?bor</forename><surname>Petneh?zi</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1901.00069</idno>
		<title level="m">Recurrent neural networks for time series forecasting</title>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Deepar: Probabilistic forecasting with autoregressive recurrent networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Salinas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Valentin</forename><surname>Flunkert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan</forename><surname>Gasthaus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Forecasting</title>
		<imprint>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Recursive and direct multi-step forecasting: the best of both worlds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rob</forename><forename type="middle">J</forename><surname>Souhaib Ben Taieb</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hyndman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Citeseer</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Forecasting at scale. PeerJ Prepr</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sean</forename><forename type="middle">J</forename><surname>Taylor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benjamin</forename><surname>Letham</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">An evaluation of change point detection algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Gerrit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Van Den</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Burg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Christopher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Williams</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2003.06222</idno>
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Attention is all you need. Advances in neural information processing systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ashish</forename><surname>Vaswani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Noam</forename><surname>Shazeer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Niki</forename><surname>Parmar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jakob</forename><surname>Uszkoreit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Llion</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aidan</forename><forename type="middle">N</forename><surname>Gomez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">?ukasz</forename><surname>Kaiser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Illia</forename><surname>Polosukhin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="volume">30</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qingsong</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tian</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chaoli</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Weiqi</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ziqing</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Junchi</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liang</forename><surname>Sun</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2202.07125</idno>
		<title level="m">Transformers in time series: A survey</title>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Autoformer: Decomposition transformers with autocorrelation for long-term series forecasting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiehui</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jianmin</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mingsheng</forename><surname>Long</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page">9</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Deciwatch: A simple baseline for 10x efficient 2d and 3d pose estimation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ailing</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xuan</forename><surname>Ju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lei</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ruiyuan</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xizhou</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bo</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qiang</forename><surname>Xu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2203.08713</idno>
		<imprint>
			<date type="published" when="2022" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Informer: Beyond efficient transformer for long sequence time-series forecasting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Haoyi</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shanghang</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jieqi</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shuai</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jianxin</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hui</forename><surname>Xiong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wancai</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Thirty-Fifth AAAI Conference on Artificial Intelligence, AAAI 2021, Virtual Conference</title>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="2004" />
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page">9</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Fedformer: Frequency enhanced decomposed transformer for long-term series forecasting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tian</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ziqing</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qingsong</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xue</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liang</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rong</forename><surname>Jin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">9</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
