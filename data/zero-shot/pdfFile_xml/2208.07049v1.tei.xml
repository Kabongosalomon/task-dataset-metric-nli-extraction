<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Date of publication xxxx 00, 0000, date of current version xxxx 00, 0000. Self-Supervised Vision Transformers for Malware Detection</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sachith</forename><surname>Seneviratne</surname></persName>
							<email>sachith.seneviratne@unimelb.edu.au</email>
							<affiliation key="aff0">
								<orgName type="institution">University Of Melbourne</orgName>
								<address>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ridwan</forename><surname>Shariffdeen</surname></persName>
							<email>ridwan@u.nus.edu</email>
							<affiliation key="aff1">
								<orgName type="department">School of Computing</orgName>
								<orgName type="institution">National University of Singapore</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sanka</forename><surname>Rasnayaka</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">School of Computing</orgName>
								<orgName type="institution">National University of Singapore</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nuran</forename><surname>Kasthuriarachchi</surname></persName>
							<email>nuran.11@cse.mrt.ac.lkcorrespondingauthor:sachithseneviratnee-mail:sachith.seneviratne@unimelb.edu.au.</email>
							<affiliation key="aff2">
								<orgName type="institution">University of Moratuwa</orgName>
								<address>
									<settlement>Sri Lanka</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Date of publication xxxx 00, 0000, date of current version xxxx 00, 0000. Self-Supervised Vision Transformers for Malware Detection</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1109/ACCESS.2017.DOI</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2022-11-11T20:33+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>INDEX TERMS Self-Supervised Learning</term>
					<term>Deep Learning</term>
					<term>Malware Detection</term>
					<term>Android Security</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Malware detection plays a crucial role in cyber-security with the increase in malware growth and advancements in cyber-attacks. Previously unseen malware which is not determined by security vendors are often used in these attacks and it is becoming inevitable to find a solution that can self-learn from unlabeled sample data. This paper presents SHERLOCK, a self-supervision based deep learning model to detect malware based on the Vision Transformer (ViT) architecture. SHERLOCK is a novel malware detection method which learns unique features to differentiate malware from benign programs with the use of image-based binary representation. Experimental results using 1.2 million Android applications across a hierarchy of 47 types and 696 families, shows that self-supervised learning can achieve an accuracy of 97% for the binary classification of malware which is higher than existing state-of-the-art techniques. Our proposed model is also able to outperform state-of-the-art techniques for multi-class malware classification of types and family with macro-F1 score of .497 and .491 respectively.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>A RTIFICIAL intelligence has gained significant popularity over the recent years, serving in many applications since its inception. Currently, it dominates in the imaging field -in particular, image classification <ref type="bibr" target="#b0">[1]</ref>. Advancements in deep learning technology has further improved the accuracy and reliability of models that use deep learning architectures. One can be impressed by the performance of Deep Neural Networks (DNNs) which takes advantage of the proliferation of large data-sets in addition to the increase in computational power. Despite state-of-the-art performance achieved by DNNs, recent research reveals that such models are prone to adversarial attacks which alters the output of the DNN and degrades the performance <ref type="bibr" target="#b1">[2]</ref>. Adversarial perturbation is a well-known problem, due to the nature of deep neural networks which are highly sensitive to slight modifications that are imperceptible to human eye. Recently, many works have been proposed to generate diverse set of adversarial examples, which have been used as benchmarks to evaluate the robustness of deep learning models <ref type="bibr" target="#b2">[3]</ref>. Similarly, several strategies are also bought forward in the literature to thwart such attacks <ref type="bibr" target="#b3">[4]</ref>.</p><p>In the realm of software security, malware detection poses an increasingly challenging task <ref type="bibr" target="#b4">[5]</ref>, which is to identify malicious software programs by differentiating such programs apart from benign applications. According to recent studies <ref type="bibr" target="#b5">[6]</ref>, malicious software is increasing at an alarming rate, where some or most hide inside popular applications using obfuscation techniques that evades traditional signaturebased detection methods. In particular, Android malware detection plays a vital role which seriously threatens the integrity of Android applications. Statistics shows that more than 3.25 million malicious Android apps have been found in 2016 <ref type="bibr" target="#b6">[7]</ref>, indicating that a new malware app is found every 10 seconds. Android malware detection needs more attention and research to prevent malware from being released in the wild through Android application marketplaces. Malware authors use common obfuscation techniques such as encryption, oligomorphic, polymorphic, metamorphic, stealth and packaging methods to make the task of detection difficult <ref type="bibr" target="#b7">[8]</ref>. The malware detection problem can be seen as a classification problem whereby the algorithm needs to correctly categorize a given program into one of the classes: malware or benign. Most existing approaches to detect Android malware VOLUME 4, 2016 1 arXiv:2208.07049v1 [cs.CR] 15 Aug 2022 rely on extraction of application features and using prior knowledge to train a machine learning classifier to distinguish between benign and malicious applications. Despite the high accuracy, these models are ineffective as attackers bypass such detection by adding features commonly used by benign apps. Such simple addition of benign functionality to malicious apps, such as pop-up messages and logging, can change the detection class from malicious to benign.</p><p>Recent malware programs are written with the objective of being highly similar to benign applications by incorporating features of popular applications, having only slight differences which is difficult for humans to perceive <ref type="bibr" target="#b8">[9]</ref>. DNNs can detect such imperceptible changes, and by training with a large data-set we can detect features of malicious applications despite having a large amount of benign features embedded. In fact, previous research has shown that malware can be detected using image classifiers made of deep learning models <ref type="bibr" target="#b9">[10]</ref>. Malware variants belonging to the same family exhibits visual similarity in the byteplot images, which can be used to train deep learning models to detect specific features which can then be used to detect the existence of similar variant in other applications. These images are generated based on visualization in the spatial domain by converting bytes to pixels. The works typically convert malware binaries to digital images and pass them into a neural network in order to detect malware. Machine learning is widely applied in the detection of Android malware, whether based on static, dynamic or hybrid analysis approaches. Compared with traditional methods, such as signature-based detection, machine-learning based approaches provide better performance in detection efficacy and efficiency, in addition to the ability to detect previously unseen types of malware i.e. zeroshot learning.</p><p>In this paper, we present a novel technique building on self-supervised representation learning to detect malware with high-accuracy surpassing state-of-the-art techniques on one of the largest malware data-sets containing 1.2 million binary images across a hierarchy of 47 types and 696 families of malware. Self-supervised learning is capable of adopting self-defined pseudo-labels as supervision and use the learned representations to avoid the cost of annotating large-scale data-sets. Traditional supervised learning methods heavily depend on the availability of annotated large-scale training data, which is impractical with the ever-evolving nature of malware programs. Even though there are plethora of data available in a limited scale, the learning can suffer from issues such as generalization error, spurious correlations and adversarial attacks. This is where self-supervised methods play a vital role in reaping the benefits of deep learning without the expense of heavy annotations and learn feature representations where data provides the supervision. We show that our proposed technique is able to achieve 97% accuracy in detecting malware and with 87% precision in correctly identifying the malware family, outperforming state-of-theart techniques for one of the largest data-set consisting of million Android apps curated from AndroZoo <ref type="bibr" target="#b10">[11]</ref> reposi-tory. The main contributions of this study are as follows:</p><p>? Implementation of a Transformer based computer vision model utilizing self-supervised learning for Android malware detection. To the best of our knowledge this is the first work to utilize self-supervised learning and vision transformers for the purpose of detecting malware on a large-scale data-set. ? A comprehensive evaluation of the effectiveness in detecting a malware and multi-class malware classification into malware type and malware family. Our results demonstrate that self-supervised learning can effectively classify 47 types and 696 families of malware with a macro-F1 score of 0.497 and 0.491 respectively. ? Contributing to the understanding of self-supervised computer vision models, specifically the Vision Transformer architectures, and their performance on synthetic imagery.</p><p>The rest of the article is organized as follows: Section II provides a background to malware detection and selfsupervised learning. Next, Section III details the methodology while Section IV elaborates on the evaluation and the results. Section V gives an overview of related work with Section VI discussing important insights. Finally, the conclusion is given at the end of the article.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. BACKGROUND</head><p>In this section, we summarize the important background details for self-supervised malware detection using byteplot grayscale images. First, we describe the process for the image generation where the malware executable is converted to a byteplot grayscale image. These converted images of binary executables can be used to automatically identify visual patterns that can be used in static malware analysis. We then describe the necessary background on image classification using machine learning and self-supervision for image classification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. BYTEPLOT VISUALIZATION</head><p>Transforming a binary executable into an image was first described by Conti et al <ref type="bibr" target="#b11">[12]</ref> to represent binary data objects as grayscale images, where a pixel value of the image corresponds to a byte in the binary. Since a byte range is 0-255, the image pixel color is rendered as a grayscale where zero is black and 255 is white other values representing intermediate shades of gray. This representation provides a visual analysis of binary data to distinguish structurally different regions of data and thus enabling wide range of static analysis such as file type identification, inference of primitive data type, fragment classification and other tasks that required special reverse engineering effort for the binary data. Nataraj et al proposed to transform malware samples into byteplot images with the observation that significant visual similarities exists in malware belonging to the same family <ref type="bibr" target="#b12">[13]</ref>. The transformation consist of reading the binary as a vector of 8-bit unsigned integers organized into a 2D array, where the width is defined based on empirical observations and height is varied depending on the file size.</p><p>Freitas et al extended this work for Android applications by constructing the image representation using DEX file (bytecode) obtained from the Android APK <ref type="bibr" target="#b14">[14]</ref>. The extracted DEX file was converted to a 1D array (instead of 2D) of 8-bit unsigned integers. The vector is then used in a 3-phase conversion process of 1) converting the 1D array to a 2D image representation 2) scaling the image to a standard size and 3) encoding semantic information into the RGB channels. Similar to the approach presented by Nataraj et al <ref type="bibr" target="#b12">[13]</ref> the first step is to convert the data array into a grayscale image, where the width is fixed and height is varied based on the file size. The transformed image is then scaled to 256 ? 256 using a standard Lanczos filter from the Pillow library. Once the scaled grayscale image is obtained the final step is encoding semantic information that can further assist the differentiation of distinctive texture patterns. By coloring each byte according to its usage in the malware executable file, the image has an added layer of semantic information on top of the raw bytecode. Gamut et al present <ref type="bibr" target="#b15">[15]</ref> an encoding that assigns each byte to a particular RGB color channel depending on its position in the DEX file structure. The observation is that the sections in a DEX file should be distinguished for malware detection as each malware type utilize each section differently, and such patterns can be easily recognized in an image visualization. The encoded image can be decoded back to grayscale by combining each of the channels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. IMAGE CLASSIFICATION</head><p>Image classification is a paradigm of machine learning involving assigning categories to images. Most image classification problems are multi-class, single label classification problems involving multiple potential categories for the images but with only a single label or category being applied to an image. However, it is possible to apply multiple labels to some imagery. For example, images that contain multiple objects (i.e. a vehicle and a horse) or images that captures multiple features (i.e. an image of a bird can be labeled based on its physical features). In the context of malware analysis, a byteplot image generated from a malware program may contain different labels such as, if its benign or malware, type of malware, author of the program and malware family. These labels can be explored as categories either independently (as multiple single-label, multi-class problems) or jointly (a single multi-label, multi-class problem). A key issue when performing multiple single-label, multi-class classifications on the same dataset is the computational cost associated with training a different network for each problem. Transfer learning is a commonly used technique to alleviate some of the computational cost. In transfer learning, a previously trained neural network is reused to instantiate the weights of a new neural network that is then trained on the new problem. By reusing the weights of the previous task the "knowledge" from the previous task is transferred over and reused to some extent. Rezende et al <ref type="bibr" target="#b9">[10]</ref> used transfer learning to train a DNN using ImageNet dataset which contains 1.28 million images of 1000 classes (which does not include malware images) and was able to achieve an accuracy of 92.97% on a dataset comprising 10,136 malware byteplot images. This approach was one of the first to show that, without feature engineering, using raw pixel values of byteplot images, malware can be classified with high accuracy. The DNN was initially trained for a different task on a different dataset, yet was capable to outperform at the time state-of-the-art models that used specialized reverse engineering efforts. This line of work depend on the learning from already established, annotated data-sets despite the disparity between the initial training data-set used for the weights and the malware dataset used for testing. However, Freitas et al <ref type="bibr" target="#b14">[14]</ref> shows that transfer learning does not scale when there is a significant disparity between the training data-set and testing data-set. Using a ResNet18 model pre-trained on ImageNet and fine tuning for malware images, they show that the pre-trained model on ImageNet is less effective than a model trained from scratch on a malware data. In order to achieve the full potential of image classification for malware analysis, the model must learn features from a data-set consisting of malware images.</p><p>The challenge is to generate a large data-set for malware images with annotations on different labels it can learn. Generating such a large-scale data-set may not be feasible as it was for ImageNet because the manual annotation for images in ImageNet can be often done by individuals with no special expertise and with minimal time. However, the classification of a malware requires an expert analyst on average around 10 hours to characterize a malicious binary <ref type="bibr" target="#b16">[16]</ref>, <ref type="bibr" target="#b17">[17]</ref>. The expensive effort makes it impractical to generate a large corpus of malware images that consist of expertlabeled data that can be used for different tasks such as classification for malware family, type of malware, author of malware etc. Given the evolution of software with new API changes, new code generation techniques and improved compiler optimizations, program binaries as a whole changes over time. Similarly, adversaries design malicious binaries to be adaptable to these changes while also avoiding detection <ref type="bibr" target="#b18">[18]</ref>. This makes it challenging to maintain an up-to-date data-set consisting of expert-labeled data, that can be used to train to detect new malware with new features. This is a concept known a "conceptual drift" where an expert-labeled data-set for malware detection can quickly be outdated due to the nature of malware evolution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. SELF-SUPERVISED LEARNING</head><p>When labeled data is scarce, self-supervised learning holds great promise for improving representation learning. Self supervision is a paradigm of representation learning which involves training a model on a pretext task with unlabeled imagery, but in a supervised manner. The pretext tasks in this context are a class of tasks which can be automatically generated from imagery without human intervention. The VOLUME 4, 2016 FIGURE 1. A high-level overview of SHERLOCK: self-supervised learning can be used to bootstrap different classification problems using malware image data goal of self-supervised learning from images is to construct image representations that have semantic meaning via pretext tasks that does not require any manual annotations. Examples of pretext tasks include jigsaw puzzle solving <ref type="bibr" target="#b19">[19]</ref> for reconstructing an image after randomly permuting grid sections, relative position prediction <ref type="bibr" target="#b20">[20]</ref> for predicting the relative position and orientation of image patches with respect to each other or image colorization <ref type="bibr" target="#b21">[21]</ref> for removing colour from an image and restoring it. These tasks require the neural network to learn a generic representation of the dataset in order to solve the pretext task. A model trained for solving these pretext tasks learn representations that can be reused for solving other downstream tasks of interest, such as image classification.</p><p>Purely self-supervised techniques learn visual representations that may be inferior to those achieved via fullysupervised techniques on a given downstream task. Thus, self-supervision alone is insufficient for practical use despite demonstrations of encouraging results in recent work. To alleviate this, self-supervision is combined with transfer learning or fine-tuning on the downstream task. This is similar to how humans perform learning. We bring an innate representation of the world to any new task we learn. In the self-supervised learning setting, the labelled imagery in the downstream task provides a supervisory signal (usually by propogating an error function such as cross entropy) which helps the self-supervised representation to adapt to the downstream task. Zhai et al <ref type="bibr" target="#b22">[22]</ref> shows that self-supervised learning can dramatically benefit from a small amount of labeled examples by turning self-supervised to semisupervised learning model. Such a self-supervised learning can alleviate the need for continuously generating manually annotated dataset for malware classification. Moreover, selfsupervision can improve several aspects of model robustness, including robustness to adversarial examples, label corruptions and common input corruptions. Hendrycks et al <ref type="bibr" target="#b23">[23]</ref> shows that self-supervised learning can even surpass fully supervised methods, raising the question of whether selfsupervised learning render large labeled data-sets needless. However, in this work, we investigate the benefits of selfsupervised learning combined with a large-scaled labeled data-set, specifically for malware detection and classification.</p><p>In particular, we explore how label-independent learning can provide efficient workflows for performing multiple single label classifications on the same dataset.</p><p>While self-supervised computer vision has received considerable attention, most current work is focused on natural imagery (imagery captured from a camera of a natural scene). However, many forms of imagery consumed by humans take on a more abstract form. There are many concepts that are visually represented as images. The underlying dynamics of such imagery can be drastically different from that of natural scene imagery. For example, an image of a natural scene contains semantic cues as to the proximity of an object to the sensor based on the size of the subject. However, such semantics are noticeably absent or different in more abstract imagery. Additionally the transferability of knowledge representations would be further lowered between abstract imagery domains due to this reason, when compared with natural imagery domains, which points to an increased utility in developing approaches such as self-supervised learning for such domains. Further understanding of how self-supervised learning operates on such imagery is therefore of considerable academic interest. Some prior work in this regard <ref type="bibr" target="#b24">[24]</ref>, <ref type="bibr" target="#b25">[25]</ref> focuses on sketch based abstractions of images, while others operate on images of maps <ref type="bibr" target="#b26">[26]</ref> or digital elevation outputs <ref type="bibr" target="#b27">[27]</ref>. To the best of our knowledge, no prior work has performed self-supervised learning on images representing binaries of programs which falls into this category of imagery as it is an abstract representation of the underlying software artifact.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. METHODOLOGY</head><p>In this section we describe the overall architecture of our model and an overview of our proposed method to detect and classify malware using self-supervised learning. Next, we describe self-supervised learning to synthesise malware images using a new architecture in computer vision. Finally, we detail how we fine-tune the model by reusing the learnt representation from the synthesis task, for the problem of multi-class labelling in the context of malware classification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. OVERVIEW</head><p>We propose a novel technique for malware detection using the vision transformer architecture with self-supervised learning. Compared to existing techniques that use image classification for malware detection, we interpret a malware image as a sequence of patches and process it by a standard Transformer encoder as used in natural language processing. This interpretation combined with pre-training on large datasets allows us to re-purpose a trained model effectively for 3 different classification tasks with minimal computation cost. <ref type="figure">Figure 1</ref> depicts an overview of our proposed method, SHERLOCK. The core idea of SHERLOCK is to generate training samples for the underlying learning task in a fullysupervised manner, which then can be used by classification models to bootstrap the training via transfer learning. The learning task is to synthesise malware images from a limited set of features that captures the semantics of a malware. This is contrary to the previous work on malware detection which is entirely based on supervised learning.</p><p>SHERLOCK consists of two main components that can efficiently synthesise malware images using an optimized representation of the malware image and a classification component that can reuse the optimized representation to identify the correct label for a specific classification problem. Given a malware image, SHERLOCK first splits the image into patches (small pieces of the image) of size 16 ? 16 pixels. These patches are then flattened or concatenated to form a 1-dimensional vector, which is used to generate a lower dimensional linear embedding representation of the patches. As transformers are used for modelling sequences, positional embedding is used to maintain the 2-dimensional positional correspondence of the image patches. Using such an embedding we train a model to encode the semantic features of a malware image in a fully-supervised manner to obtain an optimized version of the embedding. This optimized embedding is used to bootstrap the classifier component as a base knowledge that captures the semantic encoding of a malware, and fine-tune different classification models on malware image data (i.e. malware detection, type-classification, family-classification). We use the MalNet dataset <ref type="bibr" target="#b14">[14]</ref> in our analysis as it is the largest publicly available cybersecurity image database (1.2 million images) with multiple labels for each image corresponding to malware/benign (2 categories), malware type (47 categories) and malware family (696 categories).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. MASKED AUTO ENCODER</head><p>The recent advent of Vision Transformers <ref type="bibr" target="#b28">[28]</ref> (ViTs) provide an alternate architecture for image processing that is both simple and scalable. In a Vision Transformer, an image is first split into patches (of sizes such as 8?8 or 16?16 pixels). These patches are then transformed into an embedding using standard transformer encoders as shown in <ref type="figure" target="#fig_0">Figure 2</ref>. Given an image, the model encodes a representation which it then decodes to regenerate the original image. Therefore, the input to the model is an image, and the output is a reconstruction of the same image, from a reduced feature space with a perfectly accurate output being an exact copy of the original image. Encoding the image into a bottleneck representation (which is usually a fixed size vector of size 256, 512, 1048 etc.) enforces the self-supervisory task to learn useful semantic features for the decoder which is used to reconstruct the image. This concept can be generalized to other modalities of data, for example, Natural Language Processing (NLP) where masked language modelling as a self-supervisory task has previously led to state of the art results <ref type="bibr" target="#b29">[29]</ref>.</p><p>We utilize masked auto encoding as our pre-text task. In general masked auto encoding is associated with removing a portion of the data, and using the remaining data to predict the removed portion. Thus, given an image, some pixels of the image are masked prior to self-supervised training and the neural network must learn how to recover the masked pixels based on the visible pixels. Recent work <ref type="bibr" target="#b30">[30]</ref> has shown that masking a large portion of pixels in natural images (such as ImageNet) leads to a challenging self-supervisory task capable of generating useful representations for downstream tasks. In the absence of prior work applying masked autoencoding to abstract/synthetic imagery, we explore a large masked pixel percentage (75% of the image), thus forcing the model to attempt to recover the image based only on the unmasked 25% of the image, such high percentages have been shown to work well for natural imagery <ref type="bibr" target="#b30">[30]</ref>. <ref type="figure">Figure 3</ref> depicts the results of the image synthesis for two different malware types. Importantly, we use Vision Transformers <ref type="bibr" target="#b28">[28]</ref> in our analysis, which are able to effectively incorporate 2-D positional embeddings in order to indicate the location of a patch within an image. Such incorporation is not straightforward in convolutional neural networks. <ref type="figure" target="#fig_1">Figure 4</ref> gives an overview of the auto-encoder component of SHERLOCK that use self-supervised learning to obtain an VOLUME 4, 2016 At this stage, a pixel-wise loss is computed between the original image and the synthesized image, which is then backpropagated throughout the network. Importantly, the ability to only encode the unmasked inputs enables more computationally efficient training in a self-supervised manner. The decoder is only used during self-supervised pre-training which allows flexibility in decoder design. In particular, simpler decoders enforce a better representation in the other parts of the architecture as less knowledge/parameters would be stored within the decoder. The encoder containers 12 blocks while the decoder only has 4, additionally the embedding dimension for the encoder has size 768 while the decoder has size 384. To evaluate reconstruction error, each pixel in a patch is first normalized by subtracting the mean of pixels in the patch and dividing the result by the patch standard deviation. The reconstruction loss is computed by calculating mean standard error over pixels in the masked patches after normalization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. CLASSIFICATION MODELS</head><p>One of the major advantage in utilizing a self-supervised learning in this manner is the possibility to reuse the same self-supervised representation with minimal additional training in all 3 downstream tasks -in this case malware classification (binary), malware type classification (47 categories) and malware family classification (696 categories). In contrast, simple supervised models would need to separately train from scratch, which would require considerable additional computational processing. In this regard, as more tasks that are formulated on the same dataset, self-supervised methods become more efficient. The self-supervised representations generated are thus fine-tuned separately on each individual task with accuracy and macro f1 scores generated for each task.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1: Malware Detection algorithm</head><p>Input: Binary Image, I raw Output: Boolean value true/false Execution:</p><formula xml:id="formula_0">1. I = resize(I raw ) 2. L patches = (I) 3. encoding = encode(L patches ) 4. P = ComputeP robability(encoding) 5.</formula><p>if p &gt; 50% then return "Malicious" else return "Benign" end Illustrated in Algorithm 1 is the overall workflow in our proposed technique to detect/classify an image as a malware. The first step is to resize the image to a size of 224 ? 224. Once the standard size image is generated GenerateP atches method takes as input an image of size 224 ? 224 and generates linearized patches of size 16 ? 16. The list of linearized patches is then provided to our encoder which generates an embedding of the patches L patches capturing complex features. The feature encoding encoding is provided to our pre-trained models which computes the probability P for the encoding which may contain malicious features. If the P is significant (i.e. p &gt; 50%) the algorithm returns Malware else returns Benign. Similar workflows are followed for type and family inference, with the main difference arising from the number of categories (binary classification for malware detection and multi-class classification for type and family).</p><p>We use the transformer based ViT-Base architecture with a patch size of 16 (ViT-B/16). The ViT-Base architecture contains 12 model layers or 'blocks' (as in <ref type="figure" target="#fig_0">figure 2</ref>, and 86 million parameters, corresponding to the encoder architecture used for self-supervised learning as described in  Section III-B. The self-supervised encoder from the selfsupervised learning step is reused as-is for each of the 3 downstream classifications (binary, type and family as per <ref type="figure" target="#fig_2">Figure 5</ref>). Thus, all the features and weights learned by the self-supervised model are re-used to initialize most of the supervised neural network, which is then further trained to learn improved task-specific features. For each analysis, a linear layer is constructed mapping from the embedding of the encoder (768 in size) to the number of output classes (2, 47 or 696 respectively). The resultant network is fine-tuned end to end (backpropogating gradients and updating weights of every parameter of the neural network), thus enabling the network to learn more specialized features suitable for classifying imagery based on task-specific categories, but building upon the features learned during the self-supervised task of filling in masked patches. The classes for malware-type and malware-family has a direct one-to-one relationship to the binary class malwarebenign. Using this hierarchical relationship we can infer the classification of a given android app as malicious or benign, by training the model to classify for a fine granular class such as malware-type or malware-family. In particular, as shown in <ref type="figure" target="#fig_3">Figure 6</ref> we leverage the training from finer granularity classification task to infer a classification for coarse granular class. However, a similar inference cannot be established from malware-family to malware-type in this data-set since there is a many-to-many relationship between these two categories.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. EVALUATION</head><p>In this section, we evaluate the efficiency of our proposed malware detection method SHERLOCK on the largest opensource dataset for Android malware <ref type="bibr" target="#b14">[14]</ref>. First, we describe the configuration setup for our experiment, the data set usage and evaluation criteria. Next, we evaluate the performance against state-of-the-art machine learning algorithms, show the confusion matrix of malware classification and discuss the comparison results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. EXPERIMENTAL SETUP</head><p>We evaluate the efficacy of our proposed self-supervised learning method SHERLOCK on three tasks using the largest open-source dataset for Android malware <ref type="bibr" target="#b14">[14]</ref>. First, we evaluate the effectiveness for the pre-training task to synthesise malware images. Second, we evaluate the performance for the classification task of correctly identifying the malware label. Third, we compare our classification performance with existing state of the art tools, and finally we analyze the sensitivity of the synthesis process on the overall classification performance. For comparison with state of the art deep learning architectures we consider; ResNet, DensNet and MobileNetV2 with different configurations. All our experiments were conducted in the Spartan Cluster [31] on a single node with 24 cores(Intel Xeon CPU E5-2650 v4 @ 2.20GHz) and 4 P100 GPU with 12GB of GPU RAM.</p><p>For our experiments we use MalNet dataset <ref type="bibr" target="#b14">[14]</ref> which:  <ref type="table">Table 1</ref> provides a detailed breakdown of the number of images and families in each malware type. Notably, the class distribution is highly imbalanced across both image type and family, which is a common property of many real-world datasets, where a few of the classes contain a majority of the examples. For all tasks, we report Accuracy, macro Precision, macro Recall and macro F1 scores, and compare against prior work by utilizing the same train/test splits from this dataset.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>P recision = T P T P + F P</head><p>(1)</p><formula xml:id="formula_1">Recall = T P T P + F N (2) F 1 = 2 ? P recision ? Recall P recision + Recall<label>(3)</label></formula><p>Here, TP stands for True Positive, which represents the number of samples belonging to class c which are correctly classified as class c; FP stands for False Positive, which represents the number of samples not belonging to class c which are erroneously classified as class c; FN stands for False Negative, which is the number of samples that belong to class c which are erroneously classified as a different class.</p><p>For the classifications of malware, type and family, we report the Macro-Precision (MP), Macro-Recall (MR) and Macro-F1 score.</p><p>M acro ? P recision = c P recision c C (4)</p><formula xml:id="formula_2">M acro ? Recall = c Recall c C (5) M acro ? F 1 = 2 ? M P ? M R M P + M R (6)</formula><p>The macro criteria are calculated using a class wise average of the metrics as shown in Equations 4, 5 and 6.</p><p>Here C represents the number of classes in each multi-class classification task. Additionally, we will also make use of visualizations to better understand the performance of our models. The confusion matrix as well as the Receiver Operating Characteristic (ROC) curve will be used to understand the nuances of our model performance.</p><formula xml:id="formula_3">W c = 1 ? 0.999 1 ? 0.999 nc<label>(7)</label></formula><p>For the training process, we used simple cross entropy loss with class re-balancing. The classes which have fewer training examples in the dataset are weighted higher in the loss function. We use the weights suggested in <ref type="bibr" target="#b14">[14]</ref> as shown in <ref type="bibr">Equation 7</ref>, where n c is the number of images in class c. These weights cause a relatively higher loss to be assigned to miscategorizations for samples originating from under-represented classes. Therefore, the neural network will prioritize learning a representation that can more accurately classify such under-represented classes, compared to a standard (unweighted) cross-entropy loss.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. ACCURACY OF MALWARE IMAGE SYNTHESIS</head><p>We quantify the ability of the self-supervised representation to regenerate the images in the test set. As this is a direct evaluation of the self-supervisory task, it can be interpreted as an initial evaluation of the ability of the representation and decoder to capture the semantic features associated with the binaries of the considered categories.</p><p>For each class in malware-type we iterate over each image and generate 10 random masks for 75% of the image and generate 10 masked input images containing only 25% of the pixels from the original image. For each masked input image, using the trained self-supervised model we generate an image that is similar to the original image provided. For each synthesised image we compute the absolute error for each pixel in comparison to the original image, and average the error across all 10 randomly generated masked input images. Finally, the error is averaged across all such images TABLE 1. The number of images and families in each type of malware in MalNet <ref type="bibr" target="#b14">[14]</ref> Type Img.</p><p>Fam <ref type="table" target="#tab_1">.  Adware  884K  250  Trojan  179K  441  Benign  79K  1  Riskware  32K  107  Addisplay  17K  38  Spr  14K  46  Spyware  7K  19  Exploit  6K  13  Downloader  5K  7  Smssend+Trojan  4K  25  Troj  3K  36  Smssend  3K  12  Clicker+Trojan  3K  3  Adsware  3K  16  Malware  3K  19  Adware+Adware  3K  2  Rog  2K  22  Spy  2K  7  Monitor  1K  5  Ransom+Trojan  1K  7  Banker+Trojan  1K  6  Trj  940  18  Gray  922  10  Adware+Grayware+Virus  835  4  Fakeinst+Trojan  718  10  Malware+Trj  609  1  Backdoor  602  10  Dropper+Trojan  592  8  Trojandownloader  568  7  Hacktool  542  7  Fakeapp  425  5  Clickfraud+Riskware  369  5  Adload  333  4  Addisplay+Adware  294  1  Adware+Virus  274  9  Clicker  265  5  Fakeapp+Trojan  256  1  Riskware+Smssend  247  7  Rootnik+Trojan  223  5  Worm  220  7  Fakeangry  211  2  Virus  191  3  Trojandropper  178  4  Adwareare  152  3  Risktool+Riskware+Virus  152  3  Spy+Trojan  119  5  Click  113  1</ref> for each class. The aggregated reconstruction error across malware type is shown in <ref type="figure" target="#fig_4">Figure 7</ref>. The reconstruction error aggregated over malware-type ranges from 0.27%-1.45% with an overall average of 0.68%. It is useful to note that the scale of the error computed depends on the scale of pixel values in the image (ranging between [0, 255] or [0.0, 1.0] per channel, as we use in this work) and the proportion of masked pixels in the image. The same averaging procedure is used across categories and the masked pixel percentage is constant for each image, the final averages we generate are comparable across categories (and only differ from other similar evaluations by some scalar factor). However, if the masked percentage were to differ between images, it would be necessary to take the absolute error between only the masked pixels of the original image and the synthesized image.</p><p>Malware Image Synthesis Accuracy: ViT-Base architecture we used in SHERLOCK was able to accurately synthesise malware images of 75% masking with an average reconstruction error of 0.68%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. MALWARE CLASSIFICATION</head><p>We evaluate the efficacy of our proposed self-supervised model SHERLOCK in correctly identifying the label for each malware-image in 3 different categories. For each category we train a separate classifier for which semantic learning from the supervised-learning is transferred as shown in <ref type="figure" target="#fig_2">Figure 5</ref>. For each category we report the macro-F1, macro-Precision and macro-Recall as shown in <ref type="table" target="#tab_1">Table 2</ref>. For comparison we use 3 popular deep learning architectures-ResNet, DenseNet and MobileNetV2. The results for the compared architectures are referenced from the MalNet dataset <ref type="bibr" target="#b14">[14]</ref>.</p><p>SHERLOCK was able to correctly classify the malwaretype and malware-family across 47 and 696 classes respectively. Our model was able to classify both classes correctly with an accuracy of 83.7% for malware-type and 80.2% for malware-family, outperforming the state-of-the-art deep learning models. Furthermore, SHERLOCK recorded the highest macro-F1 score, macro-precision and macrorecall in both categories indicating the superiority of using a self-supervised learning model over existing supervised learning models. One of the contrasting differences between the compared models and SHERLOCK is the source for transfer learning. SHERLOCK is able to directly learn the semantics of a malware image due to its self-supervised pretraining task while the compared models are trained from scratch. Prior work <ref type="bibr" target="#b14">[14]</ref> has used transfer learning from ImageNet <ref type="bibr" target="#b32">[32]</ref> to pretrain a model and then fine tune to the training data, however it performs significantly worse than the one trained from scratch due to the difference of the semantics between ImageNet images and MalNet images.</p><p>Despite the performance for malware-type and malwarefamily, our model SHERLOCK does not perform well for the binary classification task. Our model reports the best performance in precision while the worse performance in recall for the binary classification task, resulting in worse overall performance in macro-F1 score. Cross comparison with the performance of our model in all 3 tasks, indicates the precision of the results are improved from the semantics learnt from the self-supervised learning, while recall can be improved with additional fine-tuning. However since the class imbalance is high (i.e. 2:31) for the binary classification task the fine-tuning does not have access to enough training VOLUME 4, 2016 data to accurately learn features for the benign class. However, with more classes introduced in the tasks for classifying malware-type and malware-family the imbalance effect is distributed over multiple classes, and improves overall recall. This indicates a strong influence from the pre-training task which learns semantic information for the secondary classification task. Since the pre-training task in our model is optimized to synthesise images it learns necessary semantic features relevant for the synthesis. Additionally due to the class imbalance problem in our dataset the semantic learning is skewed towards malware images, resulting in a higher number of misclassifications as malware.</p><p>Malware Classification Accuracy: SHERLOCK was able to outperform existing state-of-the-art deep learning models for malware-type and malware-family with an macro F1-Score of .497 and .491 respectively. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. MALWARE DETECTION</head><p>We evaluate the overall effectiveness of SHERLOCK to accurately detect a malware application using inference based on the classification label it generates as described in <ref type="figure" target="#fig_3">Figure 6</ref>. Importantly, generating an image from the corresponding binary takes on average 0.479 seconds, while inferring a label using Sherlock takes on average 0.003 seconds, for a total inference time of 0.482 seconds with a single 4 GPU node containing 24 cores(Intel Xeon CPU E5-2650 v4 @ 2.20GHz) and 4 P100 GPU with 12GB of GPU RAM each on Spartan <ref type="bibr" target="#b31">[31]</ref>. A comparative analysis of our inference result with the state-of-the-art deep learning models is presented in <ref type="table" target="#tab_2">Table 3</ref>, where the results for state-of-the-art is extracted from recent work <ref type="bibr" target="#b14">[14]</ref>. Our model SHERLOCK has the best performance in all three dimensions in macro F1-score, macro precision and macro recall. However, inference using malware-family classifier has the overall best-performance with an macro F1-score of 0.878, indicating that pre-trained model with finer granularity can learn distinct features to differentiate an image between the benign class and malware class.</p><p>For an in-depth analysis we plot the results of our inference models in <ref type="figure" target="#fig_6">Figure 9</ref>. Binary classification of a given byteplot image trained with coarse-granularity achieves highest precision but lowest recall. For applications such as Malware detection where precision is most important, a model pretrained with self-supervised learning can achieve state-ofthe-art performance, with the final model trained on coarsegrained task such as two-class labeling. Whereas the same pre-trained model with the final model trained on a finergrained task such as identifying the malware-type/malwarefamily (N classes) will be more effective in improving recall and overall F1-score. An observation we make is that with the increasing number of classes for the final model, the recall is improved while precision is decreased. Additionally, both malware-type based inference and malware-family based inference is able to achieve similar macro F1-score with the contrasting differences in its precision and recall values. While malware-type based inference has the better precision in comparison with malware-family, recall is better for the latter. To further understand the significance of our results, we also plot the Receiver Operating Characteristics (ROC) curve in <ref type="figure" target="#fig_7">Figure 10</ref>. Despite having a better F1-score, malware-type based inference has a low Area Under Curve (AUC), indicating the classifier will not perform well for different thresholds. However, malware-family based inference model has the highest AUC score as well as for the macro F1-score. Malware Detection Efficacy: SHERLOCK was able to correctly detect a malware with an accuracy of 97% for an highly imbalanced dataset while maintaining 86.7% precision and 89% recall.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. RELATED WORK A. MALWARE DETECTION AND CLASSIFICATION</head><p>Malware detection and classification has become a crucial task due to the increasing complexity of malware and the commonality of computing systems. Abusitta et. al. <ref type="bibr" target="#b33">[33]</ref> categorized malware detection and classification approaches based on features and algorithms used, as shown in <ref type="figure">Figure 11</ref>.</p><p>Features used for the analysis can be classified as static or dynamic. Static features are extracted from the executable files while dynamic feature extraction methods make use of a sandbox environment to run the program and collect the memory image or the behaviors of the program execution to extract features <ref type="bibr" target="#b34">[34]</ref>. Some of the features in literature include printable strings <ref type="bibr" target="#b35">[35]</ref>- <ref type="bibr" target="#b37">[37]</ref>, byte code <ref type="bibr" target="#b39">[38]</ref>- <ref type="bibr" target="#b42">[41]</ref>, assembly code <ref type="bibr" target="#b43">[42]</ref>- <ref type="bibr" target="#b45">[44]</ref>, API/DLL system calls <ref type="bibr" target="#b45">[44]</ref>- <ref type="bibr" target="#b47">[46]</ref>, control flow graphs <ref type="bibr" target="#b48">[47]</ref>- <ref type="bibr" target="#b50">[49]</ref> and function level features <ref type="bibr" target="#b51">[50]</ref>. Algorithm used for detection and classification approaches can be broadly categorized into signature based approaches and Artificial Intelligence based approaches. Signature based approaches are the de facto of current antivirus providers <ref type="bibr" target="#b52">[51]</ref>. These signatures are created by humans and the malware detectors performs a matching between programs and signatures to detect or classify malware <ref type="bibr" target="#b53">[52]</ref>, <ref type="bibr" target="#b54">[53]</ref>. One can argue this method could only detect known There is a tendency to move towards AI based malware detection and classification which can mainly be categorized into supervised <ref type="bibr" target="#b55">[54]</ref>, <ref type="bibr" target="#b56">[55]</ref>, unsupervised <ref type="bibr" target="#b57">[56]</ref>- <ref type="bibr" target="#b59">[58]</ref> and semi supervised <ref type="bibr" target="#b60">[59]</ref>- <ref type="bibr" target="#b62">[61]</ref> methods. In supervised malware detection the model learns features from a labeled dataset, while unsupervised methods extract patterns from unlabeled data. Semi-supervised methods make use of both labeled and unlabeled data. While traditional methods like Na?ve Bayes, Decision Trees, K-Nearest Neighbors and SVM have been extensively used in the past. An analysis of these classical methods showed SVM performed well for malware detection <ref type="bibr" target="#b63">[62]</ref>. An android specific malware detection survey by Liu et. al looks at the current ML methods used for malware detection <ref type="bibr" target="#b64">[63]</ref>. More recently ReLU, LSTM and CNN based methods have received more attention. A deep learning based detection method which works with image data was explored by Yadav et. al. <ref type="bibr" target="#b65">[64]</ref>. Due to the ability to recognize previously unseen malware and the higher performance over traditional methods, these machine learning based malware detection techniques are becoming widely researched <ref type="bibr" target="#b66">[65]</ref>.</p><p>Our approach can be classified as a self-supervised learning based algorithm that make use of static features of the application. Contrast to existing work, this is the first selfsupervised based learning method that has been studied with the largest openly-available dataset for Android malware.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. IMAGE CLASSIFICATION</head><p>Imagery such as those generated to represent code or program binaries broadly fall into the category known as synthetic imagery. Such imagery is distinct from natural imagery, which is the standard type of data used in computer vision in datasets such as ImageNet <ref type="bibr" target="#b32">[32]</ref>, incorporating images of real world scenes captured through a camera. Exploration of the performance of self-supervised methods on complex synthetic imagery remains under-explored compared to natural imagery. Some prior work in this area has explored representation learning from sketches <ref type="bibr" target="#b24">[24]</ref>, <ref type="bibr" target="#b25">[25]</ref>, altitude imagery <ref type="bibr" target="#b27">[27]</ref>, synthetic scene imagery <ref type="bibr" target="#b67">[66]</ref>, and Google map imagery <ref type="bibr" target="#b26">[26]</ref>. Analysis in such domains contributes useful knowledge regarding the performance of self-supervised methods on synthetic imagery, which have different visual features to natural imagery.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. PERSPECTIVES</head><p>A key advantage of using self-supervision in this imagery domain (malware imagery) is the ability to initialize a single general representation in a task-independent manner. This representation can then be specialized to perform specific analysis (such as malware detection, malware type categorization and malware family categorization, as well as potentially other tasks). In essence, the representation can be easily specialized for any different set of labels associated with the imagery, for example future work could look at labels associated with malware authors and attempt to identify unique "signatures" corresponding to authors from the imagery.</p><p>Interestingly, the use of coarser labels has improved performance in the malware detection task (classification of malware images into benign vs malicious). Both malware family and type predictions can be converted into a malware detection prediction by performing a lookup. We found that the models for family and type prediction, once converted into the corresponding malware detection category ("malicious" or "benign") provided superior performance when compared with the malware detection prediction, when all models were trained with the same number of images and identical analytical settings. Since the only difference between the analyses was the granularity of the labels (696 for family, 47 for type, 2 for malware detection), we can conclude that the coarser labels have led to a better characterization of the images for the malware detection task. In this aspect, while both models trained on more granular labels show significant improvement in F1 score over the malware detection model, they both have similar performance to each other (in terms of F1 score). This suggests that the improvement gained via increased label granularity has diminishing returns, which may be interesting for future work to explore.</p><p>Upon further consideration, the reason for this improvement can be induced. On a fixed dataset, with fine-grained labels, the model is forced to create multiple decision boundaries to separate instances from different categories from each other. The number of potential required boundaries will grow quadratically in the number of categories (n*(n-1)/2), as each category may be adjacent to every other in the feature space. This leads to a more granular clustering of images with a larger number of clusters containing fewer images in the feature space (as the total number of images is fixed in all analyses). Additionally, this provides further reasoning for the muted improvement (in terms of malware detection results) of increasing the number of categories from 47 to 696. The malware detection task has 1 decision boundary (benign vs malicious), whereas type prediction . Categorization of malware detection and classification <ref type="bibr" target="#b33">[33]</ref> 47*46/2 = 1081 potential boundaries and family prediction has 676*675/2 = 228150. Based on the observed results the granularity of type labels is sufficient to capture the level of detail required for the binary classification required in malware detection, and the added granularity of the family labels does not improve results further. The impact of the label granularity is also apparent in the ROC curves for malware detection, with the more granularly labelled family prediction model showing superior performance to the other more coarsely labelled models. Future work could explore this aspect further by exploring the added impact of having a more complex baseline task (with more than 2 categories). As the type and family labels do not have a one to one mapping, we are unable to explore this any further at this stage. The impact of label granularity of classification has previously been studied in convolutional neural networks <ref type="bibr" target="#b68">[67]</ref>. The findings in our work further generalize such results to the Vision Transformer architecture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. CONCLUSION</head><p>In this paper, we present a system based on self-supervised learning for malware classification, SHERLOCK which is a transformer based computer vision model that utilizes selfsupervised learning to detect Android malware. We evaluate SHERLOCK on a large-scale data-set of 1.2 million Android apps consisting of 47 malware types and 696 malware families. Compared with state-of-the-art deep learning architectures ResNet, DenseNet and MobileNetV2, our proposed technique SHERLOCK outperforms all techniques in malware detection and classification with 97% accuracy for detection. SHERLOCK was also able to correctly classify malware type and malware family with a macro-F1 score of .497 and .491 respectively. This work demonstrates the efficacy of self-supervised computer vision models, specifically the Vision Transformer architectures in the use for malware classification. Through this work, we improve static analysis based malware detection and classification, which we believe can be further improved with by augmenting additional features derived from dynamic analysis.</p><p>To allow the research community to better replicate and reproduce the findings in our studies and to extend the work further, we have open-sourced our model to the community in Github: https://github.com/sachith500/Sherlock. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>NURAN KASTHURIARACHCHI is an Artificial</head><p>Intelligence Engineer at the Singapore Press Holdings. He has multiple years of experience in the industry working in the fields of Aritifical Intelligence and Machine Learning. He obtained his Bachelor of Science (BSc) Honors degree from the Computer Science and Engineering department of the University of Moratuwa, Sri Lanka in 2016. <ref type="bibr">VOLUME 4, 2016</ref> </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>FIGURE 2 .</head><label>2</label><figDesc>Illustration of the Transformer Encoder<ref type="bibr" target="#b28">[28]</ref> that takes a sequence of patches as input and transforms into an encoding.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>FIGURE 4 .</head><label>4</label><figDesc>Overview of the masked auto encoder which takes masked images as input and learns to reconstruct the original image using self-supervised learning. Layer A is the linearization of the patches which is then shuffled in Layer B to separate masked and unmasked pixels. Layer C depicts the embedding of the masked and unmasked pixels. Layer D represents combined encoding which is the input layer for the decoder to learn. Layer E is the final embedding for the reconstruction of the original image.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>FIGURE 5 .</head><label>5</label><figDesc>Overview of the classification models in SHERLOCK, which reuse the optimized embedding generated via self-supervised learning to bootstrap 3 different classification tasks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>FIGURE 6 .</head><label>6</label><figDesc>Using finer granularity tasks to predict coarse granularity tasks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>FIGURE 7 .</head><label>7</label><figDesc>Quality of the self-supervised image synthesis process where the reconstruction error is aggregated across malware type ? includes 1,262,024 malware images extracted from realworld Android applications in AndroZoo [11] ? contains the largest diverse open-source dataset comprising of 47 malware types and 696 malware families including benign applications</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>FIGURE 8 .</head><label>8</label><figDesc>Confusion Matrix for malware type classification, which visualize the performance in correctly identifying the actual class label. The darker the shade the stronger the classifier performance and lighter-shade indicates poor performance. Our model results depict more darker shades for the diagonal entries while lighter-shade for non-diagonal entries indicating good performance.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>FIGURE 9 .</head><label>9</label><figDesc>In-depth analysis of the performance metrics of SHERLOCK with 3 binary classification models trained on different granularity</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>FIGURE 10 .</head><label>10</label><figDesc>Receiver Operating Characteristics (ROC) curve for malware detection with 3 binary classification models trained on different granularity malware and dependent on the manual signature generation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>FIGURE 11. Categorization of malware detection and classification [33]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>SACHITH</head><label></label><figDesc>SENEVIRATNE received his B.Sc. degree in computer science and engineering from the University of Moratuwa, Sri Lanka. He completed his PhD in machine learning from Monash University, Australia. Currently, he is working as a research fellow at the University of Melbourne. Sachith's research work revolves around deep learning, with a focus on contrastive representation learning and applications. He is broadly interested in self-supervised deep learning approaches across various disciplines such as computer vision, NLP and reinforcement learning. RIDWAN SHARIFFDEEN is a PhD Candidate in Department of Computer Science at School of Computing, National University of Singapore. His current focus of research is on automated program repair, software security and software engineering automation. He received his Bachelor of Science(BSc) Honors (Hons) degree from the Computer Science &amp; Engineering Department at University of Moratuwa, Sri Lanka. From 2016-2018 he worked in the industry as a Senior Software Engineer for System Security and Automation Technology. Mr. Ridwan's research has been recognized by the National Research Foundation Singapore with an invitation to the 10th Global Young Scientist Summit (GYSS'22). He was also awarded the Research Achievement Award by School of Computing, National University of Singapore in 2021 and CIN-TEC Award for the best Computer Science and Engineering graduand for Research by University of Moratuwa, Sri Lanka in 2016. SANKA RASNAYAKA is a lecturer at the School of Computing in the National University of Singapore. His research interests lie in applications of AI and computer vision. He mainly works in the fields of Biometrics and authentication. In 2021, he received his PhD in Computer Science from the School of Computing in the National University of Singapore, for his work on Continuous Authentication for mobile devices. Prior to that in 2016 he received his Bachelor of Science Honors degree in Computer Science and Engineering from the Engineering Faculty of the University of Moratuwa, Sri Lanka.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Illustration of the image synthesis using images of two malware types. Using an masked image which masks 75% of the image our learning model is able to synthesise images almost identical to the original image.</figDesc><table><row><cell>Type</cell><cell>Original</cell><cell>Mask</cell><cell>Masked</cell><cell>Synthesized</cell></row><row><cell>trojan/triada</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>addisplay/adflex</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>FIGURE 3.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note>optimized embedding to reconstruct masked images with a higher accuracy. A mask is generated by uniformly sampling 25% of the image to retain. The original image is then filtered using the generated mask to generate the masked input image. The masked input image is flattened to generate embedding for each patch. Each image is 224 ? 224 with 3 RGB channels, each patch is 16 ? 16 leading to 14 ? 14 = 196 patches in total. Each embedding is a vector of size 3 ? 16 ? 16 = 768. The embeddings are shuffled to separate the masked vs unmasked patches, with only the unmasked patches being passed through the encoder architecture. The unmasked embeddings are passed through 12 architecturally identical blocks which have different weights in order to gen- erate an embedding of size 768 for each patch. The unmasked encoder embeddings (size 768) are converted into unmasked decoder embeddings (size 384) using a linear projection layer to match the width of the decoder. The unmasked decoder embeddings are combined with the flattened masked patches, which are represented by a common, learnable mask token indicating the presence of a masked patch. This indicates to the model that such patches are to be predicted in the decoding process. The embeddings and mask tokens are decoded by the decoder, which contains 4 architecturally identical blocks with different weights. In order to generate a final embedding for each patch (size 384). This embedding is passed through a linear projection which maps it to the number of output pixels in a patch (3 ? 16 ? 16 = 768.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>TABLE 2 .</head><label>2</label><figDesc>Results on malware classification on 3 classes against 3 popular architectures ResNet, DenseNet and MobileNetV2-on macro-F1, macro-precision, and macro-recall. Results for compared architectures are referenced from MalNet dataset<ref type="bibr" target="#b14">[14]</ref> </figDesc><table><row><cell>Model</cell><cell cols="3">Binary F1 Score Precision Recall</cell><cell cols="3">Type F1 Score Precision Recall</cell><cell cols="2">Family F1 Score Precision</cell><cell>Recall</cell></row><row><cell>ViT-B (SHERLOCK)</cell><cell>.854</cell><cell>.920</cell><cell>.810</cell><cell>.497</cell><cell>.628</cell><cell>.447</cell><cell>.491</cell><cell>.568</cell><cell>.461</cell></row><row><cell>ResNet18</cell><cell>.862</cell><cell>.893</cell><cell>.837</cell><cell>.467</cell><cell>.556</cell><cell>.424</cell><cell>.454</cell><cell>.538</cell><cell>.423</cell></row><row><cell>ResNet50</cell><cell>.854</cell><cell>.907</cell><cell>.814</cell><cell>.479</cell><cell>.566</cell><cell>.441</cell><cell>.468</cell><cell>.541</cell><cell>.443</cell></row><row><cell>DenseNet121</cell><cell>.864</cell><cell>.900</cell><cell>.834</cell><cell>.471</cell><cell>.558</cell><cell>.428</cell><cell>.461</cell><cell>.529</cell><cell>.438</cell></row><row><cell>Densenet169</cell><cell>.864</cell><cell>.890</cell><cell>.841</cell><cell>.477</cell><cell>.573</cell><cell>.433</cell><cell>.462</cell><cell>.545</cell><cell>.434</cell></row><row><cell>MobileNetV2(x.5)</cell><cell>.857</cell><cell>.894</cell><cell>.827</cell><cell>.460</cell><cell>.547</cell><cell>.424</cell><cell>.451</cell><cell>.528</cell><cell>.423</cell></row><row><cell>MobileNetV2(x1)</cell><cell>.854</cell><cell>.889</cell><cell>.825</cell><cell>.452</cell><cell>.527</cell><cell>.419</cell><cell>.438</cell><cell>.532</cell><cell>.405</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE 3 .</head><label>3</label><figDesc>Efficacy of malware detection against 3 popular architectures ResNet, DenseNet and MobileNetV2-on its accuracy, macro-F1, macro-precision, and macro-recall.</figDesc><table><row><cell>Model</cell><cell>F1 Score</cell><cell>Precision</cell><cell>Recall</cell></row><row><cell>SHERLOCK</cell><cell>.854</cell><cell>.920</cell><cell>.810</cell></row><row><cell>SHERLOCK (type)</cell><cell>.876</cell><cell>.891</cell><cell>.862</cell></row><row><cell>SHERLOCK (family)</cell><cell>.878</cell><cell>.867</cell><cell>.890</cell></row><row><cell>ResNet18</cell><cell>.862</cell><cell>.893</cell><cell>.837</cell></row><row><cell>ResNet50</cell><cell>.854</cell><cell>.907</cell><cell>.814</cell></row><row><cell>DensetNet121</cell><cell>.864</cell><cell>.900</cell><cell>.834</cell></row><row><cell>DenseNet169</cell><cell>.864</cell><cell>.890</cell><cell>.841</cell></row><row><cell>MobileNetV2(x.5)</cell><cell>.857</cell><cell>.894</cell><cell>.827</cell></row><row><cell>MobileNetV2(x1)</cell><cell>.854</cell><cell>.889</cell><cell>.825</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">   VOLUME 4, 2016    Author et al.: Preparation of Papers for IEEE TRANSACTIONS and JOURNALS</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">   VOLUME 4, 2016    Author et al.: Preparation of Papers for IEEE TRANSACTIONS and JOURNALS</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6">   VOLUME 4, 2016   </note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8">   VOLUME 4, 2016   </note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10">   VOLUME 4, 2016   </note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12">   VOLUME 4, 2016    Author et al.: Preparation of Papers for IEEE TRANSACTIONS and JOURNALS</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="14">   VOLUME 4, 2016    Author et al.: Preparation of Papers for IEEE TRANSACTIONS and JOURNALS</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This project was supported by Australian NHMRC Grant GA80134. This research was undertaken using the LIEF HPC-GPGPU Facility hosted at the University of Melbourne. This Facility was established with the assistance of LIEF Grant LE170100200.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Review of deep convolution neural network in image classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A M</forename><surname>Al-Saffar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Tao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Talab</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2017 International conference on radar, antenna, microwave, electronics, and telecommunications (ICRAMET)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="26" to="31" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Fooling network interpretation in image classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Subramanya</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pillai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pirsiavash</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE/CVF International Conference on Computer Vision</title>
		<meeting>the IEEE/CVF International Conference on Computer Vision</meeting>
		<imprint>
			<date type="published" when="2019" />
			<biblScope unit="page" from="2020" to="2029" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Benchmarking adversarial robustness on image classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q.-A</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition</title>
		<meeting>the IEEE/CVF Conference on Computer Vision and Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="2020" />
			<biblScope unit="page" from="321" to="331" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Review of artificial intelligence adversarial attack and defense technologies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Qiu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Sciences</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page">909</biblScope>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Featuresmith: Automatically engineering features for malware detection by mining the security literature</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dumitra?</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security</title>
		<meeting>the 2016 ACM SIGSAC Conference on Computer and Communications Security</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="767" to="778" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Study on systematic ransomware detection techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-Y</forename><surname>Shim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-R</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T.-R</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-H</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I.-G</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2022 24th International Conference on Advanced Communication Technology (ICACT)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2022" />
			<biblScope unit="page" from="297" to="301" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Efficiency of malware detection in android system: A survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Omer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Zeebaree</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sadeeq</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">W</forename><surname>Salim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mohsin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><forename type="middle">N</forename><surname>Rashid</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">M</forename><surname>Haji</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Asian Journal of Research in Computer Science</title>
		<imprint>
			<biblScope unit="page" from="59" to="69" />
			<date type="published" when="2021" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Polymorphic malware behavior through network trace analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mirkovic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2022 14th International Conference on COMmunication Systems &amp; NETworkS (COMSNETS)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2022" />
			<biblScope unit="page" from="138" to="146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Android security: a survey of issues, malware penetration, and defenses</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Faruki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bharmal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Laxmi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Ganmoor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Gaur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Conti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rajarajan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE communications surveys &amp; tutorials</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="998" to="1022" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Malicious software classification using transfer learning of resnet-50 deep neural network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Rezende</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Ruppert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Carvalho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Ramos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>De Geus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2017 16th IEEE International Conference on Machine Learning and Applications (ICMLA</title>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="1011" to="1014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Androzoo: Collecting millions of android apps for the research community</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Allix</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">F</forename><surname>Bissyand?</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">L</forename><surname>Traon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2016 IEEE/ACM 13th Working Conference on Mining Software Repositories (MSR)</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="468" to="471" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Visual reverse engineering of binary and data files</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Conti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Dean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sinda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Sangster</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Visualization for Computer Security</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="1" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Malware images: Visualization and automatic classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Nataraj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Karthikeyan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Jacob</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">S</forename><surname>Manjunath</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th International Symposium on Visualization for Cyber Security</title>
		<meeting>the 8th International Symposium on Visualization for Cyber Security</meeting>
		<imprint/>
	</monogr>
	<note>ser</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Vizsec &amp;apos;11</surname></persName>
		</author>
		<idno type="DOI">10.1145/2016904.2016908</idno>
		<ptr target="https://doi.org/10.1145/2016904.2016908" />
		<imprint>
			<date type="published" when="2011" />
			<publisher>Association for Computing Machinery</publisher>
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Malnet: A large-scale cybersecurity image database of malicious software</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Freitas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Duggal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Chau</surname></persName>
		</author>
		<idno>abs/2102.01072</idno>
		<ptr target="https://arxiv.org/abs/2102.01072" />
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2021" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Gamut: sifting through images to detect android malware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gennissen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Cavallaro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Moonsamy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Batina</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017" />
			<pubPlace>London, UK</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Royal Holloway University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Bachelor thesis</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Chatter: Classifying malware families using system event ordering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mohaisen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">G</forename><surname>West</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mankin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Alrawi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2014 IEEE Conference on Communications and Network Security</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="283" to="291" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">An observational investigation of reverse {Engineers&apos;} processes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Votipka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rabin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Micinski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Mazurek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">29th USENIX Security Symposium (USENIX Security 20</title>
		<imprint>
			<date type="published" when="2020" />
			<biblScope unit="page" from="1875" to="1892" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Better malware ground truth: Techniques for weighting anti-virus vendor labels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kantchelian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Tschantz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Afroz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Shankar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bachwani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">D</forename><surname>Joseph</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Tygar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th ACM Workshop on Artificial Intelligence and Security</title>
		<meeting>the 8th ACM Workshop on Artificial Intelligence and Security</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="45" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Unsupervised learning of visual representations by solving jigsaw puzzles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Noroozi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Favaro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision -ECCV 2016</title>
		<editor>B. Leibe, J. Matas, N. Sebe, and M. Welling</editor>
		<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="69" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Unsupervised visual representation learning by context prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Doersch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A</forename><surname>Efros</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 IEEE International Conference on Computer Vision (ICCV)</title>
		<meeting><address><addrLine>Santiago</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1422" to="1430" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Colorful image colorization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Isola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A</forename><surname>Efros</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision -ECCV 2016</title>
		<editor>B. Leibe, J. Matas, N. Sebe, and M. Welling</editor>
		<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="649" to="666" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">S4l: Self-supervised semi-supervised learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Oliver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kolesnikov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Beyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE/CVF International Conference on Computer Vision</title>
		<meeting>the IEEE/CVF International Conference on Computer Vision</meeting>
		<imprint>
			<date type="published" when="2019" />
			<biblScope unit="page" from="1476" to="1485" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Using selfsupervised learning can improve model robustness and uncertainty</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hendrycks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mazeika</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kadavath</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2019" />
			<biblScope unit="volume">32</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Unsupervised data augmentation for consistency training</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Hovy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-T</forename><surname>Luong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><forename type="middle">V</forename><surname>Le</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1904.12848</idno>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Vectorization and rasterization: Self-supervised learning for sketch and handwriting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">K</forename><surname>Bhunia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">N</forename><surname>Chowdhury</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">M</forename><surname>Hospedales</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Xiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-Z</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition</title>
		<meeting>the IEEE/CVF Conference on Computer Vision and Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="2021" />
			<biblScope unit="page" from="5672" to="5681" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Self-supervision. remote sensing and abstraction: Representation learning across 3 million locations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Seneviratne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">A</forename><surname>Nice</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Wijnands</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stevenson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Thompson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2021 Digital Image Computing: Techniques and Applications (DICTA)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<biblScope unit="page" from="1" to="08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Contrastive representation learning for natural world imagery: Habitat prediction for 30,000 species</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Seneviratne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CLEF working notes</title>
		<imprint>
			<date type="published" when="2021" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">An image is worth 16x16 words: Transformers for image recognition at scale</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Dosovitskiy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Beyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kolesnikov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weissenborn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Unterthiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dehghani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Minderer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Heigold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gelly</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2010.11929</idno>
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">BERT: Pre-training of deep bidirectional transformers for language understanding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Devlin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-W</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Toutanova</surname></persName>
		</author>
		<ptr target="https://aclanthology.org/N19-1423" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies</title>
		<meeting>the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies<address><addrLine>Minneapolis, Minnesota</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2019-06" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="4171" to="4186" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Doll?r</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Girshick</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2111.06377</idno>
		<imprint>
			<date type="published" when="2021" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Masked autoencoders are scalable vision learners</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Spartan performance and flexibility: an hpc-cloud chimera</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">Lev</forename><surname>Lafayette</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Vu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Meade</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">OpenStack Summit</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">49</biblScope>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Imagenet: A large-scale hierarchical image database</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Socher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L.-J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Fei-Fei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2009 IEEE conference on computer vision and pattern recognition</title>
		<imprint>
			<publisher>Ieee</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="248" to="255" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Malware classification and composition analysis: A survey of recent developments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Abusitta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">C</forename><surname>Fung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Information Security and Applications</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="page">102828</biblScope>
			<date type="published" when="2021" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">A comparison of static, dynamic, and hybrid analysis for malware detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Damodaran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">D</forename><surname>Troia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>Visaggio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">H</forename><surname>Austin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stamp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer Virology and Hacking Techniques</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="12" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Mtnet: a multi-task neural network for dynamic malware classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Stokes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International conference on detection of intrusions and malware, and vulnerability assessment</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="399" to="418" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Large-scale malware classification using random projections and neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">E</forename><surname>Dahl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Stokes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2013 IEEE International Conference on Acoustics, Speech and Signal Processing</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="3422" to="3426" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Cross platform iot-malware family classification based on printable strings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-T</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ban</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T.-L</forename><surname>Wan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-M</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Isawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Takahashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Inoue</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2020 IEEE 19th International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">IEEE</title>
		<imprint>
			<biblScope unit="page" from="775" to="784" />
			<date type="published" when="2020" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Improving malware classification: bridging the static/dynamic gap</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Storlie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lane</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th ACM workshop on Security and artificial intelligence</title>
		<meeting>the 5th ACM workshop on Security and artificial intelligence</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="3" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Deep neural network based malware detection using two dimensional binary program features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Saxe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Berlin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 10th international conference on malicious and unwanted software (MALWARE)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="11" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Static malware detection and attribution in android byte-code through an end-to-end deep system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Amin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Tanveer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tehseen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">A</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Anwar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future generation computer systems</title>
		<imprint>
			<biblScope unit="volume">102</biblScope>
			<biblScope unit="page" from="112" to="126" />
			<date type="published" when="2020" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Dexray: A simple, yet effective deep learning approach to android malware detection based on image representation of bytecode</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Daoudi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Samhi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">K</forename><surname>Kabore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Allix</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">F</forename><surname>Bissyand?</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Klein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Deployable Machine Learning for Security Defense</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2021" />
			<biblScope unit="page" from="81" to="106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Graph-based malware detection using dynamic analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Quist</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Neil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Storlie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lane</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal in computer Virology</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="247" to="258" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Efficient virus detection using dynamic instruction sequences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Guha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="405" to="414" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Malware detection using assembly and api call sequences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">K</forename><surname>Shankarapani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ramamoorthy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Movva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mukkamala</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal in computer virology</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="107" to="119" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Malware detection based on mining api calls</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sami</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Yadegari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Rahimi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Peiravian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Hashemi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hamze</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2010 ACM symposium on applied computing</title>
		<meeting>the 2010 ACM symposium on applied computing</meeting>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="1020" to="1025" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Using feature generation from api calls for malware detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Salehi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sami</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ghiasi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Fraud &amp; Security</title>
		<imprint>
			<biblScope unit="volume">2014</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="9" to="18" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">A combination method for android malware detection based on control flow graphs and machine learning algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Ge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE access</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="21" to="235" />
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Classifying malware represented as control flow graphs using deep graph convolutional neural network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Jin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2019 49th annual IEEE/IFIP international conference on dependable systems and networks (DSN)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2019" />
			<biblScope unit="page" from="52" to="63" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Detecting self-mutating malware using control-flow graph matching</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bruschi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Martignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Monga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International conference on detection of intrusions and malware, and vulnerability assessment</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="129" to="143" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Learning features from enhanced function call graphs for android malware detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Yuan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neurocomputing</title>
		<imprint>
			<biblScope unit="volume">423</biblScope>
			<biblScope unit="page" from="301" to="307" />
			<date type="published" when="2021" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Review of signature-based techniques in antivirus products</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Al-Asli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Ghaleb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2019 International Conference on Computer and Information Sciences (ICCIS)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2019" />
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Data mining methods for detection of new malicious executables</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">G</forename><surname>Schultz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Eskin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zadok</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Stolfo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings 2001 IEEE Symposium on Security and Privacy. S&amp;P</title>
		<meeting>2001 IEEE Symposium on Security and Privacy. S&amp;P</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="38" to="49" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Static analysis of executables to detect malicious patterns</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Christodorescu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Jha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">12th USENIX Security Symposium (USENIX Security 03)</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Assessment of supervised machine learning algorithms using dynamic api calls for malware detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Singh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Computers and Applications</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="270" to="277" />
			<date type="published" when="2022" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">A novel approach to detect malware based on api call sequence analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">K</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Distributed Sensor Networks</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page">659101</biblScope>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Unsupervised anomalybased malware detection using hardware features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sethumadhavan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Stolfo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Recent Advances in Intrusion Detection</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="109" to="129" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Research on unsupervised feature learning for android malware detection based on restricted boltzmann machines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Japkowicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generation Computer Systems</title>
		<imprint>
			<biblScope unit="volume">120</biblScope>
			<biblScope unit="page" from="91" to="108" />
			<date type="published" when="2021" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Graph embedding based familial analysis of android malware using unsupervised learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Nong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2019" />
			<biblScope unit="page" from="771" to="782" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">Semi-supervised learning for unknown malware detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Santos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Nieves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">G</forename><surname>Bringas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Symposium on Distributed Computing and Artificial Intelligence</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="415" to="422" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Feature-based semi-supervised learning to detect malware from android</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mahindru</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sangal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Automated software engineering: a deep learning-based approach</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2020" />
			<biblScope unit="page" from="93" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Malware classification for the cloud via semi-supervised transfer learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Shan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Niu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Xie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Information Security and Applications</title>
		<imprint>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="page">102661</biblScope>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">A state-of-the-art survey of malware detection approaches using data mining techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Souri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hosseini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Human-centric Computing and Information Sciences</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="22" />
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">A review of android malware detection approaches based on machine learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Access</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="124" to="579" />
			<date type="published" when="2020" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">A twostage deep learning framework for image-based android malware detection and variant classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Yadav</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Menon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Ravi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Vishvanathan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">D</forename><surname>Pham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Intelligence</title>
		<imprint>
			<date type="published" when="2022" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<monogr>
		<title level="m" type="main">A survey on smartphones security: software vulnerabilities, malware, and attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">T</forename><surname>Ahvanooey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rabbani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">R</forename><surname>Rajput</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2001.09406</idno>
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Cross-domain self-supervised multi-task feature learning using synthetic imagery</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">J</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition</title>
		<meeting>the IEEE Conference on Computer Vision and Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="2018" />
			<biblScope unit="page" from="762" to="771" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Understanding the impact of label granularity on cnn-based image classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T.-W</forename><surname>Chin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Marculescu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2018 IEEE international conference on data mining workshops</title>
		<imprint>
			<publisher>ICDMW</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">IEEE</title>
		<imprint>
			<biblScope unit="page" from="895" to="904" />
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
