[{"caption":"4. Efficient ImageNet pretraining with DetConS. We pretrain networks with SimCLR, DetConS, or supervised learning on \nImageNet for different numbers of epochs, and fine-tune them for COCO detection and instance segmentation (for 12 epochs), semantic \nsegmentation on PASCAL or Cityscapes, or depth estimation on NYU v2. DetConS outperforms SimCLR, with up to 10? less pretraining. \n\nDetection \nInstance Segmentation \nSemantic Segmentation \nDepth Estimation \nCOCO \nCOCO \nPASCAL \nCityscapes \nNYU v2 \n\nPretrain epochs \n300 \n1000 \n300 \n1000 \n300 \n1000 \n300 \n1000 \n100 \n1000 \n\nBYOL \n41.2 \n41.6 \n37.1 \n37.2 \n74.7 \n75.7 \n73.4 \n74.6 \n83.7 \n84.2 \nDetConB \n42.0 \n42.7 \n37.8 \n38.2 \n75.6 \n77.3 \n75.1 \n77.0 \n85.1 \n86.3 \nEfficiency Gain \n\u003e 3? \n\u003e 3? \n? 3? \n\u003e 3? \n\u003e 10? \n\nTable 1. Efficient ImageNet pretraining with DetConB. We pretrain networks on ImageNet with BYOL or DetConB, and fine-tune them \nfor COCO detection and instance segmentation (for 12 epochs), semantic segmentation on PASCAL or Cityscapes, or depth estimation on \nNYU v2. DetConB outperforms BYOL, with up to 10? less pretraining (colors highlight gains in pretraining efficiency). \n\n","rows":["DetConB","BYOL"],"columns":["COCO","1000","Depth Estimation","100","PASCAL","300","We pretrain networks with SimCLR , DetConS , or supervised learning on","Instance Segmentation","NYU v2","Semantic Segmentation","Cityscapes","Detection","4 . Efficient ImageNet pretraining with DetConS ."],"mergedAllColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."],"numberCells":[{"number":"42.7","isBolded":false,"associatedRows":["DetConB"],"associatedColumns":["4 . Efficient ImageNet pretraining with DetConS .","Detection","COCO","1000"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"74.7","isBolded":false,"associatedRows":["BYOL"],"associatedColumns":["We pretrain networks with SimCLR , DetConS , or supervised learning on","Semantic Segmentation","PASCAL","300"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"84.2","isBolded":false,"associatedRows":["BYOL"],"associatedColumns":["We pretrain networks with SimCLR , DetConS , or supervised learning on","Depth Estimation","NYU v2","1000"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"77.0","isBolded":false,"associatedRows":["DetConB"],"associatedColumns":["We pretrain networks with SimCLR , DetConS , or supervised learning on","Semantic Segmentation","Cityscapes","1000"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"75.1","isBolded":false,"associatedRows":["DetConB"],"associatedColumns":["We pretrain networks with SimCLR , DetConS , or supervised learning on","Semantic Segmentation","Cityscapes","300"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"86.3","isBolded":false,"associatedRows":["DetConB"],"associatedColumns":["We pretrain networks with SimCLR , DetConS , or supervised learning on","Depth Estimation","NYU v2","1000"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"37.2","isBolded":false,"associatedRows":["BYOL"],"associatedColumns":["4 . Efficient ImageNet pretraining with DetConS .","Instance Segmentation","COCO","1000"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"75.6","isBolded":false,"associatedRows":["DetConB"],"associatedColumns":["We pretrain networks with SimCLR , DetConS , or supervised learning on","Semantic Segmentation","PASCAL","300"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"38.2","isBolded":false,"associatedRows":["DetConB"],"associatedColumns":["4 . Efficient ImageNet pretraining with DetConS .","Instance Segmentation","COCO","1000"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"75.7","isBolded":false,"associatedRows":["BYOL"],"associatedColumns":["We pretrain networks with SimCLR , DetConS , or supervised learning on","Semantic Segmentation","PASCAL","1000"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"41.2","isBolded":false,"associatedRows":["BYOL"],"associatedColumns":["4 . Efficient ImageNet pretraining with DetConS .","Detection","COCO","300"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"77.3","isBolded":false,"associatedRows":["DetConB"],"associatedColumns":["We pretrain networks with SimCLR , DetConS , or supervised learning on","Semantic Segmentation","PASCAL","1000"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"37.1","isBolded":false,"associatedRows":["BYOL"],"associatedColumns":["4 . Efficient ImageNet pretraining with DetConS .","Instance Segmentation","COCO","300"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"74.6","isBolded":false,"associatedRows":["BYOL"],"associatedColumns":["We pretrain networks with SimCLR , DetConS , or supervised learning on","Semantic Segmentation","Cityscapes","1000"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"83.7","isBolded":false,"associatedRows":["BYOL"],"associatedColumns":["We pretrain networks with SimCLR , DetConS , or supervised learning on","Depth Estimation","NYU v2","100"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"37.8","isBolded":false,"associatedRows":["DetConB"],"associatedColumns":["4 . Efficient ImageNet pretraining with DetConS .","Instance Segmentation","COCO","300"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"73.4","isBolded":false,"associatedRows":["BYOL"],"associatedColumns":["We pretrain networks with SimCLR , DetConS , or supervised learning on","Semantic Segmentation","Cityscapes","300"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"42.0","isBolded":false,"associatedRows":["DetConB"],"associatedColumns":["4 . Efficient ImageNet pretraining with DetConS .","Detection","COCO","300"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"41.6","isBolded":false,"associatedRows":["BYOL"],"associatedColumns":["4 . Efficient ImageNet pretraining with DetConS .","Detection","COCO","1000"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]},{"number":"85.1","isBolded":false,"associatedRows":["DetConB"],"associatedColumns":["We pretrain networks with SimCLR , DetConS , or supervised learning on","Depth Estimation","NYU v2","100"],"associatedMergedColumns":["segmentation on PASCAL or Cityscapes , or depth estimation on NYU v2 . DetConS outperforms SimCLR , with up to 10? less pretraining ."]}]},{"caption":"Fine-tune 1? \n\nFine-tune 2? \n\nmethod \nAP bb \nAP mk \nAP bb \nAP mk \n\nSupervised \n39.6 \n35.6 \n41.6 \n37.6 \nVADeR [48] \n39.2 \n35.6 \n-\n-\nMoCo [24] \n39.4 \n35.6 \n41.7 \n37.5 \nSimCLR [9] \n39.7 \n35.8 \n41.6 \n37.4 \nMoCo v2 [11] \n40.1 \n36.3 \n41.7 \n37.6 \nInfoMin [54] \n40.6 \n36.7 \n42.5 \n38.4 \nPixPro [63] \n41.4 \n-\n-\n-\nBYOL [21] \n41.6 \n37.2 \n42.4 \n38.0 \nSwAV [7] \n41.6 \n37.8 \n-\n-\n\nDetConS \n41.8 \n37.4 \n42.9 \n38.1 \nDetConB \n42.7 \n38.2 \n43.4 \n38.7 \n\nTable 2. Comparison to prior art: all methods are pretrained on \nImageNet then fined-tuned on COCO for 12 epochs (1? schedule) \nor 24 epochs (2? schedule). \n\n","rows":["DetConB","DetConS","SwAV [ 7 ]","SimCLR [ 9 ]","Supervised","VADeR [ 48 ]","BYOL [ 21 ]","MoCo [ 24 ]","MoCo v2 [ 11 ]","InfoMin [ 54 ]","PixPro [ 63 ]"],"columns":["Fine - tune 2?","Fine - tune 1?","AP bb","-","AP"],"mergedAllColumns":[],"numberCells":[{"number":"43.4","isBolded":true,"associatedRows":["DetConB"],"associatedColumns":["Fine - tune 2?","AP","-","-","-"],"associatedMergedColumns":[]},{"number":"38.0","isBolded":false,"associatedRows":["BYOL [ 21 ]"],"associatedColumns":["Fine - tune 2?","AP","-","-"],"associatedMergedColumns":[]},{"number":"37.5","isBolded":false,"associatedRows":["MoCo [ 24 ]"],"associatedColumns":["Fine - tune 2?","AP","-"],"associatedMergedColumns":[]},{"number":"39.2","isBolded":false,"associatedRows":["VADeR [ 48 ]"],"associatedColumns":["Fine - tune 1?","AP bb"],"associatedMergedColumns":[]},{"number":"41.6","isBolded":false,"associatedRows":["BYOL [ 21 ]"],"associatedColumns":["Fine - tune 1?","AP bb","-","-"],"associatedMergedColumns":[]},{"number":"39.6","isBolded":false,"associatedRows":["Supervised"],"associatedColumns":["Fine - tune 1?","AP bb"],"associatedMergedColumns":[]},{"number":"37.8","isBolded":false,"associatedRows":["SwAV [ 7 ]"],"associatedColumns":["Fine - tune 1?","AP","-","-"],"associatedMergedColumns":[]},{"number":"35.8","isBolded":false,"associatedRows":["SimCLR [ 9 ]"],"associatedColumns":["Fine - tune 1?","AP","-"],"associatedMergedColumns":[]},{"number":"40.1","isBolded":false,"associatedRows":["MoCo v2 [ 11 ]"],"associatedColumns":["Fine - tune 1?","AP bb","-"],"associatedMergedColumns":[]},{"number":"42.7","isBolded":true,"associatedRows":["DetConB"],"associatedColumns":["Fine - tune 1?","AP bb","-","-","-"],"associatedMergedColumns":[]},{"number":"38.2","isBolded":true,"associatedRows":["DetConB"],"associatedColumns":["Fine - tune 1?","AP","-","-","-"],"associatedMergedColumns":[]},{"number":"42.9","isBolded":false,"associatedRows":["DetConS"],"associatedColumns":["Fine - tune 2?","AP","-","-","-"],"associatedMergedColumns":[]},{"number":"41.6","isBolded":false,"associatedRows":["SwAV [ 7 ]"],"associatedColumns":["Fine - tune 1?","AP bb","-","-"],"associatedMergedColumns":[]},{"number":"37.6","isBolded":false,"associatedRows":["MoCo v2 [ 11 ]"],"associatedColumns":["Fine - tune 2?","AP","-"],"associatedMergedColumns":[]},{"number":"41.8","isBolded":false,"associatedRows":["DetConS"],"associatedColumns":["Fine - tune 1?","AP bb","-","-","-"],"associatedMergedColumns":[]},{"number":"37.6","isBolded":false,"associatedRows":["Supervised"],"associatedColumns":["Fine - tune 2?","AP"],"associatedMergedColumns":[]},{"number":"37.2","isBolded":false,"associatedRows":["BYOL [ 21 ]"],"associatedColumns":["Fine - tune 1?","AP","-","-"],"associatedMergedColumns":[]},{"number":"42.5","isBolded":false,"associatedRows":["InfoMin [ 54 ]"],"associatedColumns":["Fine - tune 2?","AP","-"],"associatedMergedColumns":[]},{"number":"38.1","isBolded":false,"associatedRows":["DetConS"],"associatedColumns":["Fine - tune 2?","AP","-","-","-"],"associatedMergedColumns":[]},{"number":"38.4","isBolded":false,"associatedRows":["InfoMin [ 54 ]"],"associatedColumns":["Fine - tune 2?","AP","-"],"associatedMergedColumns":[]},{"number":"39.7","isBolded":false,"associatedRows":["SimCLR [ 9 ]"],"associatedColumns":["Fine - tune 1?","AP bb","-"],"associatedMergedColumns":[]},{"number":"37.4","isBolded":false,"associatedRows":["SimCLR [ 9 ]"],"associatedColumns":["Fine - tune 2?","AP","-"],"associatedMergedColumns":[]},{"number":"38.7","isBolded":true,"associatedRows":["DetConB"],"associatedColumns":["Fine - tune 2?","AP","-","-","-"],"associatedMergedColumns":[]},{"number":"41.4","isBolded":false,"associatedRows":["PixPro [ 63 ]"],"associatedColumns":["Fine - tune 1?","AP bb","-"],"associatedMergedColumns":[]},{"number":"35.6","isBolded":false,"associatedRows":["Supervised"],"associatedColumns":["Fine - tune 1?","AP"],"associatedMergedColumns":[]},{"number":"35.6","isBolded":false,"associatedRows":["MoCo [ 24 ]"],"associatedColumns":["Fine - tune 1?","AP","-"],"associatedMergedColumns":[]},{"number":"41.6","isBolded":false,"associatedRows":["SimCLR [ 9 ]"],"associatedColumns":["Fine - tune 2?","AP","-"],"associatedMergedColumns":[]},{"number":"35.6","isBolded":false,"associatedRows":["VADeR [ 48 ]"],"associatedColumns":["Fine - tune 1?","AP"],"associatedMergedColumns":[]},{"number":"39.4","isBolded":false,"associatedRows":["MoCo [ 24 ]"],"associatedColumns":["Fine - tune 1?","AP bb","-"],"associatedMergedColumns":[]},{"number":"41.7","isBolded":false,"associatedRows":["MoCo v2 [ 11 ]"],"associatedColumns":["Fine - tune 2?","AP","-"],"associatedMergedColumns":[]},{"number":"36.7","isBolded":false,"associatedRows":["InfoMin [ 54 ]"],"associatedColumns":["Fine - tune 1?","AP","-"],"associatedMergedColumns":[]},{"number":"37.4","isBolded":false,"associatedRows":["DetConS"],"associatedColumns":["Fine - tune 1?","AP","-","-","-"],"associatedMergedColumns":[]},{"number":"41.7","isBolded":false,"associatedRows":["MoCo [ 24 ]"],"associatedColumns":["Fine - tune 2?","AP","-"],"associatedMergedColumns":[]},{"number":"41.6","isBolded":false,"associatedRows":["Supervised"],"associatedColumns":["Fine - tune 2?","AP"],"associatedMergedColumns":[]},{"number":"36.3","isBolded":false,"associatedRows":["MoCo v2 [ 11 ]"],"associatedColumns":["Fine - tune 1?","AP","-"],"associatedMergedColumns":[]},{"number":"42.4","isBolded":false,"associatedRows":["BYOL [ 21 ]"],"associatedColumns":["Fine - tune 2?","AP","-","-"],"associatedMergedColumns":[]},{"number":"40.6","isBolded":false,"associatedRows":["InfoMin [ 54 ]"],"associatedColumns":["Fine - tune 1?","AP bb","-"],"associatedMergedColumns":[]}]},{"caption":"pretrain \nData \nParams \nAP bb \nAP mk \n\nSupervised [20] \nIN-1M \n250 M \n45.9 \n41.0 \nSEER [20] \nIG-1B \n693 M \n48.5 \n43.2 \n\nDetConB \nIN-1M \n250 M \n48.9 \n43.0 \n\nTable 3. Comparison to large-scale transfer learning: all meth-\nods pretrain a backbone and transfer to COCO detection and in-\nstance segmentation using a Mask-RCNN. SEER trains on a bil-\nlion Instagram images whereas DetConS trains on ImageNet (1.3 \nmillion images). SEER and the supervised baseline use the re-\ncent RegNet architecture [49], whereas DetConS uses a generic \nResNet-200 (2? width). Despite this, DetCon pretraining matches \nthe performance of large-scale SEER pretraining. \n\n","rows":["IG - 1B","DetConB","IN - 1M","250 M","lion Instagram images whereas DetConS trains on ImageNet","Supervised [ 20 ]","693 M","SEER [ 20 ]"],"columns":["AP"],"mergedAllColumns":["stance segmentation using a Mask - RCNN . SEER trains on a bil -"],"numberCells":[{"number":"43.0","isBolded":false,"associatedRows":["DetConB","IN - 1M","250 M"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"(1.3","isBolded":false,"associatedRows":["lion Instagram images whereas DetConS trains on ImageNet"],"associatedColumns":["AP"],"associatedMergedColumns":["stance segmentation using a Mask - RCNN . SEER trains on a bil -"]},{"number":"48.5","isBolded":false,"associatedRows":["SEER [ 20 ]","IG - 1B","693 M"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"43.2","isBolded":true,"associatedRows":["SEER [ 20 ]","IG - 1B","693 M"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"41.0","isBolded":false,"associatedRows":["Supervised [ 20 ]","IN - 1M","250 M"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"48.9","isBolded":true,"associatedRows":["DetConB","IN - 1M","250 M"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"45.9","isBolded":false,"associatedRows":["Supervised [ 20 ]","IN - 1M","250 M"],"associatedColumns":["AP"],"associatedMergedColumns":[]}]},{"caption":"Table 4, final row). \n\nmodel \nmasks \n#latents \nAP bb \nAP mk \n\nSimCLR \nglobal \n1 \n31.6 \n29.2 \n(a) \nglobal \n16 \n31.5 \n29.3 \n(b) \nFH \n1 \n31.2 \n28.8 \n\nDetConS \nFH \n16 \n33.4 \n30.6 \n\nTable 4. Ablation: from SimCLR to DetConS. We pretrain \non COCO and evaluate frozen feature accuracy also on COCO. \nmasks: specifies whether hidden vectors are pooled globally, or \nwithin individual FH masks. #latents: number of masks. \n\n","rows":["( b )","1","( a )","FH","16","DetConS","global","SimCLR"],"columns":["Table 4 , final row ) .","AP"],"mergedAllColumns":[],"numberCells":[{"number":"31.6","isBolded":false,"associatedRows":["SimCLR","global","16","1"],"associatedColumns":["Table 4 , final row ) .","AP"],"associatedMergedColumns":[]},{"number":"31.5","isBolded":false,"associatedRows":["( a )","global","16","1"],"associatedColumns":["Table 4 , final row ) .","AP"],"associatedMergedColumns":[]},{"number":"31.2","isBolded":false,"associatedRows":["( b )","FH","1"],"associatedColumns":["Table 4 , final row ) .","AP"],"associatedMergedColumns":[]},{"number":"28.8","isBolded":false,"associatedRows":["( b )","FH","1"],"associatedColumns":["Table 4 , final row ) .","AP"],"associatedMergedColumns":[]},{"number":"30.6","isBolded":true,"associatedRows":["DetConS","FH","16"],"associatedColumns":["Table 4 , final row ) .","AP"],"associatedMergedColumns":[]},{"number":"29.3","isBolded":false,"associatedRows":["( a )","global","16","1"],"associatedColumns":["Table 4 , final row ) .","AP"],"associatedMergedColumns":[]},{"number":"29.2","isBolded":false,"associatedRows":["SimCLR","global","16","1"],"associatedColumns":["Table 4 , final row ) .","AP"],"associatedMergedColumns":[]},{"number":"33.4","isBolded":true,"associatedRows":["DetConS","FH","16"],"associatedColumns":["Table 4 , final row ) .","AP"],"associatedMergedColumns":[]}]},{"caption":"Table 5. Simplifying the contrastive framework. We train \nDetConS models on COCO using approximate FH masks or \nhigher-quality ground-truth (GT) masks, and evaluate them in the \nfrozen-feature setting. \"all neg\": Negative samples are collected \nfrom the entire batch as opposed to only within a worker (out of \n128 workers). \"two views\": Contrastive predictions are made \nacross augmentations, as opposed to within a view. \n\nmodels while sampling a single augmentation for each im-\nage and maximizing the similarity of mask-based features \nwithin this view. Here again, the DetCon objective suffers \nfrom this handicap when using approximate FH masks, but \nnot with high-quality segmentations (","rows":["( b )","DetCon","( a )"],"columns":["FH","Masks","GT"],"mergedAllColumns":[],"numberCells":[{"number":"38.8","isBolded":true,"associatedRows":["( b )"],"associatedColumns":["Masks","GT"],"associatedMergedColumns":[]},{"number":"33.6","isBolded":true,"associatedRows":["DetCon"],"associatedColumns":["Masks","FH"],"associatedMergedColumns":[]},{"number":"27.7","isBolded":false,"associatedRows":["( b )"],"associatedColumns":["Masks","FH"],"associatedMergedColumns":[]},{"number":"37.0","isBolded":false,"associatedRows":["DetCon"],"associatedColumns":["Masks","GT"],"associatedMergedColumns":[]},{"number":"38.5","isBolded":false,"associatedRows":["( a )"],"associatedColumns":["Masks","GT"],"associatedMergedColumns":[]},{"number":"32.2","isBolded":false,"associatedRows":["( a )"],"associatedColumns":["Masks","FH"],"associatedMergedColumns":[]}]}]