[{"caption":"Table 1: Offline \u0026 online metrics of different models. \nOnline Acquisition Gain is relative to the control. \nModel \nOffline AUC Online Acquisition Gain \n\nWide (control) \n0.726 \n0% \n\nDeep \n0.722 \n+2.9% \n\nWide \u0026 Deep \n0.728 \n+3.9% \n\nusers were randomly selected and presented with recom-\nmendations generated by the previous version of ranking \nmodel, which is a highly-optimized wide-only logistic regres-\nsion model with rich cross-product feature transformations. \nFor the experiment group, 1% of users were presented with \nrecommendations generated by the Wide \u0026 Deep model, \ntrained with the same set of features. As shown in Table 1, \nWide \u0026 Deep model improved the app acquisition rate on \nthe main landing page of the app store by +3.9% relative to \nthe control group (statistically significant). The results were \nalso compared with another 1% group using only the deep \npart of the model with the same features and neural network \nstructure, and the Wide \u0026 Deep mode had +1% gain on top \nof the deep-only model (statistically significant). \n","rows":["the main landing page of the app store by","Wide ( control )","Deep","Wide \u0026 Deep"],"columns":["Online Acquisition Gain","Offline AUC","Table 1 : Offline \u0026 online metrics of different models ."],"mergedAllColumns":["Online Acquisition Gain is relative to the control .","0%","Wide \u0026 Deep model improved the app acquisition rate on"],"numberCells":[{"number":"+3.9%","isBolded":false,"associatedRows":["Wide \u0026 Deep"],"associatedColumns":["Table 1 : Offline \u0026 online metrics of different models .","Online Acquisition Gain"],"associatedMergedColumns":["0%"]},{"number":"+2.9%","isBolded":false,"associatedRows":["Deep"],"associatedColumns":["Table 1 : Offline \u0026 online metrics of different models .","Online Acquisition Gain"],"associatedMergedColumns":["0%"]},{"number":"0.722","isBolded":false,"associatedRows":["Deep"],"associatedColumns":["Table 1 : Offline \u0026 online metrics of different models .","Offline AUC"],"associatedMergedColumns":["0%"]},{"number":"0.726","isBolded":false,"associatedRows":["Wide ( control )"],"associatedColumns":["Table 1 : Offline \u0026 online metrics of different models .","Offline AUC"],"associatedMergedColumns":["Online Acquisition Gain is relative to the control ."]},{"number":"0.728","isBolded":false,"associatedRows":["Wide \u0026 Deep"],"associatedColumns":["Table 1 : Offline \u0026 online metrics of different models .","Offline AUC"],"associatedMergedColumns":["0%"]},{"number":"+3.9%relativeto","isBolded":false,"associatedRows":["the main landing page of the app store by"],"associatedColumns":["Table 1 : Offline \u0026 online metrics of different models .","Online Acquisition Gain"],"associatedMergedColumns":["Wide \u0026 Deep model improved the app acquisition rate on"]}]},{"caption":"Table 2: Serving latency vs. batch size and threads. \nBatch size Number of Threads Serving Latency (ms) \n\n200 \n1 \n31 \n\n100 \n2 \n17 \n\n50 \n4 \n14 \n\n","rows":["1","100","200","2","4"],"columns":["Serving Latency ( ms )","Table 2 : Serving latency vs . batch size and threads .","Batch size"],"mergedAllColumns":[],"numberCells":[{"number":"50","isBolded":false,"associatedRows":[],"associatedColumns":["Table 2 : Serving latency vs . batch size and threads .","Batch size"],"associatedMergedColumns":[]},{"number":"14","isBolded":false,"associatedRows":["100","4"],"associatedColumns":["Table 2 : Serving latency vs . batch size and threads .","Serving Latency ( ms )"],"associatedMergedColumns":[]},{"number":"31","isBolded":false,"associatedRows":["200","1"],"associatedColumns":["Table 2 : Serving latency vs . batch size and threads .","Serving Latency ( ms )"],"associatedMergedColumns":[]},{"number":"17","isBolded":false,"associatedRows":["100","2"],"associatedColumns":["Table 2 : Serving latency vs . batch size and threads .","Serving Latency ( ms )"],"associatedMergedColumns":[]}]}]