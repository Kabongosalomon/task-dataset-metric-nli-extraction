[{"caption":"Table 1: State-of-the-art comparison on the COCO 2017 test-dev set. All the models are trained \nwith multi-scale and tested with single scale. \u0027 ?\u0027 and \u0027*\u0027 are the results reported in ISTR ","rows":["SOLOv2 [ 16 ]","HTC * [ 4 ]","36","QueryInst [ 24 ]","R101","R50 - FPN","BlendMask [ 22 ]","SOLQ , ours","R50","Mask R - CNN ? [ 2 ]","Cascade Mask R - CNN * [ 7 ]","ISTR [ 30 ]","Swin - L","MEInst ? [ 21 ]","Cascade Mask R - CNN * [ 7 ] R101 - FPN","72","50","DCT - Mask [ 45 ]","CondInst [ 9 ]","R101 - FPN"],"columns":["Epochs AP","S","seg","AP box","box","L","M","-"],"mergedAllColumns":[],"numberCells":[{"number":"43.0","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R50 - FPN","36"],"associatedColumns":["seg","AP box","-","-"],"associatedMergedColumns":[]},{"number":"37.6","isBolded":false,"associatedRows":["SOLQ , ours","Swin - L","50"],"associatedColumns":["box","S","-","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"46.8","isBolded":false,"associatedRows":["ISTR [ 30 ]","R50 - FPN","36"],"associatedColumns":["seg","AP box","-","-","-"],"associatedMergedColumns":[]},{"number":"40.4","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R50 - FPN","72"],"associatedColumns":["seg","AP box","-","-"],"associatedMergedColumns":[]},{"number":"51.7","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R50 - FPN","36"],"associatedColumns":["box","L"],"associatedMergedColumns":[]},{"number":"25.3","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R50 - FPN","36"],"associatedColumns":["box","S","-","-"],"associatedMergedColumns":[]},{"number":"44.5","isBolded":false,"associatedRows":["Cascade Mask R - CNN * [ 7 ]","R50 - FPN","36"],"associatedColumns":["seg","AP box"],"associatedMergedColumns":[]},{"number":"45.1","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R50 - FPN","36"],"associatedColumns":["box","M","-","-"],"associatedMergedColumns":[]},{"number":"20.4","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"47.3","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R101 - FPN","36"],"associatedColumns":["box","M","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"46.3","isBolded":false,"associatedRows":["HTC * [ 4 ]","R101 - FPN","36"],"associatedColumns":["seg","AP box","-","-","-","-"],"associatedMergedColumns":[]},{"number":"44.2","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R50 - FPN","72"],"associatedColumns":["box","M","-","-"],"associatedMergedColumns":[]},{"number":"28.7","isBolded":false,"associatedRows":["ISTR [ 30 ]","R101 - FPN","36"],"associatedColumns":["box","S","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"41.9","isBolded":false,"associatedRows":["ISTR [ 30 ]","R101 - FPN","36"],"associatedColumns":["seg","M","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"42.1","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R50 - FPN","36"],"associatedColumns":["seg","L","-","-"],"associatedMergedColumns":[]},{"number":"42.5","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R50 - FPN","36"],"associatedColumns":["seg","AP box","-","-"],"associatedMergedColumns":[]},{"number":"25.1","isBolded":false,"associatedRows":["CondInst [ 9 ]","R50 - FPN","36"],"associatedColumns":["box","S","-","-"],"associatedMergedColumns":[]},{"number":"43.5","isBolded":false,"associatedRows":["HTC * [ 4 ]","R101 - FPN","36"],"associatedColumns":["seg","M","-","-","-","-"],"associatedMergedColumns":[]},{"number":"37.8","isBolded":false,"associatedRows":["CondInst [ 9 ]","R50 - FPN","36"],"associatedColumns":["seg","Epochs AP","-","-"],"associatedMergedColumns":[]},{"number":"17.3","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R101 - FPN","72"],"associatedColumns":["seg","S","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"52.3","isBolded":false,"associatedRows":["ISTR [ 30 ]","R101 - FPN","36"],"associatedColumns":["seg","L","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"52.1","isBolded":false,"associatedRows":["CondInst [ 9 ]","R50 - FPN","36"],"associatedColumns":["box","L","-","-"],"associatedMergedColumns":[]},{"number":"56.2","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R50 - FPN","72"],"associatedColumns":["seg","L","-","-"],"associatedMergedColumns":[]},{"number":"46.7","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R101 - FPN","72"],"associatedColumns":["box","M","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"59.9","isBolded":false,"associatedRows":["ISTR [ 30 ]","R50 - FPN","36"],"associatedColumns":["box","L","-","-","-"],"associatedMergedColumns":[]},{"number":"21.0","isBolded":false,"associatedRows":["CondInst [ 9 ]","R50 - FPN","36"],"associatedColumns":["seg","S","-","-"],"associatedMergedColumns":[]},{"number":"52.8","isBolded":false,"associatedRows":["QueryInst [ 24 ]","R50 - FPN","36"],"associatedColumns":["seg","L","-","-"],"associatedMergedColumns":[]},{"number":"40.0","isBolded":false,"associatedRows":["Cascade Mask R - CNN * [ 7 ] R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-"],"associatedMergedColumns":[]},{"number":"42.2","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R101 - FPN","36"],"associatedColumns":["seg","M","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"56.3","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R101 - FPN","72"],"associatedColumns":["box","L","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"70.6","isBolded":false,"associatedRows":["SOLQ , ours","Swin - L","50"],"associatedColumns":["box","L","-","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"49.6","isBolded":false,"associatedRows":["Cascade Mask R - CNN * [ 7 ]","R50 - FPN","36"],"associatedColumns":["seg","L"],"associatedMergedColumns":[]},{"number":"41.7","isBolded":false,"associatedRows":["CondInst [ 9 ]","R101 - FPN","36"],"associatedColumns":["seg","M","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"39.6","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R50 - FPN","36"],"associatedColumns":["seg","M"],"associatedMergedColumns":[]},{"number":"25.8","isBolded":false,"associatedRows":["CondInst [ 9 ]","R101 - FPN","36"],"associatedColumns":["box","S","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"21.5","isBolded":false,"associatedRows":["CondInst [ 9 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"48.7","isBolded":false,"associatedRows":["SOLQ , ours","R101","50"],"associatedColumns":["box","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"22.1","isBolded":false,"associatedRows":["ISTR [ 30 ]","R50 - FPN","36"],"associatedColumns":["seg","S","-","-","-"],"associatedMergedColumns":[]},{"number":"54.0","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R50 - FPN","36"],"associatedColumns":["box","L","-","-"],"associatedMergedColumns":[]},{"number":"42.1","isBolded":false,"associatedRows":["CondInst [ 9 ]","R50 - FPN","36"],"associatedColumns":["seg","AP box","-","-"],"associatedMergedColumns":[]},{"number":"48.7","isBolded":false,"associatedRows":["CondInst [ 9 ]","R50 - FPN","36"],"associatedColumns":["seg","L","-","-"],"associatedMergedColumns":[]},{"number":"51.7","isBolded":false,"associatedRows":["SOLQ , ours","R101","50"],"associatedColumns":["box","M","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"40.4","isBolded":false,"associatedRows":["ISTR [ 30 ]","R50 - FPN","36"],"associatedColumns":["seg","M","-","-","-"],"associatedMergedColumns":[]},{"number":"42.5","isBolded":false,"associatedRows":["Cascade Mask R - CNN * [ 7 ] R101 - FPN","36"],"associatedColumns":["seg","M","-","-","-"],"associatedMergedColumns":[]},{"number":"53.6","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R50 - FPN","36"],"associatedColumns":["seg","L","-","-"],"associatedMergedColumns":[]},{"number":"55.5","isBolded":false,"associatedRows":["QueryInst [ 24 ]","R101 - FPN","36"],"associatedColumns":["seg","L","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"44.9","isBolded":false,"associatedRows":["HTC * [ 4 ]","R50 - FPN","36"],"associatedColumns":["seg","AP box","-"],"associatedMergedColumns":[]},{"number":"57.4","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R101 - FPN","72"],"associatedColumns":["seg","L","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"23.0","isBolded":false,"associatedRows":["HTC * [ 4 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-"],"associatedMergedColumns":[]},{"number":"43.6","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R50 - FPN","36"],"associatedColumns":["box","M"],"associatedMergedColumns":[]},{"number":"21.1","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R50 - FPN","36"],"associatedColumns":["seg","S"],"associatedMergedColumns":[]},{"number":"40.6","isBolded":false,"associatedRows":["QueryInst [ 24 ]","R50 - FPN","36"],"associatedColumns":["seg","Epochs AP","-","-"],"associatedMergedColumns":[]},{"number":"39.7","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R101 - FPN","72"],"associatedColumns":["seg","S","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"46.7","isBolded":false,"associatedRows":["SOLQ , ours","Swin - L","50"],"associatedColumns":["seg","S","-","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"24.6","isBolded":false,"associatedRows":["QueryInst [ 24 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"48.7","isBolded":false,"associatedRows":["ISTR [ 30 ]","R50 - FPN","36"],"associatedColumns":["box","M","-","-","-"],"associatedMergedColumns":[]},{"number":"41.3","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R50 - FPN","36"],"associatedColumns":["seg","AP box"],"associatedMergedColumns":[]},{"number":"25.6","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R50 - FPN","36"],"associatedColumns":["box","S","-","-"],"associatedMergedColumns":[]},{"number":"40.9","isBolded":false,"associatedRows":["SOLQ , ours","R101","50"],"associatedColumns":["seg","S","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"50.1","isBolded":false,"associatedRows":["SOLQ , ours","Swin - L","50"],"associatedColumns":["seg","M","-","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"40.3","isBolded":false,"associatedRows":["CondInst [ 9 ]","R50 - FPN","36"],"associatedColumns":["seg","M","-","-"],"associatedMergedColumns":[]},{"number":"27.6","isBolded":false,"associatedRows":["SOLQ , ours","R50","50"],"associatedColumns":["box","S","-","-","-"],"associatedMergedColumns":[]},{"number":"61.5","isBolded":false,"associatedRows":["ISTR [ 30 ]","R101 - FPN","36"],"associatedColumns":["box","L","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"16.5","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R50 - FPN","72"],"associatedColumns":["seg","S","-","-"],"associatedMergedColumns":[]},{"number":"35.3","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"52.2","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R50 - FPN","36"],"associatedColumns":["box","L","-","-"],"associatedMergedColumns":[]},{"number":"43.5","isBolded":false,"associatedRows":["CondInst [ 9 ]","R101 - FPN","36"],"associatedColumns":["seg","AP box","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"40.9","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R50 - FPN","36"],"associatedColumns":["seg","M","-","-"],"associatedMergedColumns":[]},{"number":"63.1","isBolded":false,"associatedRows":["SOLQ , ours","R101","50"],"associatedColumns":["box","L","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"54.3","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R101 - FPN","36"],"associatedColumns":["box","L","-","-","-"],"associatedMergedColumns":[]},{"number":"39.1","isBolded":false,"associatedRows":["CondInst [ 9 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"54.9","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R101 - FPN","36"],"associatedColumns":["box","L","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"51.2","isBolded":false,"associatedRows":["Cascade Mask R - CNN * [ 7 ] R101 - FPN","36"],"associatedColumns":["seg","L","-","-","-"],"associatedMergedColumns":[]},{"number":"60.9","isBolded":false,"associatedRows":["SOLQ , ours","Swin - L","50"],"associatedColumns":["seg","L","-","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"28.6","isBolded":false,"associatedRows":["SOLQ , ours","R101","50"],"associatedColumns":["box","S","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"21.5","isBolded":false,"associatedRows":["SOLQ , ours","R50","50"],"associatedColumns":["seg","S","-","-","-"],"associatedMergedColumns":[]},{"number":"60.0","isBolded":false,"associatedRows":["SOLQ , ours","Swin - L","50"],"associatedColumns":["box","M","-","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"21.7","isBolded":false,"associatedRows":["Cascade Mask R - CNN * [ 7 ]","R50 - FPN","36"],"associatedColumns":["seg","S"],"associatedMergedColumns":[]},{"number":"22.5","isBolded":false,"associatedRows":["Cascade Mask R - CNN * [ 7 ] R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-"],"associatedMergedColumns":[]},{"number":"45.4","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R50 - FPN","36"],"associatedColumns":["box","M","-","-"],"associatedMergedColumns":[]},{"number":"22.4","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"50.5","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R101 - FPN","36"],"associatedColumns":["seg","L","-","-","-"],"associatedMergedColumns":[]},{"number":"35.7","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R50 - FPN","36"],"associatedColumns":["seg","M","-","-"],"associatedMergedColumns":[]},{"number":"51.8","isBolded":false,"associatedRows":["DCT - Mask [ 45 ]","R101 - FPN","36"],"associatedColumns":["seg","L","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"38.8","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R50 - FPN","72"],"associatedColumns":["seg","Epochs AP","-","-"],"associatedMergedColumns":[]},{"number":"54.6","isBolded":false,"associatedRows":["SOLQ , ours","R101","50"],"associatedColumns":["seg","L","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"29.2","isBolded":false,"associatedRows":["SOLQ , ours","Swin - L","50"],"associatedColumns":["seg","S","-","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"38.6","isBolded":false,"associatedRows":["Cascade Mask R - CNN * [ 7 ]","R50 - FPN","36"],"associatedColumns":["seg","Epochs AP"],"associatedMergedColumns":[]},{"number":"50.6","isBolded":false,"associatedRows":["ISTR [ 30 ]","R50 - FPN","36"],"associatedColumns":["seg","L","-","-","-"],"associatedMergedColumns":[]},{"number":"37.5","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R50 - FPN","36"],"associatedColumns":["seg","Epochs AP"],"associatedMergedColumns":[]},{"number":"56.1","isBolded":false,"associatedRows":["QueryInst [ 24 ]","Swin - L","50"],"associatedColumns":["box","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"48.3","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R50 - FPN","36"],"associatedColumns":["seg","L"],"associatedMergedColumns":[]},{"number":"39.7","isBolded":false,"associatedRows":["SOLQ , ours","R50","50"],"associatedColumns":["seg","Epochs AP","-","-","-"],"associatedMergedColumns":[]},{"number":"63.2","isBolded":false,"associatedRows":["QueryInst [ 24 ]","Swin - L","50"],"associatedColumns":["seg","L","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"53.1","isBolded":false,"associatedRows":["SOLQ , ours","R50","50"],"associatedColumns":["seg","L","-","-","-"],"associatedMergedColumns":[]},{"number":"26.6","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R101 - FPN","36"],"associatedColumns":["box","S","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"18.8","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R50 - FPN","36"],"associatedColumns":["seg","S","-","-"],"associatedMergedColumns":[]},{"number":"44.5","isBolded":false,"associatedRows":["CondInst [ 9 ]","R50 - FPN","36"],"associatedColumns":["box","M","-","-"],"associatedMergedColumns":[]},{"number":"42.8","isBolded":false,"associatedRows":["QueryInst [ 24 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"39.6","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"39.7","isBolded":false,"associatedRows":["HTC * [ 4 ]","R50 - FPN","36"],"associatedColumns":["seg","Epochs AP","-"],"associatedMergedColumns":[]},{"number":"40.8","isBolded":false,"associatedRows":["Cascade Mask R - CNN * [ 7 ]","R50 - FPN","36"],"associatedColumns":["seg","M"],"associatedMergedColumns":[]},{"number":"44.5","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R101 - FPN","36"],"associatedColumns":["seg","AP box","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"40.8","isBolded":false,"associatedRows":["HTC * [ 4 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-"],"associatedMergedColumns":[]},{"number":"40.1","isBolded":false,"associatedRows":["DCT - Mask [ 45 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"46.2","isBolded":false,"associatedRows":["Cascade Mask R - CNN * [ 7 ] R101 - FPN","36"],"associatedColumns":["seg","AP box","-","-","-"],"associatedMergedColumns":[]},{"number":"51.8","isBolded":false,"associatedRows":["QueryInst [ 24 ]","Swin - L","50"],"associatedColumns":["seg","M","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"46.0","isBolded":false,"associatedRows":["CondInst [ 9 ]","R101 - FPN","36"],"associatedColumns":["box","M","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"41.4","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R101 - FPN","36"],"associatedColumns":["seg","M","-","-","-"],"associatedMergedColumns":[]},{"number":"42.2","isBolded":false,"associatedRows":["HTC * [ 4 ]","R50 - FPN","36"],"associatedColumns":["seg","M","-"],"associatedMergedColumns":[]},{"number":"50.9","isBolded":false,"associatedRows":["CondInst [ 9 ]","R101 - FPN","36"],"associatedColumns":["seg","L","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"19.3","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R50 - FPN","36"],"associatedColumns":["seg","S","-","-"],"associatedMergedColumns":[]},{"number":"55.6","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R101 - FPN","36"],"associatedColumns":["box","L","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"51.4","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R101 - FPN","36"],"associatedColumns":["seg","L","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"44.5","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R101 - FPN","36"],"associatedColumns":["seg","L","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"26.8","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R101 - FPN","36"],"associatedColumns":["box","S","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"47.5","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R101 - FPN","36"],"associatedColumns":["box","M","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"27.8","isBolded":false,"associatedRows":["ISTR [ 30 ]","R50 - FPN","36"],"associatedColumns":["box","S","-","-","-"],"associatedMergedColumns":[]},{"number":"24.2","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R50 - FPN","36"],"associatedColumns":["box","S"],"associatedMergedColumns":[]},{"number":"47.8","isBolded":false,"associatedRows":["SOLQ , ours","R50","50"],"associatedColumns":["seg","AP box","-","-","-"],"associatedMergedColumns":[]},{"number":"61.6","isBolded":false,"associatedRows":["SOLQ , ours","R50","50"],"associatedColumns":["box","L","-","-","-"],"associatedMergedColumns":[]},{"number":"56.5","isBolded":false,"associatedRows":["SOLQ , ours","Swin - L","50"],"associatedColumns":["box","-","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"38.8","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-"],"associatedMergedColumns":[]},{"number":"42.5","isBolded":false,"associatedRows":["SOLQ , ours","R50","50"],"associatedColumns":["seg","M","-","-","-"],"associatedMergedColumns":[]},{"number":"25.1","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R101 - FPN","36"],"associatedColumns":["box","S","-","-","-"],"associatedMergedColumns":[]},{"number":"46.0","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R101 - FPN","36"],"associatedColumns":["box","M","-","-","-"],"associatedMergedColumns":[]},{"number":"22.8","isBolded":false,"associatedRows":["ISTR [ 30 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"48.1","isBolded":false,"associatedRows":["ISTR [ 30 ]","R101 - FPN","36"],"associatedColumns":["box","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"50.6","isBolded":false,"associatedRows":["HTC * [ 4 ]","R50 - FPN","36"],"associatedColumns":["seg","L","-"],"associatedMergedColumns":[]},{"number":"22.6","isBolded":false,"associatedRows":["HTC * [ 4 ]","R50 - FPN","36"],"associatedColumns":["seg","S","-"],"associatedMergedColumns":[]},{"number":"53.9","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R50 - FPN","72"],"associatedColumns":["box","L","-","-"],"associatedMergedColumns":[]},{"number":"22.5","isBolded":false,"associatedRows":["SOLQ , ours","R101","50"],"associatedColumns":["seg","S","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"20.5","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R50 - FPN","72"],"associatedColumns":["box","S","-","-"],"associatedMergedColumns":[]},{"number":"41.7","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R50 - FPN","72"],"associatedColumns":["seg","M","-","-"],"associatedMergedColumns":[]},{"number":"23.4","isBolded":false,"associatedRows":["QueryInst [ 24 ]","R50 - FPN","36"],"associatedColumns":["seg","S","-","-"],"associatedMergedColumns":[]},{"number":"42.9","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R101 - FPN","72"],"associatedColumns":["seg","M","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"45.0","isBolded":false,"associatedRows":["QueryInst [ 24 ]","R101 - FPN","36"],"associatedColumns":["seg","M","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"50.4","isBolded":false,"associatedRows":["ISTR [ 30 ]","R101 - FPN","36"],"associatedColumns":["box","M","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"42.7","isBolded":false,"associatedRows":["DCT - Mask [ 45 ]","R101 - FPN","36"],"associatedColumns":["seg","M","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"45.6","isBolded":false,"associatedRows":["QueryInst [ 24 ]","R50 - FPN","36"],"associatedColumns":["seg","AP box","-","-"],"associatedMergedColumns":[]},{"number":"33.5","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R50 - FPN","36"],"associatedColumns":["seg","Epochs AP","-","-"],"associatedMergedColumns":[]},{"number":"37.8","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R50 - FPN","36"],"associatedColumns":["seg","Epochs AP","-","-"],"associatedMergedColumns":[]},{"number":"31.5","isBolded":false,"associatedRows":["QueryInst [ 24 ]","Swin - L","50"],"associatedColumns":["seg","S","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"50.9","isBolded":false,"associatedRows":["SOLQ , ours","R50","50"],"associatedColumns":["box","M","-","-","-"],"associatedMergedColumns":[]},{"number":"54.1","isBolded":false,"associatedRows":["CondInst [ 9 ]","R101 - FPN","36"],"associatedColumns":["box","L","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"38.6","isBolded":false,"associatedRows":["ISTR [ 30 ]","R50 - FPN","36"],"associatedColumns":["seg","Epochs AP","-","-","-"],"associatedMergedColumns":[]},{"number":"43.8","isBolded":false,"associatedRows":["SOLQ , ours","R101","50"],"associatedColumns":["seg","M","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"39.9","isBolded":false,"associatedRows":["ISTR [ 30 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"44.7","isBolded":false,"associatedRows":["BlendMask [ 22 ]","R101 - FPN","36"],"associatedColumns":["box","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"48.1","isBolded":false,"associatedRows":["QueryInst [ 24 ]","R101 - FPN","36"],"associatedColumns":["box","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"52.6","isBolded":false,"associatedRows":["HTC * [ 4 ]","R101 - FPN","36"],"associatedColumns":["seg","L","-","-","-","-"],"associatedMergedColumns":[]},{"number":"22.3","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R101 - FPN","72"],"associatedColumns":["box","S","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"43.1","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R101 - FPN","36"],"associatedColumns":["seg","AP box","-","-","-"],"associatedMergedColumns":[]},{"number":"21.8","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-"],"associatedMergedColumns":[]},{"number":"22.7","isBolded":false,"associatedRows":["DCT - Mask [ 45 ]","R101 - FPN","36"],"associatedColumns":["seg","S","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"42.5","isBolded":false,"associatedRows":["QueryInst [ 24 ]","R50 - FPN","36"],"associatedColumns":["seg","M","-","-"],"associatedMergedColumns":[]},{"number":"37.8","isBolded":false,"associatedRows":["MEInst ? [ 21 ]","R101 - FPN","36"],"associatedColumns":["seg","M","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"42.6","isBolded":false,"associatedRows":["SOLOv2 [ 16 ]","R101 - FPN","72"],"associatedColumns":["box","-","-","-","-","-","-"],"associatedMergedColumns":[]},{"number":"49.1","isBolded":false,"associatedRows":["QueryInst [ 24 ]","Swin - L","50"],"associatedColumns":["seg","S","-","-","-","-","-","-","-"],"associatedMergedColumns":[]}]},{"caption":"Table 2: Comparisons between Unified Query Representation (UQR) and Separate Query Represen-\ntation (SQR) on the COCO 2017 val set. D-DETR denotes Defoemable DETR and D-DETR  *  refers \nour reimplementment version. D-DETR  *  with SQR means that add an extra FPN-style branch as \nshown in ","rows":["36","R101","R50 - FPN","Faster RCNN ? [ 6 ]","R50","-","Mask R - CNN ? [ 2 ]","D - DETR *","D - DETR * +SQR","50","D - DETR * +UQR","D - DETR [ 35 ]","R101 - FPN"],"columns":["S","seg","AP box","box","L","M","AP"],"mergedAllColumns":[],"numberCells":[{"number":"37.0","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R50 - FPN","36"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"27.2","isBolded":false,"associatedRows":["D - DETR * +SQR","R50","50","-"],"associatedColumns":["S"],"associatedMergedColumns":[]},{"number":"43.5","isBolded":false,"associatedRows":["Faster RCNN ? [ 6 ]","R50 - FPN","36","-"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"40.2","isBolded":false,"associatedRows":["Faster RCNN ? [ 6 ]","R50 - FPN","36","-"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"63.7","isBolded":true,"associatedRows":["D - DETR * +UQR","R50","50","-"],"associatedColumns":["AP box","L"],"associatedMergedColumns":[]},{"number":"26.8","isBolded":false,"associatedRows":["D - DETR [ 35 ]","R50","50","-"],"associatedColumns":["S"],"associatedMergedColumns":[]},{"number":"40.2(+6.8)","isBolded":true,"associatedRows":["D - DETR * +UQR","R101","50"],"associatedColumns":["seg","AP"],"associatedMergedColumns":[]},{"number":"43.1(+1.1)","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R101 - FPN","36","-"],"associatedColumns":["box","AP"],"associatedMergedColumns":[]},{"number":"32.2","isBolded":false,"associatedRows":["D - DETR * +SQR","R50","50"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"42.0","isBolded":false,"associatedRows":["Faster RCNN ? [ 6 ]","R101 - FPN","36","-"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"44.4","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R50 - FPN","36","-"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"61.7","isBolded":false,"associatedRows":["D - DETR [ 35 ]","R50","50","-"],"associatedColumns":["AP box","L"],"associatedMergedColumns":[]},{"number":"52.0","isBolded":false,"associatedRows":["Faster RCNN ? [ 6 ]","R50 - FPN","36","-"],"associatedColumns":["AP box","L"],"associatedMergedColumns":[]},{"number":"33.4","isBolded":false,"associatedRows":["D - DETR * +SQR","R101","50"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"27.3","isBolded":false,"associatedRows":["D - DETR *","R50","50","-"],"associatedColumns":["S"],"associatedMergedColumns":[]},{"number":"24.0","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R50 - FPN","36","-"],"associatedColumns":["S"],"associatedMergedColumns":[]},{"number":"61.5","isBolded":false,"associatedRows":["D - DETR * +SQR","R50","50","-"],"associatedColumns":["AP box","L"],"associatedMergedColumns":[]},{"number":"53.4","isBolded":false,"associatedRows":["Faster RCNN ? [ 6 ]","R101 - FPN","36","-"],"associatedColumns":["AP box","L"],"associatedMergedColumns":[]},{"number":"45.4","isBolded":false,"associatedRows":["D - DETR [ 35 ]","R50","50","-"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"52.9","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R50 - FPN","36","-"],"associatedColumns":["AP box","L"],"associatedMergedColumns":[]},{"number":"64.6","isBolded":true,"associatedRows":["D - DETR * +UQR","R101","50","-"],"associatedColumns":["AP box","L"],"associatedMergedColumns":[]},{"number":"46.4(+0.1)","isBolded":false,"associatedRows":["D - DETR * +SQR","R101","50","-"],"associatedColumns":["box","AP"],"associatedMergedColumns":[]},{"number":"46.0","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R101 - FPN","36","-"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"45.4","isBolded":false,"associatedRows":["Faster RCNN ? [ 6 ]","R101 - FPN","36","-"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"54.3","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R101 - FPN","36","-"],"associatedColumns":["AP box","L"],"associatedMergedColumns":[]},{"number":"26.6","isBolded":false,"associatedRows":["Faster RCNN ? [ 6 ]","R101 - FPN","36","-"],"associatedColumns":["S"],"associatedMergedColumns":[]},{"number":"47.8(+2.3)","isBolded":true,"associatedRows":["D - DETR * +UQR","R50","50","-"],"associatedColumns":["box","AP"],"associatedMergedColumns":[]},{"number":"51.1","isBolded":true,"associatedRows":["D - DETR * +UQR","R50","50","-"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"49.7","isBolded":false,"associatedRows":["D - DETR *","R101","50","-"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"28.7","isBolded":true,"associatedRows":["D - DETR * +UQR","R50","50","-"],"associatedColumns":["S"],"associatedMergedColumns":[]},{"number":"46.3","isBolded":false,"associatedRows":["D - DETR *","R101","50","-"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"40.8(+0.6)","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R50 - FPN","36","-"],"associatedColumns":["box","AP"],"associatedMergedColumns":[]},{"number":"48.3","isBolded":false,"associatedRows":["D - DETR [ 35 ]","R50","50","-"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"62.2","isBolded":false,"associatedRows":["D - DETR * +SQR","R101","50","-"],"associatedColumns":["AP box","L"],"associatedMergedColumns":[]},{"number":"28.1","isBolded":false,"associatedRows":["D - DETR *","R101","50","-"],"associatedColumns":["S"],"associatedMergedColumns":[]},{"number":"38.8","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R101 - FPN","36"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"39.5(+7.3)","isBolded":true,"associatedRows":["D - DETR * +UQR","R50","50"],"associatedColumns":["seg","AP"],"associatedMergedColumns":[]},{"number":"28.1","isBolded":false,"associatedRows":["D - DETR * +SQR","R101","50","-"],"associatedColumns":["S"],"associatedMergedColumns":[]},{"number":"48.7","isBolded":false,"associatedRows":["D - DETR *","R50","50","-"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"45.5","isBolded":false,"associatedRows":["D - DETR *","R50","50","-"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"25.1","isBolded":false,"associatedRows":["Mask R - CNN ? [ 2 ]","R101 - FPN","36","-"],"associatedColumns":["S"],"associatedMergedColumns":[]},{"number":"62.0","isBolded":false,"associatedRows":["D - DETR *","R50","50","-"],"associatedColumns":["AP box","L"],"associatedMergedColumns":[]},{"number":"48.8","isBolded":false,"associatedRows":["D - DETR * +SQR","R50","50","-"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"29.9","isBolded":true,"associatedRows":["D - DETR * +UQR","R101","50","-"],"associatedColumns":["S"],"associatedMergedColumns":[]},{"number":"52.1","isBolded":true,"associatedRows":["D - DETR * +UQR","R101","50","-"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"45.6(+0.1)","isBolded":false,"associatedRows":["D - DETR * +SQR","R50","50","-"],"associatedColumns":["box","AP"],"associatedMergedColumns":[]},{"number":"49.9","isBolded":false,"associatedRows":["D - DETR * +SQR","R101","50","-"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"62.3","isBolded":false,"associatedRows":["D - DETR *","R101","50","-"],"associatedColumns":["AP box","L"],"associatedMergedColumns":[]},{"number":"48.3(+2.0)","isBolded":true,"associatedRows":["D - DETR * +UQR","R101","50","-"],"associatedColumns":["box","AP"],"associatedMergedColumns":[]},{"number":"24.2","isBolded":false,"associatedRows":["Faster RCNN ? [ 6 ]","R50 - FPN","36","-"],"associatedColumns":["S"],"associatedMergedColumns":[]}]},{"caption":"Table 3: Ablation studies validated on the COCO 2017 val set. All experiments use the single feature \nlevel with C5 in ResNet50. \n\n","rows":["Sparse Coding","Flatten","-","PCA","1","144","det","2","3","256","300","DCT","4","400","5","6","128","96","64"],"columns":["AP seg","Num . AP seg","box","L","is 4 , it means that enable the last 4 decoder layer","M","binary mask N \u003d 128 .","? vec","( c ) Ablation of the number of decoder stages en -","S","seg","( e ) Impact of the dimension of mask vector . Mask","Mask vector loss is enabled in all","with mask vector loss and ?vec \u003d 3 , n","k \u003d 256 .","vector loss is enabled in all decoder layers . ?vec \u003d","50","k \u003d 256 . Spatial resolution of ground truth","75","( b ) Affect of adjusting mask vector loss weight .","binary mask .","3 and spatial resolution of binary mask N \u003d 128 .","AP","( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","Type","abling mask vector loss . For example , when stage","AP box","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled only in the last decoder"],"mergedAllColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."],"numberCells":[{"number":"30.8","isBolded":false,"associatedRows":["128","64"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP seg","( d ) Effect of the spatial resolution of ground truth","binary mask .","k \u003d 256 .","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"32.6","isBolded":false,"associatedRows":["64","4","Sparse Coding","144","6"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","Num . AP seg"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"33.4","isBolded":false,"associatedRows":["64","4","Sparse Coding","144","6"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"37.1","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.6","isBolded":false,"associatedRows":["256","DCT","400"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP box","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"41.0","isBolded":false,"associatedRows":["64","1","PCA","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"20.2","isBolded":false,"associatedRows":["64","1","Flatten","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"12.5","isBolded":false,"associatedRows":["64","1","PCA"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.6","isBolded":false,"associatedRows":["256","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP box","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"26.7","isBolded":false,"associatedRows":["64","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP seg"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"31.5","isBolded":false,"associatedRows":["128","96"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP seg","( d ) Effect of the spatial resolution of ground truth","binary mask .","k \u003d 256 .","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"33.1","isBolded":false,"associatedRows":["64","3","Sparse Coding","144","5"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"35.4","isBolded":false,"associatedRows":["64","1","PCA"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"27.7","isBolded":false,"associatedRows":["64","2","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"30.8","isBolded":false,"associatedRows":["128","64","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","75","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"41.3","isBolded":false,"associatedRows":["64","4","Sparse Coding","144","6"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","AP","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"30.9","isBolded":false,"associatedRows":["128","DCT","300"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"43.4","isBolded":false,"associatedRows":["128","96","Sparse Coding","256"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","75","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"32.4","isBolded":false,"associatedRows":["64","2","Sparse Coding","144","4"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","Num . AP seg"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"31.6","isBolded":false,"associatedRows":["64","1","PCA"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"31.8","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","2"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","Num . AP seg"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"52.3","isBolded":false,"associatedRows":["64","4","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"33.4","isBolded":false,"associatedRows":["128","96","DCT","256"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"20.5","isBolded":false,"associatedRows":["64","1","PCA","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"60.4","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","AP box","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"61.7","isBolded":false,"associatedRows":["128","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","50","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"25.6","isBolded":false,"associatedRows":["64","4","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"43.4","isBolded":false,"associatedRows":["64","3","Sparse Coding","144","5"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"42.8","isBolded":false,"associatedRows":["64","3","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"39.7","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"25.2","isBolded":false,"associatedRows":["64","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP seg"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"43.3","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","2"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.9","isBolded":false,"associatedRows":["128","64","Sparse Coding","144"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP box","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"41.3","isBolded":false,"associatedRows":["128","96","Sparse Coding","256"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP box","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.2","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","AP","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"55.2","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","3"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"60.7","isBolded":false,"associatedRows":["256","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","50","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.4","isBolded":false,"associatedRows":["128","Sparse Coding","300"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP box","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"53.5","isBolded":false,"associatedRows":["64","2","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"55.7","isBolded":false,"associatedRows":["64","2","Sparse Coding","144","4"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"60.1","isBolded":false,"associatedRows":["64","1","DCT","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"32.6","isBolded":false,"associatedRows":["128"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP seg","( d ) Effect of the spatial resolution of ground truth","binary mask .","k \u003d 256 .","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"61.2","isBolded":false,"associatedRows":["128","64","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","50","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"12.0","isBolded":false,"associatedRows":["64","1","Sparse Coding"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"27.7","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"54.8","isBolded":false,"associatedRows":["128","64","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"55.4","isBolded":false,"associatedRows":["128","96","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"43.1","isBolded":false,"associatedRows":["128","96","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","75","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"29.7","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","Num . AP seg"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"33.4","isBolded":false,"associatedRows":["64","1","Flatten"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"55.4","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","2"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"41.0","isBolded":false,"associatedRows":["64","2","Sparse Coding","144","4"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","AP","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"60.1","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"43.4","isBolded":false,"associatedRows":["128","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","75","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"12.8","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"55.9","isBolded":false,"associatedRows":["128","96","DCT","256"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"42.7","isBolded":false,"associatedRows":["128","64","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","75","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"54.7","isBolded":false,"associatedRows":["128","DCT","300"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.2","isBolded":false,"associatedRows":["64","3","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.2","isBolded":false,"associatedRows":["64","4","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"32.1","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","2"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"55.4","isBolded":false,"associatedRows":["256","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"58.8","isBolded":false,"associatedRows":["64","1","Flatten","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"60.8","isBolded":false,"associatedRows":["128","Sparse Coding","300"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","AP box","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.5","isBolded":false,"associatedRows":["128","64","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP box","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"32.3","isBolded":false,"associatedRows":["256"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP seg","( d ) Effect of the spatial resolution of ground truth","binary mask .","k \u003d 256 .","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"32.4","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","3"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"55.3","isBolded":false,"associatedRows":["64","3","Sparse Coding","144","5"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"29.7","isBolded":false,"associatedRows":["64","1","Flatten"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"11.3","isBolded":false,"associatedRows":["64","1","Sparse Coding"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"60.0","isBolded":false,"associatedRows":["64","1","PCA","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"61.3","isBolded":false,"associatedRows":["256","Sparse Coding","400"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","AP box","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"44.7","isBolded":false,"associatedRows":["64","1","Flatten","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"43.0","isBolded":false,"associatedRows":["64","1","det","-","-","-","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"33.1","isBolded":false,"associatedRows":["64","2","Sparse Coding","144","4"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.4","isBolded":false,"associatedRows":["64","1","Flatten","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"29.6","isBolded":false,"associatedRows":["64","4"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP seg"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"55.9","isBolded":false,"associatedRows":["128","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"42.8","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"42.5","isBolded":false,"associatedRows":["64","1","Sparse Coding"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"53.5","isBolded":false,"associatedRows":["64","3","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"43.3","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"27.2","isBolded":false,"associatedRows":["64","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP seg"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"45.2","isBolded":false,"associatedRows":["64","1","PCA","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"61.0","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","3"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","AP box","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"42.8","isBolded":false,"associatedRows":["64","2","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"49.3","isBolded":false,"associatedRows":["64","1","Flatten"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","L"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"42.9","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","3"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.6","isBolded":false,"associatedRows":["64","1","Sparse Coding","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"59.3","isBolded":false,"associatedRows":["64","1","Sparse Coding","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"59.9","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"61.7","isBolded":false,"associatedRows":["64","4","Sparse Coding","144","6"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","AP box","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"61.7","isBolded":false,"associatedRows":["128","96","Sparse Coding","256"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","AP box","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"61.3","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"60.4","isBolded":false,"associatedRows":["64","2","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"6.2","isBolded":false,"associatedRows":["64","1","Sparse Coding"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"22.2","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.0","isBolded":false,"associatedRows":["64","2","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"24.4","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"31.6","isBolded":false,"associatedRows":["128","64","Sparse Coding","144"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"33.4","isBolded":false,"associatedRows":["128","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","75","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"41.3","isBolded":false,"associatedRows":["128","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP box","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"41.8","isBolded":false,"associatedRows":["64","1","Sparse Coding"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"61.2","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","2"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","AP box","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"32.0","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","3"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","Num . AP seg"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"30.9","isBolded":false,"associatedRows":["256","DCT","400"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","Num . AP seg","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"54.5","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","L"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"61.2","isBolded":false,"associatedRows":["64","2","Sparse Coding","144","4"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","AP box","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"43.0","isBolded":false,"associatedRows":["256","Sparse Coding","400"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","75","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"42.8","isBolded":false,"associatedRows":["128","Sparse Coding","300"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","75","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"60.1","isBolded":false,"associatedRows":["64","4","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"39.3","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"60.4","isBolded":false,"associatedRows":["64","3","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"24.6","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"43.3","isBolded":false,"associatedRows":["256","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","75","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"45.4","isBolded":false,"associatedRows":["64","1","DCT","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"61.4","isBolded":false,"associatedRows":["128","96","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","50","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"28.9","isBolded":false,"associatedRows":["64","2"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP seg"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"60.9","isBolded":false,"associatedRows":["64","3","Sparse Coding","144","5"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","AP box","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"31.8","isBolded":false,"associatedRows":["128","96","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","75","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"31.5","isBolded":false,"associatedRows":["128","64","DCT","144"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","Num . AP seg","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"53.5","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"32.6","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"31.0","isBolded":false,"associatedRows":["128","DCT","300"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","Num . AP seg","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"52.7","isBolded":false,"associatedRows":["64","1","PCA"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","L"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"32.8","isBolded":false,"associatedRows":["256","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","75","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"32.6","isBolded":false,"associatedRows":["128","96","DCT","256"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","Num . AP seg","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"42.4","isBolded":false,"associatedRows":["64","4","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","M","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","with mask vector loss and ?vec \u003d 3 , n","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"32.3","isBolded":false,"associatedRows":["64","3","Sparse Coding","144","5"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","Num . AP seg"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"30.2","isBolded":false,"associatedRows":["256","DCT","400"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"20.6","isBolded":false,"associatedRows":["64","1","det","-","-","-","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.7","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","3"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","AP","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"52.1","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"28.4","isBolded":false,"associatedRows":["64","3","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"39.4","isBolded":false,"associatedRows":["64","1","det","-","-","-","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"41.3","isBolded":false,"associatedRows":["64","1","DCT","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"43.4","isBolded":false,"associatedRows":["64","4","Sparse Coding","144","6"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"51.0","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"53.4","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","AP","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"20.7","isBolded":false,"associatedRows":["64","1","DCT","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"55.9","isBolded":false,"associatedRows":["64","4","Sparse Coding","144","6"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"0.7","isBolded":false,"associatedRows":[],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","? vec"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"55.1","isBolded":false,"associatedRows":["256","DCT","400"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"43.5","isBolded":false,"associatedRows":["64","2","Sparse Coding","144","4"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"55.5","isBolded":false,"associatedRows":["64","1","det","-","-","-","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"61.3","isBolded":false,"associatedRows":["128","64","Sparse Coding","144"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","AP box","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"43.4","isBolded":false,"associatedRows":["128","64","Sparse Coding","144"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","L","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","k \u003d 256 .","75","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","75"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.7","isBolded":false,"associatedRows":["128","96","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP box","( d ) Effect of the spatial resolution of ground truth","Mask vector loss is enabled in all","k \u003d 256 .","AP"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"55.6","isBolded":false,"associatedRows":["128","64","DCT","144"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP","( e ) Impact of the dimension of mask vector . Mask","vector loss is enabled in all decoder layers . ?vec \u003d","3 and spatial resolution of binary mask N \u003d 128 .","50"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"17.5","isBolded":false,"associatedRows":["64","1","Sparse Coding"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","L"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.8","isBolded":false,"associatedRows":["64","1","Sparse Coding","144","2"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","AP","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"39.6","isBolded":false,"associatedRows":["64","1","DCT"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"44.6","isBolded":false,"associatedRows":["64","1","Sparse Coding","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","M"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"29.7","isBolded":false,"associatedRows":["64","3"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","AP seg"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"0.3","isBolded":false,"associatedRows":[],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","Type","( b ) Affect of adjusting mask vector loss weight .","Mask vector loss is enabled only in the last decoder","k \u003d 256 . Spatial resolution of ground truth","binary mask N \u003d 128 .","? vec"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"11.6","isBolded":false,"associatedRows":["64","1","Flatten"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","seg","S"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"20.6","isBolded":false,"associatedRows":["64","1","Sparse Coding","-","1"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","S"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]},{"number":"40.9","isBolded":false,"associatedRows":["64","3","Sparse Coding","144","5"],"associatedColumns":["( a ) Impact of different binary mask encoding - decoding methods . Flatten means that reshape the 2D","box","AP","( c ) Ablation of the number of decoder stages en -","abling mask vector loss . For example , when stage","is 4 , it means that enable the last 4 decoder layer","with mask vector loss and ?vec \u003d 3 , n","AP box"],"associatedMergedColumns":["binary masks ( 28x28 ) into 1D mask vectors ( 784 ) directly , then optimize with L2 and dice loss jointly ."]}]},{"caption":"Table 4: Performance comparisons under the Boundary-AP metric on COCO 2017 val set. \n\n","rows":["SOLQ","PointRend [ 56 ]","Mask - RCNN [ 2 ]","BMask R - CNN [ 57 ]"],"columns":["AP S","L","M","AP"],"mergedAllColumns":[],"numberCells":[{"number":"18.6","isBolded":false,"associatedRows":["Mask - RCNN [ 2 ]"],"associatedColumns":["AP S"],"associatedMergedColumns":[]},{"number":"33.4","isBolded":false,"associatedRows":["Mask - RCNN [ 2 ]"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"26.4","isBolded":true,"associatedRows":["PointRend [ 56 ]"],"associatedColumns":["L"],"associatedMergedColumns":[]},{"number":"25.2","isBolded":false,"associatedRows":["SOLQ"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"19.1","isBolded":false,"associatedRows":["PointRend [ 56 ]"],"associatedColumns":["AP S"],"associatedMergedColumns":[]},{"number":"34.8","isBolded":false,"associatedRows":["PointRend [ 56 ]"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"19.5","isBolded":false,"associatedRows":["BMask R - CNN [ 57 ]"],"associatedColumns":["AP S"],"associatedMergedColumns":[]},{"number":"22.2","isBolded":false,"associatedRows":["Mask - RCNN [ 2 ]"],"associatedColumns":["L"],"associatedMergedColumns":[]},{"number":"37.5","isBolded":true,"associatedRows":["SOLQ"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"23.9","isBolded":false,"associatedRows":["SOLQ"],"associatedColumns":["L"],"associatedMergedColumns":[]},{"number":"25.4","isBolded":true,"associatedRows":["PointRend [ 56 ]"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"25.4","isBolded":false,"associatedRows":["BMask R - CNN [ 57 ]"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"22.8","isBolded":true,"associatedRows":["SOLQ"],"associatedColumns":["AP S"],"associatedMergedColumns":[]},{"number":"23.1","isBolded":false,"associatedRows":["Mask - RCNN [ 2 ]"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"35.2","isBolded":false,"associatedRows":["BMask R - CNN [ 57 ]"],"associatedColumns":["M"],"associatedMergedColumns":[]},{"number":"26.3","isBolded":false,"associatedRows":["BMask R - CNN [ 57 ]"],"associatedColumns":["L"],"associatedMergedColumns":[]}]},{"caption":"Table 5: Comparisons on parameters, FLOPs and FPS between SQR and UQR. All models are \nevaluated on single Tesla V100 GPU with 512x852 input resolution. \n\n","rows":["41 ( D - DETR ) +1 . 58 ( Mask )","41 ( D - DETR ) +26 . 11 ( Mask )","SQR","UQR"],"columns":["FPS","FLOPs ( G )","AP"],"mergedAllColumns":[],"numberCells":[{"number":"80.13(D-DETR)+44.88(Mask)","isBolded":false,"associatedRows":["SQR","41 ( D - DETR ) +26 . 11 ( Mask )"],"associatedColumns":["FLOPs ( G )"],"associatedMergedColumns":[]},{"number":"37.0","isBolded":false,"associatedRows":["UQR"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"26.3","isBolded":false,"associatedRows":["SQR"],"associatedColumns":["AP"],"associatedMergedColumns":[]},{"number":"80.13(D-DETR)+0.47(Mask)+0.0005(iDCT)","isBolded":false,"associatedRows":["UQR","41 ( D - DETR ) +1 . 58 ( Mask )"],"associatedColumns":["FLOPs ( G )"],"associatedMergedColumns":[]},{"number":"24.1","isBolded":false,"associatedRows":["UQR","41 ( D - DETR ) +1 . 58 ( Mask )"],"associatedColumns":["FPS"],"associatedMergedColumns":[]},{"number":"19.3","isBolded":false,"associatedRows":["SQR","41 ( D - DETR ) +26 . 11 ( Mask )"],"associatedColumns":["FPS"],"associatedMergedColumns":[]}]}]