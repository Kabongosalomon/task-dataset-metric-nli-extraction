<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Attention Networks for Aspect-Level Sentiment Classification</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dehong</forename><surname>Ma</surname></persName>
							<email>madehong@pku.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="laboratory">MOE Key Lab of Computational Linguistics</orgName>
								<orgName type="institution">Peking University</orgName>
								<address>
									<postCode>100871</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sujian</forename><surname>Li</surname></persName>
							<email>lisujian@pku.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="laboratory">MOE Key Lab of Computational Linguistics</orgName>
								<orgName type="institution">Peking University</orgName>
								<address>
									<postCode>100871</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Collaborative Innovation Center for Language Ability</orgName>
								<address>
									<postCode>221009</postCode>
									<settlement>Xuzhou</settlement>
									<region>Jiangsu</region>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaodong</forename><surname>Zhang</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">MOE Key Lab of Computational Linguistics</orgName>
								<orgName type="institution">Peking University</orgName>
								<address>
									<postCode>100871</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Houfeng</forename><surname>Wang</surname></persName>
							<email>wanghf@pku.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="laboratory">MOE Key Lab of Computational Linguistics</orgName>
								<orgName type="institution">Peking University</orgName>
								<address>
									<postCode>100871</postCode>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Collaborative Innovation Center for Language Ability</orgName>
								<address>
									<postCode>221009</postCode>
									<settlement>Xuzhou</settlement>
									<region>Jiangsu</region>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Interactive Attention Networks for Aspect-Level Sentiment Classification</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-26T07:35+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Aspect-level sentiment classification aims at identifying the sentiment polarity of specific target in its context. Previous approaches have realized the importance of targets in sentiment classification and developed various methods with the goal of precisely modeling their contexts via generating target-specific representations. However, these studies always ignore the separate modeling of targets. In this paper, we argue that both targets and contexts deserve special treatment and need to be learned their own representations via interactive learning. Then, we propose the interactive attention networks (IAN) to interactively learn attentions in the contexts and targets, and generate the representations for targets and contexts separately. With this design, the IAN model can well represent a target and its collocative context, which is helpful to sentiment classification. Experimental results on Se-mEval 2014 Datasets demonstrate the effectiveness of our model.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Aspect-level sentiment classification is a fine-grained task in sentiment analysis which aims to identify the sentiment polarity of targets in their context <ref type="bibr" target="#b5">[Pang and Lee, 2008;</ref>. For example, Given the mentioned targets: staff, pizza and beef cubes, and their context sentence "a group of friendly staff, the pizza is not bad, but the beef cubes are not worth the money!", the sentiment polarity for the three targets, staff, pizza and beef cubes, are positive, neutral and negative respectively.</p><p>Aspect-level sentiment classification is a fundamental task in natural language processing and catches many researchers' attention. Traditional approaches mainly focus on designing a set of features such as bag-of-words, sentiment lexicon to train a classifier (e.g., SVM) for aspect-level sentiment classification <ref type="bibr" target="#b1">[Jiang et al., 2011;</ref><ref type="bibr" target="#b6">Perez-Rosas et al., 2012]</ref>. However, feature engineering is labor intensive and almost reaches its performance bottleneck. With the development of deep learning techniques, some researchers have designed effective neural networks to automatically generate useful lowdimensional representations from targets and their contexts and obtain a promising result on the aspect-level sentiment classification task <ref type="bibr" target="#b1">[Dong et al., 2014;</ref><ref type="bibr" target="#b8">Vo and Zhang, 2015;</ref><ref type="bibr" target="#b8">Wang et al., 2016;</ref><ref type="bibr">Tang et al., 2016b]</ref>.</p><p>As Jiang et al. <ref type="bibr">[2011]</ref> point out that 40% of sentiment classification errors are caused by not considering targets in sentiment classification, recent work tends to especially strengthen the effect of targets when modeling the contexts. <ref type="bibr" target="#b1">Dong et al. [2014]</ref> propose an adaptive recursive neural network (RNN) to propagate the sentiments from context words to specific targets based on syntactic relations on tweet data. Vo and Zhang <ref type="bibr">[2015]</ref> separate the whole context into three components, i.e., target, its left context and right context, and then use sentiment lexicon and neural pooling functions to generate the target-dependent features. <ref type="bibr">Tang et al. [2016a]</ref> divide the contexts into left part with target and right part with target and use two long short-term memory (LSTM) models to model the two parts respectively. Then the composed targetspecific representations from both parts are used for sentiment classification. Wang et al. <ref type="bibr">[2016]</ref> design aspect embeddings for targets and concatenate them with word representations to generate the final representations using LSTM networks and attention mechanism.</p><p>The studies above have realized the importance of targets and developed various methods with the goal of precisely modeling contexts via generating target-specific representations. However, they all ignore the separate modeling of targets, especially with the aid of contexts. In our opinion, only the coordination of targets and their contexts can really enhance the performance of sentiment classification. Let us take "The picture quality is clear-cut but the battery life is too short" as an example. When "short" is collocated with "battery life", the sentiment tends to be negative. But when "short" is used with "spoon" in the context "Short fat noodle spoon, relatively deep some curva", the sentiment can be neutral. Then, the next problem is how to simultaneously model targets and contexts precisely. First, target and context can determine representations of each other. For example, when we see the target "picture quality", context word "clear-cut" is naturally associated with the target. And it is vice versa -"picture quality" is first connected with "clear-cut". In such cases, we argue that targets and contexts can be modeled separately but learned from their interaction. Second, our common sense is that the context is composed of many words. In fact, targets are also not limited to only one word. No matter targets or contexts, different words may have different contributions to the final representation. For example, it is easy to know that "picture" plays a more important role in the representation of the target "picture quality" which is described by "clear-cut". Thus, we first propose that both targets and contexts should be computed their attention weights to capture their important information respectively.</p><p>Based on the two points analyzed above, we propose an interactive attention network (IAN) model which is based on long-short term memory networks (LSTM) and attention mechanism. IAN utilizes the attention mechanism associated with a target to get important information from the context and compute context representation for sentiment classification. Further, IAN makes use of the interactive information from context to supervise the modeling of the target which is helpful to judging sentiment. Finally, with both target representation and context representation concatenated, IAN predicts the sentiment polarity for the target within its context. Experiments on SemEval 2014 demonstrate that IAN can precisely model both targets and contexts, and achieve the stateof-the-art performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Model</head><p>In this section, we first introduce the architecture of interactive attention networks (IAN) model for aspect-level sentiment classification. Next, we show the training details of IAN. The overall architecture of IAN model is shown in <ref type="figure">Fig</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Interactive Attention Networks</head><p>The IAN model is composed of two parts which model the target and context interactively. With word embeddings as input, we employ LSTM networks to obtain hidden states of words on the word level for a target and its context respectively. We use the average value of the target's hidden states and the context's hidden states to supervise the generation of attention vectors with which the attention mechanism is adopted to capture the important information in the context and target. With this design, the target and context can influence the generation of their representations interactively. Finally, target representation and context representation are concatenated as final representation which is fed to a softmax function for aspect-level sentiment classification.</p><p>Specifically, let us first formalize the notation. We suppose that a context consists of n words [w 1 c , w 2 c , ..., w n c ] and a target has m words [w 1 t , w 2 t , ..., w m t ]. w denotes a specific word. To represent a word, we embed each word into a lowdimensional real-value vector, called word embedding <ref type="bibr" target="#b0">[Bengio et al., 2003]</ref>. Then, we can get w k ∈ R d from M v×d , where k is the word index in the context or target, d means the embedding dimension and v gives the vocabulary size. Word embeddings can be regarded as parameters of neural networks or pre-trained from proper corpus via language model <ref type="bibr" target="#b0">[Collobert and Weston, 2008;</ref><ref type="bibr" target="#b3">Mikolov et al., 2010;</ref><ref type="bibr" target="#b5">Pennington et al., 2014]</ref>. In our model, we choose the latter strategy.</p><p>Next, we use the LSTM networks to learn the hidden word semantics, since words in a sentence have strong dependence on each other, and LSTM is good at learning long-term dependencies and can avoid gradient vanishing and expansion problems. Formally, given the input word embedding w k , previous cell state c k−1 and previous hidden state h k−1 , the current cell state c k and current hidden state h k in the LSTM networks are updated as:</p><formula xml:id="formula_0">i k = σ(W w i · w k + W h i · h k−1 + b i ) (1) f k = σ(W w f · w k + W h f · h k−1 + b f ) (2) o k = σ(W w o · w k + W h o · h k−1 + b o ) (3) c k = tanh(W w c · w k + W h c · h k−1 + b c ) (4) c k = f k c k−1 + i k ĉ k (5) h k = o k tanh(c k )<label>(6)</label></formula><p>where i, f and o are input gate, forget gate and output gate respectively, which serve to model the interactions between memory cells and their environments. σ means a sigmoid function. W and b denote weight matrices and biases respectively. The symbol · stands for matrix multiplication, and is element-wise multiplication. Then, we get the hidden states [h 1 c , h 2 c , ..., h n c ] as the final word representations for context. To better model target's meaning, we also use LSTM networks to obtain the target's hidden states [h 1</p><p>With the initial representations of context and target as input, we adopt the attention mechanism to select important information contributing to judging sentiment polarity. As Section 1 stated, we consider the influence on the context from the target and the influence on the target from context, which can provide more clues to pay attention to those related sentiment features.</p><p>We take a pair of context and target to describe the attention process, as shown in <ref type="figure" target="#fig_1">Figure 1</ref>. With context word representations [h 1 c , h 2 c , ..., h n c ], the attention mechanism generates the attention vector α i using target representation t avg for context by:</p><formula xml:id="formula_1">α i = exp(γ(h i c , t avg )) n j=1 exp(γ(h j c , t avg ))<label>(9)</label></formula><p>where γ is a score function that calculates the importance of h i c in the context. The score function γ is defined as:</p><formula xml:id="formula_2">γ(h i c , t avg ) = tanh(h i c · W a · t avg T + b a )<label>(10)</label></formula><p>where W a and b a are weight matrix and bias respectively, tanh is a non-linear function and t avg T is the transpose of the t avg .</p><p>Similarly, for the target, we calculate its attention vector β i using context representation c avg by:</p><formula xml:id="formula_3">β i = exp(γ(h i t , c avg )) m j=1 exp(γ(h j t , c avg ))<label>(11)</label></formula><p>where γ is the same as in Eq. 10. After computing the word attention weights, we can get context and target representations c r and t r based on the attention vectors α i and β i by:</p><formula xml:id="formula_4">c r = n i=1 α i h i c (12) t r = m i=1 β i h i t<label>(13)</label></formula><p>Finally, the target representation t r and context representation c r are concatenated as a vector d for a classifier. Here, we use a non-linear layer to project d into the space of the targeted C classes. That is,</p><formula xml:id="formula_5">x = tanh(W l · d + b l )<label>(14)</label></formula><p>where W l and b l are the weight matrix and bias respectively. The probability of labeling document with sentiment polarity</p><formula xml:id="formula_6">i(i ∈ [1, C]) is computed by: y i = exp(x i ) C i=1 exp(x i )<label>(15)</label></formula><p>The label with the highest probability is set as the final result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Model Training</head><p>In IAN, we need to optimize all the parameters notated as Θ which are from LSTM networks:</p><formula xml:id="formula_7">[W w i , W w f , W w o , W w c , W h i , W h f , W h o , W h c , b i , b f , b o , b c ], the attention layers: [W a , b a ],</formula><p>the softmax layer: [W l , b l ] and the word embeddings. Cross entropy with L 2 regularization is used as the loss function, which is defined as:</p><formula xml:id="formula_8">J = − C i=1 g i log(y i ) + λ r ( θ∈Θ θ 2 )<label>(16)</label></formula><p>where g i ∈ R C denotes the ground truth, represented by onehot vector; y i ∈ R C is the estimated probability for each class, computed as in Eq. (15). λ r is the coefficient for L 2 regularization. We use the backpropagation method to compute the gradients and update all the parameters Θ by:</p><formula xml:id="formula_9">Θ = Θ − λ l ∂J(Θ) ∂Θ<label>(17)</label></formula><p>where λ l is the learning rate.</p><p>In order to avoid overfitting, we use dropout strategy to randomly omit half of the feature detectors on each training case. After learning Θ, we test the instance by feeding the target with its contexts into the IAN model, and the label with the highest probability stands for the predicted sentiment polarity of the target.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Experiments</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Experiment Preparation Dataset</head><p>We conduct experiments on SemEval 2014 Task 4 1 to validate the effectiveness of our model. The SemEval 2014 dataset is composed of reviews in two categories: Restaurant and Laptop. The reviews are labeled with three sentiment polarities: positive, neutral and negative.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Evaluation Metric</head><p>To evaluate the performance of aspect-level sentiment classification. we adopt the Accuracy metric, which is defined as:</p><formula xml:id="formula_10">Acc = T N<label>(18)</label></formula><p>where T is the number of correctly predicted samples, N is the total number of samples. Accuracy measures the percentage of correct predicted samples in all samples. Generally, a well performed system has a higher accuracy.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Hyperparameters Setting</head><p>In our experiments, all word embeddings from context and target are initialized by GloVe 2 <ref type="bibr" target="#b5">[Pennington et al., 2014]</ref>, and all out-of-vocabulary words are initialized by sampling from the uniform distribution U (−0.1, 0.1). All weight matrices are given their initial values by sampling from uniform distribution U (−0.1, 0.1), and all biases are set to zeros. The dimensions of word embeddings, attention vectors and LSTM hidden states are set to 300 as in <ref type="bibr" target="#b8">[Wang et al., 2016]</ref>. To train the parameters of IAN, we employ the Momentum <ref type="bibr" target="#b7">[Qian, 1999]</ref>, which adds a fraction γ of the update vector in the prior step to the current update vector. The coefficient of L 2 normalization in the objective function is set to 10 −5 , and the dropout rate is set to 0.5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Model Comparisons</head><p>In order to comprehensively evaluate the performance of IAN, we list some baseline approaches for comparison. The baselines are introduced as follows.</p><p>• Majority is a basic baseline method, which assigns the largest sentiment polarity in the training set to each sample in the test set.</p><p>• LSTM only uses one LSTM network to model the context and get the hidden state of each word. After that, the average value of all the hidden states is regarded as final representation and fed to a softmax function to estimate the probability of each sentiment label <ref type="bibr" target="#b8">[Wang et al., 2016]</ref>.</p><p>• TD-LSTM adopts two long short-term memory (LSTM) networks to model the left context with target and the right context with target respectively. The left and right targetdependent representations are concatenated for predicting the sentiment polarity of the target [Tang et al., 2016a].</p><p>• AE-LSTM represents targets with aspect embeddings. First this method models the context words via LSTM networks and then combine the word hidden states with aspect embeddings to supervise the generation of attention vectors, which are in turn used to produce the final representation for aspect-level sentiment classification <ref type="bibr" target="#b8">[Wang et al., 2016]</ref>.</p><p>• ATAE-LSTM is developed based on AE-LSTM. ATAE-LSTM further strengthens the effect of aspect embeddings and appends the aspect embeddings with each word embedding vector to represent the context. The other design of ATAE-LSTM is the same as AE-LSTM <ref type="bibr" target="#b8">[Wang et al., 2016]</ref>. <ref type="table" target="#tab_1">Table 2</ref> shows the performance comparison of IAN with other baselines. From <ref type="table" target="#tab_1">Table 2</ref>, we can observe that, the Majority method is the worst, meaning the majority sentiment polarity occupies 53.5% and 65.0% of all samples in the Restaurant and Laptop categories respectively. All the other methods are based on LSTM models and better than the Majority method, showing that LSTM has potentials in automatically generating representations and can all bring performance improvement for sentiment classification.</p><p>The LSTM method gets the worst performance of all the neural network baseline methods, because it treats targets equally with other context words and does not make full use of the target information. This also verifies the work of <ref type="bibr" target="#b1">[Jiang et al., 2011]</ref> which points out the importance of targets.</p><p>TD-LSTM outperforms LSTM over 1 percent and 2 percent on the Restaurant and Laptop category respectively, since it develops from the standard LSTM and processes the left and right contexts with targets. As we know, targets are twice represented and in some sense are specifically focused in the final representation.</p><p>Further, both AE-LSTM and ATAE-LSTM stably exceed the TD-LSTM method because of the introduction of attention mechanism. For AE-LSTM and ATAE-LSTM, they capture important information in the context with the supervision of target and generate more reasonable representations for aspect-level sentiment classification. We can also see that AE-LSTM and ATAE-LSTM further emphasize the modeling of targets via the addition of the aspect embedding, which is also the reason of performance improvement. Compared with AE-LSTM, ATAE-LSTM especially enhance the interaction between the context words and target and thus has a better performance than AE-LSTM.</p><p>Our IAN model takes a further step towards emphasizing the importance of targets through learning target and context representation interactively. We can see that IAN achieves the best performance among all baselines. Compared with ATAE-LSTM model, IAN improves the performance about 1.4% and 3.2% on the Restaurant and Laptop categories respectively. As we know, it is difficult to boost 1 percent of accuracy on sentiment classification. The main reason may be that IAN models the target and context using two connected attention networks which can influence each other. With this design, we can well learn the representations of targets and contexts whose collocation contributes to aspect-level sentiment classification. From <ref type="table" target="#tab_1">Table 2</ref>, targets are progressively emphasized among these methods. The more attentions are paid to targets, the higher accuracy the system achieves. This also inspires our future work to further research the modeling of targets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Analysis of IAN Model</head><p>In this section, we design a series of models to verify the effectiveness of our IAN model. First, we ignore the modeling of targets and design a No-Target model that just uses the context representation. Here we adopt only one LSTM networks with attention mechanism to model the context, where the attention vectors are computed through the averaged value of the target word embeddings. Then, we implement the second model No-Interaction which uses two LSTM networks  to learn the representations of target and context via their own local attentions without any interaction. Next, we design Target2Content which also employs two LSTM networks to learn target and context representations, but only considers to attention context words via target representations. The only difference between Target2Content and IAN is that IAN also adopts attention mechanism when modeling targets. <ref type="table" target="#tab_3">Table 3</ref> shows the performances of all these models. From <ref type="table" target="#tab_3">Table 3</ref>, we can see that the No-Target model achieves worse performances than the IAN model. The results verify that target should be separately modeled and target representations can make contribution to judging the sentiment polarity of a target.</p><p>For the No-Interaction model, it gets the worst result among all the approaches. Compared with Target2Content and IAN, there is no interaction between target and context. Therefore, the interaction between target and content plays a great role in generating better representation for predicting target sentiment. Its results are also worse than No-Target, which may be because the effect of target representation, generated by local attention, is less important than the influence of target information for supervising learning content representation via attention.</p><p>As for Target2Content, it outperforms No-Interaction and is worse than IAN. Compare with IAN, it just learns the target representation via LSTM networks without supervision of context. As stated in Section 1, the collocated context and target can influence each other. That means that the interaction between target and content is critical to classifying target sentiment polarity and unidirectional attentions are not enough to the final representation.</p><p>As we expect, IAN achieves the best performance among all the methods. This is because the IAN model fully considers the effect of the target and the interaction between target and context which makes contributions to the target sentiment classification.</p><p>Furthermore, from <ref type="table" target="#tab_1">Table 2</ref>, we can see that, the improvements on Restaurant category is much less than those on Laptop category. To explain this phenomenon, we analyze these two categories and show the number and ratio of targets distributing in the two categories with respect to the target length (i.e., the word number included in a target), as in <ref type="table" target="#tab_5">Table 4</ref>. From <ref type="table" target="#tab_5">Table 4</ref>, we can see that, the number of instances with 1-word target in Restaurant category is 9% more than that in the Laptop category. This means that Laptop category has more multi-words targets than Restaurant category. In IAN, we model the targets by LSTM networks and interactive attentions. LSTM networks and interactive attention are more effective on modeling long targets than short targets. Conversely, average/max pooling, used in other methods, usu-ally lose more information in modeling long targets compared with shorter target. This demonstrates the effectiveness of separately modeling the targets via LSTM networks and interactive attention.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Case Study</head><p>In this section, we use a review context "the fish is fresh but the variety of fish is noting out of ordinary." and two targets "fish" and "variety of fish" from Restaurant category as a case study. We apply IAN to model the context and target, and get the correct sentiment polarity: negative and positive for two targets respectively. <ref type="figure">Figure 2</ref> visualizes the attention weights on the context and targets computed by IAN. The left figure (a) gives the attention weights for two targets, and the right figure (b) shows the attention weights of the context. Each line presents the corresponding target and context pairs. The deeper color means the higher weight.</p><p>From <ref type="figure">Figure 2</ref>, we can observe that the common words "the" and "of" and punctuation "." are paid little attention by IAN in the context. This verifies our intuition that some common words and punctuations makes little contributions to judging target sentiment polarity. The meaning of the context in the case study should be that the quality of fish is good but the variety of fish has nothing special. Obviously, the words fresh, nothing, out, ordinary play a great role in the sentiment classification of fish and variety of fish, and our model pays much attention on those words as we expect. In addition, IAN also gives attention to the evaluated object: fish and variety of fish. Furthermore, when IAN is applied to the fish, the "attention" of the model is mainly paid to the corresponding target and its real collocation, and little attention is given to the variety of fish and its collocation. The situation is in contrast when judging the target variety of fish.</p><p>For the target variety of fish, variety is the head word, and other words are used to modify the head word. Therefore, "variety" is more important for expressing the target than the other two words "of" and "fish". From <ref type="figure">Figure 2</ref>, we can see that the IAN pays more attention to the word "variety" than to the other words. This means that in our model, a target can provide useful information for its context to tune its attentions, and the context also plays an important role in supervising a target to get its focus. Thus, through the IAN, we can well model targets and contexts separately and interactively, and the concatenated representation of target and context are helpful for the aspect-level sentiment classification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Related Work</head><p>Aspect-level sentiment classification is a branch of sentiment analysis, and its research approaches can be split into two directions: traditional machine learning methods and neural networks methods.</p><p>Aspect-level sentiment classification is typically regarded as text classification problem. Accordingly, text classification methods, such as SVM <ref type="bibr" target="#b5">[Pang et al., 2002]</ref>, can be applied to solve the aspect-level sentiment classification task without consideration of the mentioned target or aspect. Traditional machine learning methods mainly focus on extracting a set of features like sentiment lexicons features and bag-of-word   <ref type="bibr">et al., 2016]</ref>, have achieved a promising result on sentiment analysis. However, the neural network based approaches just make use of the contexts without consideration of targets which also make great contributions to judging the sentiment polarity of target.</p><p>To the best of our knowledge, Jiang et al.</p><p>[2011] first present the importance of targets in sentiment classification and argue that 40% of sentiment classification errors are caused by not considering targets. Later, in order to incorporate targets into a model, <ref type="bibr">Tang et al. [2016a]</ref> develop two target-dependent long short-term memory (LSTM) to model the left and right contexts with target, where the target information is automatically taken into account. In addition, <ref type="bibr">Tang et al. [2016b]</ref> designs deep memory networks which consist of multiple computational layers to integrate the target information. Each layer is a context-and location-based attention model, which first learns the importance/weight of each context word and then utilizes the information to calculate context representation. To take target into account, Wang et al. <ref type="bibr">[2016]</ref> explore the potential correlation of targets and sentiment polarities in aspect-level sentiment classification. In order to capture important information in response to a given target, they design an attention-based LSTM to concentrate on different parts of a sentence when different targets are taken as input.</p><p>As described in Section 1, target can help to attention the closely related part in the context. Therefore, we build an interactive attention network (IAN) model which respectively utilizes the target and context to compute the attention vector and learn the target and context representations. In this way, IAN can well acquire the appropriate final representations for aspect-level sentiment classification compared with other methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>In this paper, we design an interactive attention networks (IAN) model for aspect-level sentiment classification. The main idea of IAN is to use two attention networks to model the target and context interactively. The IAN model can pay close attention to the important parts in the target and context and well generate the representations of target and context. Then, IAN benefits from the target representation which is always ignored in other methods. Experiments on SemEval 2014 verify that IAN can learn effective features for target and content and provide enough information for judging the target sentiment polarity. The case study also shows that IAN can reasonably pay attention to those words which are important to judging the sentiment polarity of targets.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>The overall architecture of IAN.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc>shows the training and test instance numbers in each category.</figDesc><table><row><cell>Dataset</cell><cell cols="4">Positive Train Test Train Test Train Test Neural Negative</cell></row><row><cell cols="3">Restaurant 2164 728 637</cell><cell>196 807</cell><cell>196</cell></row><row><cell>Laptop</cell><cell>994</cell><cell>341 464</cell><cell>169 870</cell><cell>128</cell></row><row><cell></cell><cell cols="3">Table 1: Statistics of SemEval 2014 Dataset.</cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>Comparison with baselines. Accuracy on 3-class prediction about SemEval 2014 Task 4 which includes restaurants and laptops. Best performances are in bold.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 :</head><label>3</label><figDesc>Analysis of Interactive attention Networks.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 4 :</head><label>4</label><figDesc>Statistics of target length on SemEval 2014. Illustration of Attention Weights for Context and Target.<ref type="bibr" target="#b2">Kaji and Kitsuregawa, 2007;</ref><ref type="bibr" target="#b1">Jiang et al., 2011;</ref><ref type="bibr" target="#b6">Perez-Rosas et al., 2012;</ref><ref type="bibr" target="#b4">Mohammad et al., 2013]</ref>. Although these methods achieve a comparable performance, their results highly depend on the effectiveness of the handcraft features which are labor intensive.Recently, kinds of neural networks methods, such as Recursive Neural networks<ref type="bibr" target="#b1">Dong et al., 2014;</ref><ref type="bibr" target="#b6">Qian et al., 2015]</ref>, Recursive Neural Tensor Networks<ref type="bibr" target="#b8">[Socher et al., 2013]</ref>, Recurrent Neural networks<ref type="bibr" target="#b3">[Mikolov et al., 2010;</ref> Tang et al., 2016a], Tree-LSTMs[Tai et al., 2015]  and Hierarchical LSTMs [Ruder</figDesc><table><row><cell>best</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">t , h 2 t , ..., h m t ]. Then, we can get the initial representations of context and target (i.e., c avg and t avg ) by averaging the hidden states.c avg = n i=1 h i c /n (7) t avg = m i=1 h i t /m(8)</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">The detail introduction of this task can be seen at: http://alt.qcri.org/semeval2014/task4/</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">Pre-trained word embedding of GloVe can download from http://nlp.stanford.edu/projects/glove/</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A unified architecture for natural language processing: Deep neural networks with multitask learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>References</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 25th international conference on Machine learning</title>
		<meeting>the 25th international conference on Machine learning</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2003-02" />
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="160" to="167" />
		</imprint>
	</monogr>
	<note>A neural probabilistic language model. journal of machine learning research</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Adaptive recursive neural network for target-dependent twitter sentiment classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Dong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies</title>
		<meeting>the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="151" to="160" />
		</imprint>
	</monogr>
	<note>Proceedings of the 52th Annual Meeting of the Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Building lexicon for sentiment analysis from massive collection of html documents</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kitsuregawa ; Nobuhiro</forename><surname>Kaji</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Masaru</forename><surname>Kitsuregawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the conference on empirical methods in natural language processing</title>
		<meeting>the conference on empirical methods in natural language processing</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="1075" to="1083" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Recurrent neural network based language model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bing</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">;</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mikolov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Interspeech</title>
		<imprint>
			<date type="published" when="2010-01" />
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="1045" to="1048" />
		</imprint>
	</monogr>
	<note>Sentiment analysis and opinion mining</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Nrc-canada: Building the state-of-the-art in sentiment analysis of tweets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohammad</forename></persName>
		</author>
		<idno type="arXiv">arXiv:1308.6242</idno>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Opinion mining and sentiment analysis. Foundations and Trends in Information Retrieval</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee ; Bo</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lillian</forename><surname>Lee ; Bo Pang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lillian</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shivakumar</forename><surname>Vaithyanathan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">; Jeffrey</forename><surname>Pennington</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><surname>Socher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><forename type="middle">D</forename><surname>Manning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Empirical methods in natural language processing</title>
		<meeting>the Conference on Empirical methods in natural language processing</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1532" to="1543" />
		</imprint>
	</monogr>
	<note>Proceedings of the conference on empirical methods in natural language processing</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Learning tag embeddings and tag-specific composition functions in recursive neural network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Perez-Rosas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 53th Annual Meeting of the Association for Computational Linguistics</title>
		<meeting>the 53th Annual Meeting of the Association for Computational Linguistics</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1365" to="1374" />
		</imprint>
	</monogr>
	<note>LREC</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">On the momentum term in gradient descent learning algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ning Qian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural networks</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="145" to="151" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Improved semantic representations from tree-structured long short-term memory networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ravichandran ; Delip</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Deepak</forename><surname>Ravichandran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">;</forename></persName>
		</author>
		<idno type="arXiv">arXiv:1609.02745</idno>
		<idno>arXiv:1503.00075</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th Conference of the European Chapter of the Association for Computational Linguistics</title>
		<editor>Bing Qin, and Ting Liu</editor>
		<meeting>the 12th Conference of the European Chapter of the Association for Computational Linguistics</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="606" to="615" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>IJCAI. and Xiaoyan Zhu. Attention-based lstm for aspect-level sentiment classification. In Proceedings of the conference on empirical methods in natural language processing</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
