<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">ProjectionNet: Learning Efficient On-Device Deep Networks Using Neural Projections</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sujith</forename><surname>Ravi</surname></persName>
							<email>sravi@google.com</email>
							<affiliation key="aff0">
								<orgName type="institution">Google Research</orgName>
								<address>
									<settlement>Mountain View</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">ProjectionNet: Learning Efficient On-Device Deep Networks Using Neural Projections</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-25T22:41+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Deep neural networks have become ubiquitous for applications related to visual recognition and language understanding tasks. However, it is often prohibitive to use typical neural network models on devices like mobile phones or smart watches since the model sizes are huge and cannot fit in the limited memory available on such devices. While these devices could make use of machine learning models running on high-performance data centers with CPUs or GPUs, this is not feasible for many applications because data can be privacy sensitive and inference needs to be performed directly "on" device. We introduce a new architecture for training compact neural networks using a joint optimization framework. At its core lies a novel objective that jointly trains using two different types of networks-a full trainer neural network (using existing architectures like Feed-forward NNs or LSTM RNNs) combined with a simpler "projection" network that leverages random projections to transform inputs or intermediate representations into bits. The simpler network encodes lightweight and efficient-to-compute operations in bit space with a low memory footprint. The two networks are trained jointly using backpropagation, where the projection network learns from the full network similar to apprenticeship learning. Once trained, the smaller network can be used directly for inference at low memory and computation cost. We demonstrate the effectiveness of the new approach at significantly shrinking the memory requirements of different types of neural networks while preserving good accuracy for several visual recognition and text classification tasks. We also study the question "how many neural bits are required to solve a given task?" using the new framework and show empirical results contrasting model predictive capacity (in bits) versus accuracy on several datasets. Finally, we show how the approach can be extended to other learning settings and derive projection models optimized using graph structured loss functions.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Recent advances in deep neural networks have resulted in powerful models that demonstrate high predictive capabilities on a wide variety of tasks from image classification <ref type="bibr" target="#b0">[1]</ref> to speech recognition <ref type="bibr" target="#b1">[2]</ref> to sequence-to-sequence learning <ref type="bibr" target="#b2">[3]</ref> for natural language applications like language translation <ref type="bibr" target="#b3">[4]</ref>, semantic conversational understanding <ref type="bibr" target="#b4">[5]</ref> and other tasks. These networks are typically large, comprising multiple layers involving many parameters, and trained on large amounts of data to learn useful representations that can be used to predict outputs at inference time. For efficiency reasons, training these networks is often performed with high-performance distributed computing involving several CPU cores or graphics processing units (GPUs).</p><p>In a similar vein, applications running on devices such as mobile phones, smart watches and other IoT devices are on the rise. Increasingly, machine learning models are used to perform real-time inference directly on these devices-e.g., speech recognition on mobile phones <ref type="bibr" target="#b5">[6]</ref>, medical devices to provide real-time diagnoses <ref type="bibr" target="#b6">[7]</ref> and Smart Reply on watches <ref type="bibr" target="#b7">[8]</ref>, among others. However, unlike high-performance clusters running on the cloud, these devices operate at low-power consumption modes and have significant memory limitations. As a result, running state-of-the-art deep learning models for inference on these devices can be very challenging and often prohibitive due to the high computation cost and large model size requirements that exceed device memory capacity. Delegating the computation-intensive operations from device to the cloud is not a feasible strategy in many real-world scenarios due to connectivity issues (data cannot be sent to the server) or privacy reasons (certain types of data and processing needs to be restricted to a user's personal device). In such scenarios, one solution is to take an existing trained neural network model and then apply compression techniques like quantization (e.g., reducing floating point precision <ref type="bibr" target="#b8">[9]</ref>) to reduce model size. However, while these techniques are useful in some cases, applying them post-learning to a complex neural network tends to dilute the network's predictive quality and does not yield sufficiently high performance. An alternate strategy is to train small models for on-device prediction tasks, but these can lead to significant drop in accuracies <ref type="bibr" target="#b9">[10]</ref> which limits the usability of such models for practical applications. In particular, feature or vocabulary pruning techniques commonly applied to limit parameters in models like recurrent neural networks, while yielding lower memory footprint, can affect the predicitive capacity of the network for language applications. This motivates the learning of efficient on-device machine learning models with low memory footprint that can be run directly on device for inference at low computation cost.</p><p>Contributions. In this paper, we propose a joint learning framework based on neural projections to learn lightweight neural network models for performing efficient inference on device.</p><p>• The neural projection framework can leverage any existing deep network like feed-forward or recursive neural network to teach a lightweight projected model in a joint optimization setup which is trained end-to-end using backpropagation. We use projections based on locality sensitive hashing to represent the hidden units for the lightweight network which encodes operations that are extremely efficient to compute during inference (Section 3).</p><p>• The framework permits efficient distributed training but is optimized to produce a neural network model with low memory footprint that can run on devices at low computation cost. The model size is parameterized and configurable based on the task or device capacity.</p><p>• We demonstrate the effectiveness of the new approach in achieving significant reduction in model sizes while providing competitive performance on multiple visual and language classification tasks (Section 4).</p><p>• The proposed framework is further used to study and characterize the predictive capacity of existing deep networks in terms of the number of neural projection bits required to represent them compactly (Section 5).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>There have been a number of related works in the literature that attempt to learn efficient models under limited size or memory constraints. Some of these works employ techniques ranging from simple dictionary lookups to feature pruning <ref type="bibr" target="#b10">[11]</ref> or hashing <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b13">14]</ref> to neural network compression. In the past, researchers have proposed different methods to achieve compact representations for neural networks using reduced numerical precision <ref type="bibr" target="#b8">[9]</ref>, vector quantization <ref type="bibr" target="#b14">[15]</ref>, binarization strategies for networks <ref type="bibr" target="#b15">[16]</ref> or weight sharing <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b17">18]</ref>. Most of these methods aim to exploit redundancy in the network weights by grouping connections using low-rank decomposition or hashing tricks. In contrast, our work proposes to learn a simple projection-based network that efficiently encodes intermediate network representations (i.e., hidden units) and operations involved, rather than the weights. We also introduce a new training paradigm for on-device models where the simple network is coupled and jointly trained to mimic an existing deep network that is flexible and can be customized by architecture or task. As we show in Section 3.1, the specifics of the training process can also include a choice to optimize towards soft targets as in model distillation approaches <ref type="bibr" target="#b18">[19]</ref>.</p><p>Dropouts <ref type="bibr" target="#b19">[20]</ref> and other similar variants commonly used in practice for deep learning attempt to reduce parameters during neural network training by dropping unimportant neurons. However, they serve a different purpose, namely for better regularization.</p><p>[21] offers a survey of binary hashing literature that is relevant to the projection functions used in our work. The coupled network training architecture proposed in this paper (described in Section 3.1) also resembles, conceptually at a high level, generative adversarial networks (GANs) <ref type="bibr" target="#b21">[22]</ref> which are used in unsupervised learning settings to reconstruct or synthesize data such photorealistic images.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Neural Projection Networks</head><p>In this section, we present Neural Projection Networks, a joint optimization framework for training neural networks with reduced model sizes. We first introduce the objective function using a coupled full+projection network architecture and then describe the projection mechanism used in our work, namely locality sensitive hashing (LSH) and how it is applied here.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">ProjectionNets</head><p>Neural networks are a class of non-linear models that learn a mapping from inputs x i to outputs y i , where x i represents an input feature vector or sequence (in the case of recursive neural networks) and y i is an output category for classification tasks or a predicted sequence. Typically, these networks consist of multiple layers of hidden units or neurons with connections between a pair of layers. For example, in a fully-connected feed-forward neural network, the number of weighted connections or network parameters that are trained is O(n 2 ), where n is the number of hidden units per layer. Notation: x i represents the input feature vector, y i the ground-truth, y i the prediction from the full network and y p i the prediction from projection network. P 1 ...P T denote the T projection functions that transform the input x i into d-bit vectors, one per function. W θ , B θ and W p , B p represent the weights/bias parameters for the trainer network and projection network, respectively. The training objective optimizes a combination of NN loss L θ (.) and projection loss L p (.) that biases the projection network to mimic and learn from the full trainer network. The objective also incorporates a labeled loss L p for the projection network.</p><p>We propose a new objective and joint optimization framework for training compact on-device models for inference. The architecture uses a trainer network coupled with a projection network and trains them jointly. <ref type="figure" target="#fig_0">Figure 1</ref> illustrates the Neural Projection Network architecture using a feedforward NN for the trainer network. The coupled networks are jointly trained to optimize a combined loss function:</p><formula xml:id="formula_0">L(θ, p) = λ 1 · L θ (.) + λ 2 · L p (.) + λ 3 · L p (.)<label>(1)</label></formula><p>where L θ (.), L p (.) and L p (.) are the loss functions corresponding to the two networks as defined below.</p><formula xml:id="formula_1">L θ (.) = i∈N D(h θ ( x i ), y i ) L p (.) = i∈N D(h p ( x i ), h θ ( x i )) L p (.) = i∈N D(h p ( x i ), y i )<label>(2)</label></formula><p>N indicates the number of training instances in the dataset, x i represents the input feature vector in a feed-forward network or sequence input in an RNN, and y i refers to the ground-truth output classes used for network training. h θ ( x i ) represents a parameterized representation of the hidden units in the trainer network that transforms x i to an output prediction y i . Similarly, h p ( x i ) represents the projection network parameters that transforms the input to corresponding predictions y p i . We apply softmax activation at the last layer of both networks to compute the predictions y i and y p i . D denotes a distance function that measures the prediction error used in the loss functions. This is decomposed into three parts-trainer prediction error, projection simulation error and projection prediction error. Reducing the first leads to a better trainer network and decreasing the latter in turn learns a better projection network that is simpler but with approximately equivalent predictive capacity. In practice, we use cross-entropy for D(.) in all our experiments. For the projection L p in Equation 2, we follow a distillation approach <ref type="bibr" target="#b18">[19]</ref> to optimize D(.) since it has been shown to yield better generalization ability than a model trained on just the labels y i . λ 1 , λ 2 and λ 3 are hyperparameters that affect the trade-off between these different types of errors. These are tuned on a small heldout development set and in our experiments, we set them to λ 1 = 1.0, λ 2 = 0.1, λ 3 = 1.0.</p><p>Trainer Network (θ). The trainer model is a full neural network (feed-forward, RNN or CNN) whose choice is flexible and depends on the task. <ref type="figure" target="#fig_0">Figure 1</ref> shows a trainer using feed-forward network but this can be swapped with LSTM RNNs (as we show later in Section 4.3) or other deep neural networks. For the network shown in the figure, the activations for h θ (.) in layer l k+1 is computed as follows:</p><formula xml:id="formula_2">A θ l k+1 = σ(W θ l k+1 · A θ l k + B θ l k+1 )<label>(3)</label></formula><p>where σ is the ReLU activation function <ref type="bibr" target="#b22">[23]</ref> applied at each layer except the last and A indicates the computed activation values for hidden units. The number of weights/bias parameters W θ , B θ in this network can be arbitrarily large since this will only be used during the training stage which can be effectively done using high-performance distribtuted computing with CPUs or GPUs.</p><p>Projection Network (p). The projection model is a simple network that encodes a set of efficientto-compute operations which will be performed directly on device for inference. The model itself defines a set of efficient "projection" functions P( x i ) that project each input instance x i to a different space Ω P and then performs learning in this space to map it to corresponding outputs y p i . We use a simplified projection network with few operations as illustrated in <ref type="figure" target="#fig_0">Figure 1</ref>. The inputs x i are transformed using a series of T projection functions P 1 , ..., P T , which is then followed by a single layer of activations.</p><p>x</p><formula xml:id="formula_3">p i = P 1 ( x i ), ..., P T ( x i )<label>(4)</label></formula><formula xml:id="formula_4">y p i = softmax(W p · x p i + B p )<label>(5)</label></formula><p>The projection transformations use pre-computed parameterized functions, i.e., they are not trained during the learning process, and their outputs are concatenated to form the hidden units for subsequent operations. During training, the simpler projection network learns to choose and apply specific projection operations P j (via activations) that are more predictive for a given task. It is possible to stack additional layers connected to the bit-layer in this network to achieve non-linear combinations of projections.</p><p>The projection model is jointly trained with the trainer and learns to mimic predictions made by the full trainer network which has far more parameters and hence more predictive capacity. Once learning is completed, the transform functions P(.) and corresponding trained weights W p , B p from the projection network are extracted to create a lightweight model that is pushed to device. At inference time, the lightweight model and corresponding operations is then applied to a given input x i to generate predictions y p i . The choice of the type of projection matrix P as well as representation of the projected space Ω P in our setup has a direct effect on the computation cost and model size. We propose to leverage an efficient randomized projection method using a modified version of locality sensitive hashing (LSH) to define P(.). In conjunction, we use a bit representation 1 d for Ω P , i.e., the network's hidden units themselves are represented using projected bit vectors. This yields a drastically lower memory footprint compared to the full network both in terms of number and size of parameters. We highlight a few key properties of this approach below:</p><p>• There is no requirement for committing to a preset vocabulary or feature space unlike typical machine learning methods which resort to smaller vocabulary sizes as a scaling mechanism. For example, LSTM RNN models typically apply pruning and use smaller, fixed-size vocabularies in the input encoding step to reduce model complexity. • The proposed learning method scales efficiently to large data sizes and high dimensional spaces. This is especially useful for natural language applications involving sparse high dimensional feature spaces. For dense feature spaces (e.g., image pixels), existing operations like fully-connected layers (or even convolutions) can be efficiently approximated for prediction without relying on a large number of parameters. Such operations can also be applied in conjunction with the projection functions to yield more complex projection networks while constraining the memory requirements. • Computation of P(x i ) is independent of the training data size.</p><p>• We ensure that P(.) is efficient to compute on-the-fly for inference on device.</p><p>Next, we describe the projection method and associated operations in more detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Locality Sensitive Projection Network</head><p>The projection network described earlier relies on a set of transformation functions P that project the input x i into hidden unit representations Ω P . The projection operations outlined in <ref type="bibr">Equation 4</ref> can be performed using different types of functions. One possibility is to use feature embedding matrices pre-trained using word2vec <ref type="bibr" target="#b23">[24]</ref> or similar techniques and model P as a embedding lookup for features in x i followed by an aggregation operation such as vector averaging. However, this requires storing the embedding matrices which incurs additional memory complexity.</p><p>Instead, we employ an efficient randomized projection method for this step. We use locality sensitive hashing (LSH) <ref type="bibr" target="#b24">[25]</ref> to model the underlying projection operations. LSH is typically used as a dimensionality reduction technique for applications like clustering <ref type="bibr" target="#b25">[26]</ref>. Our motivation for using LSH within Projection Nets is that it allows us to project similar inputs x i or intermediate network layers into hidden unit vectors that are nearby in metric space. This allows us to transform the inputs and learn an efficient and compact network representation that is only dependent on the inherent dimensionality (i.e., observed features) of the data rather than the number of instances or the dimensionality of the actual data vector (i.e., overall feature or vocabulary size). We achieve this with binary hash functions <ref type="bibr" target="#b24">[25]</ref> for P. Theorem 1 For x i , x j ∈ R n and vectors P k drawn from a spherically symmetric distribution on R n the relation between signs of inner products and the angle ( x i , x j ) between vectors can be expressed as follows:</p><formula xml:id="formula_5">( x i , x j ) = π Pr{sgn[ x i , P k ] = sgn[ x j , P k ]}<label>(6)</label></formula><p>This property holds from simple geometry <ref type="bibr" target="#b24">[25]</ref>, i.e., whenever a row vector from the projection matrix P falls inside the angle between the unit vectors in the directions of x i and x j , they will result in opposite signs. Any projection vector that is orthogonal to the plane containing x i x j will not have an effect. Since inner products can be used to determine parameter representations that are nearby, x i , x j = || x i || · || x j || · cos ( x i , x j ), therefore we can model and store the network hidden activation unit vectors in an efficient manner by using the signature of a vector in terms of its signs.</p><p>Computing Projections. Following the above property, we use binary hashing repeatedly and apply the projection vectors in P to transform the input x i to a binary hash representation denoted by</p><formula xml:id="formula_6">P k ( x i ) ∈ {0, 1} d , where [P k ( x i )] := sgn[ x i , P k ].</formula><p>This results in a d-bit vector representation, one bit corresponding to each projection row P k=1...d .</p><p>The projection matrix P is fixed prior to training and inference. Note that we never need to explicitly store the random projection vector P k since we can compute them on the fly using hash functions rather than invoking a random number generator. In addition, this also permits us to perform projection operations that are linear in the observed feature size rather than the overall feature size which can be prohibitively large for high-dimensional data, thereby saving both memory and computation cost. The binary representation is signficant since this results in a significantly compact representation for the projection network parameters that in turn reduces the model size considerably compared to the trainer network.</p><p>Note that other techniques like quantization or weight sharing <ref type="bibr" target="#b8">[9]</ref> can be stacked on top of this method to provide small further gains in terms of memory reduction.</p><p>Projection Parameters. In practice, we employ T different projection functions P j=1...T as shown in <ref type="figure" target="#fig_0">Figure 1</ref>, each resulting in d-bit vector that is concatenated to form the projected activation units x p i in Equation <ref type="bibr" target="#b3">4</ref>. T and d vary depending on the projection network parameter configuration specified for P and can be tuned to trade-off between prediction quality and model size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Training and Inference</head><p>We use the compact bit units to represent the projection network as described earlier. During training, this network learns to move the gradients for points that are nearby to each other in the projected bit space Ω P in the same direction. The direction and magnitude of the gradient is determined by the trainer network which has access to a larger set of parameters and more complex architecture. The two networks are trained jointly using backpropagation. Despite the joint optimization objective, training can progress efficiently with stochastic gradient descent with distributed computing on high-performance CPUs or GPUs.</p><p>Once trained, the two networks are de-coupled and serve different purposes. The trainer model can be deployed anywhere a standard neural network is used. The simpler projection network model weights along with transform functions P(.) are extracted to create a lightweight model that is pushed to device. This model is used directly "on" device at inference time by applying the same operations in Equations 4, 5 (details described in Sections 3.1, 3.2) to a new input x i and generate predictions y p i . Complexity. The overall complexity for inference is O(n·T ·d), where n is the observed feature size (*not* overall vocabulary size) which is linear in input size, d is the number of LSH bits specified for each projection vector P k , and T is the number of projection functions used in P. The model size (in terms of number of parameters) and memory storage required for the projector inference model in this setup is O(T · d).</p><p>Other Extensions. It is possible to extend the proposed framework to handle more than one type of trainer or projection network and even simultaneously train several models at multiple resolutions using this architecture We leave this for future work.</p><p>As an alternative to the bit vector representation Ω P , the projection matrix P can instead be used to generate a sparse representation of hidden units in the projection network. Each d-bit block can be encoded as an integer instead of a bit vector. This results in a larger parameter space overall O(T · 2 d ) but can still be beneficial to applications where the actual number of learned parameters is tiny and inference can be performed via efficient sparse lookup operations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Experiments</head><p>In this section we demonstrate the effectiveness of the proposed approach with several experiments on different benchmark datasets and classification tasks involving visual recognition and language understanding. The experiments are done using a TensorFlow implementation <ref type="bibr" target="#b26">[27]</ref>.</p><p>Baselines and Method. We compare ProjectionNets at different model sizes with full-sized deep neural network couterparts for each task. The deep network architecture varies depending on the task type-feed-forward network are employed for visual tasks whereas recursive neural networks (LSTMs) are used for language understanding task. In each case, the full neural network model used as baseline is also employed as trainer network to learn the small-sized ProjectionNets. Evaluation. For each task, we compute the performance of each model in terms of precision at different ranks K, i.e., accuracy % within the top K predicted output classes. Models were trained using multiple runs, each experiment was run for a fixed number of (400k) time steps with a batch size of 200 for the visual tasks and 100 for the text classification task. The observed variance across runs wrt accuracy was small, around ±0.1%.</p><p>We also compute the Compression Ratio = # parameters in Baseline deep network # parameters in proposed model achieved by varying-sized models compared to the baseline deep network model.</p><p>The model size ratios reported here are based on number of free parameters and not wrt actual model size stored on disk. Note that this is slightly unfair to the ProjectionNet models and overlooks some of its advantage since the internal bit representations are far more efficient to store compactly on disk than standard neural network representations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">MNIST Handwritten Digit Classification</head><p>We compare the performance of different approaches using the original MNIST handwritten digit dataset <ref type="bibr" target="#b27">[28]</ref>. The dataset contains 60k instances for training and 10k instances for testing. We hold out 5k instances from the training split as dev set for tuning system parameters.</p><p>For the baseline and trainer network, we use a feed-forward NN architecture (3 layers, 1000 hidden units per layer) with L2-regularization. <ref type="table" target="#tab_0">Table 1</ref> shows results of the baseline and comparison to ProjectionNet models with varying sizes <ref type="figure">(T, d)</ref>. The results demonstrate that a tiny ProjectionNet with a remarkably high compression ratio of 388x is able to achieve a high accuracy of 92.3% compared to 98.9% for the baseline that is significantly larger in memory footprint. Moreover, ProjectionNet models are able to achieve even further reduction in model size (upto 2000x-3500x) while yielding around 70-80% precision for top-1 and 90-94% precision among top-3 predictions.</p><p>Going deeper with projections: Furthermore, going deeper with the projection network architecture (i.e., adding more layers) improves prediction performance even though it adds more parameters, overall size still remains significantly small compared to the baseline model. For example, a single-layer ProjectionNet with T = 60, d = 10 produces an accuracy of 91.1% whereas a 2-layer deep ProjectionNet with the same projection layer followed by a fully connected layer (128 hidden units) improves the accuracy considerably to 96.3%, yielding a gain of +5.2%. A stacked Projec-tionNet with slightly more parameters further improves the accuracy to 97.1%, very close to the baseline performance at a 13x reduction in size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Different training objectives:</head><p>The training objective can be varied by removing specific loss components from Equation 1. We observe that using the joint architecture helps significantly and results in the best performance. The ProjectionNet [T = 60, d = 12] from <ref type="table" target="#tab_0">Table 1</ref> achieves 92.3%. The same ProjectionNet trained without the full joint objective does worse, ∼91% when trained using L p alone or using only L θ + L p . We also trained smaller baseline neural networks with fewer layers and parameters for comparison and observed that ProjectionNets achieve far higher compression ratios at similar performance levels. The same trend follows when comparing against other simpler regularized linear baseline methods which perform far worse and produce accuracies comparable or worse than projection networks trained in isolation without the joint architecture. We notice that on more complex problems involving large output space, pre-training the trainer network and then performing joint training helps the projection net converge faster to a good performance. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">CIFAR-100 Image Classification</head><p>Next we evaluate the proposed approach on the CIFAR-100 <ref type="bibr" target="#b28">[29]</ref> image classification task. The CIFAR-100 training dataset consists of 50k 32x32 color images in 100 classes, each with 500 im-ages. Each image is tagged with a fine-grained class that it belongs to (e.g., dolphin, seal, tulips, orchids). The test dataset comprises of a separate 10k images, with 100 images per class.</p><p>This task is much harder than MNIST digit classification. Our goal for this setup is not an attempt to build a new image recognition system and outperform existing state-of-the-art which would require a lot of complex task-specific architecture customizations and convolution operations. Instead, we aim to train a standard deep neural network for this task and contrast it with various ProjectionNets to determine how much compression can be achieved and at what quality trade-off compared to the baseline.</p><p>We use a feed-forward NN architecture (3 layers, 1000 hidden units per layer) for the baseline and trainer network. <ref type="table" target="#tab_1">Table 2</ref> shows results comaprisons between ProjectionNets and the baseline. As mentioned, this task is more complex than MNIST hence precision numbers are lower. However, we observe that a ProjectionNet model [T=60, d=12] is able to achieve more than 70x model compression with 33% relative reduction in precision@5 compared to the baseline. The model size can be further reduced, upto 430x [T=10,d=12], while incurring an overall 42% relative reduction in precision@5. On the other hand, a deeper projection network significantly reduces this performance gap to just 24% while achieving a 49x model compression rate. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Semantic Intent Classification</head><p>We compare the performance of the neural projection approach for training RNN sequence models (LSTM) for a semantic intent classification task as described in the recent work on SmartReply <ref type="bibr" target="#b4">[5]</ref> for automatically generating short email responses. One of the underlying tasks in SmartReply is to discover and map short response messages to semantic intent clusters. <ref type="bibr" target="#b0">1</ref> We choose 20 intent classes and created a dataset comprised of 5,483 samples <ref type="bibr" target="#b2">(3,</ref><ref type="bibr">832</ref> for training, 560 for validation and 1,091 for testing). Each sample instance corresponds to a short response message text paired with a semantic intent category that was manually verified by human annotators. For example, "That sounds awesome!" and "Sounds fabulous" belong to the sounds good intent cluster.</p><p>We use an RNN sequence model with multilayer LSTM architecture (2 layers, 100 dimensions) as the baseline and trainer network. The LSTM model and its ProjectionNet variant are also compared against other baseline systems-Random baseline ranks the intent categories randomly and Frequency baseline ranks them in order of their frequency in the training corpus. We show in table 3 that a ProjectionNet trained using LSTM RNNs achieves 82.3% precision@1, only 15% relative drop compared to the baseline LSTM but with significant reduction in memory footprint and computation (compared to LSTM unrolling steps). At higher ranks, the ProjectionNets achieve very high accuracies (90+%) close to the baseline LSTM performance. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Computing Model Predictability in Neural Bits</head><p>We further study the notion of predictability of deep neural networks in the context of neural projections. More specifically, using the ProjectionNet framework described in Section 3.1, we formulate the questions: "How many neural bits are required to solve a given task?" "How many bits are required to capture the predictive power of a given deep neural network?"</p><p>These motivate a series of studies on the different datasets. We show empirical results to answer these by computing the number of bits encoded in the projection network (Section 3.1) used in each task. Since the projection neural network architecture is represented in bits (i.e., output of projection operations result in bit vectors) and we only use a single layer of projections in our experiments, we can compute the total number of bits required to represent a specific ProjectionNet model. If we compare this to the accuracy achieved on a given task by applying the projection network alone for inference, this helps answers the first question.</p><p>On the visual recognition task for MNIST (Section 4.1), 80-100 neural projection bits are enough to solve the task with 70-80% accuracy, and increasing this to 720 bits achieves 92.3% precision which is further improved by using a deeper projection network. For the language task of semantic classification (Section 4.3) involving sequence input, 720 neural projection bits are required to achieve a top-1 accuracy of 82.3%. To answer the second question, we use a given deep neural network (e.g, feed-forward NN) with specified configuration to model the full trainer network in the framework described in Section 3. We then use this to train a corresponding neural projection network with hidden bit representations. Finally, we compute the number of neural projection bits used in the second network that simulates the trainer and plot this value against the predictive quality ratio, which is defined as the ratio of accuracies achieved by separately performing inference with simple versus full network on a given task. <ref type="figure" target="#fig_1">Figure 2</ref> shows this plot for the MNIST and CIFAR-100 tasks. The plot shows that the predictive power of a 3-layer feed-forward network with 3-5M parameters can be succinctly captured to a high degree (ratio=∼0.8) with a simple 100-bit ProjectionNet for MNIST classification and just 720 bits are required to recover more than 90% of the base deep network quality. On more complex image recognition tasks that involve larger output classes, a higher number of bits are required to represent a trainer deep network with the same architecture. For example, on the CIFAR-100 task, we observe that a 3-layer feed-forward network can be projected onto 720 neural bits at a predictive ratio of 0.5. However, we also notice a steep increase in predictive ratio moving from 120 to 720 neural bits. We expect a similar trend at even higher bit sizes and on more complex tasks. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Discussion and Future Work</head><p>We introduced a new Neural Projection approach to train lightweight neural network models for performing efficient inference on device at low computation and memory cost. We demonstrated the flexibility of this approach to variations in model sizes and deep network architectures. Experimental results on different visual and language classification tasks show the effectiveness of this method in achieving significant model size reductions and efficient inference while providing competitive performance. We also revisited the question of predictability of deep networks and study this in the context of neural bit projections. Notation for trainer graph: x i represents an input node and x j , x k represent its neighborhood N ( x i ) in the original graph G = (V, E). E refers to edges and V = V l ∪ V u the nodes in this graph, where V l indicates labeled nodes (red, green) and V u the unlabeled nodes (grey). y i indicates the ground-truth corresponding to a labeled node x i ∈ V l , with red, green colors indicating different output values for y i . If V = V l , the graph is trained in a supervised manner whereas V l ⊂ V ; V u = ∅ yields a semi-supervised graph learning formulation. Notation for projection graph: Each node x i in the trainer graph G is connected via an edge to a corresponding projection node in G P . The projection nodes are discrete representations of trainer node x i obtained by applying the projection functions P 1 ...P T to the feature vector associated with the trainer node. In addition, G P may also contain intra-projection edges computed using a similarity metric applied to the projection vector representations. For example, we can use Hamming distance H(.) to define a similarity metric 1 − H(.) d between projection nodes represented as d−bit vectors. The training objective optimizes a combination of graph loss L θ (.) and projection loss L p (.) that biases the projection graph to mimic and learn from the full trainer graph. L θ (.) optimizes the trainer's predicted output y i against the ground-truth y i whereas L p (.) optimizes predictions from the projection graph y p i against the neigbhoring trainer predictions y i . A few possible future extensions to the framework are discussed at the end of Section 3. Going beyond deep learning, it is also possible to apply this framework to train lightweight models in other types of learning scenarios. For example, the training paradigm can be changed to a semi-supervised or unsupervised setting. The trainer model itself can be modified to incorporate structured loss functions defined over a graph or probabilistic graphical model instead of a deep neural network. <ref type="figure" target="#fig_2">Figure 3</ref> illustrates an end-to-end projection graph approach to learning lightweight models using a graph optimized loss function which can be trained efficiently using large-scale distributed graph algorithms <ref type="bibr" target="#b29">[30]</ref> or even neural graph approaches <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b31">32]</ref>. The projection model training can also be further extended to scenarios involving distributed devices using complementary techniques <ref type="bibr" target="#b32">[33]</ref>. We leave these explorations as future work.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Illustration of a Neural Projection Network trained using feed-forward NN.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Comparing predictive power of deep neural networks using neural projection bits on different visual classification tasks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Illustration of a Projection Graph trained using graph learning algorithms.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Results for MNIST Classification using Neural Projection Nets and baselines.</figDesc><table><row><cell>Model</cell><cell cols="4">Compression Ratio Precision@1 Precision@3 Precision@5</cell></row><row><cell>NN</cell><cell>1</cell><cell>98.9</cell><cell>99.9</cell><cell>100.0</cell></row><row><cell>ProjectionNet</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>[T = 8, d = 10]</cell><cell>3453</cell><cell>70.6</cell><cell>89.6</cell><cell>96.5</cell></row><row><cell>[T = 10, d = 12]</cell><cell>2312</cell><cell>76.9</cell><cell>93.9</cell><cell>98.1</cell></row><row><cell>[T = 60, d = 10]</cell><cell>466</cell><cell>91.1</cell><cell>98.7</cell><cell>99.6</cell></row><row><cell>[T = 60, d = 12]</cell><cell>388</cell><cell>92.3</cell><cell>99.0</cell><cell>99.6</cell></row><row><cell>[T = 60, d = 10] + FullyConnected [128 units]</cell><cell>36</cell><cell>96.3</cell><cell>99.5</cell><cell>99.9</cell></row><row><cell>[T = 60, d = 12] + FullyConnected [256 units]</cell><cell>15</cell><cell>96.9</cell><cell>99.7</cell><cell>99.9</cell></row><row><cell>[T = 70, d = 12] + FullyConnected [256 units]</cell><cell>13</cell><cell>97.1</cell><cell>99.8</cell><cell>99.9</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>Results for CIFAR-100 Image Classification using Neural Projection Nets and baselines.</figDesc><table><row><cell>Model</cell><cell cols="3">Precision@1 Precision@3 Precision@5</cell></row><row><cell>NN</cell><cell>32.9</cell><cell>50.2</cell><cell>58.6</cell></row><row><cell>ProjectionNet</cell><cell></cell><cell></cell><cell></cell></row><row><cell>[T = 10, d = 12]</cell><cell>12.8</cell><cell>25.2</cell><cell>33.8</cell></row><row><cell>[T = 60, d = 12]</cell><cell>17.8</cell><cell>30.1</cell><cell>39.2</cell></row><row><cell>[T = 60, d = 12] + FullyConnected [128 units]</cell><cell>20.8</cell><cell>35.6</cell><cell>44.8</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 :</head><label>3</label><figDesc>Results for Semantic Intent Classification using Neural Projection Nets and baselines.</figDesc><table><row><cell>Model</cell><cell cols="3">Precision@1 Precision@3 Precision@5</cell></row><row><cell>Random</cell><cell>5.2</cell><cell>15.0</cell><cell>27.0</cell></row><row><cell>Frequency</cell><cell>9.2</cell><cell>27.5</cell><cell>43.4</cell></row><row><cell>LSTM</cell><cell>96.8</cell><cell>99.2</cell><cell>99.8</cell></row><row><cell>LSTM-ProjectionNet</cell><cell></cell><cell></cell><cell></cell></row><row><cell>[T = 60, d = 12]</cell><cell>82.3</cell><cell>93.5</cell><cell>95.5</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">For details regarding SmartReply and how the semantic intent clusters are generated, refer<ref type="bibr" target="#b4">[5]</ref>.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Imagenet classification with deep convolutional neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Krizhevsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1097" to="1105" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Hinton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">E</forename><surname>Dahl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mohamed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Jaitly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Senior</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Vanhoucke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">N</forename><surname>Sainath</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Signal Processing Magazine</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="82" to="97" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Sequence to sequence learning with neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><forename type="middle">V</forename><surname>Le</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="3104" to="3112" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Neural machine translation by jointly learning to align and translate</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bahdanau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<idno>abs/1409.0473</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Smart reply: Automated response suggestion for email</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kannan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Kurach</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ravi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kaufmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tomkins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Miklos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Lukacs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ganea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Young</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Ramavajjala</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM SIGKDD Conference on Knowledge Discovery and Data Mining (KDD)</title>
		<meeting>the ACM SIGKDD Conference on Knowledge Discovery and Data Mining (KDD)</meeting>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Speech recognition for mobile devices at google</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schuster</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 11th Pacific Rim International Conference on Trends in Artificial Intelligence, PRICAI&apos;10</title>
		<meeting>the 11th Pacific Rim International Conference on Trends in Artificial Intelligence, PRICAI&apos;10<address><addrLine>Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="8" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A low-power processor with configurable embedded machine-learning accelerators for high-order and adaptive analysis of medical-sensor signals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Verma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal of Solid-State Circuits</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="1625" to="1637" />
			<date type="published" when="2013-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Android Wear 2.0: Make the most of every minute</title>
		<ptr target="https://blog.google/products/android-wear/android-wear-20-make-most-every-minute/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Low precision arithmetic for deep learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Courbariaux</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>David</surname></persName>
		</author>
		<idno>abs/1412.7024</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Augmented smartphone applications through clone cloud execution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B.-G</forename><surname>Chun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Maniatis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th Conference on Hot Topics in Operating Systems, HotOS&apos;09</title>
		<meeting>the 12th Conference on Hot Topics in Operating Systems, HotOS&apos;09<address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="8" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Entropy-based pruning of backoff language models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Stolcke</surname></persName>
		</author>
		<idno>cs.CL/0006025</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Feature hashing for large scale multitask learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Weinberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Dasgupta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Langford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Smola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Attenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th Annual International Conference on Machine Learning, ICML &apos;09</title>
		<meeting>the 26th Annual International Conference on Machine Learning, ICML &apos;09<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="1113" to="1120" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Hash kernels for structured data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Petterson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Dror</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Langford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Smola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Vishwanathan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mach. Learn. Res</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="2615" to="2637" />
			<date type="published" when="2009-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Small Statistical Models by Random Feature Mixing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ganchev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dredze</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACL-08: HLT Workshop on Mobile Language Processing</title>
		<meeting>the ACL-08: HLT Workshop on Mobile Language Processing</meeting>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Compressing deep convolutional networks using vector quantization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">D</forename><surname>Bourdev</surname></persName>
		</author>
		<idno>abs/1412.6115</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Binarynet: Training deep neural networks with weights and activations constrained to +1 or -1</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Courbariaux</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<idno>abs/1602.02830</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Predicting parameters in deep learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Denil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shakibi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Dinh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ranzato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>De Freitas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th International Conference on Neural Information Processing Systems, NIPS&apos;13</title>
		<meeting>the 26th International Conference on Neural Information Processing Systems, NIPS&apos;13<address><addrLine>USA</addrLine></address></meeting>
		<imprint>
			<publisher>Curran Associates Inc</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="2148" to="2156" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Compressing neural networks with the hashing trick</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Tyree</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">Q</forename><surname>Weinberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 32nd International Conference on International Conference on Machine Learning</title>
		<meeting>the 32nd International Conference on International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="2285" to="2294" />
		</imprint>
		<respStmt>
			<orgName>JMLR.org</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Distilling the Knowledge in a Neural Network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Hinton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dean</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015-03" />
		</imprint>
	</monogr>
	<note>ArXiv e-prints</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Dropout: A simple way to prevent neural networks from overfitting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Srivastava</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Hinton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Krizhevsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Salakhutdinov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="1929" to="1958" />
			<date type="published" when="2014-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Learning to hash for indexing big data -A survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chang</surname></persName>
		</author>
		<idno>abs/1509.05472</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">J</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Pouget-Abadie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mirza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Warde-Farley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ozair</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Courville</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Generative Adversarial Networks</title>
		<imprint>
			<date type="published" when="2014-06" />
		</imprint>
	</monogr>
	<note>ArXiv e-prints</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Rectified linear units improve restricted boltzmann machines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Nair</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 27th International Conference on Machine Learning</title>
		<editor>J. Frnkranz and T. Joachims</editor>
		<meeting>the 27th International Conference on Machine Learning</meeting>
		<imprint>
			<publisher>Omnipress</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="807" to="814" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Efficient estimation of word representations in vector space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mikolov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dean</surname></persName>
		</author>
		<idno>abs/1301.3781</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Similarity estimation techniques from rounding algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Charikar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Thiryfourth Annual ACM Symposium on Theory of Computing, STOC &apos;02</title>
		<meeting>the Thiryfourth Annual ACM Symposium on Theory of Computing, STOC &apos;02<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="380" to="388" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Introduction to Information Retrieval</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">D</forename><surname>Manning</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Schütze</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<publisher>Cambridge University Press</publisher>
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">TensorFlow: Large-scale machine learning on heterogeneous systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Abadi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Barham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Brevdo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Citro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">S</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Devin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ghemawat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Harp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Irving</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Isard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Jozefowicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kaiser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kudlur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Levenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mané</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Monga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Moore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Murray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Olah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schuster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shlens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Steiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Talwar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Tucker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Vanhoucke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Vasudevan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Viégas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Warden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wattenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wicke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zheng</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note>Software available from tensorflow.org</note>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">The MNIST database of handwritten digits</title>
		<ptr target="http://yann.lecun.com/exdb/mnist/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">The CIFAR dataset</title>
		<ptr target="http://www.cs.toronto.edu/~kriz/cifar.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Large scale distributed semi-supervised learning using streaming approximation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ravi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Diao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th International Conference on Artificial Intelligence and Statistics</title>
		<meeting>the 19th International Conference on Artificial Intelligence and Statistics</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="519" to="528" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Neural graph machines: Learning neural networks using graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">D</forename><surname>Bui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ravi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Ramavajjala</surname></persName>
		</author>
		<idno>abs/1703.04818</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Revisiting semi-supervised learning with graph embeddings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">W</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Salakhutdinov</surname></persName>
		</author>
		<idno>abs/1603.08861</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Federated optimization: Distributed machine learning for on-device intelligence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Konecný</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">B</forename><surname>Mcmahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ramage</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Richtárik</surname></persName>
		</author>
		<idno>abs/1610.02527</idno>
	</analytic>
	<monogr>
		<title level="j">CoRR</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
