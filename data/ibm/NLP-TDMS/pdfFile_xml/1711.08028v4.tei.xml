<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Recurrent Relational Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rasmus</forename><forename type="middle">Berg</forename><surname>Palm</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ulrich</forename><forename type="middle">Paquet</forename><surname>Deepmind</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ole</forename><surname>Winther</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Technical University of Denmark Tradeshift</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Technical University of Denmark</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Recurrent Relational Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-25T16:35+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper is concerned with learning to solve tasks that require a chain of interdependent steps of relational inference, like answering complex questions about the relationships between objects, or solving puzzles where the smaller elements of a solution mutually constrain each other. We introduce the recurrent relational network, a general purpose module that operates on a graph representation of objects. As a generalization of Santoro et al. [2017]'s relational network, it can augment any neural network model with the capacity to do many-step relational reasoning. We achieve state of the art results on the bAbI textual question-answering dataset with the recurrent relational network, consistently solving 20/20 tasks. As bAbI is not particularly challenging from a relational reasoning point of view, we introduce Pretty-CLEVR, a new diagnostic dataset for relational reasoning. In the Pretty-CLEVR set-up, we can vary the question to control for the number of relational reasoning steps that are required to obtain the answer. Using Pretty-CLEVR, we probe the limitations of multi-layer perceptrons, relational and recurrent relational networks. Finally, we show how recurrent relational networks can learn to solve Sudoku puzzles from supervised training data, a challenging task requiring upwards of 64 steps of relational reasoning. We achieve state-of-the-art results amongst comparable methods by solving 96.6% of the hardest Sudoku puzzles.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>A central component of human intelligence is the ability to abstractly reason about objects and their interactions <ref type="bibr">[Spelke et al., 1995, Spelke and</ref><ref type="bibr" target="#b25">Kinzler, 2007]</ref>. As an illustrative example, consider solving a Sudoku. A Sudoku consists of 81 cells that are arranged in a 9-by-9 grid, which must be filled with digits 1 to 9 so that each digit appears exactly once in each row, column and 3-by-3 non-overlapping box, with a number of digits given 1 . To solve a Sudoku, one methodically reasons about the puzzle in terms of its cells and their interactions over many steps. One tries placing digits in cells and see how that affects other cells, iteratively working toward a solution.</p><p>Contrast this with the canonical deep learning approach to solving problems, the multilayer perceptron (MLP), or multilayer convolutional neural net (CNN). These architectures take the entire Sudoku as an input and output the entire solution in a single forward pass, ignoring the inductive bias that objects exists in the world, and that they affect each other in a consistent manner. Not surprisingly these models fall short when faced with problems that require even basic relational reasoning <ref type="bibr" target="#b11">[Lake et al., 2016</ref><ref type="bibr" target="#b21">, Santoro et al., 2017</ref>.</p><p>The relational network of <ref type="bibr" target="#b21">Santoro et al. [2017]</ref> is an important first step towards a simple module for reasoning about objects and their interactions but it is limited to performing a single relational operation, and was evaluated on datasets that require a maximum of three steps of reasoning (which, surprisingly, can be solved by a single relational reasoning step as we show). Looking beyond relational networks, there is a rich literature on logic and reasoning in artificial intelligence and machine learning, which we discuss in section 5.</p><p>Toward generally realizing the ability to methodically reason about objects and their interactions over many steps, this paper introduces a composite function, the recurrent relational network. It serves as a modular component for many-step relational reasoning in end-to-end differentiable learning systems. It encodes the inductive biases that 1) objects exists in the world 2) they can be sufficiently described by properties 3) properties can change over time 4) objects can affect each other and 5) given the properties, the effects object have on each other is invariant to time.</p><p>An important insight from the work of <ref type="bibr" target="#b21">Santoro et al. [2017]</ref> is to decompose a function for relational reasoning into two components or "modules": a perceptual front-end, which is tasked to recognize objects in the raw input and represent them as vectors, and a relational reasoning module, which uses the representation to reason about the objects and their interactions. Both modules are trained jointly end-to-end. In computer science parlance, the relational reasoning module implements an interface: it operates on a graph of nodes and directed edges, where the nodes are represented by real valued vectors, and is differentiable. This paper chiefly develops the relational reasoning side of that interface.</p><p>Some of the tasks we evaluate on can be efficiently and perfectly solved by hand-crafted algorithms that operate on the symbolic level. For example, 9-by-9 Sudokus can be solved in a fraction of a second with constraint propagation and search <ref type="bibr" target="#b15">[Norvig, 2006]</ref> or with dancing links <ref type="bibr" target="#b10">[Knuth, 2000]</ref>. These symbolic algorithms are superior in every respect but one: they don't comply with the interface, as they are not differentiable and don't work with real-valued vector descriptions. They therefore cannot be used in a combined model with a deep learning perceptual front-end and learned end-to-end.</p><p>Following <ref type="bibr" target="#b21">Santoro et al. [2017]</ref>, we use the term "relational reasoning" liberally for an object-and interaction-centric approach to problem solving. Although the term "relational reasoning" is similar to terms in other branches of science, like relational logic or first order logic, no direct parallel is intended.</p><p>This paper considers many-step relational reasoning, a challenging task for deep learning architectures. We develop a recurrent relational reasoning module, which constitutes our main contribution. We show that it is a powerful architecture for many-step relational reasoning on three varied datasets, achieving state-of-the-art results on bAbI and Sudoku.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Recurrent Relational Networks</head><p>We ground the discussion of a recurrent relational network in something familiar, solving a Sudoku puzzle. A simple strategy works by noting that if a certain Sudoku cell is given as a "7", one can safely remove "7" as an option from other cells in the same row, column and box. In a message passing framework, that cell needs to send a message to each other cell in the same row, column, and box, broadcasting it's value as "7", and informing those cells not to take the value "7". In an iteration t, these messages are sent simultaneously, in parallel, between all cells. Each cell i should then consider all incoming messages, and update its internal state h t i to h t+1 i . With the updated state each cell should send out new messages, and the process repeats.</p><p>Message passing on a graph. The recurrent relational network will learn to pass messages on a graph. For Sudoku, the graph has i âˆˆ {1, 2, ..., 81} nodes, one for each cell in the Sudoku. Each node has an input feature vector x i , and edges to and from all nodes that are in the same row, column and box in the Sudoku. The graph is the input to the relational reasoning module, and vectors x i would generally be the output of a perceptual front-end, for instance a convolutional neural network. Keeping with our Sudoku example, each x i encodes the initial cell content (empty or given) and the row and column position of the cell.</p><p>At each step t each node has a hidden state vector h t i , which is initialized to the features, such that h 0 i = x i . At each step t, each node sends a message to each of its neighboring nodes. We define the message m t ij from node i to node j at step t by <ref type="figure">Figure 1</ref>: A recurrent relational network on a fully connected graph with 3 nodes. The nodes' hidden states h t i are highlighted with green, the inputs x i with red, and the outputs o t i with blue. The dashed lines indicate the recurrent connections. Subscripts denote node indices and superscripts denote steps t. For a figure of the same graph unrolled over 2 steps see the supplementary material.</p><formula xml:id="formula_0">m t ij = f h tâˆ’1 i , h tâˆ’1 j ,<label>(1)</label></formula><formula xml:id="formula_1">h t 1 x 1 o t 1 h t 2 x 2 o t 2 h t 3 x 3 o t 3 m t 12 m t 21 m t 13 m t 31 m t 23 m t 32</formula><p>where f , the message function, is a multi-layer perceptron. This allows the network to learn what kind of messages to send. In our experiments, MLPs with linear outputs were used. Since a node needs to consider all the incoming messages we sum them with</p><formula xml:id="formula_2">m t j = iâˆˆN (j) m t ij ,<label>(2)</label></formula><p>where N (j) are all the nodes that have an edge into node j. For Sudoku, N (j) contains the nodes in the same row, column and box as j. In our experiments, since the messages in (1) are linear, this is similar to how log-probabilities are summed in belief propagation <ref type="bibr" target="#b14">[Murphy et al., 1999]</ref>.</p><p>Recurrent node updates. Finally we update the node hidden state via</p><formula xml:id="formula_3">h t j = g h tâˆ’1 j , x j , m t j ,<label>(3)</label></formula><p>where g, the node function, is another learned neural network. The dependence on the previous node hidden state h tâˆ’1 j allows the network to iteratively work towards a solution instead of starting with a blank slate at every step. Injecting the feature vector x j at each step like this allows the node function to focus on the messages from the other nodes instead of trying to remember the input.</p><p>Supervised training. The above equations for sending messages and updating node states define a recurrent relational network's core. To train a recurrent relational network in a supervised manner to solve a Sudoku we introduce an output probability distribution over the digits 1-9 for each of the nodes in the graph. The output distribution o t i for node i at step t is given by</p><formula xml:id="formula_4">o t i = r h t i ,<label>(4)</label></formula><p>where r is a MLP that maps the node hidden state to the output probabilities, e.g. using a softmax nonlinearity. Given the target digits y = {y 1 , y 2 , ..., y 81 } the loss at step t, is then the sum of cross-entropy terms, one for each node: l t = âˆ’</p><p>Variations. If the edges are unknown, the graph can be assumed to be fully connected. In this case the network will need to learn which objects interact with each other. If the edges have attributes, e ij , the message function in equation 1 can be modified such that m t ij = f h tâˆ’1 i , h tâˆ’1 j , e ij . If the output of interest is for the whole graph instead of for each node the output in equation 4 can be modified such that there's a single output o t = r ( i h t i ). The loss can be modified accordingly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Experiments</head><p>Code to reproduce all experiments can be found at github.com/rasmusbergpalm/recurrent-relationalnetworks. bAbI is a text based QA dataset from Facebook <ref type="bibr">[Weston et al., 2015]</ref> designed as a set of prerequisite tasks for reasoning. It consists of 20 types of tasks, with 10,000 questions each, including deduction, induction, spatial and temporal reasoning. Each question, e.g. "Where is the milk?" is preceded by a number of facts in the form of short sentences, e.g. "Daniel journeyed to the garden. Daniel put down the milk." The target is a single word, in this case "garden", one-hot encoded over the full bAbI vocabulary of 177 words. A task is considered solved if a model achieves greater than 95% accuracy. The most difficult tasks require reasoning about three facts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">bAbI question-answering tasks</head><p>To map the questions into a graph we treat the facts related to a question as the nodes in a fully connected graph up to a maximum of the last 20 facts. The fact and question sentences are both encoded by Long Short Term Memory (LSTM) <ref type="bibr" target="#b8">[Hochreiter and Schmidhuber, 1997</ref>] layers with 32 hidden units each. We concatenate the last hidden state of each LSTM and pass that through a MLP. The output is considered the node features x i . Following <ref type="bibr" target="#b21">[Santoro et al., 2017]</ref> all edge features e ij are set to the question encoding. We train the network for three steps. At each step, we sum the node hidden states and pass that through a MLP to get a single output for the whole graph. For details see the supplementary material.</p><p>Our trained network solves 20 of 20 tasks in 13 out of 15 runs. This is state-of-the-art and markedly more stable than competing methods. See table 1. We perform ablation experiment to see which parts of the model are important, including varying the number of steps. We find that using dropout and appending the question encoding to the fact encodings is important for the performance. See the supplementary material for details.</p><p>Surprisingly, we find that we only need a single step of relational reasoning to solve all the bAbI tasks. This is surprising since the hardest tasks requires reasoning about three facts. It's possible that there are superficial correlations in the tasks that the model learns to exploit. Alternatively the model learns to compress all the relevant fact-relations into the 128 floats resulting from the sum over the node hidden states, and perform the remaining reasoning steps in the output MLP. Regardless, it appears multiple steps of relational reasoning are not important for the bAbI dataset.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Pretty-CLEVR</head><p>Given that bAbI did not require multiple steps of relational reasoning and in order to test our hypothesis that our proposed model is better suited for tasks requiring more steps of relational reasoning we create a diagnostic dataset "Pretty-CLEVER". It can be seen as an extension of the "Sort-of-CLEVR" data set by <ref type="bibr" target="#b21">[Santoro et al., 2017]</ref> which has questions of a non-relational and relational nature. "Pretty-CLEVR" takes this a step further and has non-relational questions as well as questions requiring varying degrees of relational reasoning.  For the topmost sample the solution to the question: "green, 3 jumps", which is "plus", is shown with arrows. 2b Random corresponds to picking one of the eight possible outputs at random (colors or shapes, depending on the input). The RRN is trained for four steps but since it predicts at each step we can evaluate the performance for each step. The the number of steps is stated in parentheses.</p><p>Pretty-CLEVR consists of scenes with eight colored shapes and associated questions. Questions are of the form: "Starting at object X which object is N jumps away?". Objects are uniquely defined by their color or shape. If the start object is defined by color, the answer is a shape, and vice versa. Jumps are defined as moving to the closest object, without going to an object already visited. See <ref type="figure" target="#fig_1">figure 2a</ref>. Questions with zero jumps are non-relational and correspond to: "What color is shape X?" or "What shape is color X?". We create 100,000 random scenes, and 128 questions for each (8 start objects, 0-7 jumps, output is color or shape), resulting in 12.8M questions. We also render the scenes as images. The "jump to nearest" type question is chosen in an effort to eliminate simple correlations between the scene state and the answer. It is highly non-linear in the sense that slight differences in the distance between objects can cause the answer to change drastically. It is also asymmetrical, i.e. if the question "x, n jumps" equals "y", there is no guarantee that "y, n jumps" equals "x". We find it is a surprisingly difficult task to solve, even with a powerful model such as the RRN. We hope others will use it to evaluate their relational models. 2</p><p>Since we are solely interested in examining the effect of multiple steps of relational reasoning we train on the state descriptions of the scene. We consider each scene as a fully connected undirected graph with 8 nodes. The feature vector for each object consists of the position, shape and color. We encode the question as the start object shape or color and the number of jumps. As we did for bAbI we concatenate the question and object features and pass it through a MLP to get the node features x i . To make the task easier we set the edge features to the euclidean distance between the objects. We train our network for four steps and compare to a single step relational network and a baseline MLP that considers the entire scene state, all pairwise distances, and the question as a single vector. For details see the supplementary material.</p><p>Mirroring the results from the "Sort-of-CLEVR" dataset the MLP perfectly solves the non-relational questions, but struggle with even single jump questions and seem to lower bound the performance of the relational networks. The relational network solves the non-relational questions as well as the ones requiring a single jump, but the accuracy sharply drops off with more jumps. This matches the performance of the recurrent relational network which generally performs well as long as the number of steps is greater than or equal to the number of jumps. <ref type="figure" target="#fig_1">See fig 2b.</ref> It seems that, despite our best efforts, there are spurious correlations in the data such that questions with six to seven jumps are easier to solve than those with four to five jumps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Sudoku</head><p>We create training, validation and testing sets totaling 216,000 Sudoku puzzles with a uniform distribution of givens between 17 and 34. We consider each of the 81 cells in the 9x9 Sudoku grid a node in a graph, with edges to and from each other cell in the same row, column and box. The node features x i are the output of a MLP which takes as input the digit for the cell (0-9, 0 if not given), and the row and column position (1-9). Edge features are not used. We run the network for 32 steps and at every step the output function r maps each node hidden state to nine output logits corresponding to the nine possible digits. For details see the supplementary material. Our network learns to solve 94.1% of even the hardest 17-givens Sudokus after 32 steps. We only consider a puzzled solved if all the digits are correct, i.e. no partial credit is given for getting individual digits correct. For more givens the accuracy (fraction of test puzzles solved) quickly approaches 100%. Since the network outputs a probability distribution for each step, we can visualize how the network arrives at the solution step by step. For an example of this see <ref type="figure" target="#fig_2">figure 3</ref>.</p><p>To examine our hypothesis that multiple steps are required we plot the accuracy as a function of the number of steps. See figure 4. We can see that even simple Sudokus with 33 givens require upwards of 10 steps of relational reasoning, whereas the harder 17 givens continue to improve even after 32 steps. <ref type="figure" target="#fig_3">Figure 4</ref> also shows that the model has learned a convergent algorithm. The model was trained for 32 steps, but seeing that the accuracy increased with more steps, we ran the model for 64 steps during testing. At 64 steps the accuracy for the 17 givens puzzles increases to 96.6%.</p><p>We also examined the importance of the row and column features by multiplying the row and column embeddings by zero and re-tested our trained network. At 64 steps with 17 givens, the accuracy changed to 96.7%. It thus seems the network does not use the row and column position information to solve the task.  We compare our network to several other differentiable methods. See table 2. We train two relational networks: a node and a graph centric. For details see the supplementary material. Of the two, the node centric was considerably better. The node centric correspond exactly to our proposed network with a single step, yet fails to solve any Sudoku. This shows that multiple steps are crucial for complex relational reasoning. Our network outperforms loopy belief propagation, with parallel and random messages passing updates <ref type="bibr" target="#b2">[Bauke, 2008]</ref>. It also outperforms a version of loopy belief propagation modified specifically for solving Sudokus that uses 250 steps, Sinkhorn balancing every two steps and iteratively picks the most probable digit <ref type="bibr" target="#b9">[Khan et al., 2014]</ref>. We also compare to learning the messages in parallel loopy BP as presented in <ref type="bibr" target="#b12">Lin et al. [2015]</ref>. We tried a few variants including a single step as presented and 32 steps with and without a loss on every step, but could not get it to solve any 17 given Sudokus. Finally we outperform <ref type="bibr" target="#b16">Park [2016]</ref> which treats the Sudoku as a 9x9 image, uses 10 convolutional layers, iteratively picks the most probable digit, and evaluate on easier Sudokus with 24-36 givens. We also tried to train a version of our network that only had a loss at the last step. It was harder to train, performed worse and didn't learn a convergent algorithm.  <ref type="bibr" target="#b2">[Bauke, 2008]</ref> 17 61.7% Loopy BP, parallel <ref type="bibr" target="#b2">[Bauke, 2008]</ref> 17 53.2% Deeply Learned Messages* <ref type="bibr" target="#b12">[Lin et al., 2015]</ref> 17 0% Relational Network, node* <ref type="bibr" target="#b21">[Santoro et al., 2017]</ref> 17 0% Relational Network, graph* <ref type="bibr" target="#b21">[Santoro et al., 2017]</ref> 17 0% Deep Convolutional Network <ref type="bibr" target="#b16">[Park, 2016]</ref> 24-36 70%</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Age arithmetic</head><p>Anonymous reviewer 2 suggested the following task which we include here. The task is to infer the age of a person given a single absolute age and a set of age differences, e.g. "Alice is 20 years old. Alice is 4 years older than Bob. Charlie is 6 years younger than Bob. How old is Charlie?". Please see the supplementary material for details on the task and results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Discussion</head><p>We have proposed a general relational reasoning model for solving tasks requiring an order of magnitude more complex relational reasoning than the current state-of-the art. BaBi and Sort-of-CLEVR require a few steps, Pretty-CLEVR requires up to eight steps and Sudoku requires more than ten steps. Our relational reasoning module can be added to any deep learning model to add a powerful relational reasoning capacity. We get state-of-the-art results on Sudokus solving 96.6% of the hardest Sudokus with 17 givens. We also markedly improve state-of-the-art on the BaBi dataset solving 20/20 tasks in 13 out of 15 runs with a single model trained jointly on all tasks.</p><p>One potential issue with having a loss at every step is that it might encourage the network to learn a greedy algorithm that gets stuck in a local minima. However, the output function r separates the node hidden states and messages from the output probability distributions. The network therefore has the capacity to use a small part of the hidden state for retaining a current best guess, which can remain constant over several steps, and other parts of the hidden state for running a non-greedy multi-step algorithm.</p><p>Sending messages for all nodes in parallel and summing all the incoming messages might seem like an unsophisticated approach that risk resulting in oscillatory behavior and drowning out the important messages. However, since the receiving node hidden state is an input to the message function, the receiving node can in a sense determine which messages it wishes to receive. As such, the sum can be seen as an implicit attention mechanism over the incoming messages. Similarly the network can learn an optimal message passing schedule, by ignoring messages based on the history and current state of the receiving and sending node.</p><p>Graph neural networks with message passing computations go back to <ref type="bibr" target="#b22">Scarselli et al. [2009]</ref>. However, there are key differences that we found important for implementing stable multi-step relational reasoning. Including the node features x j at every step in eq. 3 is important to the stability of the network. <ref type="bibr" target="#b22">Scarselli et al. [2009]</ref>, eq. 3 has the node features, l n , inside the message function. <ref type="bibr" target="#b1">Battaglia et al. [2016]</ref> use an x j in the node update function, but this is an external driving force. <ref type="bibr">Sukhbaatar et al. [2016]</ref> also proposed to include the node features at every step. Optimizing the loss at every step in order to learn a convergent message passing algorithm is novel to the best of our knowledge. <ref type="bibr" target="#b22">Scarselli et al. [2009]</ref> introduces an explicit loss term to ensure convergence. <ref type="bibr" target="#b19">Ross et al. [2011]</ref> trains the inference machine predictors on every step, but there are no hidden states; the node states are the output marginals directly, similar to how belief propagation works.</p><p>Our model can also be seen as a completely learned message passing algorithm. Belief propagation is a hand-crafted message passing algorithm for performing exact inference in directed acyclic graphical models. If the graph has cycles, one can use a variant, loopy belief propagation, but it is not guaranteed to be exact, unbiased or converge. Empirically it works well though and it is widely used <ref type="bibr" target="#b14">[Murphy et al., 1999]</ref>. Several works have proposed replacing parts of belief propagation with learned modules <ref type="bibr" target="#b6">[Heess et al., 2013</ref><ref type="bibr" target="#b12">, Lin et al., 2015</ref>. Our work differs by not being rooted in loopy BP, and instead learning all parts of a general message passing algorithm. <ref type="bibr" target="#b19">Ross et al. [2011]</ref> proposes Inference Machines which ditch the belief propagation algorithm altogether and instead train a series of regressors to output the correct marginals by passing messages on a graph. Wei et al. <ref type="bibr">[2016]</ref> applies this idea to pose estimation using a series of convolutional layers and <ref type="bibr" target="#b4">Deng et al. [2016]</ref> introduces a recurrent node update for the same domain.</p><p>There is rich literature on combining symbolic reasoning and logic with sub-symbolic distributed representations which goes all the way back to the birth of the idea of parallel distributed processing McCulloch and Pitts <ref type="bibr">[1943]</ref>. See <ref type="bibr" target="#b18">[Raedt et al., 2016</ref><ref type="bibr" target="#b3">, Besold et al., 2017</ref> for two recent surveys.</p><p>Here we describe only a few recent methods. <ref type="bibr" target="#b23">Serafini and Garcez [2016]</ref> introduces the Logic Tensor Network (LTN) which describes a first order logic in which symbols are grounded as vector embeddings, and predicates and functions are grounded as tensor networks. The embeddings and tensor networks are then optimized jointly to maximize a fuzzy satisfiability measure over a set of known facts and fuzzy constraints. <ref type="bibr">Å ourek et al. [2015]</ref> introduces the Lifted Relational Network which combines relational logic with neural networks by creating neural networks from lifted rules and training examples, such that the connections between neurons created from the same lifted rules shares weights. Our approach differs fundamentally in that we do not aim to bridge symbolic and sub-symbolic methods. Instead we stay completely in the sub-symbolic realm. We do not introduce or consider any explicit logic, aim to discover (fuzzy) logic rules, or attempt to include prior knowledge in the form of logical constraints. <ref type="bibr" target="#b0">Amos and Kolter [2017]</ref> Introduces OptNet, a neural network layer that solve quadratic programs using an efficient differentiable solver. OptNet is trained to solve 4x4 Sudokus amongst other problems and beats the deep convolutional network baseline as described in <ref type="bibr" target="#b16">Park [2016]</ref>. Unfortunately we cannot compare to OptNet directly as it has computational issues scaling to 9x9 Sudokus <ref type="bibr">(Brandon Amos, 2018, personal communication)</ref>.</p><p>Sukhbaatar et al. <ref type="bibr">[2016]</ref> proposes the Communication Network (CommNet) for learning multi-agent cooperation and communication using back-propagation. It is similar to our recurrent relational network, but differs in key aspects. The messages passed between all nodes at a given step are the same, corresponding to the average of all the node hidden states. Also, it is not trained to minimize the loss on every step of the algorithm. We compute each node feature vector as</p><formula xml:id="formula_5">x i = MLP(concat(last(LSTM S (s i )), last(LSTM Q (q)), onehot(p i + o)))</formula><p>where s i is fact i, q is the question, p i is the sentence position (1-20) of fact i and o is a random offset per question <ref type="bibr">(1)</ref><ref type="bibr">(2)</ref><ref type="bibr">(3)</ref><ref type="bibr">(4)</ref><ref type="bibr">(5)</ref><ref type="bibr">(6)</ref><ref type="bibr">(7)</ref><ref type="bibr">(8)</ref><ref type="bibr">(9)</ref><ref type="bibr">(10)</ref><ref type="bibr">(11)</ref><ref type="bibr">(12)</ref><ref type="bibr">(13)</ref><ref type="bibr">(14)</ref><ref type="bibr">(15)</ref><ref type="bibr">(16)</ref><ref type="bibr">(17)</ref><ref type="bibr">(18)</ref><ref type="bibr">(19)</ref><ref type="bibr">(20)</ref>, such that the onehot output is 40 dimensional. The offset is constant for all facts related to a single question to avoid changing the relative order of the facts. The random offset prevents the network from memorizing the position of the facts and rather reason about their ordering. Our message function f is a MLP. Our node function g uses an LSTM over reasoning steps</p><formula xml:id="formula_6">h t j , s t j = LSTM G (MLP(concat(x j , m t j )), s tâˆ’1 j ) ,</formula><p>where s t j is the cell state of the LSTM for unit j at time t. s 0 j is initialized to zero. We run our network for three steps. To get a graph level output, we use a MLP over the sum of the node hidden states, o t = MLP ( i h t i ) with 3 layers, the final being a linear layer that maps to the output logits. The last two layers uses dropout of 50%. We train and validate on all 20 tasks jointly using the 9,000 training and 1,000 validation samples defined in the en_valid_10k split. We use the Adam optimizer with a batch size of 512, a learning rate of 2e-4 and L2 regularization with a rate of 1e-5. We train for 5M gradient steps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">bAbI ablation experiments</head><p>To test which parts of the proposed model is important to solving the bAbI tasks we perform ablation experiments. One of the main differences between the relational network and our proposed model, aside from the recurrent steps, is that we encode the sentences and question together. We ablate the model in two ways to test how important this is. 1) Using a single linear layer instead of the 4-layer MLP baseline, and 2) Not encoding them together. In this case the node hidden states are initialized to the fact encodings. We found dropout to be important, so we also perform an ablation experiment without dropout. We run each ablation experiment eight times. We also do pseudo-ablation experiments with fewer steps by measuring at each step of the RRN. See  <ref type="table" target="#tab_4">Table 3</ref>: BaBi ablation results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Pretty-CLEVR experimental details</head><p>Our setup for Pretty-CLEVR is a bit simpler than for bAbI. Unless otherwise specified we use 128 hidden units for all hidden layers and all MLPs are 1 ReLU layer followed by a linear layer.</p><p>We compute each node feature vector x i as</p><formula xml:id="formula_7">o i = concat(p i , onehot(c i ), onehot(m i )) q = concat(onehot(s), onehot(n)) x i = MLP(concat(o i , q))</formula><p>where p i âˆˆ [0, 1] 2 is the position, N n â‰¡ {0, ..., n âˆ’ 1}, c i âˆˆ N 8 is the color, m i âˆˆ N 8 is the marker, s âˆˆ N 16 is the marker or color of the start object, and n âˆˆ N 8 is the number of jumps.</p><p>Our message function f is a MLP. Our node function g is,</p><formula xml:id="formula_8">h t j = MLP(concat(h tâˆ’1 j , x j , m t j ))</formula><p>Our output function r is a MLP with a dropout fraction of 0.5 in the penultimate layer. The last layer has 16 hidden linear units. We run our recurrent relational network for 4 steps.</p><p>We train on the 12.8M training questions, and augment the data by scaling and rotating the scenes randomly. We use separate validation and test sets of 128.000 questions each. We use the Adam optimizer with a learning rate of 1e-4 and train for 10M gradient updates with a batch size of 128.</p><p>The baseline RN is identical to the described RRN, except it only does a single step of relational reasoning.</p><p>The baseline MLP takes the entire scene state, x, as an input, such that x = concat(o 0 , ..., o 7 , d 00 , ..., d 77 , q)</p><p>where d ij âˆˆ R is the euclidean distance from object i to j.</p><p>The baseline MLP has 4 ReLu layers with 256 hidden units, with dropout of 0.5 on the last layer, followed by a linear layer with 16 hidden units. The baseline MLP has 87% more parameters than the RRN and RN (261,136 vs 139,536).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Sudoku dataset</head><p>To generate our dataset the starting point is the collection of 49,151 unique 17-givens puzzles gathered by <ref type="bibr" target="#b20">Royle [2014]</ref> which we solve using the solver from <ref type="bibr" target="#b15">Norvig [2006]</ref>. Then we split the puzzles into a test, validation and training pool, with 10,000, 1,000 and 38,151 samples respectively. To generate the sets we train, validate and test on we do the following: for each n âˆˆ {0, ..., 17} we sample k puzzles from the respective pool, with replacement. For each sampled puzzle we add n random digits from the solution. We then swap the digits according to a random permutation, e.g. 1 â†’ 5, 2 â†’ 3, etc. The resulting puzzle is added to the respective set. For the test, validation and training sets we sample k = 1, 000, k = 1, 000 and k = 10, 000 puzzles in this way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5">Sudoku experimental details</head><p>Unless otherwise specified we use 96 hidden units for all hidden layers and all MLPs are 3 ReLU layers followed by a linear layer.</p><p>Denote the digit for cell j d j (0-9, 0 if not given), and the row and column position row j (1-9) and column j (1-9) respectively.. The node features are then</p><formula xml:id="formula_9">x j = MLP(concat(embed(d j ), embed(row j ), embed(column j )))</formula><p>where each embed is a 16 dimensional learned embedding. We could probably have used one-hot encoding instead of the embeddings, embedding was just the first thing we tried. Edge features were not used. The message function f is an MLP. The node function g, is identical to the setup for bAbI, i.e. h t j , s t j = LSTM G (MLP(concat(x j , m t j )), s tâˆ’1 j ) . The LSTM cell state is initialized to zeros.</p><p>The output function r is a linear layer with nine outputs to produce the output logits o t i . We run the network for 32 steps with a loss on every step. We train the model for 300.000 gradient updates with a batch size of 256 using Adam with a learning rate of 2e-4 and L2 regularization of 1e-4 on all weight matrices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.6">Sudoku relational network baseline details</head><p>The node centric corresponds exactly to a single step of our network. The graph centric approach is closer to the original relational network. It does one step of relational reasoning as our network, then sums all the node hidden states. The sum is then passed through a 4 layer MLP with 81 Â· 9 outputs, one for each cell and digit. The graph centric model has larger hidden states of 256 in all layers to compensate somewhat for the sum squashing the entire graph into a fixed size vector. Otherwise both networks are identical to our network. The graph centric has over 4 times as many parameters as our model <ref type="bibr">(944,874 vs. 201,194)</ref> but performs worse than the node centric.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.7">Age arithmetic task details</head><p>We generated all 262,144 unique trees with 8 nodes and split them 90%/10% into training and test graphs. The nodes represent the persons, and the edges which age differences will be given to the network. During training and testing we sample a batch of graphs from the respective set and sample 8 random ages (0-99) for each. We compute the absolute difference as well as the sign for each edge in the graphs. This gives us 7 relative facts on the form "person A (0-7), person B (0-7), younger/older (-1,1), absolute age difference (0-99)". Then we add the final fact which is the age of one of the nodes at random, e.g. "3, 3, 0, 47", using the zero sign to indicate this fact is absolute and not relative. The question is the age of one of the persons at random (0-7). For each graph we compute the shortest path from the anchor person to the person in question. This is the minimum number of arithmetic computations that must be performed to infer the persons age from the given facts.</p><p>The 8 facts (1 anchor, 7 relative) are given to the network as a fully connected graph of 8 nodes. Note, this graph is different from the tree used to generate the facts. The network never sees the tree. The input vector for each fact are the four fact integers and the question integer one-hot encoded and concatenated. We use the same architecture as for the bAbI experiments except all MLPs are 3 dense layers with 128 ReLu units followed by one linear layer. We train the network for 8 steps, and test it for each step. See <ref type="figure">figure 5</ref> for results.  <ref type="figure">Figure 5</ref>: Results for the age arithmetic task. The number in parenthesis indicate how many steps the RRN was run during testing. Random corresponds to picking one of the 100 possible ages randomly.</p><p>x 1</p><p>x 2</p><p>x 3</p><p>x 1</p><p>x 2</p><p>x 3</p><p>x 1 Recurrent relational network on a fully connected graph with 3 nodes. Subscripts denote node indices and superscripts denote steps t. The dashed lines indicate the recurrent connections.</p><p>An example Sudoku. Each of the 81 cells contain each digit 1-9, which is useful if the reader wishes to try to solve the Sudoku as they can be crossed out or highlighted, etc. The digit font size corresponds to the probability our model assigns to each digit at step 0, i.e. before any steps are taken. Subsequent pages contains the Sudoku as it evolves with more steps of our model. Step 1</p><p>Step 4 1 2 3</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>2a Two samples of the Pretty-CLEVR diagnostic dataset. Each sample has 128 questions associated, exhibiting varying levels of relational reasoning difficulty.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Example of how the trained network solves part of a Sudoku. Only the top row of a full 9x9 Sudoku is shown for clarity. From top to bottom steps 0, 1, 8 and 24 are shown. See the supplementary material for a full Sudoku. Each cell displays the digits 1-9 with the font size scaled (non-linearly for legibility) to the probability the network assigns to each digit. Notice how the network eliminates the given digits 6 and 4 from the other cells in the first step. Animations showing how the trained network solves Sodukos, including a failure case can be found at imgur.com/a/ALsfB.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Fraction of test puzzles solved as a function of number of steps. Even simple Sudokus with 33 givens require about 10 steps of relational reasoning to be solved. The dashed vertical line indicates the 32 steps the network was trained for. The network appears to have learned a convergent relational reasoning algorithm such that more steps beyond 32 improve on the hardest Sudokus.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc></figDesc><table><row><cell cols="4">: bAbI results. Trained jointly on all 20 tasks using the 10,000 training samples. Entries</cell></row><row><cell cols="4">marked with an asterix are our own experiments, the rest are from the respective papers.</cell></row><row><cell>Method</cell><cell cols="3">N Mean Error (%) Failed tasks (err. &gt;5%)</cell></row><row><cell>RRN* (this work)</cell><cell>15</cell><cell>0.46 Â± 0.77</cell><cell>0.13 Â± 0.35</cell></row><row><cell>SDNC [Rae et al., 2016]</cell><cell>15</cell><cell>6.4 Â± 2.5</cell><cell>4.1 Â± 1.6</cell></row><row><cell>DAM [Rae et al., 2016]</cell><cell>15</cell><cell>8.7 Â± 6.4</cell><cell>5.4 Â± 3.4</cell></row><row><cell>SAM [Rae et al., 2016]</cell><cell>15</cell><cell>11.5 Â± 5.9</cell><cell>7.1 Â± 3.4</cell></row><row><cell>DNC [Rae et al., 2016]</cell><cell>15</cell><cell>12.8 Â± 4.7</cell><cell>8.2 Â± 2.5</cell></row><row><cell>NTM [Rae et al., 2016]</cell><cell>15</cell><cell>26.6 Â± 3.7</cell><cell>15.5 Â± 1.7</cell></row><row><cell>LSTM [Rae et al., 2016]</cell><cell>15</cell><cell>28.7 Â± 0.5</cell><cell>17.1 Â± 0.8</cell></row><row><cell>EntNet [Henaff et al., 2016]</cell><cell>5</cell><cell>9.7 Â± 2.6</cell><cell>5 Â± 1.2</cell></row><row><cell>ReMo [Yang et al., 2018]</cell><cell>1</cell><cell>1.2</cell><cell>1</cell></row><row><cell>RN [Santoro et al., 2017]</cell><cell>1</cell><cell>N/A</cell><cell>2</cell></row><row><cell cols="2">MemN2N [Sukhbaatar et al., 2015] 1</cell><cell>7.5</cell><cell>6</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc>Comparison of methods for solving Sudoku puzzles. Only methods that are differentiable are included in the comparison. Entries marked with an asterix are our own experiments, the rest are from the respective papers.</figDesc><table><row><cell>Method</cell><cell cols="2">Givens Accuracy</cell></row><row><cell>Recurrent Relational Network* (this work)</cell><cell>17</cell><cell>96.6%</cell></row><row><cell>Loopy BP, modified [Khan et al., 2014]</cell><cell>17</cell><cell>92.5%</cell></row><row><cell>Loopy BP, random</cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>Elizabeth S Spelke, Grant Gutheil, and Gretchen Van de Walle. The development of object perception.1995.Sainbayar Sukhbaatar, Jason Weston, Rob Fergus, et al. End-to-end memory networks. In Advances in neural information processing systems, pages 2440-2448, 2015.</figDesc><table><row><cell>Sainbayar Sukhbaatar, Rob Fergus, et al. Learning multiagent communication with backpropagation.</cell></row><row><cell>In Advances in Neural Information Processing Systems, pages 2244-2252, 2016.</cell></row><row><cell>Shih-En Wei, Varun Ramakrishna, Takeo Kanade, and Yaser Sheikh. Convolutional pose machines.</cell></row><row><cell>In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages</cell></row><row><cell>4724-4732, 2016.</cell></row><row><cell>Jason Weston, Antoine Bordes, Sumit Chopra, Alexander M Rush, Bart van MerriÃ«nboer, Armand</cell></row><row><cell>Joulin, and Tomas Mikolov. Towards AI-complete question answering: A set of prerequisite toy</cell></row><row><cell>tasks. arXiv preprint arXiv:1502.05698, 2015.</cell></row><row><cell>Hyochang Yang, Sungzoon Cho, et al. Finding remo (related memory object): A simple neural</cell></row><row><cell>architecture for text based reasoning. arXiv preprint arXiv:1801.08459, 2018.</cell></row><row><cell>6 Supplementary Material</cell></row><row><cell>6.1 bAbI experimental details</cell></row><row><cell>Unless otherwise specified we use 128 hidden units for all layers and all MLPs are 3 ReLU layers</cell></row><row><cell>followed by a linear layer.</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>table 3 .</head><label>3</label><figDesc></figDesc><table><row><cell>Model</cell><cell cols="4">Runs Mean Error (%) Failed tasks (err. &gt;5%) Mean error @ 1M updates (%)</cell></row><row><cell>Baseline, 3 steps</cell><cell>15</cell><cell>0.46 Â± 0.77</cell><cell>0.13 Â± 0.35</cell><cell>1.83 Â± 1.06</cell></row><row><cell>Baseline, 2 steps</cell><cell>15</cell><cell>0.46 Â± 0.76</cell><cell>0.13 Â± 0.35</cell><cell>1.83 Â± 1.06</cell></row><row><cell>Baseline, 1 step</cell><cell>15</cell><cell>0.48 Â± 0.79</cell><cell>0.13 Â± 0.35</cell><cell>1.84 Â± 1.06</cell></row><row><cell>linear encoding</cell><cell>8</cell><cell>0.20 Â± 0.01</cell><cell>0 Â± 0</cell><cell>0.63 Â± 0.69</cell></row><row><cell>no encoding</cell><cell>8</cell><cell>0.53 Â± 0.91</cell><cell>0.13 Â± 0.35</cell><cell>2.39 Â± 1.73</cell></row><row><cell>no dropout</cell><cell>8</cell><cell>1.74 Â± 1.28</cell><cell>0.63 Â± 0.52</cell><cell>2.57 Â± 0.95</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">Pretty-CLEVR is available online as part of the code for reproducing experiments.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5">Related workRelational networks<ref type="bibr" target="#b21">[Santoro et al., 2017]</ref> and interaction networks<ref type="bibr" target="#b1">[Battaglia et al., 2016]</ref> are the most directly comparable to ours. These models correspond to using a single step of equation 3. Since it only does one step it cannot naturally do complex multi-step relational reasoning. In order to solve the tasks that require more than a single step it must compress all the relevant relations into a fixed size vector, then perform the remaining relational reasoning in the last forward layers. Relational networks, interaction networks and our proposed model can all be seen as an instance of Graph Neural Networks<ref type="bibr" target="#b22">[Scarselli et al., 2009</ref><ref type="bibr" target="#b5">, Gilmer et al., 2017</ref>.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We'd like to thank the anonymous reviewers for the valuable comments and suggestions, especially reviewer 2 who suggested the age arithmetic task. This research was supported by the NVIDIA Corporation with the donation of TITAN X GPUs.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Step <ref type="formula">12</ref>  </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brandon</forename><surname>Amos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kolter</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1703.00443</idno>
		<title level="m">Optnet: Differentiable optimization as a layer in neural networks</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Interaction networks for learning about objects, relations and physics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Battaglia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Razvan</forename><surname>Pascanu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Danilo</forename><surname>Jimenez Rezende</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="4502" to="4510" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Passing messages to lonely numbers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Heiko</forename><surname>Bauke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing in Science &amp; Engineering</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="32" to="40" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Artur D&amp;apos;avila</forename><surname>Tarek R Besold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sebastian</forename><surname>Garcez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Howard</forename><surname>Bader</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pedro</forename><surname>Bowman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pascal</forename><surname>Domingos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai-Uwe</forename><surname>Hitzler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>KÃ¼hnberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Luis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Lamb</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Priscila</forename><surname>Lowd</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Machado Vieira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Lima</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1711.03902</idno>
		<title level="m">Neural-symbolic learning and reasoning: A survey and interpretation</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Structure inference machines: Recurrent neural networks for analyzing relations in group activity recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhiwei</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arash</forename><surname>Vahdat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hexiang</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Mori</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition</title>
		<meeting>the IEEE Conference on Computer Vision and Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="4772" to="4781" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Justin</forename><surname>Gilmer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Samuel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Schoenholz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Patrick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oriol</forename><surname>Riley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">George</forename><forename type="middle">E</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Dahl</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1704.01212</idno>
		<title level="m">Neural message passing for quantum chemistry</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Learning to pass expectation propagation messages</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nicolas</forename><surname>Heess</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Tarlow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Winn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="3219" to="3227" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Tracking the world state with recurrent entity networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mikael</forename><surname>Henaff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Weston</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arthur</forename><surname>Szlam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Antoine</forename><surname>Bordes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yann</forename><surname>Lecun</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1612.03969</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Long short-term memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sepp</forename><surname>Hochreiter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">JÃ¼rgen</forename><surname>Schmidhuber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural computation</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1735" to="1780" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Solving Sudoku using probabilistic graphical models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shahab</forename><surname>Sheehan Khan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shahin</forename><surname>Jabbari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Majid</forename><surname>Jabbari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ghanbarinejad</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Dancing links</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Donald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Knuth</surname></persName>
		</author>
		<idno>cs/0011047</idno>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Building machines that learn and think like people</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Brenden M Lake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Tomer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joshua</forename><forename type="middle">B</forename><surname>Ullman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Samuel</forename><forename type="middle">J</forename><surname>Tenenbaum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Gershman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Behavioral and Brain Sciences</title>
		<imprint>
			<biblScope unit="page" from="1" to="101" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Deeply learning the messages in message passing inference</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guosheng</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chunhua</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ian</forename><surname>Reid</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anton</forename><surname>Van Den</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hengel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="361" to="369" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A logical calculus of the ideas immanent in nervous activity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Warren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Walter</forename><surname>Mcculloch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Pitts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The bulletin of mathematical biophysics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="115" to="133" />
			<date type="published" when="1943" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Loopy belief propagation for approximate inference: An empirical study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Kevin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yair</forename><surname>Murphy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael I Jordan</forename><surname>Weiss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifteenth conference on Uncertainty in artificial intelligence</title>
		<meeting>the Fifteenth conference on Uncertainty in artificial intelligence</meeting>
		<imprint>
			<publisher>Morgan Kaufmann Publishers Inc</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="467" to="475" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Solving every Sudoku puzzle</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Norvig</surname></persName>
		</author>
		<ptr target="http://norvig.com/sudoku.html" />
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Can neural networks crack Sudoku?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kyubyong</forename><surname>Park</surname></persName>
		</author>
		<ptr target="https://github.com/Kyubyong/sudoku" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Scaling memory-augmented neural networks with sparse reads and writes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jack</forename><surname>Rae</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><forename type="middle">J</forename><surname>Hunt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ivo</forename><surname>Danihelka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Timothy</forename><surname>Harley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><forename type="middle">W</forename><surname>Senior</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><surname>Wayne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Lillicrap</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="3621" to="3629" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Statistical relational artificial intelligence: Logic, probability, and computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kristian</forename><surname>Luc De Raedt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sriraam</forename><surname>Kersting</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Natarajan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Poole</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Synthesis Lectures on Artificial Intelligence and Machine Learning</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="1" to="189" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Learning message-passing inference machines for structured prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephane</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Munoz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martial</forename><surname>Hebert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J Andrew</forename><surname>Bagnell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision and Pattern Recognition (CVPR), 2011 IEEE Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="2737" to="2744" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gordon</forename><forename type="middle">Minimum</forename><surname>Royle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sudoku</surname></persName>
		</author>
		<ptr target="http://staffhome.ecm.uwa.edu.au/00013890/sudokumin.php" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">A simple neural network module for relational reasoning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Santoro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Raposo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>David</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mateusz</forename><surname>Barrett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Razvan</forename><surname>Malinowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Pascanu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Timothy</forename><surname>Battaglia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Lillicrap</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1706.01427</idno>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">The graph neural network model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Franco</forename><surname>Scarselli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marco</forename><surname>Gori</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ah</forename><surname>Chung Tsoi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Markus</forename><surname>Hagenbuchner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabriele</forename><surname>Monfardini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Neural Networks</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="61" to="80" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Learning and reasoning with logic tensor networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luciano</forename><surname>Serafini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Artur S D&amp;apos;avila</forename><surname>Garcez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AI* IA 2016 Advances in Artificial Intelligence</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="334" to="348" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Lifted relational neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gustav</forename><surname>Å ourek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vojtech</forename><surname>Aschenbrenner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Filip</forename><surname>Å½elezny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">OndÅ™ej</forename><surname>KuÅ¾elka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015th International Conference on Cognitive Computation: Integrating Neural and Symbolic Approaches</title>
		<meeting>the 2015th International Conference on Cognitive Computation: Integrating Neural and Symbolic Approaches</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="volume">1583</biblScope>
			<biblScope unit="page" from="52" to="60" />
		</imprint>
		<respStmt>
			<orgName>CEUR-WS. org</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Elizabeth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Katherine</forename><forename type="middle">D</forename><surname>Spelke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kinzler</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="89" to="96" />
		</imprint>
	</monogr>
	<note>Core knowledge. Developmental science</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
