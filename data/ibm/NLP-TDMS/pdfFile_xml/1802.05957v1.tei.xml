<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Published as a conference paper at ICLR 2018 SPECTRAL NORMALIZATION FOR GENERATIVE ADVERSARIAL NETWORKS</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Takeru</forename><surname>Miyato</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Inc</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Toshiki</forename><surname>Kataoka</surname></persName>
							<email>kataoka@preferred.jpkoyama.masanori@gmail.com</email>
							<affiliation key="aff0">
								<orgName type="department">Inc</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Masanori</forename><surname>Koyama</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Ritsumeikan University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuichi</forename><surname>Yoshida</surname></persName>
							<email>yyoshida@nii.ac.jp</email>
							<affiliation key="aff2">
								<orgName type="institution">National Institute of Informatics</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Published as a conference paper at ICLR 2018 SPECTRAL NORMALIZATION FOR GENERATIVE ADVERSARIAL NETWORKS</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-25T21:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>One of the challenges in the study of generative adversarial networks is the instability of its training. In this paper, we propose a novel weight normalization technique called spectral normalization to stabilize the training of the discriminator. Our new normalization technique is computationally light and easy to incorporate into existing implementations. We tested the efficacy of spectral normalization on CIFAR10, STL-10, and ILSVRC2012 dataset, and we experimentally confirmed that spectrally normalized GANs (SN-GANs) is capable of generating images of better or equal quality relative to the previous training stabilization techniques. The code with Chainer <ref type="bibr" target="#b34">(Tokui et al., 2015)</ref>, generated images and pretrained models are available at https://github.com/pfnet-research/sngan_ projection.</p><p>Published as a conference paper at ICLR 2018</p><p>• Lipschitz constant is the only hyper-parameter to be tuned, and the algorithm does not require intensive tuning of the only hyper-parameter for satisfactory performance. • Implementation is simple and the additional computational cost is small.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Generative adversarial networks (GANs) <ref type="bibr" target="#b11">(Goodfellow et al., 2014</ref>) have been enjoying considerable success as a framework of generative models in recent years, and it has been applied to numerous types of tasks and datasets <ref type="bibr" target="#b15">Ho &amp; Ermon, 2016;</ref>. In a nutshell, GANs are a framework to produce a model distribution that mimics a given target distribution, and it consists of a generator that produces the model distribution and a discriminator that distinguishes the model distribution from the target. The concept is to consecutively train the model distribution and the discriminator in turn, with the goal of reducing the difference between the model distribution and the target distribution measured by the best discriminator possible at each step of the training. GANs have been drawing attention in the machine learning community not only for its ability to learn highly structured probability distribution but also for its theoretically interesting aspects. For example, <ref type="bibr" target="#b26">(Nowozin et al., 2016;</ref><ref type="bibr" target="#b37">Uehara et al., 2016;</ref><ref type="bibr" target="#b24">Mohamed &amp; Lakshminarayanan, 2017)</ref> revealed that the training of the discriminator amounts to the training of a good estimator for the density ratio between the model distribution and the target. This is a perspective that opens the door to the methods of implicit models <ref type="bibr" target="#b24">(Mohamed &amp; Lakshminarayanan, 2017;</ref><ref type="bibr" target="#b36">Tran et al., 2017)</ref> that can be used to carry out variational optimization without the direct knowledge of the density function.</p><p>A persisting challenge in the training of GANs is the performance control of the discriminator. In high dimensional spaces, the density ratio estimation by the discriminator is often inaccurate and unstable during the training, and generator networks fail to learn the multimodal structure of the target distribution. Even worse, when the support of the model distribution and the support of the target distribution are disjoint, there exists a discriminator that can perfectly distinguish the model distribution from the target . Once such discriminator is produced in this situation, the training of the generator comes to complete stop, because the derivative of the so-produced discriminator with respect to the input turns out to be 0. This motivates us to introduce some form of restriction to the choice of the discriminator.</p><p>In this paper, we propose a novel weight normalization method called spectral normalization that can stabilize the training of discriminator networks. Our normalization enjoys following favorable properties.</p><p>In fact, our normalization method also functioned well even without tuning Lipschitz constant, which is the only hyper parameter. In this study, we provide explanations of the effectiveness of spectral normalization for GANs against other regularization techniques, such as weight normalization <ref type="bibr" target="#b31">(Salimans &amp; Kingma, 2016)</ref>, weight clipping , and gradient penalty <ref type="bibr" target="#b12">(Gulrajani et al., 2017)</ref>. We also show that, in the absence of complimentary regularization techniques (e.g., batch normalization, weight decay and feature matching on the discriminator), spectral normalization can improve the sheer quality of the generated images better than weight normalization and gradient penalty.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHOD</head><p>In this section, we will lay the theoretical groundwork for our proposed method. Let us consider a simple discriminator made of a neural network of the following form, with the input x:</p><p>f (x, θ) = W L+1 a L (W L (a L−1 (W L−1 (. . . a 1 (W 1 x) . . . )))),</p><p>where θ := {W 1 , . . . , W L , W L+1 } is the learning parameters set, W l ∈ R d l ×d l−1 , W L+1 ∈ R 1×d L , and a l is an element-wise non-linear activation function. We omit the bias term of each layer for simplicity. The final output of the discriminator is given by</p><formula xml:id="formula_1">D(x, θ) = A(f (x, θ)),<label>(2)</label></formula><p>where A is an activation function corresponding to the divergence of distance measure of the user's choice. The standard formulation of GANs is given by</p><formula xml:id="formula_2">min G max D V (G, D)</formula><p>where min and max of G and D are taken over the set of generator and discriminator functions, respectively. The conventional form of V (G, D) <ref type="bibr" target="#b11">(Goodfellow et al., 2014)</ref> is given by</p><formula xml:id="formula_3">E x∼q data [log D(x)] + E x ∼p G [log(1 − D(x ))],</formula><p>where q data is the data distribution and p G is the (model) generator distribution to be learned through the adversarial min-max optimization. The activation function A that is used in the D of this expression is some continuous function with range [0, 1] (e.g, sigmoid function). It is known that, for a fixed generator G, the optimal discriminator for this form of V (G, D) is given by D * G (x) := q data (x)/(q data (x) + p G (x)). The machine learning community has been pointing out recently that the function space from which the discriminators are selected crucially affects the performance of GANs. A number of works <ref type="bibr" target="#b37">(Uehara et al., 2016;</ref><ref type="bibr">Qi, 2017;</ref><ref type="bibr" target="#b12">Gulrajani et al., 2017)</ref> advocate the importance of Lipschitz continuity in assuring the boundedness of statistics. For example, the optimal discriminator of GANs on the above standard formulation takes the form</p><formula xml:id="formula_4">D * G (x) = q data (x) q data (x) + p G (x) = sigmoid(f * (x)), where f * (x) = log q data (x) − log p G (x),<label>(3)</label></formula><p>and its derivative</p><formula xml:id="formula_5">∇ x f * (x) = 1 q data (x) ∇ x q data (x) − 1 p G (x) ∇ x p G (x)<label>(4)</label></formula><p>can be unbounded or even incomputable. This prompts us to introduce some regularity condition to the derivative of f (x).</p><p>A particularly successful works in this array are <ref type="bibr">(Qi, 2017;</ref><ref type="bibr" target="#b12">Gulrajani et al., 2017)</ref>, which proposed methods to control the Lipschitz constant of the discriminator by adding regularization terms defined on input examples x. We would follow their footsteps and search for the discriminator D from the set of K-Lipschitz continuous functions, that is,</p><formula xml:id="formula_6">arg max f Lip≤K V (G, D),<label>(5)</label></formula><p>where we mean by f Lip the smallest value M such that f (x) − f (x ) / x − x ≤ M for any x, x , with the norm being the 2 norm.</p><p>While input based regularizations allow for relatively easy formulations based on samples, they also suffer from the fact that, they cannot impose regularization on the space outside of the supports of the generator and data distributions without introducing somewhat heuristic means. A method we would introduce in this paper, called spectral normalization, is a method that aims to skirt this issue by normalizing the weight matrices using the technique devised by <ref type="bibr" target="#b41">Yoshida &amp; Miyato (2017)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">SPECTRAL NORMALIZATION</head><p>Our spectral normalization controls the Lipschitz constant of the discriminator function f by literally constraining the spectral norm of each layer g : h in → h out . By definition, Lipschitz norm g Lip is equal to sup h σ(∇g(h)), where σ(A) is the spectral norm of the matrix A (L 2 matrix norm of A)</p><formula xml:id="formula_7">σ(A) := max h:h =0 Ah 2 h 2 = max h 2≤1 Ah 2 ,<label>(6)</label></formula><p>which is equivalent to the largest singular value of A. Therefore, for a linear layer g(h) = W h, the norm is given by g Lip = sup h σ(∇g(h)) = sup h σ(W ) = σ(W ). If the Lipschitz norm of the activation function a l Lip is equal to 1 1 , we can use the inequality g 1 •g 2 Lip ≤ g 1 Lip · g 2 Lip to observe the following bound on f Lip :</p><formula xml:id="formula_8">f Lip ≤ (h L → W L+1 h L ) Lip · a L Lip · (h L−1 → W L h L−1 ) Lip · · · a 1 Lip · (h 0 → W 1 h 0 ) Lip = L+1 l=1 (h l−1 → W l h l−1 ) Lip = L+1 l=1 σ(W l ). (7)</formula><p>Our spectral normalization normalizes the spectral norm of the weight matrix W so that it satisfies the Lipschitz constraint σ(W ) = 1:W</p><formula xml:id="formula_9">SN (W ) := W/σ(W ).<label>(8)</label></formula><p>If we normalize each W l using (8), we can appeal to the inequality (7) and the fact that σ W SN (W ) = 1 to see that f Lip is bounded from above by 1.</p><p>Here, we would like to emphasize the difference between our spectral normalization and spectral norm "regularization" introduced by <ref type="bibr" target="#b41">Yoshida &amp; Miyato (2017)</ref>. Unlike our method, spectral norm "regularization" penalizes the spectral norm by adding explicit regularization term to the objective function. Their method is fundamentally different from our method in that they do not make an attempt to 'set' the spectral norm to a designated value. Moreover, when we reorganize the derivative of our normalized cost function and rewrite our objective function <ref type="formula" target="#formula_0">(12)</ref>, we see that our method is augmenting the cost function with a sample data dependent regularization function. Spectral norm regularization, on the other hand, imposes sample data independent regularization on the cost function, just like L2 regularization and Lasso.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">FAST APPROXIMATION OF THE SPECTRAL NORM σ(W )</head><p>As we mentioned above, the spectral norm σ(W ) that we use to regularize each layer of the discriminator is the largest singular value of W . If we naively apply singular value decomposition to compute the σ(W ) at each round of the algorithm, the algorithm can become computationally heavy. Instead, we can use the power iteration method to estimate σ(W ) (Golub &amp; <ref type="bibr" target="#b10">Van der Vorst, 2000;</ref><ref type="bibr" target="#b41">Yoshida &amp; Miyato, 2017)</ref>. With power iteration method, we can estimate the spectral norm with very small additional computational time relative to the full computational cost of the vanilla GANs. Please see Appendix A for the detail method and Algorithm 1 for the summary of the actual spectral normalization algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">GRADIENT ANALYSIS OF THE SPECTRALLY NORMALIZED WEIGHTS</head><p>The gradient 2 ofW SN (W ) with respect to W ij is:</p><formula xml:id="formula_10">∂W SN (W ) ∂W ij = 1 σ(W ) E ij − 1 σ(W ) 2 ∂σ(W ) ∂W ij W = 1 σ(W ) E ij − [u 1 v T 1 ] ij σ(W ) 2 W (9) = 1 σ(W ) E ij − [u 1 v T 1 ] ijWSN ,<label>(10)</label></formula><p>where E ij is the matrix whose (i, j)-th entry is 1 and zero everywhere else, and u 1 and v 1 are respectively the first left and right singular vectors of W . If h is the hidden layer in the network to be transformed byW SN , the derivative of the V (G, D) calculated over the mini-batch with respect to W of the discriminator D is given by:</p><formula xml:id="formula_11">∂V (G, D) ∂W = 1 σ(W ) Ê δh T − Ê δ TW SN h u 1 v T 1 (11) = 1 σ(W ) Ê δh T − λu 1 v T 1 (12) where δ := ∂V (G, D)/∂ W SN h T , λ :=Ê δ T W SN h , andÊ[·] represents empirical expec- tation over the mini-batch. ∂V ∂W = 0 whenÊ[δh T ] = ku 1 v T 1 for some k ∈ R.</formula><p>We would like to comment on the implication of (12). The first termÊ δh T is the same as the derivative of the weights without normalization. In this light, the second term in the expression can be seen as the regularization term penalizing the first singular components with the adaptive regularization coefficient λ. λ is positive when δ andW SN h are pointing in similar direction, and this prevents the column space of W from concentrating into one particular direction in the course of the training. In other words, spectral normalization prevents the transformation of each layer from becoming to sensitive in one direction. We can also use spectral normalization to devise a new parametrization for the model. Namely, we can split the layer map into two separate trainable components: spectrally normalized map and the spectral norm constant. As it turns out, this parametrization has its merit on its own and promotes the performance of GANs (See Appendix E).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SPECTRAL NORMALIZATION VS OTHER REGULARIZATION TECHNIQUES</head><p>The weight normalization introduced by <ref type="bibr" target="#b31">Salimans &amp; Kingma (2016)</ref> is a method that normalizes the 2 norm of each row vector in the weight matrix. Mathematically, this is equivalent to requiring the weight by the weight normalizationW WN :</p><formula xml:id="formula_12">σ 1 (W WN ) 2 + σ 2 (W WN ) 2 + · · · + σ T (W WN ) 2 = d o , where T = min(d i , d o ),<label>(13)</label></formula><p>where σ t (A) is a t-th singular value of matrix A. Therefore, up to a scaler, this is same as the Frobenius normalization, which requires the sum of the squared singular values to be 1. These normalizations, however, inadvertently impose much stronger constraint on the matrix than intended.</p><formula xml:id="formula_13">IfW WN is the weight normalized matrix of dimension d i × d o , the norm W WN h 2 for a fixed unit vector h is maximized at W WN h 2 = √ d o when σ 1 (W WN ) = √ d o and σ t (W WN ) = 0 for t = 2, .</formula><p>. . , T , which means thatW WN is of rank one. Similar thing can be said to the Frobenius normalization (See the appendix for more details). Using suchW WN corresponds to using only one feature to discriminate the model probability distribution from the target. In order to retain as much norm of the input as possible and hence to make the discriminator more sensitive, one would hope to make the norm ofW WN h large. For weight normalization, however, this comes at the cost of reducing the rank and hence the number of features to be used for the discriminator. Thus, there is a conflict of interests between weight normalization and our desire to use as many features as possible to distinguish the generator distribution from the target distribution. The former interest often reigns over the other in many cases, inadvertently diminishing the number of features to be used by the discriminators. Consequently, the algorithm would produce a rather arbitrary model distribution that matches the target distribution only at select few features. Weight clipping  also suffers from same pitfall.</p><p>Our spectral normalization, on the other hand, do not suffer from such a conflict in interest. Note that the Lipschitz constant of a linear operator is determined only by the maximum singular value. In other words, the spectral norm is independent of rank. Thus, unlike the weight normalization, our spectral normalization allows the parameter matrix to use as many features as possible while satisfying local 1-Lipschitz constraint. Our spectral normalization leaves more freedom in choosing the number of singular components (features) to feed to the next layer of the discriminator. <ref type="bibr" target="#b4">Brock et al. (2016)</ref> introduced orthonormal regularization on each weight to stabilize the training of GANs. In their work, <ref type="bibr" target="#b4">Brock et al. (2016)</ref> augmented the adversarial objective function by adding the following term:</p><formula xml:id="formula_14">W T W − I 2 F .<label>(14)</label></formula><p>While this seems to serve the same purpose as spectral normalization, orthonormal regularization are mathematically quite different from our spectral normalization because the orthonormal regularization destroys the information about the spectrum by setting all the singular values to one. On the other hand, spectral normalization only scales the spectrum so that the its maximum will be one. <ref type="bibr" target="#b12">Gulrajani et al. (2017)</ref> used Gradient penalty method in combination with WGAN. In their work, they placed K-Lipschitz constant on the discriminator by augmenting the objective function with the regularizer that rewards the function for having local 1-Lipschitz constant (i.e. ∇xf 2 = 1) at discrete sets of points of the formx := x + (1 − )x generated by interpolating a samplex from generative distribution and a sample x from the data distribution. While this rather straightforward approach does not suffer from the problems we mentioned above regarding the effective dimension of the feature space, the approach has an obvious weakness of being heavily dependent on the support of the current generative distribution. As a matter of course, the generative distribution and its support gradually changes in the course of the training, and this can destabilize the effect of such regularization. In fact, we empirically observed that a high learning rate can destabilize the performance of WGAN-GP. On the contrary, our spectral normalization regularizes the function the operator space, and the effect of the regularization is more stable with respect to the choice of the batch. Training with our spectral normalization does not easily destabilize with aggressive learning rate. Moreover, WGAN-GP requires more computational cost than our spectral normalization with single-step power iteration, because the computation of ∇xf 2 requires one whole round of forward and backward propagation. In the appendix section, we compare the computational cost of the two methods for the same number of updates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">EXPERIMENTS</head><p>In order to evaluate the efficacy of our approach and investigate the reason behind its efficacy, we conducted a set of extensive experiments of unsupervised image generation on CIFAR-10 <ref type="bibr" target="#b35">(Torralba et al., 2008)</ref> and STL-10 <ref type="bibr" target="#b5">(Coates et al., 2011)</ref>, and compared our method against other normalization techniques. To see how our method fares against large dataset, we also applied our method on ILSVRC2012 dataset (ImageNet) <ref type="bibr" target="#b29">(Russakovsky et al., 2015)</ref> as well. This section is structured as follows. First, we will discuss the objective functions we used to train the architecture, and then we will describe the optimization settings we used in the experiments. We will then explain two performance measures on the images to evaluate the images produced by the trained generators. Finally, we will summarize our results on CIFAR-10, STL-10, and ImageNet.</p><p>As for the architecture of the discriminator and generator, we used convolutional neural networks. Also, for the evaluation of the spectral norm for the convolutional weight W ∈ R dout×din×h×w , we treated the operator as a 2-D matrix of dimension d out × (d in hw) 3 . We trained the parameters of the generator with batch normalization <ref type="bibr">(Ioffe &amp; Szegedy, 2015)</ref>. We refer the readers to <ref type="table" target="#tab_2">Table 3</ref> in the appendix section for more details of the architectures.</p><p>For all methods other than WGAN-GP, we used the following standard objective function for the adversarial loss:</p><formula xml:id="formula_15">V (G, D) := E x∼q data (x) [log D(x)] + E z∼p(z) [log(1 − D(G(z)))],<label>(15)</label></formula><p>where z ∈ R dz is a latent variable, p(z) is the standard normal distribution N (0, I), and G : R dz → R d0 is a deterministic generator function. We set d z to 128 for all of our experiments. For the updates of G, we used the alternate cost proposed by <ref type="bibr" target="#b11">Goodfellow et al. (2014)</ref> − Ez∼p(z)[log(D(G(z)))] as used in <ref type="bibr" target="#b11">Goodfellow et al. (2014)</ref> and <ref type="bibr" target="#b38">Warde-Farley &amp; Bengio (2017)</ref>. For the updates of D, we used the original cost defined in (15). We also tested the performance of the algorithm with the so-called hinge loss, which is given by</p><formula xml:id="formula_16">V D (Ĝ, D) = E x∼q data (x) [min (0, −1 + D(x))] + E z∼p(z) min 0, −1 − D Ĝ (z) (16) V G (G,D) = − E z∼p(z) D (G(z)) ,<label>(17)</label></formula><p>respectively for the discriminator and the generator. Optimizing these objectives is equivalent to minimizing the so-called reverse KL divergence : KL[p g ||q data ]. This type of loss has been already proposed and used in <ref type="bibr" target="#b20">Lim &amp; Ye (2017)</ref>; <ref type="bibr" target="#b36">Tran et al. (2017)</ref>. The algorithm based on the hinge loss also showed good performance when evaluated with inception score and FID. For Wasserstein GANs with gradient penalty (WGAN-GP) <ref type="bibr" target="#b12">(Gulrajani et al., 2017)</ref>, we used the following objective function:</p><formula xml:id="formula_17">V (G, D) := Ex∼q data [D(x)]−E z∼p(z) [D(G(z))]−λ Ex∼px[( ∇xD(x) 2 −1) 2 ],</formula><p>where the regularization term is the one we introduced in the appendix section D.4.</p><p>For quantitative assessment of generated examples, we used inception score  and Fréchet inception distance (FID) <ref type="bibr" target="#b14">(Heusel et al., 2017)</ref>. Please see Appendix B.1 for the details of each score.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">RESULTS ON CIFAR10 AND STL-10</head><p>In this section, we report the accuracy of the spectral normalization (we use the abbreviation: SN-GAN for the spectrally normalized GANs) during the training, and the dependence of the algorithm's performance on the hyperparmeters of the optimizer. We also compare the performance quality of the algorithm against those of other regularization/normalization techniques for the discriminator networks, including: Weight clipping , WGAN-GP <ref type="bibr" target="#b12">(Gulrajani et al., 2017)</ref>, batch-normalization (BN) (Ioffe &amp; <ref type="bibr" target="#b33">Szegedy, 2015)</ref>, layer normalization (LN) <ref type="bibr" target="#b3">(Ba et al., 2016)</ref>, weight normalization (WN) <ref type="bibr" target="#b31">(Salimans &amp; Kingma, 2016)</ref> and orthonormal regularization (orthonormal) <ref type="bibr" target="#b4">(Brock et al., 2016)</ref>. In order to evaluate the stand-alone efficacy of the gradient penalty, we also applied the gradient penalty term to the standard adversarial loss of GANs (15). We would refer to this method as 'GAN-GP'. For weight clipping, we followed the original work  and set the clipping constant c at 0.01 for the convolutional weight of each layer. For gradient penalty, we set λ to 10, as suggested in <ref type="bibr" target="#b12">Gulrajani et al. (2017)</ref>. For orthonormal, we initialized the each weight of D with a randomly selected orthonormal operator and trained GANs with the objective function augmented with the regularization term used in <ref type="bibr" target="#b4">Brock et al. (2016)</ref>. For all comparative studies throughout, we excluded the multiplier parameter γ in the weight normalization method, as well as in batch normalization and layer normalization method. This was done in order to prevent the methods from overtly violating the Lipschitz condition. When we experimented with different multiplier parameter, we were in fact not able to achieve any improvement.</p><p>For optimization, we used the Adam optimizer <ref type="bibr" target="#b18">Kingma &amp; Ba (2015)</ref> in all of our experiments. We tested with 6 settings for (1) n dis , the number of updates of the discriminator per one update of the generator and (2) learning rate α and the first and second order momentum parameters (β 1 , β 2 ) of Adam. We list the details of these settings in <ref type="table" target="#tab_0">Table 1</ref> in the appendix section. Out of these 6 settings, A, B, and C are the settings used in previous representative works. The purpose of the settings D, E, and F is to the evaluate the performance of the algorithms implemented with more aggressive learning rates. For the details of the architectures of convolutional networks deployed in the generator and the discriminator, we refer the readers to <ref type="table" target="#tab_2">Table 3</ref> in the appendix section. The number of updates for GAN generator were 100K for all experiments, unless otherwise noted.</p><p>Firstly, we inspected the spectral norm of each layer during the training to make sure that our spectral normalization procedure is indeed serving its purpose. As we can see in the <ref type="figure" target="#fig_8">Figure 9</ref> in the C.1, </p><formula xml:id="formula_18">A B C D E F (b) STL-10</formula><p>Figure 1: Inception scores on CIFAR-10 and STL-10 with different methods and hyperparameters (higher is better).</p><p>the spectral norms of these layers floats around 1-1.05 region throughout the training. Please see Appendix C.1 for more details.</p><p>In <ref type="figure" target="#fig_0">Figures 1 and 2</ref> we show the inception scores of each method with the settings A-F. We can see that spectral normalization is relatively robust with aggressive learning rates and momentum parameters. WGAN-GP fails to train good GANs at high learning rates and high momentum parameters on both CIFAR-10 and STL-10. Orthonormal regularization performed poorly for the setting E on the STL-10, but performed slightly better than our method with the optimal setting. These results suggests that our method is more robust than other methods with respect to the change in the setting of the training. Also, the optimal performance of weight normalization was inferior to both WGAN-GP and spectral normalization on STL-10, which consists of more diverse examples than CIFAR-10. Best scores of spectral normalization are better than almost all other methods on both CIFAR-10 and STL-10.</p><p>In Tables 2, we show the inception scores of the different methods with optimal settings on CIFAR-10 and STL-10 dataset. We see that SN-GANs performed better than almost all contemporaries on the optimal settings. SN-GANs performed even better with hinge loss (17). 4 . For the training with same number of iterations, SN-GANs fell behind orthonormal regularization for STL-10. For more detailed comparison between orthonormal regularization and spectral normalization, please see section 4.1.2.</p><p>In <ref type="figure" target="#fig_5">Figure 6</ref> we show the images produced by the generators trained with WGAN-GP, weight normalization, and spectral normalization. SN-GANs were consistently better than GANs with weight normalization in terms of the quality of generated images. To be more precise, as we mentioned in Section 3, the set of images generated by spectral normalization was clearer and more diverse than the images produced by the weight normalization. We can also see that WGAN-GP failed to train good GANs with high learning rates and high momentums (D,E and F). The generated images  with GAN-GP, batch normalization, and layer normalization is shown in <ref type="figure" target="#fig_0">Figure 12</ref> in the appendix section.</p><p>We also compared our algorithm against multiple benchmark methods ans summarized the results on the bottom half of the <ref type="table" target="#tab_1">Table 2</ref>. We also tested the performance of our method on ResNet based GANs used in <ref type="bibr" target="#b12">Gulrajani et al. (2017)</ref>. Please note that all methods listed thereof are all different in both optimization methods and the architecture of the model. Please see <ref type="table" target="#tab_3">Table 4</ref> and 5 in the appendix section for the detail network architectures. Our implementation of our algorithm was able to perform better than almost all the predecessors in the performance. . We scaled the singular values so that the largest singular values is equal to 1. For WN and SN, we calculated singular values of the normalized weight matrices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">ANALYSIS OF SN-GANS</head><p>Singular values analysis on the weights of the discriminator D In <ref type="figure" target="#fig_1">Figure 3</ref>, we show the squared singular values of the weight matrices in the final discriminator D produced by each method using the parameter that yielded the best inception score. As we predicted in Section 3, the singular values of the first to fifth layers trained with weight clipping and weight normalization concentrate on a few components. That is, the weight matrices of these layers tend to be rank deficit. On the other hand, the singular values of the weight matrices in those layers trained with spectral normalization is more broadly distributed. When the goal is to distinguish a pair of probability distributions on the low-dimensional nonlinear data manifold embedded in a high dimensional space, rank deficiencies in lower layers can be especially fatal. Outputs of lower layers have gone through only a few sets of rectified linear transformations, which means that they tend to lie on the space that is linear in most parts. Marginalizing out many features of the input distribution in such space can result in oversimplified discriminator. We can actually confirm the effect of this phenomenon on the generated images especially in <ref type="figure" target="#fig_5">Figure 6b</ref>. The images generated with spectral normalization is more diverse and complex than those generated with weight normalization.</p><p>Training time On CIFAR-10, SN-GANs is slightly slower than weight normalization (about 110 ∼ 120% computational time), but significantly faster than WGAN-GP. As we mentioned in Section 3, WGAN-GP is slower than other methods because WGAN-GP needs to calculate the gradient of gradient norm ∇ x D 2 . For STL-10, the computational time of SN-GANs is almost the same as vanilla GANs, because the relative computational cost of the power iteration (18) is negligible when compared to the cost of forward and backward propagation on CIFAR-10 (images size of STL-10 is larger (48 × 48)). Please see <ref type="figure" target="#fig_9">Figure 10</ref> in the appendix section for the actual computational time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">COMPARISON BETWEEN SN-GANS AND ORTHONORMAL REGULARIZATION</head><p>In order to highlight the difference between our spectral normalization and orthonormal regularization, we conducted an additional set of experiments. As we explained in Section 3, orthonormal regularization is different from our method in that it destroys the spectral information and puts equal emphasis on all feature dimensions, including the ones that 'shall' be weeded out in the training process. To see the extent of its possibly detrimental effect, we experimented by increasing the di- Inception score <ref type="figure">Figure 4</ref>: The effect on the performance on STL-10 induced by the change of the feature map dimension of the final layer. The width of the highlighted region represents standard deviation of the results over multiple seeds of weight initialization. The orthonormal regularization does not perform well with large feature map dimension, possibly because of its design that forces the discriminator to use all dimensions including the ones that are unnecessary. For the setting of the optimizers' hyper-parameters, We used the setting C, which was optimal for "orthonormal regularization"  mension of the feature space 6 , especially at the final layer (7th conv) for which the training with our spectral normalization prefers relatively small feature space (dimension &lt; 100; see <ref type="figure" target="#fig_1">Figure 3b</ref>). As for the setting of the training, we selected the parameters for which the orthonormal regularization performed optimally. The <ref type="figure">figure 4</ref> shows the result of our experiments. As we predicted, the performance of the orthonormal regularization deteriorates as we increase the dimension of the feature maps at the final layer. Our SN-GANs, on the other hand, does not falter with this modification of the architecture. Thus, at least in this perspective, we may such that our method is more robust with respect to the change of the network architecture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SN-GANs Orthonormal</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">IMAGE GENERATION ON IMAGENET</head><p>To show that our method remains effective on a large high dimensional dataset, we also applied our method to the training of conditional GANs on ILRSVRC2012 dataset with 1000 classes, each consisting of approximately 1300 images, which we compressed to 128 × 128 pixels. Regarding the adversarial loss for conditional GANs, we used practically the same formulation used in <ref type="bibr" target="#b22">Mirza &amp; Osindero (2014)</ref>, except that we replaced the standard GANs loss with hinge loss <ref type="formula" target="#formula_0">(17)</ref>. Please see Appendix B.3 for the details of experimental settings.</p><p>GANs without normalization and GANs with layer normalization collapsed in the beginning of training and failed to produce any meaningful images. GANs with orthonormal normalization <ref type="bibr" target="#b4">Brock et al. (2016)</ref> and our spectral normalization, on the other hand, was able to produce images. The inception score of the orthonormal normalization however plateaued around 20Kth iterations, while SN kept improving even afterward ( <ref type="figure" target="#fig_4">Figure 5</ref>.) To our knowledge, our research is the first of its kind in succeeding to produce decent images from ImageNet dataset with a single pair of a discriminator and a generator <ref type="figure" target="#fig_6">(Figure 7)</ref>. To measure the degree of mode-collapse, we followed the footstep of <ref type="bibr" target="#b27">Odena et al. (2017)</ref> and computed the intra MS-SSIM <ref type="bibr" target="#b27">Odena et al. (2017)</ref> for pairs of independently generated GANs images of each class. We see that our SN-GANs ((intra MS-SSIM)=0.101) is suffering less from the mode-collapse than AC-GANs ((intra MS-SSIM)∼0.25).</p><p>To ensure that the superiority of our method is not limited within our specific setting, we also compared the performance of SN-GANs against orthonormal regularization on conditional GANs with projection discriminator <ref type="bibr" target="#b23">(Miyato &amp; Koyama, 2018)</ref> as well as the standard (unconditional) GANs.</p><p>In our experiments, SN-GANs achieved better performance than orthonormal regularization for the both settings (See <ref type="figure" target="#fig_1">Figure 13</ref> in the appendix section).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUSION</head><p>This paper proposes spectral normalization as a stabilizer of training of GANs. When we apply spectral normalization to the GANs on image generation tasks, the generated examples are more diverse than the conventional weight normalization and achieve better or comparative inception scores relative to previous studies. The method imposes global regularization on the discriminator as opposed to local regularization introduced by WGAN-GP, and can possibly used in combinations. In the future work, we would like to further investigate where our methods stand amongst other methods on more theoretical basis, and experiment our algorithm on larger and more complex datasets.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A THE ALGORITHM OF SPECTRAL NORMALIZATION</head><p>Let us describe the shortcut in Section 2.1 in more detail. We begin with vectorsũ that is randomly initialized for each weight. If there is no multiplicity in the dominant singular values and ifũ is not orthogonal to the first left singular vectors 7 , we can appeal to the principle of the power method and produce the first left and right singular vectors through the following update rule:</p><formula xml:id="formula_19">v ← W Tũ / W Tũ 2 ,ũ ← Wṽ/ Wṽ 2 .<label>(18)</label></formula><p>We can then approximate the spectral norm of W with the pair of so-approximated singular vectors:</p><formula xml:id="formula_20">σ(W ) ≈ũ T Wṽ.<label>(19)</label></formula><p>If we use SGD for updating W , the change in W at each update would be small, and hence the change in its largest singular value. In our implementation, we took advantage of this fact and reused theũ computed at each step of the algorithm as the initial vector in the subsequent step. In fact, with this 'recycle' procedure, one round of power iteration was sufficient in the actual experiment to achieve satisfactory performance. Algorithm 1 in the appendix summarizes the computation of the spectrally normalized weight matrixW with this approximation. Note that this procedure is very computationally cheap even in comparison to the calculation of the forward and backward propagations on neural networks. Please see <ref type="figure" target="#fig_9">Figure 10</ref> for actual computational time with and without spectral normalization.</p><p>Algorithm 1 SGD with spectral normalization</p><p>• Initializeũ l ∈ R d l for l = 1, . . . , L with a random vector (sampled from isotropic distribution). • For each update and each layer l:</p><p>1. Apply power iteration method to a unnormalized weight W l :</p><formula xml:id="formula_21">v l ← (W l ) Tũ l / (W l ) Tũ l 2 (20) u l ← W lṽ l / W lṽ l 2<label>(21)</label></formula><p>2. CalculateW SN with the spectral norm:</p><formula xml:id="formula_22">W l SN (W l ) = W l /σ(W l ), where σ(W l ) =ũ T l W lṽ l<label>(22)</label></formula><p>3. Update W l with SGD on mini-batch dataset D M with a learning rate α:  <ref type="bibr" target="#b33">(Szegedy et al., 2015)</ref>, which we would refer to Inception model for short. In their work,  reported that this score is strongly correlated with subjective human judgment of image quality. Following the procedure in ; <ref type="bibr" target="#b38">Warde-Farley &amp; Bengio (2017)</ref>, we calculated the score for randomly generated 5000 examples from each trained generator to evaluate its ability to generate natural images. We repeated each experiment 10 times and reported the average and the standard deviation of the inception scores.</p><formula xml:id="formula_23">W l ← W l − α∇ W l (W l SN (W l ), D M )<label>(23</label></formula><p>Fréchet inception distance <ref type="bibr" target="#b14">(Heusel et al., 2017)</ref> is another measure for the quality of the generated examples that uses 2nd order information of the final layer of the inception model applied to the examples. On its own, the Frećhet distance <ref type="bibr" target="#b7">Dowson &amp; Landau (1982)</ref> is 2-Wasserstein distance between two distribution p 1 and p 2 assuming they are both multivariate Gaussian distributions:</p><formula xml:id="formula_24">F (p 1 , p 2 ) = µ p1 − µ p2 2 2 + trace C p1 + C p2 − 2(C p1 C p2 ) 1/2 ,<label>(24)</label></formula><p>where {µ p1 , C p1 }, {µ p2 , C p2 } are the mean and covariance of samples from q and p, respectively. If f is the output of the final layer of the inception model before the softmax, the Fréchet inception distance (FID) between two distributions p 1 and p 2 on the images is the distance between f •p 1 and f • p 2 . We computed the Fréchet inception distance between the true distribution and the generated distribution empirically over 10000 and 5000 samples. Multiple repetition of the experiments did not exhibit any notable variations on this score.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.2 IMAGE GENERATION ON CIFAR-10 AND STL-10</head><p>For the comparative study, we experimented with the recent ResNet architecture of <ref type="bibr" target="#b12">Gulrajani et al. (2017)</ref> as well as the standard CNN. For this additional set of experiments, we used Adam again for the optimization and used the very hyper parameter used in <ref type="bibr" target="#b12">Gulrajani et al. (2017)</ref> (α = 0.0002, β 1 = 0, β 2 = 0.9, n dis = 5). For our SN-GANs, we doubled the feature map in the generator from the original, because this modification achieved better results. Note that when we doubled the dimension of the feature map for the WGAN-GP experiment, however, the performance deteriorated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.3 IMAGE GENERATION ON IMAGENET</head><p>The images used in this set of experiments were resized to 128 × 128 pixels. The details of the architecture are given in <ref type="table">Table 6</ref>. For the generator network of conditional GANs, we used conditional batch normalization (CBN) <ref type="bibr" target="#b6">de Vries et al., 2017)</ref>. Namely we replaced the standard batch normalization layer with the CBN conditional to the label information y ∈ {1, . . . , 1000}. For the optimization, we used Adam with the same hyperparameters we used for ResNet on CIFAR-10 and STL-10 dataset. We trained the networks with 450K generator updates, and applied linear decay for the learning rate after 400K iterations so that the rate would be 0 at the end.    <ref type="table">Table 6</ref>: ResNet architectures for image generation on ImageNet dataset. For the generator of conditional GANs, we replaced the usual batch normalization layer in the ResBlock with the conditional batch normalization layer. As for the model of the projection discriminator, we used the same architecture used in <ref type="bibr" target="#b23">Miyato &amp; Koyama (2018)</ref>. Please see the paper for the details.  <ref type="figure" target="#fig_8">Figure 9</ref> shows the spectral norm of each layer in the discriminator over the course of the training. The setting of the optimizer is C in <ref type="table" target="#tab_0">Table 1</ref> throughout the training. In fact, they do not deviate by more than 0.05 for the most part. As an exception, 6 and 7-th convolutional layers with largest rank deviate by more than 0.1 in the beginning of the training, but the norm of this layer too stabilizes around 1 after some iterations.   <ref type="figure">Figure 11</ref> shows the effect of n dis on the performance of weight normalization and spectral normalization. All results shown in <ref type="figure">Figure 11</ref> follows setting D, except for the value of n dis . For WN, the performance deteriorates with larger n dis , which amounts to computing minimax with better accuracy. Our SN does not suffer from this unintended effect. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.4 NETWORK ARCHITECTURES</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D SPECTRAL NORMALIZATION VS OTHER REGULARIZATION TECHNIQUES</head><p>This section is dedicated to the comparative study of spectral normalization and other regularization methods for discriminators. In particular, we will show that contemporary regularizations including weight normalization and weight clipping implicitly impose constraints on weight matrices that places unnecessary restriction on the search space of the discriminator. More specifically, we will show that weight normalization and weight clipping unwittingly favor low-rank weight matrices. This can force the trained discriminator to be largely dependent on select few features, rendering the algorithm to be able to match the model distribution with the target distribution only on very low dimensional feature space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.1 WEIGHT NORMALIZATION AND FROBENIUS NORMALIZATION</head><p>The weight normalization introduced by <ref type="bibr" target="#b31">Salimans &amp; Kingma (2016)</ref> is a method that normalizes the 2 norm of each row vector in the weight matrix 8 :</p><formula xml:id="formula_25">W WN := w T 1 ,w T 2 , ...,w T do T , wherew i (w i ) := w i / w i 2 ,<label>(25)</label></formula><p>wherew i and w i are the ith row vector ofW WN and W , respectively.</p><p>Still another technique to regularize the weight matrix is to use the Frobenius norm:</p><formula xml:id="formula_26">W FN := W/ W F ,<label>(26)</label></formula><p>where W F := tr(W T W ) = i,j w 2 ij .</p><p>Originally, these regularization techniques were invented with the goal of improving the generalization performance of supervised training <ref type="bibr" target="#b31">(Salimans &amp; Kingma, 2016;</ref><ref type="bibr" target="#b2">Arpit et al., 2016)</ref>. However, recent works in the field of GANs <ref type="bibr" target="#b39">Xiang &amp; Li, 2017)</ref> found their another raison d'etat as a regularizer of discriminators, and succeeded in improving the performance of the original.</p><p>These methods in fact can render the trained discriminator D to be K-Lipschitz for a some prescribed K and achieve the desired effect to a certain extent. However, weight normalization (25) imposes the following implicit restriction on the choice ofW WN :</p><formula xml:id="formula_27">σ 1 (W WN ) 2 + σ 2 (W WN ) 2 + · · · + σ T (W WN ) 2 = d o , where T = min(d i , d o ),<label>(27)</label></formula><p>where σ t (A) is a t-th singular value of matrix A. The above equation holds because</p><formula xml:id="formula_28">min(di,do) t=1 σ t (W WN ) 2 = tr(W WNW T WN ) = do i=1 wi wi 2 w T i wi 2 = d o .</formula><p>Under this restriction, the norm W WN h 2 for a fixed unit vector h is maximized at</p><formula xml:id="formula_29">W WN h 2 = √ d o when σ 1 (W WN ) = √</formula><p>d o and σ t (W WN ) = 0 for t = 2, . . . , T , which means thatW WN is of rank one. Using such W corresponds to using only one feature to discriminate the model probability distribution from the target. Similarly, Frobenius normalization requires σ 1 (W FN ) 2 +σ 2 (W FN ) 2 +· · ·+σ T (W FN ) 2 = 1, and the same argument as above follows.</p><p>Here, we see a critical problem in these two regularization methods. In order to retain as much norm of the input as possible and hence to make the discriminator more sensitive, one would hope to make the norm ofW WN h large. For weight normalization, however, this comes at the cost of reducing the rank and hence the number of features to be used for the discriminator. Thus, there is a conflict of interests between weight normalization and our desire to use as many features as possible to distinguish the generator distribution from the target distribution. The former interest often reigns over the other in many cases, inadvertently diminishing the number of features to be used by the discriminators. Consequently, the algorithm would produce a rather arbitrary model distribution that matches the target distribution only at select few features.</p><p>Our spectral normalization, on the other hand, do not suffer from such a conflict in interest. Note that the Lipschitz constant of a linear operator is determined only by the maximum singular value. In other words, the spectral norm is independent of rank. Thus, unlike the weight normalization, our spectral normalization allows the parameter matrix to use as many features as possible while satisfying local 1-Lipschitz constraint. Our spectral normalization leaves more freedom in choosing the number of singular components (features) to feed to the next layer of the discriminator.</p><p>To see this more visually, we refer the reader to <ref type="figure" target="#fig_11">Figure (14)</ref>. Note that spectral normalization allows for a wider range of choices than weight normalization. For the set of singular values permitted under the spectral normalization condition, we scaledW WN by 1/ √ d o so that its spectral norm is exactly 1. By the definition of the weight normalization, the area under the blue curves are all bound to be 1. Note that the range of choice for the weight normalization is small.</p><p>In summary, weight normalization and Frobenius normalization favor skewed distributions of singular values, making the column spaces of the weight matrices lie in (approximately) low dimensional vector spaces. On the other hand, our spectral normalization does not compromise the number of feature dimensions used by the discriminator. In fact, we will experimentally show that GANs trained with our spectral normalization can generate a synthetic dataset with wider variety and higher inception score than the GANs trained with other two regularization methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.2 WEIGHT CLIPPING</head><p>Still another regularization technique is weight clipping introduced by  in their training of Wasserstein GANs. Weight clipping simply truncates each element of weight matrices so that its absolute value is bounded above by a prescribed constant c ∈ R + . Unfortunately, weight clipping suffers from the same problem as weight normalization and Frobenius normalization. With weight clipping with the truncation value c, the value W x 2 for a fixed unit vector x is maximized when the rank of W is again one, and the training will again favor the discriminators that use only select few features. <ref type="bibr" target="#b12">Gulrajani et al. (2017)</ref> refers to this problem as capacity underuse problem. They also reported that the training of WGAN with weight clipping is slower than that of the original DCGAN .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.3 SINGULAR VALUE CLIPPING AND SINGULAR VALUE CONSTRAINT</head><p>One direct and straightforward way of controlling the spectral norm is to clip the singular values <ref type="bibr" target="#b30">(Saito et al., 2017)</ref>, <ref type="bibr" target="#b17">(Jia et al., 2017)</ref>. This approach, however, is computationally heavy because one needs to implement singular value decomposition in order to compute all the singular values.</p><p>A similar but less obvious approach is to parametrize W ∈ R do×di as follows from the get-go and train the discriminators with this constrained parametrization:</p><formula xml:id="formula_30">W := U SV T , subject to U T U = I, V T V = I, max i S ii = K,<label>(28)</label></formula><p>where U ∈ R do×P , V ∈ R di×P , and S ∈ R P ×P is a diagonal matrix. However, it is not a simple task to train this model while remaining absolutely faithful to this parametrization constraint. Our spectral normalization, on the other hand, can carry out the updates with relatively low computational cost without compromising the normalization constraint.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.4 WGAN WITH GRADIENT PENALTY (WGAN-GP)</head><p>Recently, <ref type="bibr" target="#b12">Gulrajani et al. (2017)</ref> introduced a technique to enhance the stability of the training of Wasserstein GANs . In their work, they endeavored to place K-Lipschitz constraint (5) on the discriminator by augmenting the adversarial loss function with the following regularizer function:</p><formula xml:id="formula_31">λ Ê x∼px [( ∇xD(x) 2 − 1) 2 ],<label>(29)</label></formula><p>where λ &gt; 0 is a balancing coefficient andx is:</p><formula xml:id="formula_32">x := x + (1 − )x (30) where ∼ U [0, 1], x ∼ p data ,x = G(z), z ∼ p z .<label>(31)</label></formula><p>Using this augmented objective function, <ref type="bibr" target="#b12">Gulrajani et al. (2017)</ref> succeeded in training a GAN based on ResNet <ref type="bibr" target="#b13">(He et al., 2016)</ref> with an impressive performance. The advantage of their method in comparison to spectral normalization is that they can impose local 1-Lipschitz constraint directly on the discriminator function without a rather round-about layer-wise normalization. This suggest that their method is less likely to underuse the capacity of the network structure.</p><p>At the same time, this type of method that penalizes the gradients at sample pointsx suffers from the obvious problem of not being able to regularize the function at the points outside of the support of the current generative distribution. In fact, the generative distribution and its support gradually changes in the course of the training, and this can destabilize the effect of the regularization itself.</p><p>On the contrary, our spectral normalization regularizes the function itself, and the effect of the regularization is more stable with respect to the choice of the batch. In fact, we observed in the experiment that a high learning rate can destabilize the performance of WGAN-GP. Training with our spectral normalization does not falter with aggressive learning rate.</p><p>Moreover, WGAN-GP requires more computational cost than our spectral normalization with single-step power iteration, because the computation of ∇ x D 2 requires one whole round of forward and backward propagation. In <ref type="figure" target="#fig_9">Figure 10</ref>, we compare the computational cost of the two methods for the same number of updates.</p><p>Having said that, one shall not rule out the possibility that the gradient penalty can compliment spectral normalization and vice versa. Because these two methods regularizes discriminators by completely different means, and in the experiment section, we actually confirmed that combination of WGAN-GP and reparametrization with spectral normalization improves the quality of the generated examples over the baseline (WGAN-GP only).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E REPARAMETRIZATION MOTIVATED BY THE SPECTRAL NORMALIZATION</head><p>We can take advantage of the regularization effect of the spectral normalization we saw above to develop another algorithm. Let us consider another parametrization of the weight matrix of the discriminator given by:W</p><formula xml:id="formula_33">:= γW SN<label>(32)</label></formula><p>where γ is a scalar variable to be learned. This parametrization compromises the 1-Lipschitz constraint at the layer of interest, but gives more freedom to the model while keeping the model from becoming degenerate. For this reparametrization, we need to control the Lipschitz condition by other means, such as the gradient penalty <ref type="bibr" target="#b12">(Gulrajani et al., 2017)</ref>. Indeed, we can think of analogous versions of reparametrization by replacingW SN in (32) with W normalized by other criterions. The extension of this form is not new. In <ref type="bibr" target="#b31">Salimans &amp; Kingma (2016)</ref>, they originally introduced weight normalization in order to derive the reparametrization of the form (32) withW SN replaced (32) by W WN and vectorized γ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E.1 EXPERIMENTS: COMPARISON OF REPARAMETRIZATION WITH DIFFERENT</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>NORMALIZATION METHODS</head><p>In this part of the addendum, we experimentally compare the reparametrizations derived from two different normalization methods (weight normalization and spectral normalization). We tested the reprametrization methods for the training of the discriminator of WGAN-GP. For the architecture of the network in WGAN-GP, we used the same CNN we used in the previous section. For the ResNet-based CNN, we used the same architecture provided by <ref type="bibr">(Gulrajani et al., 2017) 9</ref> .</p><p>Tables 7, 8 summarize the result. We see that our method significantly improves the inception score from the baseline on the regular CNN, and slightly improves the score on the ResNet based CNN. <ref type="figure" target="#fig_4">Figure 15</ref> shows the learning curves of (a) critic losses, on train and validation sets and (b) the inception scores with different reparametrization methods. We can see the beneficial effect of spectral normalization in the learning curve of the discriminator as well. We can verify in the figure 15a that the discriminator with spectral normalization overfits less to the training dataset than the discriminator without reparametrization and with weight normalization, The effect of overfitting can be observed on inception score as well, and the final score with spectral normalization is better than the others. As for the best inception score achieved in the course of the training, spectral normalization achieved 7.28, whereas the spectral normalization and vanilla normalization achieved 7.04 and 6.69, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F THE GRADIENT OF GENERAL NORMALIZATION METHOD</head><p>Let us denoteW := W/N (W ) to be the normalized weight where N (W ) to be a scalar normalized coefficient (e.g. Spectral norm or Frobenius norm). In general, we can write the derivative of loss</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>FIDs on CIFAR-10 and STL-10 with different methods and hyperparameters (lower is better).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Squared singular values of weight matrices trained with different methods: Weight clipping (WC), Weight Normalization (WN) and Spectral Normalization (SN)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Learning curves for conditional image generation in terms of Inception score for SN-GANs and GANs with orthonormal regularization on ImageNet.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Generated images on different methods: WGAN-GP, weight normalization, and spectral normalization on CIFAR-10 and STL-10.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>128x128 pixel images generated by SN-GANs trained on ILSVRC2012 dataset. The inception score is 21.1±.35.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>introduced originally by Salimans et al. (2016): I({x n } N n=1 ) := exp(E[D KL [p(y|x)||p(y)]]), where p(y) is approximated by 1 N N n=1 p(y|x n ) and p(y|x) is the trained Inception convolutional neural network</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 :</head><label>9</label><figDesc>Spectral norms of all seven convolutional layers in the standard CNN during course of the training on CIFAR 10.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 10 :</head><label>10</label><figDesc>Computational time for 100 updates. We set n dis = 5 C.3 THE EFFECT OF n dis ON SPECTRAL NORMALIZATION AND WEIGHT NORMALIZATION</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 11 :Figure 12 :Figure 13 :</head><label>111213</label><figDesc>The effect of n dis on spectral normalization and weight normalization. The shaded region represents the variance of the result over different seeds.C.4 GENERATED IMAGES ON CIFAR10 WITH GAN-GP, LAYER NORMALIZATION AND BATCH NORMALIZATION Generated images with GAN-GP, Layer Norm and Batch Norm on CIFAR-Learning curves in terms of Inception score for SN-GANs and GANs with orthonormal regularization on ImageNet. The figure (a) shows the results for the standard (unconditional) GANs, and the figure (b) shows the results for the conditional GANs trained with projection discriminator<ref type="bibr" target="#b23">(Miyato &amp; Koyama, 2018)</ref> </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 14 :</head><label>14</label><figDesc>Visualization of the difference between spectral normalization (Red) and weight normalization (Blue) on possible sets of singular values. The possible sets of singular values plotted in increasing order for weight normalization (Blue) and for spectral normalization (Red).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Hyper-parameter settings we tested in our experiments. †, ‡ and are the hyperparameter settings following<ref type="bibr" target="#b12">Gulrajani et al. (2017)</ref>,<ref type="bibr" target="#b38">Warde-Farley &amp; Bengio (2017)</ref> and, respectively.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">Setting</cell><cell></cell><cell>α</cell><cell>β1</cell><cell cols="3">β2 n dis</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>A  †</cell><cell></cell><cell cols="3">0.0001 0.5</cell><cell>0.9</cell><cell></cell><cell>5</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>B  ‡</cell><cell></cell><cell cols="4">0.0001 0.5 0.999</cell><cell></cell><cell>1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>C</cell><cell></cell><cell cols="4">0.0002 0.5 0.999</cell><cell></cell><cell>1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>D</cell><cell></cell><cell></cell><cell cols="2">0.001 0.5</cell><cell>0.9</cell><cell></cell><cell>5</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>E</cell><cell></cell><cell></cell><cell cols="3">0.001 0.5 0.999</cell><cell></cell><cell>5</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>F</cell><cell></cell><cell></cell><cell cols="3">0.001 0.9 0.999</cell><cell></cell><cell>5</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Inception score</cell><cell>0 1 2 3 4 5 6 7 8</cell><cell>Weight clip.</cell><cell>GAN-GP</cell><cell>WGAN-GP</cell><cell>BN</cell><cell>LN</cell><cell>WN</cell><cell>Orthonormal</cell><cell>SN</cell><cell>A B C D E F</cell><cell>Inception score</cell><cell>0 1 2 3 4 5 6 7 9 8</cell><cell>Weight clip.</cell><cell>WGAN-GP</cell><cell>LN</cell><cell>WN</cell><cell>Orthonormal</cell><cell>SN</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="3">(a) CIFAR-10</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>Inception scores and FIDs with unsupervised image generation on CIFAR-10. † (Radford et al., 2016) (experimented by Yang et al. (2017)), ‡ (Yang et al., 2017), * (Warde-Farley &amp; Bengio, 2017), † † (Gulrajani et al., 2017)</figDesc><table><row><cell>Method</cell><cell cols="3">Inception score CIFAR-10 STL-10 CIFAR-10 FID</cell><cell>STL-10</cell></row><row><cell>Real data</cell><cell cols="2">11.24±.12 26.08±.26</cell><cell>7.8</cell><cell>7.9</cell></row><row><cell>-Standard CNN-</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Weight clipping</cell><cell>6.41±.11</cell><cell>7.57±.10</cell><cell>42.6</cell><cell>64.2</cell></row><row><cell>GAN-GP</cell><cell>6.93±.08</cell><cell></cell><cell>37.7</cell><cell></cell></row><row><cell>WGAN-GP</cell><cell>6.68±.06</cell><cell>8.42±.13</cell><cell>40.2</cell><cell>55.1</cell></row><row><cell>Batch Norm.</cell><cell>6.27±.10</cell><cell></cell><cell>56.3</cell><cell></cell></row><row><cell>Layer Norm.</cell><cell>7.19±.12</cell><cell>7.61±.12</cell><cell>33.9</cell><cell>75.6</cell></row><row><cell>Weight Norm.</cell><cell>6.84±.07</cell><cell>7.16±.10</cell><cell>34.7</cell><cell>73.4</cell></row><row><cell>Orthonormal</cell><cell>7.40±.12</cell><cell>8.56±.07</cell><cell>29.0</cell><cell>46.7</cell></row><row><cell>(ours) SN-GANs</cell><cell>7.42±.08</cell><cell>8.28±.09</cell><cell>29.3</cell><cell>53.1</cell></row><row><cell>Orthonormal (2x updates)</cell><cell></cell><cell>8.67±.08</cell><cell></cell><cell>44.2</cell></row><row><cell>(ours) SN-GANs (2x updates)</cell><cell></cell><cell>8.69±.09</cell><cell></cell><cell>47.5</cell></row><row><cell>(ours) SN-GANs, Eq.(17)</cell><cell>7.58±.12</cell><cell></cell><cell>25.5</cell><cell></cell></row><row><cell>(ours) SN-GANs, Eq.(17) (2x updates)</cell><cell></cell><cell>8.79±.14</cell><cell></cell><cell>43.2</cell></row><row><cell>-ResNet-5</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Orthonormal, Eq.(17)</cell><cell>7.92±.04</cell><cell>8.72±.06</cell><cell cols="2">23.8±.58 42.4±.99</cell></row><row><cell>(ours) SN-GANs, Eq.(17)</cell><cell>8.22±.05</cell><cell>9.10±.04</cell><cell cols="2">21.7±.21 40.1±.50</cell></row><row><cell>DCGAN  †</cell><cell>6.64±.14</cell><cell>7.84±.07</cell><cell></cell><cell></cell></row><row><cell>LR-GANs  ‡</cell><cell>7.17±.07</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Warde-Farley et al.  *</cell><cell>7.72±.13</cell><cell>8.51±.13</cell><cell></cell><cell></cell></row><row><cell>WGAN-GP (ResNet)  † †</cell><cell>7.86±.08</cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 :</head><label>3</label><figDesc>Standard CNN models for CIFAR-10 and STL-10 used in our experiments on image Generation. The slopes of all lReLU functions in the networks are set to 0.1.</figDesc><table><row><cell></cell><cell>RGB image x ∈ R M ×M ×3</cell></row><row><cell>z ∈ R 128 ∼ N (0, I)</cell><cell>3×3, stride=1 conv 64 lReLU</cell></row><row><cell>dense → M g × M g × 512</cell><cell>4×4, stride=2 conv 64 lReLU</cell></row><row><cell>4×4, stride=2 deconv. BN 256 ReLU</cell><cell>3×3, stride=1 conv 128 lReLU 4×4, stride=2 conv 128 lReLU</cell></row><row><cell>4×4, stride=2 deconv. BN 128 ReLU</cell><cell>3×3, stride=1 conv 256 lReLU</cell></row><row><cell>4×4, stride=2 deconv. BN 64 ReLU</cell><cell>4×4, stride=2 conv 256 lReLU</cell></row><row><cell>3×3, stride=1 conv. 3 Tanh</cell><cell>3×3, stride=1 conv. 512 lReLU</cell></row><row><cell>(a) Generator, Mg = 4 for SVHN and CIFAR10, and</cell><cell>dense → 1</cell></row><row><cell>Mg = 6 for STL-10</cell><cell>(b) Discriminator, M = 32 for SVHN and CIFAR10,</cell></row><row><cell></cell><cell>and M = 48 for STL-10</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4 :</head><label>4</label><figDesc>ResNet architectures for CIFAR10 dataset. We use similar architectures to the ones used in<ref type="bibr" target="#b12">Gulrajani et al. (2017)</ref>.</figDesc><table><row><cell></cell><cell>RGB image x ∈ R 32×32×3</cell></row><row><cell>z ∈ R 128 ∼ N (0, I)</cell><cell>ResBlock down 128</cell></row><row><cell>dense, 4 × 4 × 256</cell><cell>ResBlock down 128</cell></row><row><cell>ResBlock up 256</cell><cell>ResBlock 128</cell></row><row><cell>ResBlock up 256</cell><cell>ResBlock 128</cell></row><row><cell>ResBlock up 256</cell><cell>ReLU</cell></row><row><cell>BN, ReLU, 3×3 conv, 3 Tanh</cell><cell>Global sum pooling</cell></row><row><cell>(a) Generator</cell><cell>dense → 1</cell></row><row><cell></cell><cell>(b) Discriminator</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5 :</head><label>5</label><figDesc>ResNet architectures for STL-10 dataset.</figDesc><table><row><cell></cell><cell>RGB image x ∈ R 48×48×3</cell></row><row><cell>z ∈ R 128 ∼ N (0, I) dense, 6 × 6 × 512 ResBlock up 256 ResBlock up 128 ResBlock up 64 BN, ReLU, 3×3 conv, 3 Tanh</cell><cell>ResBlock down 64 ResBlock down 128 ResBlock down 256 ResBlock down 512 ResBlock 1024 ReLU Global sum pooling</cell></row><row><cell>(a) Generator</cell><cell>dense → 1</cell></row><row><cell></cell><cell>(b) Discriminator</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">For examples, ReLU<ref type="bibr" target="#b16">(Jarrett et al., 2009;</ref><ref type="bibr" target="#b25">Nair &amp; Hinton, 2010;</ref><ref type="bibr" target="#b9">Glorot et al., 2011)</ref> and leakyReLU (Maas  et al., 2013)  satisfies the condition, and many popular activation functions satisfy K-Lipschitz constraint for some predefined K as well.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">Indeed, when the spectrum has multiplicities, we would be looking at subgradients here. However, the probability of this happening is zero (almost surely), so we would continue discussions without giving considerations to such events.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">Note that, since we are conducting the convolution discretely, the spectral norm will depend on the size of the stride and padding. However, the answer will only differ by some predefined K.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">As for STL-10, we also ran SN-GANs over twice time longer iterations because it did not seem to converge. Yet still, this elongated training sequence still completes before WGAN-GP with original iteration size because the optimal setting of SN-GANs (setting B, n dis = 1) is computationally light.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5">For our ResNet experiments, we trained the same architecture with multiple random seeds for weight initialization and produced models with different parameters. We then generated 5000 images 10 times and computed the average inception score for each model. The values for ResNet on the table are the mean and standard deviation of the score computed over the set of models trained with different seeds.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6">More precisely, we simply increased the input dimension and the output dimension by the same factor. InFigure 4, 'relative size' = 1.0 implies that the layer structure is the same as the original.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7">In practice, we are safe to assume thatũ generated from uniform distribution on the sphere is not orthogonal to the first singular vectors, because this can happen with probability 0.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8">In the original literature, the weight normalization was introduced as a method for reparametrization of theformWWN := γ1w T 1 , γ2w T 2 , ..., γ dow T doT where γi ∈ R is to be learned in the course of the training. In this work, we deal with the case γi = 1 so that we can assess the methods under the Lipschitz constraint.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9">We implement our method based on the open-sourced code provided by the author (Gulrajani et al., 2017) https://github.com/igul222/improved_wgan_training/blob/master/ gan_cifar_resnet.py</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We would like to thank the members of Preferred Networks, Inc., particularly Shin-ichi Maeda, Eiichi Matsumoto, Masaki Watanabe and Keisuke Yahata for insightful comments and discussions. We also would like to thank anonymous reviewers and commenters on the OpenReview forum for insightful discussions.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Method</head><p>Inception score FID    <ref type="bibr" target="#b27">(Odena et al., 2017)</ref>.</p><p>with respect to unnormalized weight W as follows:</p><p>where α := 1/N (W ) and λ := trace (∇W V ) TW . The gradient ∇W V is calculated byÊ δh T where δ := ∂V (G, D)/∂ W h T , h is the hidden node in the network to be transformed byW andÊ represents empirical expectation over the mini-batch. When N (W ) := W F , the derivative is:</p><p>and when N (W ) := W 2 = σ(W ),</p><p>Notice that, at least for the case N (W ) := W F or N (W ) := W 2 , the point of this gradient is given by :</p><p>where ∃ k ∈ R</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Towards principled methods for training generative adversarial networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Arjovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Léon</forename><surname>Bottou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICLR</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Wasserstein generative adversarial networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Arjovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Soumith</forename><surname>Chintala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Léon</forename><surname>Bottou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="214" to="223" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Normalization propagation: A parametric technique for removing internal covariate shift in deep networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Devansh</forename><surname>Arpit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yingbo</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Bhargava</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Venu</forename><surname>Kota</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Govindaraju</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="1168" to="1176" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jimmy</forename><forename type="middle">Lei</forename><surname>Ba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jamie</forename><forename type="middle">Ryan</forename><surname>Kiros</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoffrey</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1607.06450</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">Layer normalization. arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Brock</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Theodore</forename><surname>Lim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>James</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nick</forename><surname>Ritchie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Weston</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1609.07093</idno>
		<title level="m">Neural photo editing with introspective adversarial networks</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An analysis of single-layer networks in unsupervised feature learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Coates</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Honglak</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AISTATS</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="215" to="223" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Modulating early visual processing by language</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Florian</forename><surname>Harm De Vries</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jérémie</forename><surname>Strub</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugo</forename><surname>Mary</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Olivier</forename><surname>Larochelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron C</forename><surname>Pietquin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Courville</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="6576" to="6586" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The fréchet distance between multivariate normal distributions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Dc Dowson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Landau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Multivariate Analysis</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="450" to="455" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A learned representation for artistic style</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathon</forename><surname>Vincent Dumoulin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Manjunath</forename><surname>Shlens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kudlur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICLR</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Deep sparse rectifier neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xavier</forename><surname>Glorot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Antoine</forename><surname>Bordes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AISTATS</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="315" to="323" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Eigenvalue computation in the 20th century</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Gene</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Golub</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Henk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Van Der</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Vorst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational and Applied Mathematics</title>
		<imprint>
			<biblScope unit="volume">123</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="35" to="65" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Generative adversarial nets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ian</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jean</forename><surname>Pouget-Abadie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mehdi</forename><surname>Mirza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bing</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Warde-Farley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sherjil</forename><surname>Ozair</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron</forename><surname>Courville</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="2672" to="2680" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ishaan</forename><surname>Gulrajani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Faruk</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Arjovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vincent</forename><surname>Dumoulin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron</forename><surname>Courville</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1704.00028</idno>
		<title level="m">Improved training of wasserstein GANs</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Deep residual learning for image recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kaiming</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiangyu</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shaoqing</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jian</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="770" to="778" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">GANs trained by a two time-scale update rule converge to a nash equilibrium</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Heusel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hubert</forename><surname>Ramsauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Unterthiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernhard</forename><surname>Nessler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Günter</forename><surname>Klambauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sepp</forename><surname>Hochreiter</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1706.08500</idno>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Sergey Ioffe and Christian Szegedy. Batch normalization: Accelerating deep network training by reducing internal covariate shift</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><surname>Ho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefano</forename><surname>Ermon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="448" to="456" />
		</imprint>
	</monogr>
	<note>ICML</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">What is the best multi-stage architecture for object recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kevin</forename><surname>Jarrett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Koray</forename><surname>Kavukcuoglu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc&amp;apos;aurelio</forename><surname>Ranzato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yann</forename><surname>Lecun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCV</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="2146" to="2153" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Improving training of deep neural networks via singular value bounding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kui</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dacheng</forename><surname>Tao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shenghua</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiangmin</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Adam: A method for stochastic optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Diederik</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jimmy</forename><surname>Ba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICLR</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Adversarial learning for neural dialogue generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiwei</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Will</forename><surname>Monroe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tianlin</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><surname>Ritter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Jurafsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="2147" to="2159" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jae</forename><forename type="middle">Hyun</forename><surname>Lim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jong</forename><surname>Chul Ye</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1705.02894</idno>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">Geometric GAN. arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Rectifier nonlinearities improve neural network acoustic models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Andrew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Maas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Awni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew Y</forename><surname>Hannun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML Workshop on Deep Learning for Audio, Speech and Language Processing</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mehdi</forename><surname>Mirza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Simon</forename><surname>Osindero</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1411.1784</idno>
		<title level="m">Conditional generative adversarial nets</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">cGANs with projection discriminator</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Takeru</forename><surname>Miyato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Masanori</forename><surname>Koyama</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICLR</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Learning in implicit generative models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shakir</forename><surname>Mohamed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Balaji</forename><surname>Lakshminarayanan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">NIPS Workshop on Adversarial Training</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Rectified linear units improve restricted boltzmann machines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vinod</forename><surname>Nair</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoffrey</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="807" to="814" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Training generative neural samplers using variational divergence minimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sebastian</forename><surname>Nowozin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Botond</forename><surname>Cseke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ryota</forename><surname>Tomioka. F-Gan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="271" to="279" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Conditional image synthesis with auxiliary classifier GANs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Augustus</forename><surname>Odena</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><surname>Olah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathon</forename><surname>Shlens</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1701.06264</idno>
	</analytic>
	<monogr>
		<title level="m">Guo-Jun Qi. Loss-sensitive generative adversarial networks on lipschitz densities</title>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="2642" to="2651" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>ICML</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Unsupervised representation learning with deep convolutional generative adversarial networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alec</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luke</forename><surname>Metz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Soumith</forename><surname>Chintala</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICLR</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Imagenet large scale visual recognition challenge</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Olga</forename><surname>Russakovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jia</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hao</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><surname>Krause</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sanjeev</forename><surname>Satheesh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sean</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhiheng</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrej</forename><surname>Karpathy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aditya</forename><surname>Khosla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Bernstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><forename type="middle">C</forename><surname>Berg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Li</forename><surname>Fei-Fei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Computer Vision</title>
		<imprint>
			<biblScope unit="volume">115</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="211" to="252" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Temporal generative adversarial nets with singular value clipping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Masaki</forename><surname>Saito</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eiichi</forename><surname>Matsumoto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shunta</forename><surname>Saito</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCV</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Weight normalization: A simple reparameterization to accelerate training of deep neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Salimans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Diederik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kingma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="901" to="909" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Improved techniques for training GANs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Salimans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ian</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wojciech</forename><surname>Zaremba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vicki</forename><surname>Cheung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alec</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xi</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="2226" to="2234" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Going deeper with convolutions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Szegedy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yangqing</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pierre</forename><surname>Sermanet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Scott</forename><surname>Reed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dragomir</forename><surname>Anguelov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dumitru</forename><surname>Erhan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vincent</forename><surname>Vanhoucke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Rabinovich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Chainer: a next-generation open source framework for deep learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Seiya</forename><surname>Tokui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenta</forename><surname>Oono</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shohei</forename><surname>Hido</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Justin</forename><surname>Clayton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of workshop on machine learning systems (LearningSys) in the twentyninth annual conference on neural information processing systems (NIPS)</title>
		<meeting>workshop on machine learning systems (LearningSys) in the twentyninth annual conference on neural information processing systems (NIPS)</meeting>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">80 million tiny images: A large data set for nonparametric object and scene recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Antonio</forename><surname>Torralba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rob</forename><surname>Fergus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William T</forename><surname>Freeman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1958" to="1970" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dustin</forename><surname>Tran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rajesh</forename><surname>Ranganath</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">M</forename><surname>Blei</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1702.08896</idno>
		<title level="m">Deep and hierarchical implicit models</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Generative adversarial nets from a density ratio estimation perspective</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Masatoshi</forename><surname>Uehara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Issei</forename><surname>Sato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Masahiro</forename><surname>Suzuki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kotaro</forename><surname>Nakayama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yutaka</forename><surname>Matsuo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">NIPS Workshop on Adversarial Training</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Improving generative adversarial networks with denoising feature matching</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Warde</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-</forename><surname>Farley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICLR</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">On the effect of batch normalization and weight normalization in generative adversarial networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sitao</forename><surname>Xiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hao</forename><surname>Li</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1704.03971</idno>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">LR-GAN: Layered recursive generative adversarial networks for image generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jianwei</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anitha</forename><surname>Kannan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dhruv</forename><surname>Batra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Devi</forename><surname>Parikh</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuichi</forename><surname>Yoshida</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Takeru</forename><surname>Miyato</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1705.10941</idno>
		<title level="m">Spectral norm regularization for improving the generalizability of deep learning</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">/</forename><surname>Wgan-Gp W</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Wn</surname></persName>
		</author>
		<idno>train) WGAN-GP w/ WN</idno>
		<imprint/>
	</monogr>
	<note>valid</note>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">/</forename><surname>Wgan-Gp W</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sn</surname></persName>
		</author>
		<idno>train) WGAN-GP w/ SN</idno>
		<imprint/>
	</monogr>
	<note>valid</note>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Learning curves of (a) critic loss and (b) inception score on different reparametrization method on CIFAR-10 ; weight normalization (WGAN-GP w/ WN), spectral normalization</title>
	</analytic>
	<monogr>
		<title level="j">Figure</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
		</imprint>
	</monogr>
	<note>and parametrization free (WGAN-GP</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
