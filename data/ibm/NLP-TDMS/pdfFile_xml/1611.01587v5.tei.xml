<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Joint Many-Task Model: Growing a Neural Network for Multiple NLP Tasks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kazuma</forename><surname>Hashimoto</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Caiming</forename><surname>Xiong</surname></persName>
							<email>cxiong@salesforce.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshimasa</forename><surname>Tsuruoka</surname></persName>
							<email>tsuruoka@logos.t.u-tokyo.ac.jp</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><surname>Socher</surname></persName>
							<email>rsocher@salesforce.com</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">The University of Tokyo</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Salesforce Research</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">A Joint Many-Task Model: Growing a Neural Network for Multiple NLP Tasks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-25T21:40+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Transfer and multi-task learning have traditionally focused on either a single source-target pair or very few, similar tasks. Ideally, the linguistic levels of morphology, syntax and semantics would benefit each other by being trained in a single model. We introduce a joint many-task model together with a strategy for successively growing its depth to solve increasingly complex tasks. Higher layers include shortcut connections to lower-level task predictions to reflect linguistic hierarchies. We use a simple regularization term to allow for optimizing all model weights to improve one task's loss without exhibiting catastrophic interference of the other tasks. Our single end-to-end model obtains state-of-the-art or competitive results on five different tasks from tagging, parsing, relatedness, and entailment tasks. * Work was done while the first author was an intern at Salesforce Research. † Corresponding author. CHUNK POS DEP Relatedness encoder Relatedness Entailment encoder Entailment word representation Sentence 1 CHUNK POS DEP Relatedness encoder Entailment encoder word representation Sentence 2 semantic level syntactic level word level</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The potential for leveraging multiple levels of representation has been demonstrated in various ways in the field of Natural Language Processing (NLP). For example, Part-Of-Speech (POS) tags are used for syntactic parsers. The parsers are used to improve higher-level tasks, such as natural language inference <ref type="bibr" target="#b5">(Chen et al., 2016)</ref> and machine translation <ref type="bibr" target="#b11">(Eriguchi et al., 2016)</ref>. These systems are often pipelines and not trained end-to-end.</p><p>Deep NLP models have yet shown benefits from predicting many increasingly complex tasks each at a successively deeper layer. Existing models often ignore linguistic hierarchies by predicting <ref type="figure">Figure 1</ref>: Overview of the joint many-task model predicting different linguistic outputs at successively deeper layers. different tasks either entirely separately or at the same depth <ref type="bibr" target="#b7">(Collobert et al., 2011)</ref>.</p><p>We introduce a Joint Many-Task (JMT) model, outlined in <ref type="figure">Figure 1</ref>, which predicts increasingly complex NLP tasks at successively deeper layers. Unlike traditional pipeline systems, our single JMT model can be trained end-to-end for POS tagging, chunking, dependency parsing, semantic relatedness, and textual entailment, by considering linguistic hierarchies. We propose an adaptive training and regularization strategy to grow this model in its depth. With the help of this strategy we avoid catastrophic interference between the tasks. Our model is motivated by <ref type="bibr">Søgaard and Goldberg (2016)</ref> who showed that predicting two different tasks is more accurate when performed in different layers than in the same layer <ref type="bibr" target="#b7">(Collobert et al., 2011)</ref>. Experimental results show that our single model achieves competitive results for all of the five different tasks, demonstrating that us-arXiv:1611.01587v5 [cs.CL] 24 Jul 2017 ing linguistic hierarchies is more important than handling different tasks in the same layer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">The Joint Many-Task Model</head><p>This section describes the inference procedure of our model, beginning at the lowest level and working our way to higher layers and more complex tasks; our model handles the five different tasks in the order of POS tagging, chunking, dependency parsing, semantic relatedness, and textual entailment, by considering linguistic hierarchies. The POS tags are used for chunking, and the chunking tags are used for dependency parsing <ref type="bibr" target="#b2">(Attardi and DellOrletta, 2008)</ref>. <ref type="bibr">Tai et al. (2015)</ref> have shown that dependencies improve the relatedness task. The relatedness and entailment tasks are closely related to each other. If the semantic relatedness between two sentences is very low, they are unlikely to entail each other. Based on this observation, we make use of the information from the relatedness task for improving the entailment task.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Word Representations</head><p>For each word w t in the input sentence s of length L, we use two types of embeddings. Word embeddings: We use Skip-gram <ref type="bibr">(Mikolov et al., 2013)</ref> to train word embeddings. Character embeddings: Character n-gram embeddings are trained by the same Skip-gram objective. We construct the character n-gram vocabulary in the training data and assign an embedding for each entry. The final character embedding is the average of the unique character n-gram embeddings of w t . For example, the character ngrams (n = 1, 2, 3) of the word "Cat" are {C, a, t, #B#C, Ca, at, t#E#, #B#Ca, Cat, at#E#}, where "#B#" and "#E#" represent the beginning and the end of each word, respectively. Using the character embeddings efficiently provides morphological features. Each word is subsequently represented as x t , the concatenation of its corresponding word and character embeddings shared across the tasks. 1</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Word-Level Task: POS Tagging</head><p>The first layer of the model is a bi-directional LSTM <ref type="bibr" target="#b14">(Graves and Schmidhuber, 2005</ref>; Hochreiter and Schmidhuber, 1997) whose hidden states <ref type="bibr">1</ref>  <ref type="bibr" target="#b4">Bojanowski et al. (2017)</ref> previously proposed to train the character n-gram embeddings by the Skip-gram objective. are used to predict POS tags. We use the following Long Short-Term Memory (LSTM) units for the forward direction:</p><formula xml:id="formula_0">i t = σ (W i g t + b i ) , f t = σ (W f g t + b f ) , o t = σ (W o g t + b o ) , u t = tanh (W u g t + b u ) , (1) c t = i t u t + f t c t−1 , h t = o t tanh (c t ) ,</formula><p>where we define the input g t as g t = [ − → h t−1 ; x t ], i.e. the concatenation of the previous hidden state and the word representation of w t . The backward pass is expanded in the same way, but a different set of weights are used.</p><p>For predicting the POS tag of w t , we use the concatenation of the forward and backward states in a one-layer bi-LSTM layer corresponding to the t-th word:</p><formula xml:id="formula_1">h t = [ − → h t ; ← − h t ]. Then each h t (1 ≤ t ≤ L)</formula><p>is fed into a standard softmax classifier with a single ReLU layer which outputs the probability vector y (1) for each of the POS tags.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Word-Level Task: Chunking</head><p>Chunking is also a word-level classification task which assigns a chunking tag (B-NP, I-VP, etc.) for each word. The tag specifies the region of major phrases (e.g., noun phrases) in the sentence.</p><p>Chunking is performed in the second bi-LSTM layer on top of the POS layer. When stacking the bi-LSTM layers, we use Eq. (1) with input g</p><formula xml:id="formula_2">(2) t = [h (2) t−1 ; h (1) t ; x t ; y (pos) t ], where h (1) t</formula><p>is the hidden state of the first (POS) layer. We define the weighted label embedding y (pos) t as follows:</p><formula xml:id="formula_3">y (pos) t = C j=1 p(y (1) t = j|h (1) t ) (j),<label>(2)</label></formula><p>where C is the number of the POS tags, p(y</p><formula xml:id="formula_4">(1) t = j|h (1) t )</formula><p>is the probability value that the j-th POS tag is assigned to w t , and (j) is the corresponding label embedding. The probability values are predicted by the POS layer, and thus no gold POS tags are needed. This output embedding is similar to the K-best POS tag feature which has been shown to be effective in syntactic tasks <ref type="bibr" target="#b1">(Andor et al., 2016;</ref><ref type="bibr" target="#b0">Alberti et al., 2015)</ref>. For predicting the chunking tags, we employ the same strategy as POS tagging by using the concatenated bidirectional hidden states h</p><formula xml:id="formula_5">(2) t = [ − → h (2) t ; ← − h<label>(2)</label></formula><p>t ] in the chunking layer. We also use a single ReLU hidden layer before the softmax classifier.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Syntactic Task: Dependency Parsing</head><p>Dependency parsing identifies syntactic relations (such as an adjective modifying a noun) between word pairs in a sentence. We use the third bi-LSTM layer to classify relations between all pairs of words. The input vector for the LSTM includes hidden states, word representations, and the label embeddings for the two previous tasks: g</p><formula xml:id="formula_6">(3) t = [h (3) t−1 ; h (2) t ; x t ; (y (pos) t + y (chk) t )]</formula><p>, where we computed the chunking vector in a similar fashion as the POS vector in Eq. (2).</p><p>We predict the parent node (head) for each word. Then a dependency label is predicted for each child-parent pair. This approach is related to <ref type="bibr" target="#b8">Dozat and Manning (2017)</ref> and <ref type="bibr">Zhang et al. (2017)</ref>, where the main difference is that our model works on a multi-task framework. To predict the parent node of w t , we define a matching function between w t and the candidates of the parent node as</p><formula xml:id="formula_7">m (t, j) = h (3) t · (W d h (3) j ), where W d is a parameter matrix.</formula><p>For the root, we define h (3) L+1 = r as a parameterized vector. To compute the probability that w j (or the root node) is the parent of w t , the scores are normalized:</p><formula xml:id="formula_8">p(j|h (3) t ) = exp (m (t, j)) L+1 k=1,k =t exp (m (t, k))</formula><p>.</p><p>( <ref type="formula">3)</ref> The dependency labels are predicted using (3) j ] as input to a softmax classifier with a single ReLU layer. We greedily select the parent node and the dependency label for each word. When the parsing result is not a well-formed tree, we apply the first-order Eisner's algorithm <ref type="bibr" target="#b10">(Eisner, 1996)</ref> to obtain a well-formed tree from it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Semantic Task: Semantic relatedness</head><p>The next two tasks model the semantic relationships between two input sentences. The first task measures the semantic relatedness between two sentences. The output is a real-valued relatedness score for the input sentence pair. The second task is textual entailment, which requires one to determine whether a premise sentence entails a hypothesis sentence. There are typically three classes: entailment, contradiction, and neutral. We use the fourth and fifth bi-LSTM layer for the relatedness and entailment task, respectively. Now it is required to obtain the sentence-level representation rather than the word-level representation h (4)</p><p>This max-pooling technique has proven effective in text classification tasks <ref type="bibr">(Lai et al., 2015)</ref>.</p><p>To model the semantic relatedness between s and s , we follow <ref type="bibr">Tai et al. (2015)</ref>. The feature vector for representing the semantic relatedness is computed as follows:</p><formula xml:id="formula_9">d 1 (s, s ) = h (4) s − h (4) s ; h (4) s h (4) s ,<label>(5)</label></formula><p>where h s is the element-wise multiplication. Then d 1 (s, s ) is fed into a softmax classifier with a single Maxout hidden layer <ref type="bibr" target="#b13">(Goodfellow et al., 2013)</ref> to output a relatedness score (from 1 to 5 in our case).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.6">Semantic Task: Textual entailment</head><p>For entailment classification, we also use the maxpooling technique as in the semantic relatedness task. To classify the premise-hypothesis pair (s, s ) into one of the three classes, we compute the feature vector d 2 (s, s ) as in Eq. (5) except that we do not use the absolute values of the element-wise subtraction, because we need to identify which is the premise (or hypothesis). Then d 2 (s, s ) is fed into a softmax classifier.</p><p>To use the output from the relatedness layer directly, we use the label embeddings for the relatedness task. More concretely, we compute the class label embeddings for the semantic relatedness task similar to Eq. (2). The final feature vectors that are concatenated and fed into the entailment classifier are the weighted relatedness label embedding and the feature vector d 2 (s, s ). We use three Maxout hidden layers before the classifier.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Training the JMT Model</head><p>The model is trained jointly over all datasets. During each epoch, the optimization iterates over each full training dataset in the same order as the corresponding tasks described in the modeling section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Pre-Training Word Representations</head><p>We pre-train word embeddings using the Skipgram model with negative sampling <ref type="bibr">(Mikolov et al., 2013)</ref>. We also pre-train the character ngram embeddings using Skip-gram. <ref type="bibr">2</ref> The only difference is that each input word embedding is replaced with its corresponding average character ngram embedding described in Section 2.1. These embeddings are fine-tuned during the model training. We denote the embedding parameters as θ e .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Training the POS Layer</head><p>Let θ POS = (W POS , b POS , θ e ) denote the set of model parameters associated with the POS layer, where W POS is the set of the weight matrices in the first bi-LSTM and the classifier, and b POS is the set of the bias vectors. The objective function to optimize θ POS is defined as follows:</p><formula xml:id="formula_10">J 1 (θ POS ) = − s t log p(y (1) t = α|h (1) t ) + λ W POS 2 + δ θ e − θ e 2 ,<label>(6)</label></formula><p>where p(y</p><formula xml:id="formula_11">(1) t = α wt |h (1) t )</formula><p>is the probability value that the correct label α is assigned to w t in the sentence s, λ W POS 2 is the L2-norm regularization term, and λ is a hyperparameter.</p><p>We call the second regularization term δ θ e − θ e 2 a successive regularization term. The successive regularization is based on the idea that we do not want the model to forget the information learned for the other tasks. In the case of POS tagging, the regularization is applied to θ e , and θ e is the embedding parameter after training the final task in the top-most layer at the previous training epoch. δ is a hyperparameter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Training the Chunking Layer</head><p>The objective function is defined as follows:</p><formula xml:id="formula_12">J 2 (θ chk ) = − s t log p(y (2) t = α|h (2) t ) + λ W chk 2 + δ θ POS − θ POS 2 ,<label>(7)</label></formula><p>which is similar to that of POS tagging, and θ chk is (W chk , b chk , E POS , θ e ), where W chk and b chk are the weight and bias parameters including those in θ POS , and E POS is the set of the POS label embeddings. θ POS is the one after training the POS layer at the current training epoch.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Training the Dependency Layer</head><p>The objective function is defined as follows:</p><formula xml:id="formula_13">J 3 (θ dep ) = − s t log p(α|h (3) t )p(β|h (3) t , h (3) α ) + λ( W dep 2 + W d 2 ) + δ θ chk − θ chk 2 ,<label>(8)</label></formula><p>where p(α|h</p><formula xml:id="formula_14">(3) t )</formula><p>is the probability value assigned to the correct parent node α for w t , and p(β|h</p><formula xml:id="formula_15">(3) t , h (3) α )</formula><p>is the probability value assigned to the correct dependency label β for the child-parent pair (w t , α). θ dep is defined as</p><formula xml:id="formula_16">(W dep , b dep , W d , r, E POS , E chk , θ e ),</formula><p>where W dep and b dep are the weight and bias parameters including those in θ chk , and E chk is the set of the chunking label embeddings.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Training the Relatedness Layer</head><p>Following Tai et al. <ref type="formula" target="#formula_3">(2015)</ref>, the objective function is defined as follows:</p><formula xml:id="formula_17">J 4 (θ rel ) = (s,s ) KL p(s, s ) p(h (4) s , h (4) s ) + λ W rel 2 + δ θ dep − θ dep 2 ,<label>(9)</label></formula><p>wherep(s, s ) is the gold distribution over the defined relatedness scores, p(h</p><formula xml:id="formula_18">(4) s , h<label>(4)</label></formula><p>s ) is the predicted distribution given the the sentence representations, and KL p(s, s ) p(h</p><formula xml:id="formula_19">(4) s , h (4) s ) is the KL-divergence between the two distributions. θ rel is defined as (W rel , b rel , E POS , E chk , θ e ).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.6">Training the Entailment Layer</head><p>The objective function is defined as follows:</p><formula xml:id="formula_20">J 5 (θ ent ) = − (s,s ) log p(y (5) (s,s ) = α|h (5) s , h (5) s ) + λ W ent 2 + δ θ rel − θ rel 2 ,<label>(10)</label></formula><p>where p(y</p><formula xml:id="formula_21">(5) (s,s ) = α|h (5) s , h<label>(5)</label></formula><p>s ) is the probability value that the correct label α is assigned to the premise-hypothesis pair (s, s ). θ ent is defined as (W ent , b ent , E POS , E chk , E rel , θ e ), where E rel is the set of the relatedness label embeddings.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Related Work</head><p>Many deep learning approaches have proven to be effective in a variety of NLP tasks and are becoming more and more complex. They are typically designed to handle single tasks, or some of them are designed as general-purpose models <ref type="bibr">(Kumar et al., 2016;</ref><ref type="bibr">Sutskever et al., 2014)</ref> but applied to different tasks independently.</p><p>For handling multiple NLP tasks, multi-task learning models with deep neural networks have been proposed <ref type="bibr" target="#b7">(Collobert et al., 2011;</ref><ref type="bibr">Luong et al., 2016)</ref>, and more recently Søgaard and Goldberg (2016) have suggested that using different layers for different tasks is more effective than using the same layer in jointly learning closely-related tasks, such as POS tagging and chunking. However, the number of tasks was limited or they have very similar task settings like word-level tagging, and it was not clear how lower-level tasks could be also improved by combining higher-level tasks.</p><p>More related to our work, <ref type="bibr" target="#b12">Godwin et al. (2016)</ref> also followed Søgaard and Goldberg (2016) to jointly learn POS tagging, chunking, and language modeling, and Zhang and Weiss <ref type="formula" target="#formula_3">(2016)</ref> have shown that it is effective to jointly learn POS tagging and dependency parsing by sharing internal representations. In the field of relation extraction, Miwa and Bansal <ref type="formula" target="#formula_3">(2016)</ref> proposed a joint learning model for entity detection and relation extraction. All of them suggest the importance of multi-task learning, and we investigate the potential of handling different types of NLP tasks rather than closely-related ones in a single hierarchical deep model.</p><p>In the field of computer vision, some transfer and multi-task learning approaches have also been proposed <ref type="bibr">(Li and Hoiem, 2016;</ref><ref type="bibr">Misra et al., 2016)</ref>. For example, Misra et al. (2016) proposed a multi-task learning model to handle different tasks. However, they assume that each data sample has annotations for the different tasks, and do not explicitly consider task hierarchies.</p><p>Recently, <ref type="bibr">Rusu et al. (2016)</ref> have proposed a progressive neural network model to handle multiple reinforcement learning tasks, such as Atari games. Like our JMT model, their model is also successively trained according to different tasks using different layers called columns in their paper. In their model, once the first task is completed, the model parameters for the first task are fixed, and then the second task is handled with new model parameters. Therefore, accuracy of the previously trained tasks is never improved. In NLP tasks, multi-task learning has the potential to improve not only higher-level tasks, but also lower-level tasks. Rather than fixing the pre-trained model parameters, our successive regularization allows our model to continuously train the lowerlevel tasks without significant accuracy drops.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Experimental Settings</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Datasets</head><p>POS tagging: To train the POS tagging layer, we used the Wall Street Journal (WSJ) portion of Penn Treebank, and followed the standard split for the training (Section 0-18), development , and test (Section 22-24) sets. The evaluation metric is the word-level accuracy. Chunking: For chunking, we also used the WSJ corpus, and followed the standard split for the training (Section 15-18) and test (Section 20) sets as in the CoNLL 2000 shared task. We used Section 19 as the development set and employed the IOBES tagging scheme. The evaluation metric is the F1 score defined in the shared task. Dependency parsing: We also used the WSJ corpus for dependency parsing, and followed the standard split for the training (Section 2-21), development (Section 22), and test (Section 23) sets. We obtained Stanford style dependencies using the version 3.3.0 of the Stanford converter. The evaluation metrics are the Unlabeled Attachment Score (UAS) and the Labeled Attachment Score (LAS), and punctuations are excluded for the evaluation. Semantic relatedness: For the semantic relatedness task, we used the SICK dataset <ref type="bibr">(Marelli et al., 2014)</ref>, and followed the standard split for the training, development, and test sets. The evaluation metric is the Mean Squared Error (MSE) between the gold and predicted scores. Textual entailment: For textual entailment, we also used the SICK dataset and exactly the same data split as the semantic relatedness dataset. The evaluation metric is the accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Training Details</head><p>We set the dimensionality of the embeddings and the hidden states in the bi-LSTMs to 100. At each training epoch, we trained our model in the order of POS tagging, chunking, dependency parsing, semantic relatedness, and textual entailment. We used mini-batch stochastic gradient decent and empirically found it effective to use a gradient clipping method with growing clipping values for the different tasks; concretely, we employed the simple function: min(3.0, depth), where depth is the number of bi-LSTM layers involved in each task, and 3.0 is the maximum value. We applied our successive regularization to our model, along with L2-norm regularization and dropout <ref type="bibr">(Srivastava et al., 2014)</ref>. More details are summarized in the supplemental material. <ref type="table" target="#tab_0">Table 1</ref> shows our results on the test sets of the five tasks. <ref type="bibr">3</ref> The column "Single" shows the results of handling each task separately using singlelayer bi-LSTMs, and the column "JMT all " shows the results of our JMT model. The single task settings only use the annotations of their own tasks. For example, when handling dependency parsing as a single task, the POS and chunking tags are not used. We can see that all results of the five tasks are improved in our JMT model, which shows that our JMT model can handle the five different tasks in a single model. Our JMT model allows us to access arbitrary information learned from the different tasks. If we want to use the model just as a POS tagger, we can use only first bi-LSTM layer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Results and Discussion</head><p>Table 1 also shows the results of five subsets of the different tasks. For example, in the case of "JMT ABC ", only the first three layers of the bi-LSTMs are used to handle the three tasks. In the case of "JMT DE ", only the top two layers are used as a two-layer bi-LSTM by omitting all information from the first three layers. The results of the closely-related tasks ("AB", "ABC", and "DE") show that our JMT model improves both of the high-level and low-level tasks. The results of "JMT CD " and "JMT CE " show that the parsing task can be improved by the semantic tasks.</p><p>It should be noted that in our analysis on the greedy parsing results of the "JMT ABC " setting, we have found that more than 95% are wellformed dependency trees on the development set. In the 1,700 sentences of the development data, 11 results have multiple root notes, 11 results have no root nodes, and 61 results have cycles. These 83 parsing results are converted into well-formed trees by Eisner's algorithm, and the accuracy does not significantly change (UAS: 94.52%→94.53%, LAS: 92.61%→92.62%). <ref type="table" target="#tab_1">Table 2</ref> shows the results of POS tagging, and our JMT model achieves the score close to the state-of-the-art results. The best result to date has been achieved by <ref type="bibr" target="#b9">Ling et al. (2015)</ref>, which uses character-based LSTMs. Incorporating the character-based encoders into our JMT model would be an interesting direction, but we have shown that the simple pre-trained character n-gram embeddings lead to the promising result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Comparison with Published Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>POS tagging</head><p>Chunking <ref type="table" target="#tab_2">Table 3</ref> shows the results of chunking, and our JMT model achieves the state-of-theart result. <ref type="bibr">Søgaard and Goldberg (2016)</ref> proposed to jointly learn POS tagging and chunking in different layers, but they only showed improvement for chunking. By contrast, our results show that the low-level tasks are also improved. <ref type="table" target="#tab_3">Table 4</ref> shows the results of dependency parsing by using only the WSJ corpus in terms of the dependency annotations. 4 It is notable that our simple greedy dependency parser outperforms the model in <ref type="bibr" target="#b1">Andor et al. (2016)</ref> which is based on beam search with global information. The result suggests that the bi-LSTMs efficiently capture global information necessary for dependency parsing. Moreover, our single task result already achieves high accuracy without the POS and chunking information. The best result to date has been achieved by the model propsoed in <ref type="bibr" target="#b8">Dozat and Manning (2017)</ref>, which uses higher dimensional representations than ours and proposes a more sophisticated attention mechanism called biaffine attention. It should be promising to incorporate their attention mechanism into our parsing component. <ref type="table" target="#tab_4">Table 5</ref> shows the results of the semantic relatedness task, and our JMT model achieves the state-of-the-art result. The result of "JMT DE " is already better than the previous state-of-the-art results.        Shortcut connections Our JMT model feeds the word representations into all of the bi-LSTM layers, which is called the shortcut connection. Table 7 shows the results of "JMT all " with and without the shortcut connections. The results without the shortcut connections are shown in the column of "w/o SC". These results clearly show that the importance of the shortcut connections, and in particular, the semantic tasks in the higher layers strongly rely on the shortcut connections. That is, simply stacking the LSTM layers is not sufficient to handle a variety of NLP tasks in a single model. In the supplementary material, it is qualitatively shown how the shortcut connections work in our model. <ref type="table" target="#tab_6">Table 7</ref> also shows the results without using the output labels of the POS, chunking, and relatedness layers, in the column of "w/o LE". These results show that the explicit use of the output information from the classifiers of the lower layers is important in our JMT   Different layers for different tasks <ref type="table" target="#tab_7">Table 8</ref> shows the results of our "JMT ABC " setting and that of not using the shortcut connections and the label embeddings ("w/o SC&amp;LE") as in <ref type="table" target="#tab_6">Table 7</ref>. In addition, in the column of "All-3", we show the results of using the highest (i.e., the third) layer for all of the three tasks without any shortcut connections and label embeddings, and thus the two settings "w/o SC&amp;LE" and "All-3" require exactly the same number of the model parameters. The "All-3" setting is similar to the multi-task model of <ref type="bibr" target="#b7">Collobert et al. (2011)</ref> in that task-specific output layers are used but most of the model parameters are shared. The results show that using the same layers for the three different tasks hampers the effectiveness of our JMT model, and the design of the model is much more important than the number of the model parameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Dependency parsing</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Semantic relatedness</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Output label embeddings</head><p>Successive regularization In <ref type="table" target="#tab_9">Table 9</ref>, the column of "w/o SR" shows the results of omitting the successive regularization terms described in Section 3. We can see that the accuracy of chunking is improved by the successive regularization, while other results are not affected so much. The chunking dataset used here is relatively small compared with other low-level tasks, POS tagging and dependency parsing. Thus, these results suggest that the successive regularization is effective when dataset sizes are imbalanced.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Vertical connections</head><p>We investigated our JMT results without using the vertical connections in   the five-layer bi-LSTMs. More concretely, when constructing the input vectors g t , we do not use the bi-LSTM hidden states of the previous layers. <ref type="table" target="#tab_9">Table 9</ref> also shows the JMT all results with and without the vertical connections. As shown in the column of "w/o VC", we observed the competitive results. Therefore, in the target tasks used in our model, sharing the word representations and the output label embeddings is more effective than just stacking the bi-LSTM layers.</p><p>Order of training Our JMT model iterates the training process in the order described in Section 3. Our hypothesis is that it is important to start from the lower-level tasks and gradually move to the higher-level tasks. <ref type="table" target="#tab_0">Table 10</ref> shows the results of training our model by randomly shuffling the order of the tasks for each epoch in the column of "Random". We see that the scores of the semantic tasks drop by the random strategy. In our preliminary experiments, we have found that constructing the mini-batch samples from different tasks also hampers the effectiveness of our model, which also supports our hypothesis.</p><p>Depth The single task settings shown in <ref type="table" target="#tab_0">Table 1</ref> are obtained by using single layer bi-LSTMs, but in our JMT model, the higher-level tasks use successively deeper layers. To investigate the gap between the different number of the layers for each task, we also show the results of using multi-layer bi-LSTMs for the single task settings, in the column of "Single+" in <ref type="table" target="#tab_0">Table 11</ref>. More concretely, we use the same number of the layers with our JMT model; for example, three layers are used for dependency parsing, and five layers are used for textual entailment. As shown in these results, deeper layers do not always lead to better results, and the joint learning is more important than mak-ing the models complex only for single tasks.</p><p>Character n-gram embeddings Finally, <ref type="table" target="#tab_0">Table 12</ref> shows the results for the three single tasks with and without the pre-trained character n-gram embeddings. The column of "W&amp;C" corresponds to using both of the word and character n-gram embeddings, and that of "Only W" corresponds to using only the word embeddings. These results clearly show that jointly using the pre-trained word and character n-gram embeddings is helpful in improving the results. The pre-training of the character n-gram embeddings is also effective; for example, without the pre-training, the POS accuracy drops from 97.52% to 97.38% and the chunking accuracy drops from 95.65% to 95.14%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Discussion</head><p>Training strategies In our JMT model, it is not obvious when to stop the training while trying to maximize the scores of all the five tasks. We focused on maximizing the accuracy of dependency parsing on the development data in our experiments. However, the sizes of the training data are different across the different tasks; for example, the semantic tasks include only 4,500 sentence pairs, and the dependency parsing dataset includes 39,832 sentences with word-level annotations. Thus, in general, dependency parsing requires more training epochs than the semantic tasks, but currently, our model trains all of the tasks for the same training epochs. The same strategy for decreasing the learning rate is also shared across all the different tasks, although our growing gradient clipping method described in Section 5.2 helps improve the results. Indeed, we observed that better scores of the semantic tasks can be achieved before the accuracy of dependency parsing reaches the best score. Developing a method for achieving the best scores for all of the tasks at the same time is important future work.</p><p>More tasks Our JMT model has the potential of handling more tasks than the five tasks used in our experiments; examples include entity detection and relation extraction as in <ref type="bibr">Miwa and Bansal (2016)</ref> as well as language modeling <ref type="bibr" target="#b12">(Godwin et al., 2016)</ref>. It is also a promising direction to train each task for multiple domains by focusing on domain adaptation <ref type="bibr">(Søgaard and Goldberg, 2016)</ref>. In particular, incorporating language modeling tasks provides an opportunity to use large text data. Such large text data was used in our experiments to pre-train the word and character ngram embeddings. However, it would be preferable to efficiently use it for improving the entire model.</p><p>Task-oriented learning of low-level tasks Each task in our JMT model is supervised by its corresponding dataset. However, it would be possible to learn low-level tasks by optimizing highlevel tasks, because the model parameters of the low-level tasks can be directly modified by learning the high-level tasks. One example has already been presented in <ref type="bibr">Hashimoto and Tsuruoka (2017)</ref>, where our JMT model is extended to learning task-oriented latent graph structures of sentences by training our dependency parsing component according to a neural machine translation objective.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>We presented a joint many-task model to handle multiple NLP tasks with growing depth in a single end-to-end model. Our model is successively trained by considering linguistic hierarchies, directly feeding word representations into all layers, explicitly using low-level predictions, and applying successive regularization. In experiments on five NLP tasks, our single model achieves the state-of-the-art or competitive results on chunking, dependency parsing, semantic relatedness, and textual entailment. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Supplemental Material</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Training Details</head><p>Pre-training embeddings We used the word2vec toolkit to pre-train the word embeddings. We created our training corpus by selecting lowercased English Wikipedia text and obtained 100-dimensional Skip-gram word embeddings trained with the context window size 1, the negative sampling method (15 negative samples), and the sub-sampling method (10 −5 of the sub-sampling coefficient). We also pre-trained the character n-gram embeddings using the same parameter settings with the case-sensitive Wikipedia text. We trained the character n-gram embeddings for n = 1, 2, 3, 4 in the pre-training step.</p><p>Embedding initialization We used the pretrained word embeddings to initialize the word embeddings, and the word vocabulary was built based on the training data of the five tasks. All words in the training data were included in the word vocabulary, and we employed the word-dropout method (Kiperwasser and Goldberg, 2016) to train the word embedding for the unknown words. We also built the character n-gram vocabulary for n = 2, 3, 4, following <ref type="bibr">Wieting et al. (2016)</ref>, and the character ngram embeddings were initialized with the pretrained embeddings. All of the label embeddings were initialized with uniform random values in [− 6/(dim + C), 6/(dim + C)], where dim = 100 is the dimensionality of the label embeddings and C is the number of labels.</p><p>Weight initialization The dimensionality of the hidden layers in the bi-LSTMs was set to 100. We initialized all of the softmax parameters and bias vectors, except for the forget biases in the LSTMs, with zeros, and the weight matrix W d and the root node vector r for dependency parsing were also initialized with zeros. All of the forget biases were initialized with ones. The other weight matrices were initialized with uniform random values in [− 6/(row + col), 6/(row + col)], where row and col are the number of rows and columns of the matrices, respectively.</p><p>Optimization At each epoch, we trained our model in the order of POS tagging, chunking, dependency parsing, semantic relatedness, and textual entailment. We used mini-batch stochastic gradient decent to train our model. The minibatch size was set to 25 for POS tagging, chunking, and the SICK tasks, and 15 for dependency parsing. We used a gradient clipping strategy with growing clipping values for the different tasks; concretely, we employed the simple function: min(3.0, depth), where depth is the number of bi-LSTM layers involved in each task, and 3.0 is the maximum value. The learning rate at the k-th epoch was set to ε 1.0+ρ(k−1) , where ε is the initial learning rate, and ρ is the hyperparameter to decrease the learning rate. We set ε to 1.0 and ρ to 0.3. At each epoch, the same learning rate was shared across all of the tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B Details of Character N -Gram Embeddings</head><p>Here we first describe the pre-training process of the character n-gram embeddings in detail and then show further analysis on the results in Table 12.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.1 Pre-Training with Skip-Gram Objective</head><p>We pre-train the character n-gram embeddings using the objective function of the Skip-gram model with negative sampling <ref type="bibr">(Mikolov et al., 2013)</ref>. We build the vocabulary of the character n-grams based on the training corpus, the case-sensitive English Wikipedia text. This is because such case-sensitive information is important in handling some types of words like named entities.</p><p>Assuming that a word w has its corresponding K character n-grams {cn 1 , cn 2 , . . . , cn K }, where any overlaps and unknown ones are removed. Then the word w is represented with an embedding v c (w) computed as follows:</p><formula xml:id="formula_22">v c (w) = 1 K K i=1 v(cn i ),<label>(11)</label></formula><p>where v(cn i ) is the parameterized embedding of the character n-gram cn i , and the computation of v c (w) is exactly the same as the one used in our JMT model explained in Section 2.1. The remaining part of the pre-training process is the same as the original Skip-gram model. For each word-context pair (w, w) in the training corpus, N negative context words are sampled, and the objective function is defined as follows:</p><formula xml:id="formula_23">(w,w) − log σ(v c (w) ·ṽ(w)) − N i=1 log σ(−v c (w) ·ṽ(w i )) ,<label>(12)</label></formula><p>where σ(·) is the logistic sigmoid function,ṽ(w) is the weight vector for the context word w, and w i is a negative sample. It should be noted that the weight vectors for the context words are parameterized for the words without any character information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.2 Effectiveness on Unknown Words</head><p>One expectation from the use of the character n-gram embeddings is to better handle unknown words. We verified this assumption in the single task setting for POS tagging, based on the results reported in <ref type="table" target="#tab_0">Table 12</ref>. <ref type="table" target="#tab_0">Table 13</ref> shows that the joint use of the word and character n-gram embeddings improves the score by about 19% in terms of the accuracy for unknown words.</p><p>We also show the results of the single task setting for dependency parsing in <ref type="table" target="#tab_0">Table 14</ref>. Again, we can see that using the character-level information is effective, and in particular, the improvement of the LAS score is large. These results suggest that it is better to use not only the word embeddings, but also the character n-gram embeddings by default. Recently, the joint use of word and character information has proven to be effective in language modeling (Miyamoto and Cho, 2016), but just using the simple character n-gram embeddings is fast and also effective.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C Analysis on Dependency Parsing</head><p>Our dependency parser is based on the idea of predicting a head (or parent) for each word, and thus the parsing results do not always lead to correct trees. To inspect this aspect, we checked the parsing results on the development set (1,700 sentences), using the "JMT ABC " setting.</p><p>In the dependency annotations used in this work, each sentence has only one root node, and we have found 11 sentences with multiple root nodes and 11 sentences with no root nodes in our parsing results. We show two examples below:</p><p>(a) Underneath the headline " Diversification , " it counsels , " Based on the events of the past week , all investors need to know their portfolios are balanced to help protect them against the market 's volatility . "</p><p>(b) Mr. Eskandarian , who resigned his Della Femina post in September , becomes chairman and chief executive of Arnold .</p><p>In the example (a), the two boldfaced words "counsels" and "need" are predicted as child nodes of the root node, and the underlined word "counsels" is the correct one based on the gold annotations. This example sentence (a) consists of multiple internal sentences, and our parser misunderstood that both of the two verbs are the heads of the sentence.</p><p>In the example (b), none of the words is connected to the root node, and the correct child node of the root is the underlined word "chairman".   Without the internal phrase "who resigned... in September", the example sentence (b) is very simple, but we have found that such a simplified sentence is still not parsed correctly. In many cases, verbs are linked to the root nodes, but sometimes other types of words like nouns can be the candidates. In our model, the single parameterized vector r is used to represent the root node for each sentence. Therefore, the results of the examples (a) and (b) suggest that it would be needed to capture various types of root nodes, and using sentence-dependent root representations would lead to better results in future work.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>maximum values across all of the word-level representations in the fourth layer:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Both of Zhou et al. (2016) and Tai et al. (2015) explicitly used syntactic trees, and Zhou et al. (2016) relied on attention mechanisms.However, our method uses the simple maxpooling strategy, which suggests that it is worth Single JMT all JMTAB JMTABC JMTDE JMTCD JMTCE A Test set results for the five tasks. In the relatedness task, the lower scores are better.</figDesc><table><row><cell cols="2">↑ POS</cell><cell></cell><cell>97.45</cell><cell>97.55</cell><cell>97.52</cell><cell>97.54</cell><cell>n/a</cell><cell>n/a</cell><cell>n/a</cell></row><row><cell cols="3">B ↑ Chunking</cell><cell>95.02</cell><cell>n/a</cell><cell>95.77</cell><cell>n/a</cell><cell>n/a</cell><cell>n/a</cell><cell>n/a</cell></row><row><cell>C ↑</cell><cell cols="3">Dependency UAS 93.35 Dependency LAS 91.42</cell><cell>94.67 92.90</cell><cell>n/a n/a</cell><cell>94.71 92.92</cell><cell>n/a n/a</cell><cell>93.53 91.62</cell><cell>93.57 91.69</cell></row><row><cell cols="3">D ↓ Relatedness</cell><cell>0.247</cell><cell>0.233</cell><cell>n/a</cell><cell>n/a</cell><cell>0.238</cell><cell>0.251</cell><cell>n/a</cell></row><row><cell cols="3">E ↑ Entailment</cell><cell>81.8</cell><cell>86.2</cell><cell>n/a</cell><cell>n/a</cell><cell>86.8</cell><cell>n/a</cell><cell>82.4</cell></row><row><cell>Method</cell><cell></cell><cell>Acc. ↑</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>JMT all</cell><cell></cell><cell>97.55</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">Ling et al. (2015)</cell><cell>97.78</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">Kumar et al. (2016)</cell><cell>97.56</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">Ma and Hovy (2016)</cell><cell>97.55</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Søgaard (2011)</cell><cell></cell><cell>97.50</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">Collobert et al. (2011)</cell><cell>97.29</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">Tsuruoka et al. (2011)</cell><cell>97.28</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">Toutanova et al. (2003)</cell><cell>97.27</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>POS tagging results.</figDesc><table><row><cell>Method</cell><cell>F1 ↑</cell></row><row><cell>JMTAB</cell><cell>95.77</cell></row><row><cell>Single</cell><cell>95.02</cell></row><row><cell>Søgaard and Goldberg (2016)</cell><cell>95.56</cell></row><row><cell>Suzuki and Isozaki (2008)</cell><cell>95.15</cell></row><row><cell>Collobert et al. (2011)</cell><cell>94.32</cell></row><row><cell>Kudo and Matsumoto (2001)</cell><cell>93.91</cell></row><row><cell>Tsuruoka et al. (2011)</cell><cell>93.81</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 :</head><label>3</label><figDesc>Chunking results.</figDesc><table><row><cell>Method</cell><cell>UAS ↑</cell><cell>LAS ↑</cell></row><row><cell>JMT all</cell><cell>94.67</cell><cell>92.90</cell></row><row><cell>Single</cell><cell>93.35</cell><cell>91.42</cell></row><row><cell>Dozat and Manning (2017)</cell><cell>95.74</cell><cell>94.08</cell></row><row><cell>Andor et al. (2016)</cell><cell>94.61</cell><cell>92.79</cell></row><row><cell>Alberti et al. (2015)</cell><cell>94.23</cell><cell>92.36</cell></row><row><cell>Zhang et al. (2017)</cell><cell>94.10</cell><cell>91.90</cell></row><row><cell>Weiss et al. (2015)</cell><cell>93.99</cell><cell>92.05</cell></row><row><cell>Dyer et al. (2015)</cell><cell>93.10</cell><cell>90.90</cell></row><row><cell>Bohnet (2010)</cell><cell>92.88</cell><cell>90.71</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4 :</head><label>4</label><figDesc>Dependency results.</figDesc><table><row><cell>Method</cell><cell>MSE ↓</cell></row><row><cell>JMT all</cell><cell>0.233</cell></row><row><cell>JMTDE</cell><cell>0.238</cell></row><row><cell>Zhou et al. (2016)</cell><cell>0.243</cell></row><row><cell>Tai et al. (2015)</cell><cell>0.253</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5 :</head><label>5</label><figDesc>Semantic relatedness results.</figDesc><table><row><cell>Method</cell><cell>Acc. ↑</cell></row><row><cell>JMT all</cell><cell>86.2</cell></row><row><cell>JMTDE</cell><cell>86.8</cell></row><row><cell>Yin et al. (2016)</cell><cell>86.2</cell></row><row><cell>Lai and Hockenmaier (2014)</cell><cell>84.6</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 6 :</head><label>6</label><figDesc>Textual entailment results.</figDesc><table><row><cell></cell><cell>JMT all</cell><cell>w/o SC</cell><cell>w/o LE</cell><cell>w/o SC&amp;LE</cell></row><row><cell>POS</cell><cell>97.88</cell><cell>97.79</cell><cell>97.85</cell><cell>97.87</cell></row><row><cell>Chunking</cell><cell>97.59</cell><cell>97.08</cell><cell>97.40</cell><cell>97.33</cell></row><row><cell>Dependency UAS</cell><cell>94.51</cell><cell>94.52</cell><cell>94.09</cell><cell>94.04</cell></row><row><cell>Dependency LAS</cell><cell>92.60</cell><cell>92.62</cell><cell>92.14</cell><cell>92.03</cell></row><row><cell>Relatedness</cell><cell>0.236</cell><cell>0.698</cell><cell>0.261</cell><cell>0.765</cell></row><row><cell>Entailment</cell><cell>84.6</cell><cell>75.0</cell><cell>81.6</cell><cell>71.2</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 7 :</head><label>7</label><figDesc>Effectiveness of the Shortcut Connections (SC) and the Label Embeddings (LE).investigating such simple methods before developing complex methods for simple tasks. Currently, our JMT model does not explicitly use the learned dependency structures, and thus the explicit use of the output from the dependency layer should be an interesting direction of future work.Textual entailmentTable 6shows the results of textual entailment, and our JMT model achieves the state-of-the-art result. The previous state-ofthe-art result inYin et al. (2016)  relied on attention mechanisms and dataset-specific data preprocessing and features. Again, our simple maxpooling strategy achieves the state-of-the-art result boosted by the joint training. These results show the importance of jointly handling related tasks.</figDesc><table><row><cell></cell><cell>JMTABC</cell><cell>w/o SC&amp;LE</cell><cell>All-3</cell></row><row><cell>POS</cell><cell>97.90</cell><cell>97.87</cell><cell>97.62</cell></row><row><cell>Chunking</cell><cell>97.80</cell><cell>97.41</cell><cell>96.52</cell></row><row><cell>Dependency UAS</cell><cell>94.52</cell><cell>94.13</cell><cell>93.59</cell></row><row><cell>Dependency LAS</cell><cell>92.61</cell><cell>92.16</cell><cell>91.47</cell></row></table><note>6.2 Analysis on the Model Architectures We investigate the effectiveness of our model in detail. All of the results shown in this section are the development set results.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 8 :</head><label>8</label><figDesc>Effectiveness of using different layers for different tasks.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>Table 9 :</head><label>9</label><figDesc>Effectiveness of the Successive Regularization (SR) and the Vertical Connections (VC).</figDesc><table><row><cell></cell><cell>JMT all</cell><cell>Random</cell></row><row><cell>POS</cell><cell>97.88</cell><cell>97.83</cell></row><row><cell>Chunking</cell><cell>97.59</cell><cell>97.71</cell></row><row><cell>Dependency UAS</cell><cell>94.51</cell><cell>94.66</cell></row><row><cell>Dependency LAS</cell><cell>92.60</cell><cell>92.80</cell></row><row><cell>Relatedness</cell><cell>0.236</cell><cell>0.298</cell></row><row><cell>Entailment</cell><cell>84.6</cell><cell>83.2</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>Table 10 :</head><label>10</label><figDesc>Effects of the order of training.</figDesc><table /><note>model. The results in the column of "w/o SC&amp;LE" are the ones without both of the shortcut connec- tions and the label embeddings.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12"><head>Table 11 :</head><label>11</label><figDesc>Effects of depth for the single tasks.</figDesc><table><row><cell>Single</cell><cell>W&amp;C</cell><cell>Only W</cell></row><row><cell>POS</cell><cell>97.52</cell><cell>96.26</cell></row><row><cell>Chunking</cell><cell>95.65</cell><cell>94.92</cell></row><row><cell>Dependency UAS</cell><cell>93.38</cell><cell>92.90</cell></row><row><cell>Dependency LAS</cell><cell>91.37</cell><cell>90.44</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13"><head>Table 12 :</head><label>12</label><figDesc>Effects of the character embeddings.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_14"><head></head><label></label><figDesc>Kazuma Hashimoto and Yoshimasa Tsuruoka. 2017. Neural Machine Translation with Source-Side Latent Graph Parsing. In Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing. To appear. Jianpeng Cheng, and Mirella Lapata. 2017. Dependency Parsing as Head Selection. In Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguistics, pages 665-676.</figDesc><table><row><cell>Xuezhe Ma and Eduard Hovy. 2016. End-to-end Se-quence Labeling via Bi-directional LSTM-CNNs-CRF. In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Vol-ume 1: Long Papers), pages 1064-1074. Marco Marelli, Luisa Bentivogli, Marco Baroni, Raf-Xingxing Zhang, Yuan Zhang and David Weiss. 2016. Stack-faella Bernardi, Stefano Menini, and Roberto Zam-propagation: Improved Representation Learning for parelli. 2014. SemEval-2014 Task 1: Evaluation of Syntax. In Proceedings of the 54th Annual Meet-Compositional Distributional Semantic Models on ing of the Association for Computational Linguistics</cell><cell>Meeting of the Association for Computational Lin-guistics (Volume 2: Short Papers), pages 231-235. Nitish Srivastava, Geoffrey Hinton, Alex Krizhevsky, Ilya Sutskever, and Ruslan Salakhutdinov. 2014. Dropout: A Simple Way to Prevent Neural Networks from Overfitting. Journal of Machine Learning Re-Sepp Hochreiter and Jurgen Schmidhuber. 1997. search, 15:1929-1958. Long short-term memory. Neural Computation, 9(8):1735-1780. Ilya Sutskever, Oriol Vinyals, and Quoc V Le. 2014.</cell></row><row><cell>Full Sentences through Semantic Relatedness and (Volume 1: Long Papers), pages 1557-1566. Textual Entailment. In Proceedings of the 8th In-ternational Workshop on Semantic Evaluation (Se-mEval 2014), pages 1-8. Yao Zhou, Cong Liu, and Yan Pan. 2016. Modelling Sentence Pairs with Tree-structured Attentive En-Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-rado, and Jeff Dean. 2013. Distributed Representa-Systems 26, pages 3111-3119. ality. In Advances in Neural Information Processing tions of Words and Phrases and their Composition-coder. In Proceedings of the 26th International Con-ference on Computational Linguistics, pages 2912-2922.</cell><cell>Sequence to Sequence Learning with Neural Net-Eliyahu Kiperwasser and Yoav Goldberg. 2016. Easy-First Dependency Parsing with Hierarchical Tree LSTMs. Transactions of the Association for Com-works. In Advances in Neural Information Process-ing Systems 27, pages 3104-3112. putational Linguistics, 4:445-461. Taku Kudo and Yuji Matsumoto. 2001. Chunking with Support Vector Machines. In Proceedings of the Second Meeting of the North American Chapter of the Association for Computational Linguistics. gies, pages 665-673. putational Linguistics: Human Language Technolo-46th Annual Meeting of the Association for Com-Jun Suzuki and Hideki Isozaki. 2008. Semi-Supervised Sequential Labeling and Segmentation Using Giga-Word Scale Unlabeled Data. In Proceedings of the</cell></row><row><cell>Ishan Misra, Abhinav Shrivastava, Abhinav Gupta, and Martial Hebert. 2016. Cross-stitch Networks for Multi-task Learning. CoRR, abs/1604.03539. Makoto Miwa and Mohit Bansal. 2016. End-to-End Relation Extraction using LSTMs on Sequences and Tree Structures. In Proceedings of the 54th An-nual Meeting of the Association for Computational</cell><cell>Ankit Kumar, Ozan Irsoy, Peter Ondruska, Mohit Iyyer, James Bradbury, Ishaan Gulrajani, Victor Zhong, Romain Paulus, and Richard Socher. 2016. Kai Sheng Tai, Richard Socher, and Christopher D. Manning. 2015. Improved Semantic Representa-tions From Tree-Structured Long Short-Term Mem-Ask Me Anything: Dynamic Memory Networks for Natural Language Processing. In Proceedings of The 33rd International Conference on Machine Learning, pages 1378-1387. ory Networks. In Proceedings of the 53rd Annual Meeting of the Association for Computational Lin-guistics and the 7th International Joint Conference on Natural Language Processing (Volume 1: Long</cell></row><row><cell>Linguistics (Volume 1: Long Papers), pages 1105-1116. Yasumasa Miyamoto and Kyunghyun Cho. 2016. Gated Word-Character Recurrent Language Model. In Proceedings of the 2016 Conference on Empiri-cal Methods in Natural Language Processing, pages 1992-1997.</cell><cell>Papers), pages 1556-1566. Adhiguna Kuncoro, Miguel Ballesteros, Lingpeng Kong, Chris Dyer, Graham Neubig, and Noah A. Kristina Toutanova, Dan Klein, Christopher D Man-Smith. 2017. What Do Recurrent Neural Network ning, and Yoram Singer. 2003. Feature-Rich Part-Grammars Learn About Syntax? In Proceedings of-Speech Tagging with a Cyclic Dependency Net-of the 15th Conference of the European Chapter work. In Proceedings of the 2003 Human Lan-of the Association for Computational Linguistics, guage Technology Conference of the North Ameri-pages 1249-1258. can Chapter of the Association for Computational</cell></row><row><cell>Masataka Ono, Makoto Miwa, and Yutaka Sasaki.</cell><cell>Alice Lai and Julia Hockenmaier. 2014. Illinois-LH: Linguistics, pages 173-180.</cell></row><row><cell>2015. Word Embedding-based Antonym Detection using Thesauri and Distributional Information. In Proceedings of the 2015 Conference of the North</cell><cell>A Denotational and Distributional Approach to Se-Yoshimasa Tsuruoka, Yusuke Miyao, and Jun'ichi mantics. In Proceedings of the 8th International Kazama. 2011. Learning with Lookahead: Can Workshop on Semantic Evaluation, pages 329-334. History-Based Models Rival Globally Optimized</cell></row><row><cell>American Chapter of the Association for Computa-tional Linguistics: Human Language Technologies, pages 984-989.</cell><cell>Models? In Proceedings of the Fifteenth Confer-Siwei Lai, Liheng Xu, Kang Liu, and Jun Zhao. 2015. ence on Computational Natural Language Learning, Recurrent Convolutional Neural Networks for Text Classification. In Proceedings of the Twenty-Ninth pages 238-246.</cell></row><row><cell>Vu Pham, Theodore Bluche, Christopher Kermorvant, and Jerome Louradour. 2014. Dropout improves Re-current Neural Networks for Handwriting Recogni-tion. CoRR, abs/1312.4569.</cell><cell>AAAI Conference on Artificial Intelligence, pages 2267-2273. Zhizhong Li and Derek Hoiem. 2016. Learning with-David Weiss, Chris Alberti, Michael Collins, and Slav Petrov. 2015. Structured Training for Neural Net-work Transition-Based Parsing. In Proceedings of the 53rd Annual Meeting of the Association for</cell></row><row><cell>Andrei A. Rusu, Neil C. Rabinowitz, Guillaume Des-jardins, Hubert Soyer, James Kirkpatrick, Koray Kavukcuoglu, Razvan Pascanu, and Raia Hadsell. 2016. Progressive Neural Networks. CoRR, abs/1606.04671.</cell><cell>out Forgetting. CoRR, abs/1606.09282. Wang Ling, Chris Dyer, Alan W Black, Isabel Tran-Computational Linguistics and the 7th International Joint Conference on Natural Language Processing (Volume 1: Long Papers), pages 323-333. coso, Ramon Fermandez, Silvio Amir, Luis Marujo, and Tiago Luis. 2015. Finding Function in Form: Compositional Character Models for Open Vocab-John Wieting, Mohit Bansal, Kevin Gimpel, and Karen Livescu. 2016. CHARAGRAM: Embedding Words</cell></row><row><cell>Anders Søgaard. 2011. Semi-supervised condensed nearest neighbor for part-of-speech tagging. In Pro-ceedings of the 49th Annual Meeting of the Associ-</cell><cell>ulary Word Representation. In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 1520-1530. and Sentences via Character n-grams. In Proceed-ings of the 2016 Conference on Empirical Methods in Natural Language Processing, pages 1504-1515.</cell></row><row><cell>ation for Computational Linguistics: Human Lan-</cell><cell></cell></row><row><cell>guage Technologies, pages 48-52.</cell><cell>Minh-Thang Luong, Ilya Sutskever, Quoc V. Le, Oriol Wenpeng Yin, Hinrich Schtze, Bing Xiang, and Bowen</cell></row><row><cell></cell><cell>Vinyals, and Lukasz Kaiser. 2016. Multi-task Se-Zhou. 2016. ABCNN: Attention-Based Convolu-</cell></row><row><cell>Anders Søgaard and Yoav Goldberg. 2016. Deep</cell><cell>quence to Sequence Learning. In Proceedings of the tional Neural Network for Modeling Sentence Pairs.</cell></row><row><cell>multi-task learning with low level tasks supervised</cell><cell>4th International Conference on Learning Represen-Transactions of the Association for Computational</cell></row><row><cell>at lower layers. In Proceedings of the 54th Annual</cell><cell>tations. Linguistics, 4:259-272.</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_16"><head>Table 13 :</head><label>13</label><figDesc>POS tagging scores on the development set with and without the character n-gram embeddings, focusing on accuracy for unknown words. The overall accuracy scores are taken fromTable 12. There are 3,862 unknown words in the sentences of the development set.</figDesc><table><row><cell></cell><cell>Overall scores</cell><cell cols="2">Scores for unknown words</cell></row><row><cell cols="2">Single (Dependency) UAS LAS</cell><cell>UAS</cell><cell>LAS</cell></row><row><cell>W&amp;C</cell><cell cols="3">93.38 91.37 92.21 (900/976) 87.81 (857/976)</cell></row><row><cell>Only W</cell><cell cols="3">92.90 90.44 91.39 (892/976) 81.05 (791/976)</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_17"><head>Table 14 :</head><label>14</label><figDesc>Dependency parsing scores on the development set with and without the character n-gram embeddings, focusing on UAS and LAS for unknown words. The overall scores are taken fromTable 12. There are 976 unknown words in the sentences of the development set.</figDesc><table /><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">t used in the first three tasks. We compute the sentence-level representation h (4) s as the</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">The training code and the pre-trained embeddings are available at https://github.com/hassyGo/ charNgram2vec.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">In chunking evaluation, we only show the results of "Single" and "JMTAB" because the sentences for chunking evaluation overlap the training data for dependency parsing.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">Choe and Charniak (2016) employed a tri-training method to expand the training data with 400,000 trees in addition to the WSJ data, and they reported 95.9 UAS and 94.1 LAS by converting their constituency trees into dependency trees.Kuncoro et al. (2017)  also reported high accuracy (95.8 UAS and 94.6 LAS) by using a converter.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We thank the anonymous reviewers and the Salesforce Research team members for their fruitful comments and discussions.</p><p>Regularization We set the regularization coefficient to 10 −6 for the LSTM weight matrices, 10 −5 for the weight matrices in the classifiers, and 10 −3 for the successive regularization term excluding the classifier parameters of the lower-level tasks, respectively. The successive regularization coefficient for the classifier parameters was set to 10 −2 . We also used dropout (Srivastava et al., 2014). The dropout rate was set to 0.2 for the vertical connections in the multi-layer bi-LSTMs (Pham et al.,  2014), the word representations and the label embeddings of the entailment layer, and the classifier of the POS tagging, chunking, dependency parsing, and entailment. A different dropout rate of 0.4 was used for the word representations and the label embeddings of the POS, chunking, and dependency layers, and the classifier of the relatedness layer.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D Analysis on Semantic Tasks</head><p>We inspected the development set results on the semantic tasks using the "JMT all " setting. In our model, the highest-level task is the textual entailment task. We show an example premisehypothesis pair which is misclassified in our results:</p><p>Premise: "A surfer is riding a big wave across dark green water", and Hypothesis: "The surfer is riding a small wave".</p><p>The predicted label is entailment, but the gold label is contradiction. This example is very easy by focusing on the difference between the two words "big" and "small". However, our model fails to correctly classify this example because there are few opportunities to learn the difference. Our model relies on the pre-trained word embeddings based on word co-occurrence statistics <ref type="bibr">(Mikolov et al., 2013)</ref>, and it is widely known that such co-occurrence-based embeddings can rarely discriminate between antonyms and synonyms <ref type="bibr">(Ono et al., 2015)</ref>. Moreover, the other four tasks in our JMT model do not explicitly provide the opportunities to learn such semantic aspects. Even in the training data of the textual entailment task, we can find only one example to learn the difference between the two words, which is not enough to obtain generalization capacities. Therefore, it is worth investigating the explicit use of external dictionaries or the use of pre-trained word embeddings learned with such dictionaries <ref type="bibr">(Ono et al., 2015)</ref>, to see whether our JMT model is further improved not only for the semantic tasks, but also for the low-level tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E How Do Shared Embeddings Change</head><p>In our JMT model, the word and character n-gram embedding matrices are shared across all of the five different tasks. To better qualitatively explain the importance of the shortcut connections shown in <ref type="table">Table 7</ref>, we inspected how the shared embeddings change when fed into the different bi-LSTM layers. More concretely, we checked closest neighbors in terms of the cosine similarity for the word representations before and after fed into the forward LSTM layers. In particular, we used the corresponding part of W u in Eq. (1) to perform linear transformation of the input embeddings, because u t directly affects the hidden states of the LSTMs. Thus, this is a context-independent analysis. <ref type="table">Table 15</ref> shows the examples of the word "standing". The row of "Embedding" shows the cases of using the shared embeddings, and the others show the results of using the lineartransformed embeddings. In the column of "Only word", the results of using only the word embeddings are shown. The closest neighbors in the case of "Embedding" capture the semantic similarity, but after fed into the POS layer, the semantic similarity is almost washed out. This is not surprising because it is sufficient to cluster the words of the same POS tags: here, NN, VBG, etc. In the chunking layer, the similarity in terms of verbs is captured, and this is because it is sufficient to identify the coarse chunking tags: here, VP. In the dependency layer, the closest neighbors are adverbs, gerunds of verbs, and nouns, and all of them can be child nodes of verbs in dependency trees. However, this information is not sufficient in further classifying the dependency labels. Then we can see that in the column of "Word and char", jointly using the character n-gram embeddings adds the morphological information, and as shown in Table 12, the LAS score is substantially improved.</p><p>In the case of semantic tasks, the projected embeddings capture not only syntactic, but also semantic similarities. These results show that different tasks need different aspects of the word similarities, and our JMT model efficiently transforms the shared embeddings for the different tasks by the simple linear transformation. Therefore, without the shortcut connections, the information about the word representations are fed into the semantic tasks after transformed in the lower layers where the semantic similarities are not always important. Indeed, the results of the semantic tasks are very poor without the shortcut connections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Word and char</head><p>Only  <ref type="table">Table 15</ref>: Closest neighbors of the word "standing" in the embedding space and the projected space in each forward LSTM.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Improved Transition-Based Parsing and Tagging with Neural Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Alberti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Coppola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Slav</forename><surname>Petrov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing</title>
		<meeting>the 2015 Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1354" to="1359" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Globally Normalized Transition-Based Neural Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Andor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Alberti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aliaksei</forename><surname>Severyn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alessandro</forename><surname>Presta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kuzman</forename><surname>Ganchev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Slav</forename><surname>Petrov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Collins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics</title>
		<meeting>the 54th Annual Meeting of the Association for Computational Linguistics</meeting>
		<imprint>
			<publisher>Long Papers</publisher>
			<date type="published" when="2016" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="2442" to="2452" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Chunking and Dependency Parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Giuseppe</forename><surname>Attardi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Felice</forename><surname>Dellorletta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of LREC 2008 Workshop on Partial Parsing</title>
		<meeting>LREC 2008 Workshop on Partial Parsing</meeting>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Top Accuracy and Fast Dependency Parsing is not a Contradiction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Bohnet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23rd International Conference on Computational Linguistics</title>
		<meeting>the 23rd International Conference on Computational Linguistics</meeting>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="89" to="97" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Enriching Word Vectors with Subword Information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Piotr</forename><surname>Bojanowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Edouard</forename><surname>Grave</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Armand</forename><surname>Joulin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tomas</forename><surname>Mikolov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transactions of the Association for Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="135" to="146" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qian</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaodan</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhenhua</forename><surname>Ling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Si</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hui</forename><surname>Jiang</surname></persName>
		</author>
		<idno>cs.CL 1609.06038</idno>
		<title level="m">Enhancing and Combining Sequential and Tree LSTM for Natural Language Inference. arXiv</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Parsing as Language Modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kook</forename><surname>Do</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eugene</forename><surname>Choe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Charniak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing</title>
		<meeting>the 2016 Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="2331" to="2336" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">most) from Scratch</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ronan</forename><surname>Collobert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Weston</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leon</forename><surname>Bottou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Karlen Nad Koray Kavukcuoglu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pavel</forename><surname>Kuksa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Natural Language Processing</title>
		<imprint>
			<publisher>Al</publisher>
			<date type="published" when="2011" />
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="2493" to="2537" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Deep Biaffine Attention for Neural Dependency Parsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Timothy</forename><surname>Dozat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><forename type="middle">D</forename><surname>Manning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th International Conference on Learning Representations</title>
		<meeting>the 5th International Conference on Learning Representations</meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Transition-Based Dependency Parsing with Stack Long Short-Term Memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Dyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miguel</forename><surname>Ballesteros</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename><surname>Ling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Austin</forename><surname>Matthews</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Noah</forename><forename type="middle">A</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing</title>
		<meeting>the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing</meeting>
		<imprint>
			<publisher>Long Papers</publisher>
			<date type="published" when="2015" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="334" to="343" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Efficient Normal-Form Parsing for Combinatory Categorial Grammar</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Eisner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 34th Annual Meeting of the Association for Computational Linguistics</title>
		<meeting>the 34th Annual Meeting of the Association for Computational Linguistics</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="79" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Tree-to-Sequence Attentional Neural Machine Translation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Akiko</forename><surname>Eriguchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kazuma</forename><surname>Hashimoto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshimasa</forename><surname>Tsuruoka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics</title>
		<meeting>the 54th Annual Meeting of the Association for Computational Linguistics</meeting>
		<imprint>
			<publisher>Long Papers</publisher>
			<date type="published" when="2016" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="823" to="833" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><surname>Godwin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pontus</forename><surname>Stenetorp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sebastian</forename><surname>Riedel</surname></persName>
		</author>
		<idno>cs.CL 1612.09113</idno>
		<title level="m">Deep Semi-Supervised Learning with Linguistically Motivated Sequence Labeling Task Hierarchies. arXiv</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Maxout Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ian</forename><forename type="middle">J</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Warde-Farley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mehdi</forename><surname>Mirza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron</forename><surname>Courville</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of The 30th International Conference on Machine Learning</title>
		<meeting>The 30th International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="1319" to="1327" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Framewise Phoneme Classification with Bidirectional LSTM and Other Neural Network Architectures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jurgen</forename><surname>Schmidhuber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Networks</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="602" to="610" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
