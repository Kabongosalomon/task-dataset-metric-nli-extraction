<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Distributional Perspective on Reinforcement Learning</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><forename type="middle">G</forename><surname>Bellemare</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Will</forename><surname>Dabney</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rémi</forename><surname>Munos</surname></persName>
						</author>
						<title level="a" type="main">A Distributional Perspective on Reinforcement Learning</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-25T20:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper we argue for the fundamental importance of the value distribution: the distribution of the random return received by a reinforcement learning agent. This is in contrast to the common approach to reinforcement learning which models the expectation of this return, or value. Although there is an established body of literature studying the value distribution, thus far it has always been used for a specific purpose such as implementing risk-aware behaviour. We begin with theoretical results in both the policy evaluation and control settings, exposing a significant distributional instability in the latter. We then use the distributional perspective to design a new algorithm which applies Bellman's equation to the learning of approximate value distributions. We evaluate our algorithm using the suite of games from the Arcade Learning Environment. We obtain both state-of-the-art results and anecdotal evidence demonstrating the importance of the value distribution in approximate reinforcement learning. Finally, we combine theoretical and empirical evidence to highlight the ways in which the value distribution impacts learning in the approximate setting.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>One of the major tenets of reinforcement learning states that, when not otherwise constrained in its behaviour, an agent should aim to maximize its expected utility Q, or value <ref type="bibr">(Sutton &amp; Barto, 1998</ref>). Bellman's equation succintly describes this value in terms of the expected reward and expected outcome of the random transition (x, a) → (X , A ):</p><p>Q(x, a) = E R(x, a) + γ E Q(X , A ).</p><p>In this paper, we aim to go beyond the notion of value and argue in favour of a distributional perspective on reinforce-* Equal contribution 1 DeepMind, London, UK. Correspondence to: Marc G. Bellemare &lt;bellemare@google.com&gt;.</p><p>Proceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s). ment learning. Specifically, the main object of our study is the random return Z whose expectation is the value Q. This random return is also described by a recursive equation, but one of a distributional nature:</p><p>Z(x, a) D = R(x, a) + γZ(X , A ).</p><p>The distributional Bellman equation states that the distribution of Z is characterized by the interaction of three random variables: the reward R, the next state-action (X , A ), and its random return Z(X , A ). By analogy with the wellknown case, we call this quantity the value distribution.</p><p>Although the distributional perspective is almost as old as Bellman's equation itself <ref type="bibr" target="#b16">(Jaquette, 1973;</ref><ref type="bibr">Sobel, 1982;</ref><ref type="bibr">White, 1988)</ref>, in reinforcement learning it has thus far been subordinated to specific purposes: to model parametric uncertainty <ref type="bibr" target="#b9">(Dearden et al., 1998)</ref>, to design risk-sensitive algorithms <ref type="bibr">(Morimura et al., 2010b;</ref><ref type="bibr">a)</ref>, or for theoretical analysis <ref type="bibr" target="#b0">(Azar et al., 2012;</ref><ref type="bibr" target="#b19">Lattimore &amp; Hutter, 2012</ref>). By contrast, we believe the value distribution has a central role to play in reinforcement learning.</p><p>Contraction of the policy evaluation Bellman operator. Basing ourselves on results by <ref type="bibr">Rösler (1992)</ref> we show that, for a fixed policy, the Bellman operator over value distributions is a contraction in a maximal form of the Wasserstein (also called Kantorovich or Mallows) metric. Our particular choice of metric matters: the same operator is not a contraction in total variation, Kullback-Leibler divergence, or Kolmogorov distance.</p><p>Instability in the control setting. We will demonstrate an instability in the distributional version of Bellman's optimality equation, in contrast to the policy evaluation case. Specifically, although the optimality operator is a contraction in expected value (matching the usual optimality result), it is not a contraction in any metric over distributions. These results provide evidence in favour of learning algorithms that model the effects of nonstationary policies.</p><p>Better approximations. From an algorithmic standpoint, there are many benefits to learning an approximate distribution rather than its approximate expectation. The distributional Bellman operator preserves multimodality in value distributions, which we believe leads to more stable learning. Approximating the full distribution also mitigates the effects of learning from a nonstationary policy. As a whole, arXiv:1707.06887v1 <ref type="bibr">[cs.</ref>LG] 21 Jul 2017 we argue that this approach makes approximate reinforcement learning significantly better behaved.</p><p>We will illustrate the practical benefits of the distributional perspective in the context of the Arcade Learning Environment <ref type="bibr" target="#b1">(Bellemare et al., 2013)</ref>. By modelling the value distribution within a DQN agent <ref type="bibr" target="#b22">(Mnih et al., 2015)</ref>, we obtain considerably increased performance across the gamut of benchmark Atari 2600 games, and in fact achieve stateof-the-art performance on a number of games. Our results echo those of <ref type="bibr" target="#b22">Veness et al. (2015)</ref>, who obtained extremely fast learning by predicting Monte Carlo returns.</p><p>From a supervised learning perspective, learning the full value distribution might seem obvious: why restrict ourselves to the mean? The main distinction, of course, is that in our setting there are no given targets. Instead, we use Bellman's equation to make the learning process tractable; we must, as Sutton &amp; Barto (1998) put it, "learn a guess from a guess". It is our belief that this guesswork ultimately carries more benefits than costs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Setting</head><p>We consider an agent interacting with an environment in the standard fashion: at each step, the agent selects an action based on its current state, to which the environment responds with a reward and the next state. We model this interaction as a time-homogeneous Markov Decision Process (X , A, R, P, γ). As usual, X and A are respectively the state and action spaces, P is the transition kernel P (· | x, a), γ ∈ [0, 1] is the discount factor, and R is the reward function, which in this work we explicitly treat as a random variable. A stationary policy π maps each state x ∈ X to a probability distribution over the action space A.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Bellman's Equations</head><p>The return Z π is the sum of discounted rewards along the agent's trajectory of interactions with the environment. The value function Q π of a policy π describes the expected return from taking action a ∈ A from state x ∈ X , then acting according to π:</p><formula xml:id="formula_0">Q π (x, a) := E Z π (x, a) = E ∞ t=0 γ t R(x t , a t ) ,<label>(1)</label></formula><p>x t ∼ P (· | x t−1 , a t−1 ), a t ∼ π(· | x t ), x 0 = x, a 0 = a.</p><p>Fundamental to reinforcement learning is the use of Bellman's equation <ref type="bibr" target="#b3">(Bellman, 1957)</ref> to describe the value function:</p><formula xml:id="formula_1">Q π (x, a) = E R(x, a) + γ E P,π Q π (x , a ).</formula><p>In reinforcement learning we are typically interested in acting so as to maximize the return. The most common ap- proach for doing so involves the optimality equation</p><formula xml:id="formula_2">P ⇡ Z R+ P ⇡ Z Z P ⇡ (a) (b) (c) (d) T ⇡ Z</formula><formula xml:id="formula_3">Q * (x, a) = E R(x, a) + γ E P max a ∈A Q * (x , a ).</formula><p>This equation has a unique fixed point Q * , the optimal value function, corresponding to the set of optimal policies Π * (π * is optimal if E a∼π * Q * (x, a) = max a Q * (x, a)).</p><p>We view value functions as vectors in R X ×A , and the expected reward function as one such vector. In this context, the Bellman operator T π and optimality operator T are</p><formula xml:id="formula_4">T π Q(x, a) := E R(x, a) + γ E P,π Q(x , a ) (2) T Q(x, a) := E R(x, a) + γ E P max a ∈A Q(x , a ). (3)</formula><p>These operators are useful as they describe the expected behaviour of popular learning algorithms such as SARSA and Q-Learning. In particular they are both contraction mappings, and their repeated application to some initial Q 0 converges exponentially to Q π or Q * , respectively <ref type="bibr" target="#b4">(Bertsekas &amp; Tsitsiklis, 1996)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">The Distributional Bellman Operators</head><p>In this paper we take away the expectations inside Bellman's equations and consider instead the full distribution of the random variable Z π . From here on, we will view Z π as a mapping from state-action pairs to distributions over returns, and call it the value distribution.</p><p>Our first aim is to gain an understanding of the theoretical behaviour of the distributional analogues of the Bellman operators, in particular in the less well-understood control setting. The reader strictly interested in the algorithmic contribution may choose to skip this section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Distributional Equations</head><p>It will sometimes be convenient to make use of the probability space (Ω, F, Pr). The reader unfamiliar with mea-sure theory may think of Ω as the space of all possible outcomes of an experiment <ref type="bibr" target="#b6">(Billingsley, 1995)</ref>. We will write u p to denote the L p norm of a vector u ∈ R X for 1 ≤ p ≤ ∞; the same applies to vectors in R X ×A . The L p norm of a random vector U : Ω → R X (or R X ×A ) is then U p := E U (ω) p p 1/p , and for p = ∞ we have U ∞ = ess sup U (ω) ∞ (we will omit the dependency on ω ∈ Ω whenever unambiguous). We will denote the c.d.f. of a random variable U by F U (y) := Pr{U ≤ y}, and its inverse c.d.f. by F −1 U (q) := inf{y : F U (y) ≥ q}.</p><p>A distributional equation U D := V indicates that the random variable U is distributed according to the same law as V . Without loss of generality, the reader can understand the two sides of a distributional equation as relating the distributions of two independent random variables. Distributional equations have been used in reinforcement learning by <ref type="bibr" target="#b10">Engel et al. (2005)</ref>; Morimura et al. (2010a) among others, and in operations research by <ref type="bibr">White (1988)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">The Wasserstein Metric</head><p>The main tool for our analysis is the Wasserstein metric d p between cumulative distribution functions (see e.g. <ref type="bibr" target="#b5">Bickel &amp; Freedman, 1981,</ref> where it is called the Mallows metric). For F , G two c.d.fs over the reals, it is defined as</p><formula xml:id="formula_5">d p (F, G) := inf U,V U − V p ,</formula><p>where the infimum is taken over all pairs of random variables (U, V ) with respective cumulative distributions F and G. The infimum is attained by the inverse c.d.f. transform of a random variable U uniformly distributed on [0, 1]:</p><formula xml:id="formula_6">d p (F, G) = F −1 (U) − G −1 (U) p .</formula><p>For p &lt; ∞ this is more explicitly written as</p><formula xml:id="formula_7">d p (F, G) = 1 0 F −1 (u) − G −1 (u) p du 1/p . Given two random variables U , V with c.d.fs F U , F V , we will write d p (U, V ) := d p (F U , F V ).</formula><p>We will find it convenient to conflate the random variables under consideration with their versions under the inf, writing</p><formula xml:id="formula_8">d p (U, V ) = inf U,V U − V p .</formula><p>whenever unambiguous; we believe the greater legibility justifies the technical inaccuracy. Finally, we extend this metric to vectors of random variables, such as value distributions, using the corresponding L p norm.</p><p>Consider a scalar a and a random variable A independent of U, V . The metric d p has the following properties:</p><formula xml:id="formula_9">d p (aU, aV ) ≤ |a|d p (U, V ) (P1) d p (A + U, A + V ) ≤ d p (U, V ) (P2) d p (AU, AV ) ≤ A p d p (U, V ).<label>(P3)</label></formula><p>We will need the following additional property, which makes no independence assumptions on its variables. Its proof, and that of later results, is given in the appendix.</p><p>Lemma 1 (Partition lemma). Let A 1 , A 2 , . . . be a set of random variables describing a partition of Ω, i.e. A i (ω) ∈ {0, 1} and for any ω there is exactly one A i with A i (ω) = 1. Let U, V be two random variables. Then</p><formula xml:id="formula_10">d p U, V ≤ i d p (A i U, A i V ).</formula><p>Let Z denote the space of value distributions with bounded moments. For two value distributions Z 1 , Z 2 ∈ Z we will make use of a maximal form of the Wasserstein metric:</p><formula xml:id="formula_11">d p (Z 1 , Z 2 ) := sup x,a d p (Z 1 (x, a), Z 2 (x, a)).</formula><p>We will used p to establish the convergence of the distributional Bellman operators.</p><p>Lemma 2.d p is a metric over value distributions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">Policy Evaluation</head><p>In the policy evaluation setting <ref type="bibr">(Sutton &amp; Barto, 1998)</ref> we are interested in the value function V π associated with a given policy π. The analogue here is the value distribution Z π . In this section we characterize Z π and study the behaviour of the policy evaluation operator T π . We emphasize that Z π describes the intrinsic randomness of the agent's interactions with its environment, rather than some measure of uncertainty about the environment itself.</p><p>We view the reward function as a random vector R ∈ Z, and define the transition operator P π : Z → Z</p><formula xml:id="formula_12">P π Z(x, a) D := Z(X , A ) (4) X ∼ P (· | x, a), A ∼ π(· | X ),</formula><p>where we use capital letters to emphasize the random nature of the next state-action pair (X , A ). We define the distributional Bellman operator T π : Z → Z as</p><formula xml:id="formula_13">T π Z(x, a) D := R(x, a) + γP π Z(x, a).<label>(5)</label></formula><p>While T π bears a surface resemblance to the usual Bellman operator (2), it is fundamentally different. In particular, three sources of randomness define the compound distribution T π Z:</p><p>a) The randomness in the reward R, b) The randomness in the transition P π , and c) The next-state value distribution Z(X , A ).</p><p>In particular, we make the usual assumption that these three quantities are independent. In this section we will show that (5) is a contraction mapping whose unique fixed point is the random return Z π .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.1.">CONTRACTION INd p</head><p>Consider the process Z k+1 := T π Z k , starting with some Z 0 ∈ Z. We may expect the limiting expectation of {Z k } to converge exponentially quickly, as usual, to Q π . As we now show, the process converges in a stronger sense: T π is a contraction ind p , which implies that all moments also converge exponentially quickly.</p><formula xml:id="formula_14">Lemma 3. T π : Z → Z is a γ-contraction ind p .</formula><p>Using Lemma 3, we conclude using Banach's fixed point theorem that T π has a unique fixed point. By inspection, this fixed point must be Z π as defined in (1). As we assume all moments are bounded, this is sufficient to conclude that the sequence {Z k } converges to Z π ind p for 1 ≤ p ≤ ∞.</p><p>To conclude, we remark that not all distributional metrics are equal; for example, <ref type="bibr" target="#b8">Chung &amp; Sobel (1987)</ref> have shown that T π is not a contraction in total variation distance. Similar results can be derived for the Kullback-Leibler divergence and the Kolmogorov distance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.2.">CONTRACTION IN CENTERED MOMENTS</head><p>Observe that d 2 (U, V ) (and more generally, d p ) relates to a coupling C(ω) := U (ω) − V (ω), in the sense that</p><formula xml:id="formula_15">d 2 2 (U, V ) ≤ E[(U − V ) 2 ] = V C + E C 2 .</formula><p>As a result, we cannot directly use d 2 to bound the variance difference |V(T π Z(x, a)) − V(Z π (x, a))|. However, T π is in fact a contraction in variance <ref type="bibr">(Sobel, 1982</ref>, see also appendix). In general, T π is not a contraction in the p th centered moment, p &gt; 2, but the centered moments of the iterates {Z k } still converge exponentially quickly to those of Z π ; the proof extends the result of Rösler (1992).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.">Control</head><p>Thus far we have considered a fixed policy π, and studied the behaviour of its associated operator T π . We now set out to understand the distributional operators of the control setting -where we seek a policy π that maximizes value -and the corresponding notion of an optimal value distribution. As with the optimal value function, this notion is intimately tied to that of an optimal policy. However, while all optimal policies attain the same value Q * , in our case a difficulty arises: in general there are many optimal value distributions.</p><p>In this section we show that the distributional analogue of the Bellman optimality operator converges, in a weak sense, to the set of optimal value distributions. However, this operator is not a contraction in any metric between distributions, and is in general much more temperamental than the policy evaluation operators. We believe the convergence issues we outline here are a symptom of the inherent instability of greedy updates, as highlighted by e.g. <ref type="bibr">Tsitsiklis (2002)</ref> and most recently <ref type="bibr" target="#b13">Harutyunyan et al. (2016)</ref>.</p><p>Let Π * be the set of optimal policies. We begin by characterizing what we mean by an optimal value distribution.</p><p>Definition 1 (Optimal value distribution). An optimal value distribution is the v.d. of an optimal policy. The set of optimal value distributions is Z * := {Z π * : π * ∈ Π * }.</p><p>We emphasize that not all value distributions with expectation Q * are optimal: they must match the full distribution of the return under some optimal policy.</p><p>Definition 2. A greedy policy π for Z ∈ Z maximizes the expectation of Z. The set of greedy policies for Z is</p><formula xml:id="formula_16">G Z := {π : a π(a | x) E Z(x, a) = max a ∈A E Z(x, a )}.</formula><p>Recall that the expected Bellman optimality operator T is</p><formula xml:id="formula_17">T Q(x, a) = E R(x, a) + γ E P max a ∈A Q(x , a ). (6)</formula><p>The maximization at x corresponds to some greedy policy. Although this policy is implicit in (6), we cannot ignore it in the distributional setting. We will call a distributional Bellman optimality operator any operator T which implements a greedy selection rule, i.e.</p><p>T Z = T π Z for some π ∈ G Z .</p><p>As in the policy evaluation setting, we are interested in the behaviour of the iterates Z k+1 := T Z k , Z 0 ∈ Z. Our first result is to assert that E Z k behaves as expected.</p><formula xml:id="formula_18">Lemma 4. Let Z 1 , Z 2 ∈ Z. Then E T Z 1 − E T Z 2 ∞ ≤ γ E Z 1 − E Z 2 ∞ ,</formula><p>and in particular E Z k → Q * exponentially quickly.</p><p>By inspecting Lemma 4, we might expect that Z k converges quickly ind p to some fixed point in Z * . Unfortunately, convergence is neither quick nor assured to reach a fixed point. In fact, the best we can hope for is pointwise convergence, not even to the set Z * but to the larger set of nonstationary optimal value distributions.</p><p>Definition 3. A nonstationary optimal value distribution Z * * is the value distribution corresponding to a sequence of optimal policies. The set of n.o.v.d. is Z * * .</p><p>Theorem 1 (Convergence in the control setting). Let X be measurable and suppose that A is finite. Then</p><formula xml:id="formula_19">lim k→∞ inf Z * * ∈Z * * d p (Z k (x, a), Z * * (x, a)) = 0 ∀x, a.</formula><p>If X is finite, then Z k converges to Z * * uniformly. Furthermore, if there is a total ordering ≺ on Π * , such that for any Z * ∈ Z * ,</p><formula xml:id="formula_20">T Z * = T π Z * with π ∈ G Z * , π ≺ π ∀π ∈ G Z * \ {π}.</formula><p>Then T has a unique fixed point Z * ∈ Z * .</p><p>Comparing Theorem 1 to Lemma 4 reveals a significant difference between the distributional framework and the usual setting of expected return. While the mean of Z k converges exponentially quickly to Q * , its distribution need not be as well-behaved! To emphasize this difference, we now provide a number of negative results concerning T .</p><p>Proposition 1. The operator T is not a contraction.</p><p>Consider the following example <ref type="figure">(Figure 2</ref>, left). There are two states, x 1 and x 2 ; a unique transition from x 1 to x 2 ; from x 2 , action a 1 yields no reward, while the optimal action a 2 yields 1 + or −1 + with equal probability. Both actions are terminal. There is a unique optimal policy and therefore a unique fixed point Z * . Now consider Z as given in <ref type="figure">Figure 2</ref> (right), and its distance to Z * :</p><formula xml:id="formula_21">d 1 (Z, Z * ) = d 1 (Z(x 2 , a 2 ), Z * (x 2 , a 2 )) = 2 ,</formula><p>where we made use of the fact that Z = Z * everywhere except at (x 2 , a 2 ). When we apply T to Z, however, the greedy action a 1 is selected and T Z(x 1 ) = Z(x 2 , a 1 ). But</p><formula xml:id="formula_22">d 1 (T Z, T Z * ) = d 1 (T Z(x 1 ), Z * (x 1 )) = 1 2 |1 − | + 1 2 |1 + | &gt; 2</formula><p>for a sufficiently small . This shows that the undiscounted update is not a nonexpansion:</p><formula xml:id="formula_23">d 1 (T Z, T Z * ) &gt;d 1 (Z, Z * ).</formula><p>With γ &lt; 1, the same proof shows it is not a contraction. Using a more technically involved argument, we can extend this result to any metric which separates Z and T Z.</p><p>Proposition 2. Not all optimality operators have a fixed point Z * = T Z * .</p><p>To see this, consider the same example, now with = 0, and a greedy operator T which breaks ties by picking a 2 if Z(x 1 ) = 0, and a 1 otherwise. Then the sequence T Z * (x 1 ), (T ) 2 Z * (x 1 ), . . . alternates between Z * (x 2 , a 1 ) and Z * (x 2 , a 2 ).</p><formula xml:id="formula_24">R = 0 R = ± 1 x 2 x 1 a 1 a 2 x 1 x 2 , a 1 x 2 , a 2 Z * ± 1 0 ± 1 Z ± 1 0 − ± 1 T Z 0 0 ± 1 Figure 2.</formula><p>Undiscounted two-state MDP for which the optimality operator T is not a contraction, with example. The entries that contribute tod1(Z, Z * ) andd1(T Z, Z * ) are highlighted.</p><p>Proposition 3. That T has a fixed point Z * = T Z * is insufficient to guarantee the convergence of {Z k } to Z * .</p><p>Theorem 1 paints a rather bleak picture of the control setting. It remains to be seen whether the dynamical eccentricies highlighted here actually arise in practice. One open question is whether theoretically more stable behaviour can be derived using stochastic policies, for example from conservative policy iteration <ref type="bibr" target="#b17">(Kakade &amp; Langford, 2002)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Approximate Distributional Learning</head><p>In this section we propose an algorithm based on the distributional Bellman optimality operator. In particular, this will require choosing an approximating distribution. Although the Gaussian case has previously been considered <ref type="bibr">(Morimura et al., 2010a;</ref><ref type="bibr">Tamar et al., 2016)</ref>, to the best of our knowledge we are the first to use a rich class of parametric distributions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Parametric Distribution</head><p>We will model the value distribution using a discrete distribution parametrized by N ∈ N and V MIN , V MAX ∈ R, and whose support is the set of atoms</p><formula xml:id="formula_25">{z i = V MIN + i z : 0 ≤ i &lt; N }, z := VMAX−VMIN N −1 .</formula><p>In a sense, these atoms are the "canonical returns" of our distribution. The atom probabilities are given by a parametric model θ :</p><formula xml:id="formula_26">X × A → R N Z θ (x, a) = z i w.p. p i (x, a) := e θi(x,a) j e θj (x,a) .</formula><p>The discrete distribution has the advantages of being highly expressive and computationally friendly (see e.g. <ref type="bibr">Van den Oord et al., 2016)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Projected Bellman Update</head><p>Using a discrete distribution poses a problem: the Bellman update T Z θ and our parametrization Z θ almost always have disjoint supports. From the analysis of Section 3 it would seem natural to minimize the Wasserstein metric (viewed as a loss) between T Z θ and Z θ , which is also conveniently robust to discrepancies in support. However, a second issue prevents this: in practice we are typically restricted to learning from sample transitions, which is not possible under the Wasserstein loss (see Prop. 5 and toy results in the appendix).</p><p>Instead, we project the sample Bellman updateT Z θ onto the support of Z θ <ref type="figure" target="#fig_0">(Figure 1, Algorithm 1)</ref>, effectively reducing the Bellman update to multiclass classification. Let π be the greedy policy w.r.t. E Z θ . Given a sample transition (x, a, r, x ), we compute the Bellman updateT z j := r + γz j for each atom z j , then distribute its probability</p><formula xml:id="formula_27">p j (x , π(x )) to the immediate neighbours ofT z j . The i th component of the projected update ΦT Z θ (x, a) is (ΦT Z θ (x, a))i = N −1 j=0 1 − |[T zj] VMAX VMIN − zi| z 1 0 pj(x , π(x )),<label>(7)</label></formula><p>where [·] b a bounds its argument in the range [a, b]. 1 As is usual, we view the next-state distribution as parametrized by a fixed parameterθ. The sample loss L x,a (θ) is the cross-entropy term of the KL divergence</p><formula xml:id="formula_28">D KL (ΦT Zθ(x, a) Z θ (x, a)),</formula><p>which is readily minimized e.g. using gradient descent. We call this choice of distribution and loss the categorical al-</p><formula xml:id="formula_29">gorithm. When N = 2, a simple one-parameter alternative is ΦT Z θ (x, a) := [E[T Z θ (x, a)] − V MIN )/ z] 1 0 ;</formula><p>we call this the Bernoulli algorithm. We note that, while these algorithms appear unrelated to the Wasserstein metric, recent work <ref type="bibr" target="#b2">(Bellemare et al., 2017)</ref> hints at a deeper connection.</p><formula xml:id="formula_30">Algorithm 1 Categorical Algorithm input A transition x t , a t , r t , x t+1 , γ t ∈ [0, 1] Q(x t+1 , a) := i z i p i (x t+1 , a) a * ← arg max a Q(x t+1 , a) m i = 0, i ∈ 0, . . . , N − 1 for j ∈ 0, . . . , N − 1 do # Compute the projection ofT z j onto the support {z i } T z j ← [r t + γ t z j ] VMAX VMIN b j ← (T z j − V MIN )/∆z # b j ∈ [0, N − 1] l ← b j , u ← b j # Distribute probability ofT z j m l ← m l + p j (x t+1 , a * )(u − b j ) m u ← m u + p j (x t+1 , a * )(b j − l) end for output − i m i log p i (x t , a t ) # Cross-entropy loss</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Evaluation on Atari 2600 Games</head><p>To understand the approach in a complex setting, we applied the categorical algorithm to games from the Ar-1 Algorithm 1 computes this projection in time linear in N .</p><p>cade Learning Environment (ALE; <ref type="bibr" target="#b1">Bellemare et al., 2013)</ref>. While the ALE is deterministic, stochasticity does occur in a number of guises: 1) from state aliasing, 2) learning from a nonstationary policy, and 3) from approximation errors. We used five training games <ref type="figure">(Fig 3)</ref> and 52 testing games.</p><p>For our study, we use the DQN architecture <ref type="bibr" target="#b22">(Mnih et al., 2015)</ref>, but output the atom probabilities p i (x, a) instead of action-values, and chose V MAX = −V MIN = 10 from preliminary experiments over the training games. We call the resulting architecture Categorical DQN. We replace the squared loss (r + γQ(x , π(x )) − Q(x, a)) 2 by L x,a (θ) and train the network to minimize this loss. 2 As in DQN, we use a simple -greedy policy over the expected actionvalues; we leave as future work the many ways in which an agent could select actions on the basis of the full distribution. The rest of our training regime matches Mnih et al.'s, including the use of a target network forθ. <ref type="figure">Figure 4</ref> illustrates the typical value distributions we observed in our experiments. In this example, three actions (those including the button press) lead to the agent releasing its laser too early and eventually losing the game. The corresponding distributions reflect this: they assign a significant probability to 0 (the terminal value). The safe actions have similar distributions (LEFT, which tracks the invaders' movement, is slightly favoured). This example helps explain why our approach is so successful: the distributional update keeps separated the low-value, "losing" event from the high-value, "survival" event, rather than average them into one (unrealizable) expectation. <ref type="bibr">3</ref> One surprising fact is that the distributions are not concentrated on one or two values, in spite of the ALE's determinism, but are often close to Gaussians. We believe this is due to our discretizing the diffusion process induced by γ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Varying the Number of Atoms</head><p>We began by studying our algorithm's performance on the training games in relation to the number of atoms ( <ref type="figure">Figure  3</ref>). For this experiment, we set = 0.05. From the data, it is clear that using too few atoms can lead to poor behaviour, and that more always increases performance; this is not immediately obvious as we may have expected to saturate the network capacity. The difference in performance between the 51-atom version and DQN is particularly striking: the latter is outperformed in all five games, and in SEAQUEST we attain state-of-the-art performance. As an additional point of the comparison, the single-parameter Bernoulli algorithm performs better than DQN in 3 games out of 5, and is most notably more robust in ASTERIX.  One interesting outcome of this experiment was to find out that our method does pick up on stochasticity. PONG exhibits intrinsic randomness: the exact timing of the reward depends on internal registers and is truly unobservable. We see this clearly reflected in the agent's prediction ( <ref type="figure" target="#fig_3">Figure 5</ref>): over five consecutive frames, the value distribution shows two modes indicating the agent's belief that it has yet to receive a reward. Interestingly, since the agent's state does not include past rewards, it cannot even extinguish the prediction after receiving the reward, explaining the relative proportions of the modes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">State-of-the-Art Results</head><p>The performance of the 51-atom agent (from here onwards, C51) on the training games, presented in the last section, is particularly remarkable given that it involved none of the other algorithmic ideas present in state-of-the-art agents. We next asked whether incorporating the most common hyperparameter choice, namely a smaller training , could lead to even better results. Specifically, we set = 0.01 (instead of 0.05); furthermore, every 1 million frames, we evaluate our agent's performance with = 0.001.</p><p>We compare our algorithm to DQN ( = 0.01), Double DQN <ref type="bibr">(van Hasselt et al., 2016)</ref>, the Dueling architecture <ref type="bibr">(Wang et al., 2016)</ref>, and Prioritized Replay <ref type="bibr">(Schaul et al., 2016)</ref>, comparing the best evaluation score achieved during training. We see that C51 significantly outperforms these other algorithms <ref type="figure" target="#fig_4">(Figures 6 and 7)</ref>. In fact, C51 surpasses the current state-of-the-art by a large margin in a number of games, most notably SEAQUEST. One particularly striking fact is the algorithm's good performance on sparse reward games, for example VENTURE and PRIVATE EYE. This suggests that value distributions are better able to propagate rarely occurring events. Full results are provided in the appendix.</p><p>We also include in the appendix <ref type="figure" target="#fig_0">(Figure 12</ref>) a comparison, averaged over 3 seeds, showing the number of games in which C51's training performance outperforms fullytrained DQN and human players. These results continue to show dramatic improvements, and are more representative of an agent's average performance. Within 50 million frames, C51 has outperformed a fully trained DQN agent on 45 out of 57 games. This suggests that the full 200 million training frames, and its ensuing computational cost, are unnecessary for evaluating reinforcement learning algorithms within the ALE.</p><p>The most recent version of the ALE contains a stochastic execution mechanism designed to ward against trajectory overfitting.Specifically, on each frame the environment rejects the agent's selected action with probability p = 0.25. Although DQN is mostly robust to stochastic execution, there are a few games in which its performance is reduced. On a score scale normalized with respect to the random and DQN agents, C51 obtains mean and median score improvements of 126% and 21.5% respectively, confirming the benefits of C51 beyond the deterministic setting.    </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Discussion</head><p>In this work we sought a more complete picture of reinforcement learning, one that involves value distributions. We found that learning value distributions is a powerful notion that allows us to surpass most gains previously made on Atari 2600, without further algorithmic adjustments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.">Why does learning a distribution matter?</head><p>It is surprising that, when we use a policy which aims to maximize expected return, we should see any difference in performance. The distinction we wish to make is that learning distributions matters in the presence of approximation. We now outline some possible reasons.</p><p>Reduced chattering. Our results from Section 3.4 highlighted a significant instability in the Bellman optimality operator. When combined with function approximation, this instability may prevent the policy from converging, what <ref type="bibr" target="#b12">Gordon (1995)</ref> called chattering. We believe the gradient-based categorical algorithm is able to mitigate these effects by effectively averaging the different distri- † The UNREAL results are not altogether comparable, as they were generated in the asynchronous setting with per-game hyperparameter tuning <ref type="bibr" target="#b15">(Jaderberg et al., 2017)</ref>.</p><p>butions, similar to conservative policy iteration <ref type="bibr" target="#b17">(Kakade &amp; Langford, 2002)</ref>. While the chattering persists, it is integrated to the approximate solution.</p><p>State aliasing. Even in a deterministic environment, state aliasing may result in effective stochasticity. <ref type="bibr" target="#b21">McCallum (1995)</ref>, for example, showed the importance of coupling representation learning with policy learning in partially observable domains. We saw an example of state aliasing in PONG, where the agent could not exactly predict the reward timing. Again, by explicitly modelling the resulting distribution we provide a more stable learning target.</p><p>A richer set of predictions. A recurring theme in artificial intelligence is the idea of an agent learning from a multitude of predictions <ref type="bibr" target="#b7">(Caruana 1997;</ref><ref type="bibr">Utgoff &amp; Stracuzzi 2002;</ref><ref type="bibr">Sutton et al. 2011;</ref><ref type="bibr" target="#b15">Jaderberg et al. 2017</ref>). The distributional approach naturally provides us with a rich set of auxiliary predictions, namely: the probability that the return will take on a particular value. Unlike previously proposed approaches, however, the accuracy of these predictions is tightly coupled with the agent's performance.</p><p>Framework for inductive bias. The distributional perspective on reinforcement learning allows a more natural framework within which we can impose assumptions about the domain or the learning problem itself. In this work we used distributions with support bounded in [V MIN , V MAX ].</p><p>Treating this support as a hyperparameter allows us to change the optimization problem by treating all extremal returns (e.g. greater than V MAX ) as equivalent. Surprisingly, a similar value clipping in DQN significantly degrades performance in most games. To take another example: interpreting the discount factor γ as a proper probability, as some authors have argued, leads to a different algorithm.</p><p>Well-behaved optimization. It is well-accepted that the KL divergence between categorical distributions is a reasonably easy loss to minimize. This may explain some of our empirical performance. Yet early experiments with alternative losses, such as KL divergence between continuous densities, were not fruitful, in part because the KL divergence is insensitive to the values of its outcomes. A closer minimization of the Wasserstein metric should yield even better results than what we presented here.</p><p>In closing, we believe our results highlight the need to account for distribution in the design, theoretical or otherwise, of algorithms. Audrunas Gruslys, Tom Stepleton, Aaron van den Oord; and particularly Chris Maddison for his comprehensive review of an earlier draft. Thanks also to Marek Petrik for pointers to the relevant literature, and Mark Rowland for fine-tuning details in the final version.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Erratum</head><p>The camera-ready copy of this paper incorrectly reported a mean score of 1010% for C51. The corrected figure stands at 701%, which remains higher than the other comparable baselines. The median score remains unchanged at 178%.</p><p>The error was due to evaluation episodes in one game (Atlantis) lasting over 30 minutes; in comparison, the other results presented here cap episodes at 30 minutes, as is standard. The previously reported score on Atlantis was 3.7 million; our 30-minute score is 841,075, which we believe is close to the achievable maximum in this time frame. Capping at 30 minutes brings our human-normalized score on Atlantis from 22824% to a mere (!) 5199%, unfortunately enough to noticeably affect the mean score, whose sensitivity to outliers is well-documented. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Related Work</head><p>To the best of our knowledge, the work closest to ours are two papers (Morimura et al., 2010b;a) studying the distributional Bellman equation from the perspective of its cumulative distribution functions. The authors propose both parametric and nonparametric solutions to learn distributions for risk-sensitive reinforcement learning. They also provide some theoretical analysis for the policy evaluation setting, including a consistency result in the nonparametric case. By contrast, we also analyze the control setting, and emphasize the use of the distributional equations to improve approximate reinforcement learning.</p><p>The variance of the return has been extensively studied in the risk-sensitive setting. Of note, Tamar et al. The distributional formulation also arises when modelling uncertainty. <ref type="bibr" target="#b9">Dearden et al. (1998)</ref> considered a Gaussian approximation to the value distribution, and modelled the uncertainty over the parameters of this approximation using a Normal-Gamma prior. <ref type="bibr" target="#b10">Engel et al. (2005)</ref> leveraged the distributional Bellman equation to define a Gaussian process over the unknown value function. More recently, <ref type="bibr" target="#b11">Geist &amp; Pietquin (2010)</ref> proposed an alternative solution to the same problem based on unscented Kalman filters. We believe much of the analysis we provide here, which deals with the intrinsic randomness of the environment, can also be applied to modelling uncertainty.</p><p>Our work here is based on a number of foundational results, in particular concerning alternative optimality criteria. Early on, <ref type="bibr" target="#b16">Jaquette (1973)</ref> showed that a moment optimality criterion, which imposes a total ordering on distributions, is achievable and defines a stationary optimal policy, echoing the second part of Theorem 1. <ref type="bibr">Sobel (1982)</ref> is usually cited as the first reference to Bellman equations for the higher moments (but not the distribution) of the return. <ref type="bibr" target="#b8">Chung &amp; Sobel (1987)</ref> provides results concerning the convergence of the distributional Bellman operator in total variation distance. White (1988) studies "nonstandard MDP criteria" from the perspective of optimizing the stateaction pair occupancy.</p><p>A number of probabilistic frameworks for reinforcement learning have been proposed in recent years. The planning as inference approach <ref type="bibr">(Toussaint &amp; Storkey, 2006;</ref><ref type="bibr" target="#b14">Hoffman et al., 2009</ref>) embeds the return into a graphical model, and applies probabilistic inference to determine the sequence of actions leading to maximal expected reward. <ref type="bibr">Wang et al. (2008)</ref> considered the dual formulation of reinforcement learning, where one optimizes the stationary distribution subject to constraints given by the transition function <ref type="bibr">(Puterman, 1994)</ref>, in particular its relationship to linear approximation. Related to this dual is the Compress and Control algorithm <ref type="bibr" target="#b22">Veness et al. (2015)</ref>, which describes a value function by learning a return distribution using density models. One of the aims of this work was to address the question left open by their work of whether one could be design a practical distributional algorithm based on the Bellman equation, rather than Monte Carlo estimation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Proofs</head><p>Lemma 1 (Partition lemma). Let A 1 , A 2 , . . . be a set of random variables describing a partition of Ω, i.e. A i (ω) ∈ {0, 1} and for any ω there is exactly one A i with A i (ω) = 1. Let U, V be two random variables. Then</p><formula xml:id="formula_31">d p U, V ≤ i d p (A i U, A i V ).</formula><p>Proof. We will give the proof for p &lt; ∞, noting that the same applies to p</p><formula xml:id="formula_32">= ∞. Let Y i D := A i U and Z i D := A i V , respectively. First note that d p p (A i U, A i V ) = inf Yi,Zi E |Y i − Z i | p = inf Yi,Zi E E |Y i − Z i | p | A i . Now, |A i U − A i V | p = 0 whenever A i = 0.</formula><p>It follows that we can choose Y i , Z i so that also |Y i − Z i | p = 0 whenever A i = 0, without increasing the expected norm. Hence</p><formula xml:id="formula_33">d p p (A i U, A i V ) = inf Yi,Zi Pr{A i = 1} E |Y i − Z i | p | A i = 1 . (8)</formula><p>Next, we claim that</p><formula xml:id="formula_34">inf U,V i Pr{A i = 1} E A i U − A i V p | A i = 1 (9) ≤ inf Y1,Y2,... Z1,Z2,... i Pr{A i = 1} E |Y i − Z i p | A i = 1 .</formula><p>Specifically, the left-hand side of the equation is an infimum over all r.v.'s whose cumulative distributions are F U and F V , respectively, while the right-hand side is an infimum over sequences of r.v's Y 1 , Y 2 , . . . and Z 1 , Z 2 , . . . whose cumulative distributions are F AiU , F AiV , respectively. To prove this upper bound, consider the c.d.f. of U :</p><formula xml:id="formula_35">F U (y) = Pr{U ≤ y} = i Pr{A i = 1} Pr{U ≤ y | A i = 1} = i Pr{A i = 1} Pr{A i U ≤ y | A i = 1}.</formula><p>Hence the distribution F U is equivalent, in an almost sure sense, to one that first picks an element A i of the partition, then picks a value for U conditional on the choice A i . On the other hand, the c.</p><formula xml:id="formula_36">d.f. of Y i D = A i U is F AiU (y) = Pr{A i = 1} Pr{A i U ≤ y | A i = 1} + Pr{A i = 0} Pr{A i U ≤ y | A i = 0} = Pr{A i = 1} Pr{A i U ≤ y | A i = 1} + Pr{A i = 0}I [y ≥ 0] .</formula><p>Thus the right-hand side infimum in (9) has the additional constraint that it must preserve the conditional c.d.fs, in particular when y ≥ 0. Put another way, instead of having the freedom to completely reorder the mapping U : Ω → R, we can only reorder it within each element of the partition. We now write</p><formula xml:id="formula_37">d p p (U, V ) = inf U,V U − V p = inf U,V E |U − V | p (a) = inf U,V i Pr{A i = 1} E |U − V | p | A i = 1 = inf U,V i Pr{A i = 1} E |A i U − A i V | p | A i = 1 ,</formula><p>where (a) follows because A 1 , A 2 , . . . is a partition. Using (9), this implies</p><formula xml:id="formula_38">d p p (U, V ) = inf U,V i Pr{A i = 1} E A i U − A i V p | A i = 1 ≤ inf Y1,Y2,... Z1,Z2,... i Pr{A i = 1} E Y i − Z i p | A i = 1 (b) = i inf Yi,Zi Pr{A i = 1} E Y i − Z i p | A i = 1 (c) = i d p (A i U, A i V ),</formula><p>because in (b) the individual components of the sum are independently minimized; and (c) from (8).</p><p>Lemma 2.d p is a metric over value distributions.</p><p>Proof. The only nontrivial property is the triangle inequality. For any value distribution Y ∈ Z, writē</p><formula xml:id="formula_39">d p (Z 1 , Z 2 ) = sup x,a d p (Z 1 (x, a), Z 2 (x, a))<label>(a)</label></formula><p>≤ sup</p><p>x,a [d p <ref type="figure" target="#fig_0">(Z 1 (x, a)</ref>, Y (x, a)) + d p <ref type="figure">(Y (x, a)</ref>, Z 2 (x, a))]</p><p>≤ sup</p><p>x,a d p <ref type="figure" target="#fig_0">(Z 1 (x, a), Y (x, a)</ref>) + sup</p><p>x,a d p <ref type="figure">(Y (x, a)</ref>, Z 2 (x, a))</p><formula xml:id="formula_40">=d p (Z 1 , Y ) +d p (Y, Z 2 ),</formula><p>where in (a) we used the triangle inequality for d p .</p><p>Lemma 3. T π : Z → Z is a γ-contraction ind p .</p><p>Proof. Consider Z 1 , Z 2 ∈ Z. By definition, <ref type="figure" target="#fig_0">1 (x, a)</ref>, T π Z 2 (x, a)).</p><formula xml:id="formula_41">d p (T π Z 1 , T π Z 2 ) = sup x,a d p (T π Z</formula><p>(10) By the properties of d p , we have dp(T π Z1(x, a), T π Z2(x, a)) = dp(R(x, a) + γP π Z1(x, a), R(x, a) + γP π Z2(x, a)) ≤ γdp(P π Z1(x, a), P π Z2(x, a)) ≤ γ sup</p><p>x ,a dp <ref type="figure" target="#fig_0">(Z1(x , a ), Z2(x , a )</ref>),</p><p>where the last line follows from the definition of P π (see (4)). Combining with (10) we obtain</p><formula xml:id="formula_42">d p (T π Z 1 , T π Z 2 ) = sup x,a d p (T π Z 1 (x, a), T π Z 2 (x, a)) ≤ γ sup x ,a d p (Z 1 (x , a ), Z 2 (x , a )) = γd p (Z 1 , Z 2 ).</formula><p>Proposition 1 <ref type="bibr">(Sobel, 1982)</ref>. Consider two value distributions Z 1 , Z 2 ∈ Z, and write V(Z i ) to be the vector of variances of Z i . Then</p><formula xml:id="formula_43">E T π Z 1 − E T π Z 2 ∞ ≤ γ E Z 1 − E Z 2 ∞ , and V(T π Z 1 ) − V(T π Z 2 ) ∞ ≤ γ 2 VZ 1 − VZ 2 ∞ .</formula><p>Proof. The first statement is standard, and its proof follows from E T π Z = T π E Z, where the second T π denotes the usual operator over value functions. Now, by independence of R and P π Z i : <ref type="figure">a)</ref>).</p><formula xml:id="formula_44">V(T π Z i (x, a)) = V R(x, a) + γP π Z i (x, a) = V(R(x, a)) + γ 2 V(P π Z i (x,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>And now</head><formula xml:id="formula_45">V(T π Z 1 ) − V(T π Z 2 ) ∞ = sup x,a V(T π Z 1 (x, a)) − V(T π Z 2 (x, a)) = sup x,a γ 2 [V(P π Z 1 (x, a)) − V(P π Z 2 (x, a))] = sup x,a γ 2 E [V(Z 1 (X , A )) − V(Z 2 (X , A ))] ≤ sup x ,a γ 2 V(Z 1 (x , a )) − V(Z 2 (x , a )) ≤ γ 2 VZ 1 − VZ 2 ∞ .</formula><p>Lemma 4. Let Z 1 , Z 2 ∈ Z. Then</p><formula xml:id="formula_46">E T Z 1 − E T Z 2 ∞ ≤ γ E Z 1 − E Z 2 ∞ ,</formula><p>and in particular E Z k → Q * exponentially quickly.</p><p>Proof. The proof follows by linearity of expectation. Write T D for the distributional operator and T E for the usual operator. Then</p><formula xml:id="formula_47">E T D Z 1 − E T D Z 2 ∞ = T E E Z 1 − T E E Z 2 ∞ ≤ γ Z 1 − Z 2 ∞ .</formula><p>Theorem 1 (Convergence in the control setting). Let Z k := T Z k−1 with Z 0 ∈ Z. Let X be measurable and suppose that A is finite. Then lim k→∞ inf Z * * ∈Z * * d p <ref type="figure">(Z k (x, a)</ref>, Z * * (x, a)) = 0 ∀x, a.</p><p>If X is finite, then Z k converges to Z * * uniformly. Furthermore, if there is a total ordering ≺ on Π * , such that for any Z * ∈ Z * ,</p><formula xml:id="formula_48">T Z * = T π Z * with π ∈ G Z * , π ≺ π ∀π ∈ G Z * \ {π},</formula><p>then T has a unique fixed point Z * ∈ Z * .</p><p>The gist of the proof of Theorem 1 consists in showing that for every state x, there is a time k after which the greedy policy w.r.t. Q k is mostly optimal. To clearly expose the steps involved, we will first assume a unique (and therefore deterministic) optimal policy π * , and later return to the general case; we will denote the optimal action at x by π * (x). For notational convenience, we will write Q k := E Z k and G k := G Z k . Let B := 2 sup Z∈Z Z ∞ &lt; ∞ and let k := γ k B. We first define the set of states X k ⊆ X whose values must be sufficiently close to Q * at time k:</p><formula xml:id="formula_49">X k := x : Q * (x, π * (x)) − max a =π * (x) Q * (x, a) &gt; 2 k .</formula><p>(11) Indeed, by Lemma 4, we know that after k iterations</p><formula xml:id="formula_50">|Q k (x, a) − Q * (x, a)| ≤ γ k |Q 0 (x, a) − Q * (x, a)| ≤ k .</formula><p>For x ∈ X , write a * := π * (x). For any a ∈ A, we deduce that</p><formula xml:id="formula_51">Q k (x, a * ) − Q k (x, a) ≥ Q * (x, a * ) − Q * (x, a) − 2 k .</formula><p>It follows that if x ∈ X k , then also Q k (x, a * ) &gt; Q k (x, a ) for all a = π * (x): for these states, the greedy policy π k (x) := arg max a Q k (x, a) corresponds to the optimal policy π * .</p><p>Lemma 5. For each x ∈ X there exists a k such that, for all k ≥ k, x ∈ X k , and in particular arg max a Q k (x, a) = π * (x).</p><p>Proof. Because A is finite, the gap</p><formula xml:id="formula_52">∆(x) := Q * (x, π * (x)) − max a =π * (x) Q * (x, a)</formula><p>is attained for some strictly positive ∆(x) &gt; 0. By definition, there exists a k such that</p><formula xml:id="formula_53">k = γ k B &lt; ∆(x) 2 ,</formula><p>and hence every x ∈ X must eventually be in X k .</p><p>This lemma allows us to guarantee the existence of an iteration k after which sufficiently many states are wellbehaved, in the sense that the greedy policy at those states chooses the optimal action. We will call these states "solved". We in fact require not only these states to be solved, but also most of their successors, and most of the successors of those, and so on. We formalize this notion as follows: fix some δ &gt; 0, let X k,0 := X k , and define for i &gt; 0 the set</p><formula xml:id="formula_54">X k,i := x : x ∈ X k , P (X k−1,i−1 | x, π * (x)) ≥ 1 − δ ,</formula><p>As the following lemma shows, any x is eventually contained in the recursively-defined sets X k,i , for any i.</p><p>Lemma 6. For any i ∈ N and any x ∈ X , there exists a k such that for all k ≥ k, x ∈ X k ,i .</p><p>Proof. Fix i and let us suppose that X k,i ↑ X . By Lemma 5, this is true for i = 0. We infer that for any probability measure P on X , P (X k,i ) → P (X ) = 1. In particular, for a given x ∈ X k , this implies that P (X k,i | x, π * (x)) → P (X | x, π * (x)) = 1.</p><p>Therefore, for any x, there exists a time after which it is and remains a member of X k,i+1 , the set of states for which P (X k−1,i | x, π * (x)) ≥ 1 − δ. We conclude that X k,i+1 ↑ X also. The statement follows by induction.</p><p>Proof of Theorem 1. The proof is similar to policy iteration-type results, but requires more care in dealing with the metric and the possibly infinite state space. We will write W k (x) := Z k (x, π k (x)), define W * similarly and with some overload of notation write</p><formula xml:id="formula_55">T W k (x) := W k+1 (x) = T Z k (x, π k+1 (x)). Finally, let S k i (x) := I [x ∈ X k,i ] andS k i (x) = 1 − S k i (x)</formula><p>. Fix i &gt; 0 and x ∈ X k+1,i+1 ⊆ X k . We begin by using Lemma 1 to separate the transition from x into a solved term and an unsolved term:</p><formula xml:id="formula_56">P π k W k (x) = S k i W k (X ) +S k i W k (X ),</formula><p>where X is the random successor from taking action π k (x) := π * (x), and we write S k i = S k i (X ),S k i = S k i (X ) to ease the notation. Similarly,</p><formula xml:id="formula_57">P π k W * (x) = S k i W * (X ) +S k i W * (X ). Now d p (W k+1 (x), W * (x)) = d p (T W k (x), T W * (x)) (a) ≤ γd p (P π k W k (x), P π * W * (x)) (b) ≤ γd p (S k i W k (X ), S k i W * (X )) + γd p (S k i W k (X ),S k i W * (X )),<label>(12)</label></formula><p>where in (a) we used Properties P1 and P2 of the Wasserstein metric, and in (b) we separate states for which π k = π * from the rest using Lemma 1 ({S k i ,S k i } form a partition of Ω). Let</p><formula xml:id="formula_58">δ i := Pr{X / ∈ X k,i } = E{S k i (X )} = S k i (X ) p .</formula><p>From property P3 of the Wasserstein metric, we have</p><formula xml:id="formula_59">d p (S k i W k (X ),S k i W * (X )) ≤ sup x d p (S k i (X )W k (x ),S k i (X )W * (x )) ≤ S k i (X ) p sup x d p (W k (x ), W * (x )) ≤ δ i sup x d p (W k (x ), W * (x )) ≤ δ i B.</formula><p>Recall that B &lt; ∞ is the largest attainable Z ∞ . Since also δ i &lt; δ by our choice of x ∈ X k+1,i+1 , we can upper bound the second term in (12) by γδB. This yields</p><formula xml:id="formula_60">d p (W k+1 (x), W * (x)) ≤ γd p (S k i W k (X ), S k i W * (X )) + γδB.</formula><p>By induction on i &gt; 0, we conclude that for x ∈ X k+i,i and some random state X i steps forward,</p><formula xml:id="formula_61">d p (W k+i (x), W * (x)) ≤ γ i d p (S k 0 W k (X ), S k 0 W * (X )) + δB 1 − γ ≤ γ i B + δB 1 − γ .</formula><p>Hence for any x ∈ X , &gt; 0, we can take δ, i, and finally k large enough to make d p (W k (x), W * (x)) &lt; . The proof then extends to Z k (x, a) by considering one additional application of T .</p><p>We now consider the more general case where there are multiple optimal policies. We expand the definition of X k,i as follows:</p><formula xml:id="formula_62">X k,i := x ∈ X k : ∀π * ∈ Π * , E a * ∼π * (x) P (X k−1,i−1 | x, a * ) ≥ 1−δ ,</formula><p>Because there are finitely many actions, Lemma 6 also holds for this new definition. As before, take x ∈ X k,i , but now consider the sequence of greedy policies π k , π k−1 , . . . selected by successive applications of T , and write</p><formula xml:id="formula_63">Tπ k := T π k T π k−1 · · · T π k−i+1 , such that Z k+1 = Tπ k Z k−i+1 .</formula><p>Now denote by Z * * the set of nonstationary optimal policies. If we take any Z * ∈ Z * , we deduce that inf Z * * ∈Z * * d p (Tπ k Z * (x, a), Z * * (x, a)) ≤ δB 1 − γ , since Z * corresponds to some optimal policy π * andπ k is optimal along most of the trajectories from (x, a). In effect, Tπ k Z * is close to the value distribution of the nonstationary optimal policyπ k π * . Now for this Z * ,</p><formula xml:id="formula_64">inf Z * * d p (Z k (x, a), Z * * (x, a)) ≤ d p (Z k (x, a), Tπ k Z * (x, a)) + inf Z * * d p (Tπ k Z * (x, a), Z * * (x, a)) ≤ d p (Tπ k Z k−i+1 (x, a), Tπ k Z * (x, a)) + δB 1 − γ ≤ γ i B + 2δB 1 − γ ,</formula><p>using the same argument as before with the newly-defined X k,i . It follows that</p><formula xml:id="formula_65">inf Z * * ∈Z * * d p (Z k (x, a), Z * * (x, a)) → 0.</formula><p>When X is finite, there exists a fixed k after which X k = X . The uniform convergence result then follows.</p><p>To prove the uniqueness of the fixed point Z * when T selects its actions according to the ordering ≺, we note that for any optimal value distribution Z * , its set of greedy policies is Π * . Denote by π * the policy coming first in the ordering over Π * . Then T = T π * , which has a unique fixed point (Section 3.3).</p><p>Proposition 4. That T has a fixed point Z * = T Z * is insufficient to guarantee the convergence of {Z k } to Z * .</p><p>We provide here a sketch of the result. Consider a single state x 1 with two actions, a 1 and a 2 <ref type="figure" target="#fig_7">(Figure 8</ref>). The first action yields a reward of 1/2, while the other either yields 0 or 1 with equal probability, and both actions are optimal. Now take γ = 1/2 and write R 0 , R 1 , . . . for the received rewards. Consider a stochastic policy that takes action a 2 with probability p. For p = 0, the return is</p><formula xml:id="formula_66">Z p=0 = 1 1 − γ 1 2 = 1.</formula><p>For p = 1, on the other hand, the return is random and is given by the following fractional number (in binary): As a result, Z p=1 is uniformly distributed between 0 and 2! In fact, note that Z p=0 = 0.11111 · · · = 1.</p><formula xml:id="formula_67">Z p=1 = R 0 .R 1 R 2 R 3 · · · .</formula><p>For some intermediary value of p, we obtain a different probability of the different digits, but always putting some probability mass on all returns in [0, 2].</p><p>Now suppose we follow the nonstationary policy that takes a 1 on the first step, then a 2 from there on. By inspection, the return will be uniformly distributed on the interval [1/2, 3/2], which does not correspond to the return under any value of p. But now we may imagine an operator T which alternates between a 1 and a 2 depending on the exact value distribution it is applied to, which would in turn converge to a nonstationary optimal value distribution.</p><p>Lemma 7 (Sample Wasserstein distance). Let {P i } be a collection of random variables, I ∈ N a random index independent from {P i }, and consider the mixture random variable P = P I . For any random variable Q independent of I,</p><formula xml:id="formula_68">d p (P, Q) ≤ E i∼I d p (P i , Q),</formula><p>and in general the inequality is strict and</p><formula xml:id="formula_69">∇ Q d p (P I , Q) = E i∼I ∇ Q d p (P i , Q).</formula><p>Proof. We prove this using Lemma 1. Let A i := I [I = i]. We write</p><formula xml:id="formula_70">d p (P, Q) = d p (P I , Q) = d p i A i P i , i A i Q ≤ i d p (A i P i , A i Q) ≤ i Pr{I = i}d p (P i , Q) = E I d P (P i , Q).</formula><p>where in the penultimate line we used the independence of I from P i and Q to appeal to property P3 of the Wasserstein metric.</p><p>To show that the bound is in general strict, consider the mixture distribution depicted in <ref type="figure">Figure 9</ref>. We will simply consider the d 1 metric between this distribution P and another distribution Q. The first distribution is P = 0 w.p. 1/2 1 w.p. 1/2.</p><p>In this example, i ∈ {1, 2}, P 1 = 0, and P 2 = 1. Now consider the distribution with the same support but that puts probability p on 0:</p><formula xml:id="formula_71">Q = 0 w.p. p 1 w.p. 1 − p.</formula><p>The distance between P and Q is</p><formula xml:id="formula_72">d 1 (P, Q) = |p − 1 2 |.</formula><p>This is d 1 (P, Q) = 1 2 for p ∈ {0, 1}, and strictly less than 1 2 for any other values of p. On the other hand, the corresponding expected distance (after sampling an outcome x 1 or x 2 with equal probability) is</p><formula xml:id="formula_73">E I d 1 (P i , Q) = 1 2 p + 1 2 (1 − p) = 1 2 .</formula><p>Hence d 1 (P, Q) &lt; E I d 1 (P i , Q) for p ∈ (0, 1). This shows that the bound is in general strict. By inspection, it is clear that the two gradients are different.</p><formula xml:id="formula_74">R = 0 R = 1 x x 1 x 2 ½ ½ Figure 9.</formula><p>Example MDP in which the expected sample Wasserstein distance is greater than the Wasserstein distance.</p><p>Proposition 5. Fix some next-state distribution Z and policy π. Consider a parametric value distribution Z θ , and and define the Wasserstein loss L W (θ) := d p (Z θ (x, a), R(x, a) + γZ(X , π(X ))).</p><p>Let r ∼ R(x, a) and x ∼ P (· | x, a) and consider the sample loss L W (θ, r, x ) := d p (Z θ (x, a), r + γZ(x , π(x )).</p><p>Its expectation is an upper bound on the loss L W :</p><formula xml:id="formula_75">L W (θ) ≤ E R,P L W (θ, r, x ),</formula><p>in general with strict inequality.</p><p>The result follows directly from the previous lemma. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Algorithmic Details</head><p>While our training regime closely follows that of DQN <ref type="bibr" target="#b22">(Mnih et al., 2015)</ref>, we use Adam <ref type="bibr" target="#b18">(Kingma &amp; Ba, 2015)</ref> instead of RMSProp (Tieleman &amp; Hinton, 2012) for gradient rescaling. We also performed some hyperparameter tuning for our final results. Specifically, we evaluated two hyperparameters over our five training games and choose the values that performed best. The hyperparameter values we considered were V MAX ∈ {3, 10, 100} and adam ∈ {1/L, 0.1/L, 0.01/L, 0.001/L, 0.0001/L}, where L = 32 is the minibatch size. We found V MAX = 10 and adam = 0.01/L performed best. We used the same step-size value as DQN (α = 0.00025).</p><p>Pseudo-code for the categorical algorithm is given in Algorithm 1. We apply the Bellman update to each atom separately, and then project it into the two nearest atoms in the original support. Transitions to a terminal state are handled with γ t = 0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Comparison of Sampled Wasserstein Loss and Categorical Projection</head><p>Lemma 3 proves that for a fixed policy π the distributional Bellman operator is a γ-contraction ind p , and therefore that T π will converge in distribution to the true distribution of returns Z π . In this section, we empirically validate these results on the CliffWalk domain shown in <ref type="figure" target="#fig_0">Figure 11</ref>. The dynamics of the problem match those given by <ref type="bibr">Sutton &amp; Barto (1998)</ref>. We also study the convergence of the distri- lowing a policy that tries to take the safe path but has a 10% chance of taking another action uniformly at random.</p><p>We compute a ground-truth distribution of returns Z π using 10000 Monte-Carlo (MC) rollouts from each state. We then perform two experiments, approximating the value distribution at each state with our discrete distributions.</p><p>In the first experiment, we perform supervised learning using either the Wasserstein loss or categorical projection (Equation 7) with cross-entropy loss. We use Z π as the supervised target and perform 5000 sweeps over all states to ensure both approaches have converged. In the second experiment, we use the same loss functions, but the training target comes from the one-step distributional Bellman operator with sampled transitions. We use V MIN = −100 and V MAX = −1. 4 For the sample updates we perform 10 times as many sweeps over the state space. Fundamentally, these experiments investigate how well the two training regimes (minimizing the Wasserstein or categorical loss) minimize the Wasserstein metric under both ideal (supervised target) and practical (sampled one-step Bellman target) conditions.</p><p>In <ref type="figure" target="#fig_0">Figure 10a</ref> we show the final Wasserstein distance d 1 (Z π , Z θ ) between the learned distributions and the ground-truth distribution as we vary the number of atoms. The graph shows that the categorical algorithm does indeed minimize the Wasserstein metric in both the supervised and sample Bellman setting. It also highlights that minimizing the Wasserstein loss with stochastic gradient descent is in general flawed, confirming the intuition given by Proposition 5. In repeat experiments the process converged to different values of d 1 (Z π , Z θ ), suggesting the presence of local minima (more prevalent with fewer atoms).</p><p>Figure 10 provides additional insight into why the sampled Wasserstein distance may perform poorly. Here, we see the cumulative densities for the approximations learned under these two losses for five different states along the safe path in CliffWalk. The Wasserstein has converged to a fixedpoint distribution, but not one that captures the true (Monte Carlo) distribution very well. By comparison, the categorical algorithm captures the variance of the true distribution much more accurately.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Supplemental Videos and Results</head><p>In <ref type="figure" target="#fig_0">Figure 13</ref> we provide links to supplemental videos showing the C51 agent during training on various Atari 2600 games. <ref type="figure" target="#fig_0">Figure 12</ref> shows the relative performance of C51 over the course of training. <ref type="figure" target="#fig_0">Figure 14 provides</ref>       </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>A distributional Bellman operator with a deterministic reward function: (a) Next state distribution under policy π, (b) Discounting shrinks the distribution towards 0, (c) The reward shifts it, and (d) Projection step (Section 4).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 .Figure 4 .</head><label>34</label><figDesc>Categorical DQN: Varying number of atoms in the discrete distribution. Scores are moving averages over 5 million frames. Learned value distribution during an episode of SPACE INVADERS. Different actions are shaded different colours. Returns below 0 (which do not occur in SPACE INVADERS) are not shown here as the agent assigns virtually no probability to them.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 .</head><label>5</label><figDesc>Intrinsic stochasticity in PONG.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 .</head><label>6</label><figDesc>Mean and median scores across 57 Atari games, measured as percentages of human baseline(H.B., Nair et al., 2015).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 .</head><label>7</label><figDesc>Percentage improvement, per-game, of C51 over Double DQN, computed using van Hasselt et al.'s method.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>(2016)  analyze the use of linear function approximation to learn this variance for policy evaluation, and Prashanth &amp; Ghavamzadeh (2013) estimate the return variance in the design of a risk-sensitive actor-critic algorithm.<ref type="bibr" target="#b20">Mannor &amp; Tsitsiklis (2011)</ref> provides negative results regarding the computation of a variance-constrained solution to the optimal control problem.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 .</head><label>8</label><figDesc>A simple example illustrating the effect of a nonstationary policy on the value distribution.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10 .</head><label>10</label><figDesc>(a) Wasserstein distance between ground truth distribution Z π and approximating distributions Z θ . Varying number of atoms in approximation, training target, and loss function. (b) Approximate cumulative distributions for five representative states in CliffWalk.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 11 .</head><label>11</label><figDesc>butional Bellman operator under the sampled Wasserstein loss and the categorical projection (Equation 7) while fol-CliffWalk Environment (Sutton &amp; Barto, 1998).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 13 .</head><label>13</label><figDesc>Supplemental videos of C51 during training.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 15 .</head><label>15</label><figDesc>FREEWAY: Agent differentiates action-value distributions under pressure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 16 .</head><label>16</label><figDesc>Q*BERT: Top, left and right: Predicting which actions are unrecoverably fatal. Bottom-Left: Value distribution shows steep consequences for wrong actions. Bottom-Right: The agent has made a huge mistake.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 17 .</head><label>17</label><figDesc>SEAQUEST: Left: Bimodal distribution. Middle: Might hit the fish. Right: Definitely going to hit the fish.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 18 .</head><label>18</label><figDesc>SPACE INVADERS: Top-Left: Multi-modal distribution with high uncertainty. Top-Right: Subsequent frame, a more certain demise. Bottom-Left: Clear difference between actions. Bottom-Middle: Uncertain survival. Bottom-Right: Certain success.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Mean Median &gt; H.B. &gt; DQN</figDesc><table><row><cell>DQN</cell><cell>228%</cell><cell>79%</cell><cell>24</cell><cell>0</cell></row><row><cell>DDQN</cell><cell>307%</cell><cell>118%</cell><cell>33</cell><cell>43</cell></row><row><cell>DUEL.</cell><cell>373%</cell><cell>151%</cell><cell>37</cell><cell>50</cell></row><row><cell>PRIOR.</cell><cell>434%</cell><cell>124%</cell><cell>39</cell><cell>48</cell></row><row><cell cols="2">PR. DUEL. 592%</cell><cell>172%</cell><cell>39</cell><cell>44</cell></row><row><cell>C51</cell><cell>701%</cell><cell>178%</cell><cell>40</cell><cell>50</cell></row><row><cell>UNREAL  †</cell><cell>880%</cell><cell>250%</cell><cell>-</cell><cell>-</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Morimura, Tetsuro, Hachiya, Hirotaka, Sugiyama, Masashi, Tanaka, Toshiyuki, and Kashima, Hisashi. Parametric return density estimation for reinforcement learning. In Proceedings of the Conference on Uncertainty in Artificial Intelligence, 2010a. Hasselt, Hado, Guez, Arthur, and Silver, David. Deep reinforcement learning with double Q-learning. In Proceedings of the AAAI Conference on Artificial Intelligence, 2016. Veness, Joel, Bellemare, Marc G., Hutter, Marcus, Chua, Alvin, and Desjardins, Guillaume. Compress and control. In Proceedings of the AAAI Conference on Artificial Intelligence, 2015.</figDesc><table><row><cell>Morimura, Tetsuro, Sugiyama, Masashi, Kashima, Hisashi,</cell><cell></cell></row><row><cell>Hachiya, Hirotaka, and Tanaka, Toshiyuki. Nonparametric re-</cell><cell></cell></row><row><cell>turn distribution approximation for reinforcement learning. In</cell><cell>Wang, Tao, Lizotte, Daniel, Bowling, Michael, and Schuurmans,</cell></row><row><cell>Proceedings of the 27th International Conference on Machine</cell><cell>Dale. Dual representations for dynamic programming. Journal</cell></row><row><cell>Learning (ICML-10), pp. 799-806, 2010b.</cell><cell>of Machine Learning Research, pp. 1-29, 2008.</cell></row><row><cell>Nair, Arun, Srinivasan, Praveen, Blackwell, Sam, Alcicek,</cell><cell>Wang, Ziyu, Schaul, Tom, Hessel, Matteo, Hasselt, Hado van,</cell></row><row><cell>Cagdas, Fearon, Rory, De Maria, Alessandro, Panneershelvam,</cell><cell>Lanctot, Marc, and de Freitas, Nando. Dueling network archi-</cell></row><row><cell>Vedavyas, Suleyman, Mustafa, Beattie, Charles, and Petersen,</cell><cell>tectures for deep reinforcement learning. In Proceedings of the</cell></row><row><cell>Stig et al. Massively parallel methods for deep reinforcement</cell><cell>International Conference on Machine Learning, 2016.</cell></row><row><cell>learning. In ICML Workshop on Deep Learning, 2015.</cell><cell>White, D. J. Mean, variance, and probabilistic criteria in finite</cell></row><row><cell>Prashanth, LA and Ghavamzadeh, Mohammad. Actor-critic algo-</cell><cell>markov decision processes: a review. Journal of Optimization</cell></row><row><cell>rithms for risk-sensitive mdps. In Advances in Neural Informa-</cell><cell>Theory and Applications, 56(1):1-29, 1988.</cell></row><row><cell>tion Processing Systems, 2013.</cell><cell></cell></row><row><cell>Puterman, Martin L. Markov Decision Processes: Discrete</cell><cell></cell></row><row><cell>stochastic dynamic programming. John Wiley &amp; Sons, Inc.,</cell><cell></cell></row><row><cell>1994.</cell><cell></cell></row><row><cell>Rösler, Uwe. A fixed point theorem for distributions. Stochastic</cell><cell></cell></row><row><cell>Processes and their Applications, 42(2):195-214, 1992.</cell><cell></cell></row><row><cell>04):794-802,</cell><cell></cell></row><row><cell>1982.</cell><cell></cell></row><row><cell>Sutton, Richard S. and Barto, Andrew G. Reinforcement learning:</cell><cell></cell></row><row><cell>An introduction. MIT Press, 1998.</cell><cell></cell></row><row><cell>Sutton, R.S., Modayil, J., Delp, M., Degris, T., Pilarski, P.M.,</cell><cell></cell></row><row><cell>White, A., and Precup, D. Horde: A scalable real-time archi-</cell><cell></cell></row><row><cell>tecture for learning knowledge from unsupervised sensorimo-</cell><cell></cell></row><row><cell>tor interaction. In Proceedings of the International Conference</cell><cell></cell></row><row><cell>on Autonomous Agents and Multiagents Systems, 2011.</cell><cell></cell></row><row><cell>Tamar, Aviv, Di Castro, Dotan, and Mannor, Shie. Learning the</cell><cell></cell></row><row><cell>variance of the reward-to-go. Journal of Machine Learning</cell><cell></cell></row><row><cell>Research, 17(13):1-36, 2016.</cell><cell></cell></row><row><cell>Tieleman, Tijmen and Hinton, Geoffrey. Lecture 6.5-rmsprop:</cell><cell></cell></row><row><cell>Divide the gradient by a running average of its recent magni-</cell><cell></cell></row><row><cell>tude. COURSERA: Neural networks for machine learning, 4</cell><cell></cell></row><row><cell>(2), 2012.</cell><cell></cell></row><row><cell>Toussaint, Marc and Storkey, Amos. Probabilistic inference for</cell><cell></cell></row><row><cell>solving discrete and continuous state markov decision pro-</cell><cell></cell></row><row><cell>cesses. In Proceedings of the International Conference on Ma-</cell><cell></cell></row><row><cell>chine Learning, 2006.</cell><cell></cell></row><row><cell>Tsitsiklis, John N. On the convergence of optimistic policy itera-</cell><cell></cell></row><row><cell>tion. Journal of Machine Learning Research, 3:59-72, 2002.</cell><cell></cell></row></table><note>Schaul, Tom, Quan, John, Antonoglou, Ioannis, and Silver, David. Prioritized experience replay. In Proceedings of the International Conference on Learning Representations, 2016. Sobel, Matthew J. The variance of discounted markov decision processes. Journal of Applied Probability, 19(Utgoff, Paul E. and Stracuzzi, David J. Many-layered learning. Neural Computation, 14(10):2497-2529, 2002. Van den Oord, Aaron, Kalchbrenner, Nal, and Kavukcuoglu, Ko- ray. Pixel recurrent neural networks. In Proceedings of the International Conference on Machine Learning, 2016.van</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>a table of evaluation results, comparing C51 to other state-of-theart agents. Figures 15-18 depict particularly interesting frames. Number of Atari games where an agent's training performance is greater than a baseline (fully trained DQN &amp; human). Error bands give standard deviations, and averages are over number of games.</figDesc><table><row><cell># Games Superior Figure 12. GAMES Training Frames (millions) C51 vs. DQN C51 vs. HUMAN DQN vs. HUMAN Freeway Pong Q*Bert Seaquest Space Invaders http://youtu.be/yFBwyPuO2Vg VIDEO URL http://youtu.be/97578n9kFIk http://youtu.be/vIz5P6s80qA http://youtu.be/v-RbNX4uETw http://youtu.be/d1yz4PNFUjI</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">For N = 51, our TensorFlow implementation trains at roughly 75% of DQN's speed.3 Video: http://youtu.be/yFBwyPuO2Vg.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">Because there is a small probability of larger negative returns, some approximation error is unavoidable. However, this effect is relatively negligible in our experiments.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The authors acknowledge the important role played by their colleagues at DeepMind throughout the development of this work. Special thanks to Yee Whye Teh, Alex Graves, Joel Veness, Guillaume Desjardins, Tom Schaul, David Silver, Andre Barreto, Max Jaderberg, Mohammad Azar, Georg Ostrovski, Bernardo Avila Pires, Olivier Pietquin,</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">On the sample complexity of reinforcement learning with a generative model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohammad</forename><surname>Azar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Gheshlaghi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rémi</forename><surname>Munos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hilbert</forename><surname>Kappen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Machine Learning</title>
		<meeting>the International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The arcade learning environment: An evaluation platform for general agents</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><forename type="middle">G</forename><surname>Bellemare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Naddaf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Yavar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joel</forename><surname>Veness</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Bowling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Artificial Intelligence Research</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="page" from="253" to="279" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">The cramer distance as a solution to biased wasserstein gradients</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><forename type="middle">G</forename><surname>Bellemare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Danihelka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ivo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Dabney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mohamed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Shakir</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Lakshminarayanan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Balaji</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephan</forename><surname>Hoyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rémi</forename><surname>Munos</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Dynamic programming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><forename type="middle">E</forename><surname>Bellman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1957" />
			<publisher>Princeton University Press</publisher>
			<pubPlace>Princeton, NJ</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Neuro-Dynamic Programming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dimitri</forename><forename type="middle">P</forename><surname>Bertsekas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">N</forename><surname>Tsitsiklis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Athena Scientific</title>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Some asymptotic theory for the bootstrap. The Annals of Statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><forename type="middle">J</forename><surname>Bickel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">A</forename><surname>Freedman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1981" />
			<biblScope unit="page" from="1196" to="1217" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Probability and measure</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patrick</forename><surname>Billingsley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<publisher>John Wiley &amp; Sons</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Multitask learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rich</forename><surname>Caruana</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Machine Learning</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="41" to="75" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Discounted mdps: Distribution functions and exponential utility maximization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kun-Jen</forename><surname>Chung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><forename type="middle">J</forename><surname>Sobel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Control and Optimization</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="49" to="62" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Bayesian Q-learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><surname>Dearden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nir</forename><surname>Friedman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuart</forename><surname>Russell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the National Conference on Artificial Intelligence</title>
		<meeting>the National Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Reinforcement learning with gaussian processes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yaakov</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shie</forename><surname>Mannor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Meir</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ron</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Machine Learning</title>
		<meeting>the International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Kalman temporal differences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthieu</forename><surname>Geist</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Olivier</forename><surname>Pietquin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Artificial Intelligence Research</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="483" to="532" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Stable function approximation in dynamic programming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoffrey</forename><surname>Gordon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twelfth International Conference on Machine Learning</title>
		<meeting>the Twelfth International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Q(λ) with off-policy corrections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anna</forename><surname>Harutyunyan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><forename type="middle">G</forename><surname>Bellemare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>Stepleton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rémi</forename><surname>Munos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Algorithmic Learning Theory</title>
		<meeting>the Conference on Algorithmic Learning Theory</meeting>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">An expectation maximization algorithm for continuous markov decision processes with arbitrary reward</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><forename type="middle">D</forename><surname>Hoffman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>De Freitas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Nando</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arnaud</forename><surname>Doucet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peters</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Artificial Intelligence and Statistics</title>
		<meeting>the International Conference on Artificial Intelligence and Statistics</meeting>
		<imprint>
			<date type="published" when="2009-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Reinforcement learning with unsupervised auxiliary tasks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Max</forename><surname>Jaderberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mnih</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Volodymyr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wojciech</forename><surname>Czarnecki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Marian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Schaul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joel</forename><forename type="middle">Z</forename><surname>Leibo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Koray</forename><surname>Kavukcuoglu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Learning Representations</title>
		<meeting>the International Conference on Learning Representations</meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Markov decision processes with a new optimality criterion: Discrete time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Jaquette</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Stratton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Annals of Statistics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="496" to="505" />
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Approximately optimal approximate reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sham</forename><surname>Kakade</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Langford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Machine Learning</title>
		<meeting>the International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Adam: A method for stochastic optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Diederik</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jimmy</forename><surname>Ba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Learning Representations</title>
		<meeting>the International Conference on Learning Representations</meeting>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">PAC bounds for discounted MDPs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tor</forename><surname>Lattimore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marcus</forename><surname>Hutter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Algorithmic Learning Theory</title>
		<meeting>the Conference on Algorithmic Learning Theory</meeting>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Mean-variance optimization in markov decision processes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shie</forename><surname>Mannor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">N</forename><surname>Tsitsiklis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Reinforcement learning with selective perception and hidden state</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><forename type="middle">K</forename><surname>Mccallum</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
		<respStmt>
			<orgName>University of Rochester</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Human-level control through deep reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mnih</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Volodymyr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kavukcuoglu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Koray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>David</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrei</forename><forename type="middle">A</forename><surname>Rusu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joel</forename><surname>Veness</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><forename type="middle">G</forename><surname>Bellemare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Riedmiller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andreas</forename><forename type="middle">K</forename><surname>Fidjeland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georg</forename><surname>Ostrovski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">518</biblScope>
			<biblScope unit="issue">7540</biblScope>
			<biblScope unit="page">166</biblScope>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note>GAMES RANDOM HUMAN DQN DDQN DUEL PRIOR. DUEL. C51 Alien 227.8 7,127.7 1,620.0 3,747.7 4,461.4 3,941.0 3</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Atlantis</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page">75</biblScope>
		</imprint>
	</monogr>
	<note>850.0 29,028.1 279,987.0 106,056.0 382,572.0 395,762.0 841</note>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E R O</forename></persName>
		</author>
		<idno>027.0 30</idno>
		<imprint>
			<biblScope unit="volume">826</biblScope>
			<biblScope unit="page">853</biblScope>
		</imprint>
	</monogr>
	<note>2 21,036.5 38,874 035.0 7,259.0 12,992.0 14,854.0 1,792.0</note>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kung-Fu</surname></persName>
		</author>
		<imprint>
			<biblScope unit="page">192</biblScope>
		</imprint>
	</monogr>
	<note>Master 258.5 22,736.3 26,059.0 29,710.0 34,294.0 48,375.0 48</note>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Montezuma&apos;s Revenge</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Ms. Pac-Man</title>
		<imprint>
			<biblScope unit="volume">307</biblScope>
			<biblScope unit="page">415</biblScope>
		</imprint>
	</monogr>
	<note>3 6,951.6 3,085.6 2,711.4 6,283.5 3,327.3 3</note>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q*</forename><surname>Bert</surname></persName>
		</author>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page">784</biblScope>
		</imprint>
	</monogr>
	<note>455.0 13,117.3 15,088.5 19,220.3 18,760.3 23</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Raw scores across all games, starting with 30 no-op actions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Al</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Reference values from Wang et</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note>Figure 14</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
