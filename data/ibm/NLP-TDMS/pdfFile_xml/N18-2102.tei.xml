<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/yhou/git/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2019-02-07T08:51+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Multi-Reward Reinforced Summarization with Saliency and Entailment</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>June 1 -6, 2018</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ramakanth</forename><surname>Pasunuru</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">UNC Chapel Hill</orgName>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohit</forename><surname>Bansal</surname></persName>
							<email>mbansal@cs.unc.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">UNC Chapel Hill</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Multi-Reward Reinforced Summarization with Saliency and Entailment</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of NAACL-HLT 2018</title>
						<meeting>NAACL-HLT 2018 <address><addrLine>New Orleans, Louisiana</addrLine></address>
						</meeting>
						<imprint>
							<biblScope unit="page" from="646" to="653"/>
							<date type="published">June 1 -6, 2018</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>ive text summarization is the task of compressing and rewriting a long document into a short summary while maintaining saliency, directed logical entailment, and non-redundancy. In this work, we address these three important aspects of a good summary via a reinforcement learning approach with two novel reward functions: ROUGE-Sal and Entail, on top of a coverage-based baseline. The ROUGESal reward modifies the ROUGE metric by up-weighting the salient phrases/words detected via a keyphrase clas-sifier. The Entail reward gives high (length-normalized) scores to logically-entailed summaries using an entailment classifier. Further, we show superior performance improvement when these rewards are combined with traditional metric (ROUGE) based rewards, via our novel and effective multi-reward approach of optimizing multiple rewards simultaneously in alternate mini-batches. Our method achieves the new state-of-the-art results on CNN/Daily Mail dataset as well as strong improvements in a test-only transfer setup on DUC-2002.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Abstractive summarization, the task of generating a natural short summary of a long document, is more challenging than the extractive paradigm, which only involves selection of important sentences or grammatical sub-sentences <ref type="bibr">(Jing, 2000;</ref><ref type="bibr">Knight and Marcu, 2002;</ref><ref type="bibr">Clarke and La- pata, 2008;</ref><ref type="bibr">Filippova et al., 2015</ref>). Advent of sequence-to-sequence deep neural networks and large human summarization datasets ( <ref type="bibr">Hermann et al., 2015;</ref><ref type="bibr">Nallapati et al., 2016</ref>) made the abstractive summarization task more feasible and accurate, with recent ideas ranging from copypointer mechanism and redundancy coverage, to metric reward based reinforcement learning <ref type="bibr">(Rush et al., 2015;</ref><ref type="bibr" target="#b4">Chopra et al., 2016;</ref><ref type="bibr">Ranzato et al., 2015;</ref><ref type="bibr">Nallapati et al., 2016;</ref><ref type="bibr">See et al., 2017)</ref>.</p><p>A good abstractive summary requires several important properties, e.g., it should choose the most salient information from the input document, be logically entailed by it, and avoid redundancy.</p><p>Coverage-based models address the latter redundancy issue <ref type="bibr">(Suzuki and Nagata, 2016;</ref><ref type="bibr">Nallapati et al., 2016;</ref><ref type="bibr">See et al., 2017</ref>), but there is still a lot of scope to teach current state-of-the-art models about saliency and logical entailment. Towards this goal, we improve the task of abstractive summarization via a reinforcement learning approach with the introduction of two novel rewards: 'ROUGESal' and 'Entail', and also demonstrate that these saliency and entailment skills allow for better generalizability and transfer.</p><p>Our ROUGESal reward gives higher weight to the important, salient words in the summary, in contrast to the traditional ROUGE metric which gives equal weight to all tokens. These weights are obtained from a novel saliency scorer, which is trained on a reading comprehension dataset's answer spans to give a saliency-based probability score to every token in the sentence. Our Entail reward gives higher weight to summaries whose sentences logically follow from the ground-truth summary. Further, we also add a length normalization constraint to our Entail reward, to importantly avoid misleadingly high entailment scores to very short sentences.</p><p>Empirically, we show that our new rewards with policy gradient approaches perform significantly better than a cross-entropy based state-of-the-art pointer-coverage baseline. We show further performance improvements by combining these rewards via our novel multi-reward optimization approach, where we optimize multiple rewards simultaneously in alternate mini-batches (hence avoiding complex scaling and weighting issues in reward combination), inspired from how humans take multiple concurrent types of rewards (feedback) to learn a task. Overall, our methods achieve the new state-of-the-art on the CNN/Daily Mail dataset as well as strong improvements in a testonly transfer setup on DUC-2002. Lastly, we present several analyses of our model's saliency, entailment, and abstractiveness skills.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Earlier summarization work was based on extraction and compression-based approaches <ref type="bibr">(Jing, 2000;</ref><ref type="bibr">Knight and Marcu, 2002;</ref><ref type="bibr">Clarke and Lap- ata, 2008;</ref><ref type="bibr">Filippova et al., 2015)</ref>, with more focus on graph-based <ref type="bibr">(Giannakopoulos, 2009;</ref><ref type="bibr">Ganesan et al., 2010</ref>) and discourse tree-based <ref type="bibr">(Gerani et al., 2014</ref>) models. Recent focus has shifted towards abstractive, rewriting-based summarization based on parse trees <ref type="bibr" target="#b3">(Cheung and Penn, 2014;</ref><ref type="bibr">Wang et al., 2016)</ref>, Abstract Meaning Representations ( <ref type="bibr">Liu et al., 2015;</ref><ref type="bibr">Dohare and Karnick, 2017)</ref>, and neural network models with pointercopy mechanism and coverage <ref type="bibr">(Rush et al., 2015;</ref><ref type="bibr" target="#b4">Chopra et al., 2016;</ref><ref type="bibr" target="#b2">Chen et al., 2016;</ref><ref type="bibr">Nallapati et al., 2016;</ref><ref type="bibr">See et al., 2017)</ref>, as well as reinforcebased metric rewards ( <ref type="bibr">Ranzato et al., 2015;</ref><ref type="bibr">Paulus et al., 2017</ref>). We also use reinforce-based models, but with novel reward functions and better simultaneous multi-reward optimization methods.</p><p>Recognizing Textual Entailment (RTE), the task of classifying two sentences as entailment, contradiction, or neutral, has been used for Q&amp;A and IE tasks ( <ref type="bibr">Harabagiu and Hickl, 2006;</ref><ref type="bibr">Dagan et al., 2006;</ref><ref type="bibr">Lai and Hockenmaier, 2014;</ref><ref type="bibr">Jimenez et al., 2014</ref>). Recent neural network models and large datasets <ref type="bibr" target="#b1">(Bowman et al., 2015;</ref><ref type="bibr">Williams et al., 2017</ref>) enabled stronger accuracies. Some previous work <ref type="bibr">(Mehdad et al., 2013;</ref><ref type="bibr">Gupta et al., 2014)</ref> has explored the use of RTE by modeling graphbased relationships between sentences to select the most non-redundant sentences for summarization. Recently, Pasunuru and Bansal (2017) improved video captioning with entailment-corrected rewards. We instead directly use multi-sentence entailment knowledge (with additional length constraints) as a separate RL reward to improve abstractive summarization, while avoiding their penalty hyperparameter tuning.</p><p>For our saliency prediction model, we make use of the SQuAD reading comprehension dataset ( <ref type="bibr">Rajpurkar et al., 2016)</ref>, where the answer spans annotated by humans for important questions, serve as an interesting and effective proxy for keyphrase-style salient information in summarization. Some related previous work has incorporated document topic/subject classification <ref type="bibr">(Ison- uma et al., 2017</ref>) and webpage keyphrase extraction ( <ref type="bibr">Zhang et al., 2004</ref>) to improve saliency in summarization. Some recent work <ref type="bibr">Subramanian et al. (2017)</ref> has also used answer probabilities in a document to improve question generation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Models</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Baseline Sequence-to-Sequence Model</head><p>Our abstractive text summarization model is a simple sequence-to-sequence single-layer bidirectional encoder and unidirectional decoder LSTM-RNN, with attention ( <ref type="bibr" target="#b0">Bahdanau et al., 2015)</ref>, pointer-copy, and coverage mechanism -please refer to <ref type="bibr">See et al. (2017)</ref> for details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Policy Gradient Reinforce</head><p>Traditional cross-entropy loss optimization for sequence generation has an exposure bias issue and the model is not optimized for the evaluated metrics ( <ref type="bibr">Ranzato et al., 2015)</ref>. Reinforce-based policy gradient approach addresses both of these issues by using its own distribution during training and by directly optimizing the non-differentiable evaluation metrics as rewards. We use the RE-INFORCE algorithm <ref type="bibr">(Williams, 1992;</ref><ref type="bibr">Zaremba and Sutskever, 2015</ref>) to learn a policy p θ defined by the model parameters θ to predict the next action (word) and update its internal (LSTM) states. We minimize the loss function</p><formula xml:id="formula_0">L RL = −E w s ∼p θ [r(w s )],</formula><p>where w s is the sequence of sampled words with w s t sampled at time step t of the decoder. The derivative of this loss function with approximation using a single sample along with variance reduction with a bias estimator is:</p><formula xml:id="formula_1">θ L RL = −(r(w s ) − b e ) θ log p θ (w s ) (1)</formula><p>There are several ways to calculate the baseline estimator; we employ the effective SCST approach ( <ref type="bibr">Rennie et al., 2016)</ref>, as depicted in <ref type="figure" target="#fig_0">Fig. 1</ref>, where b e = r(w a ), is based on the reward obtained by the current model using the test time inference algorithm, i.e., choosing the arg-max word w a t of the final vocabulary distribution at each time step t of the decoder. We use the joint cross-entropy and reinforce loss so as to optimize the non-differentiable evaluation metric as reward while also maintaining the readability of the generated sentence ( <ref type="bibr">Wu et al., 2016;</ref><ref type="bibr">Paulus et al., 2017;</ref><ref type="bibr">Pasunuru and Bansal, 2017)</ref>, which is defined as</p><formula xml:id="formula_2">L Mixed = γL RL + (1 − γ)L XE ,</formula><p>where γ is a tunable hyperparameter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Multi-reward Optimization</head><p>Optimizing multiple rewards at the same time is important and desired for many language generation tasks. One approach would be to use a weighted combination of these rewards, but this has the issue of finding the complex scaling and weight balance among these reward combinations.</p><p>To address this issue, we instead introduce a simple multi-reward optimization approach inspired from multi-task learning, where we have different tasks, and all of them share all the model parameters while having their own optimization function (different reward functions in this case). If r 1 and r 2 are two reward functions that we want to optimize simultaneously, then we train the two loss functions of Eqn. 2 in alternate mini-batches.</p><formula xml:id="formula_3">L RL 1 = −(r 1 (w s ) − r 1 (w a )) θ log p θ (w s ) L RL 2 = −(r 2 (w s ) − r 2 (w a )) θ log p θ (w s )<label>(2)</label></formula><p>4 Rewards ROUGE Reward The first basic reward is based on the primary summarization metric of ROUGE package <ref type="bibr">(Lin, 2004</ref>). Similar to <ref type="bibr">Paulus et al. (2017)</ref>, we found that ROUGE-L metric as a reward works better compared to ROUGE-1 and ROUGE-2 in terms of improving all the metric scores. 1 Since these metrics are based on simple phrase matching/n-gram overlap, they do not focus on important summarization factors such as salient phrase inclusion and directed logical entailment. Addressing these issues, we next introduce two new reward functions. Saliency Rewards ROUGE-based rewards have no knowledge about what information is salient in the summary, and hence we introduce a novel reward function called 'ROUGESal' which gives higher weight to the important, salient words/phrases when calculating the ROUGE score (which by default assumes all words are equally weighted). To learn these saliency weights, we train our saliency predictor on sentence and answer spans pairs from the popular SQuAD reading comprehension dataset ( <ref type="bibr">Rajpurkar et al., 2016)</ref>) (Wikipedia domain), where we treat the humanannotated answer spans (avg. span length 3.2) for important questions as representative salient information in the document. As shown in <ref type="figure" target="#fig_1">Fig. 2</ref>, given a sentence as input, the predictor assigns a saliency probability to every token, using a simple bidirectional encoder with a softmax layer at every time step of the encoder hidden states to classify the token as salient or not. Finally, we use the probabilities given by this saliency prediction model as weights in the ROUGE matching formulation to achieve the final ROUGESal score (see appendix for details about our ROUGESal weighted precision, recall, and F-1 formulations).</p><p>Entailment Rewards A good summary should also be logically entailed by the given source document, i.e., contain no contradictory or unrelated information. <ref type="bibr">Pasunuru and Bansal (2017)</ref> used entailment-corrected phrase-matching metrics (CIDEnt) to improve the task of video captioning; we instead directly use the entailment knowledge from an entailment scorer and its multisentence, length-normalized extension as our 'Entail' reward, to improve the task of abstractive text summarization. We train the entailment classi- </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Evaluation Metrics</head><p>We use the standard ROUGE package <ref type="bibr">(Lin, 2004</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Results</head><p>Baseline Cross-entropy Model Our abstractive summarization model has attention, pointer-copy, and coverage mechanism. First, we apply crossentropy optimization and achieve comparable re-2 Since the GT summary is correctly entailed by the source document, we directly (by transitivity) use this GT as premise for easier (shorter) encoding. We also tried using the full input document as premise but this didn't perform as well (most likely because the entailment classifiers are not trained on such long premises; and the problem with the sentence-tosentence avg. scoring approach is discussed below). We also tried summary-to-summary entailment scoring (similar to ROUGE-L) as well as pairwise sentence-to-sentence avg. scoring, but we found that avg. scoring of groundtruth summary (as premise) w.r.t. each generated summary's sentence (as hypothesis) works better (intuitive because each sentence in generated summary might be a compression of multiple sentences of GT summary or source document).    <ref type="table">Table 1</ref>) improves the performance on CNN/Daily Mail in all metrics with stat. significant scores (p &lt; 0.001) as compared to the cross-entropy baseline (and also stat. signif. w.r.t. <ref type="bibr">See et al. (2017)</ref>). Similar to <ref type="bibr">Paulus et al. (2017)</ref>, we use mixed loss function (XE+RL) for all our reinforcement experiments, to ensure good readability of generated summaries.</p><formula xml:id="formula_4">R-1 R-2 R-L M</formula><p>ROUGESal and Entail Rewards With our novel ROUGESal reward, we achieve stat. signif. improvements in all metrics w.r.t. the baseline as well as w.r.t. ROUGE-reward results (p &lt; 0.001), showing that saliency knowledge is strongly improving the summarization model. For our Entail reward, we achieve stat. signif. improvements in ROUGE-L (p &lt; 0.001) w.r.t. baseline and achieve the best METEOR score by a large margin. See Sec. 7 for analysis of the saliency/entailment skills learned by our models.</p><p>Multi-Reward Results Similar to ROUGESal, Entail is a better reward when combined with the complementary phrase-matching metric information in ROUGE; <ref type="table">Table 1</ref> shows that the ROUGE+Entail multi-reward combination performs stat. signif. better than ROUGE-reward in ROUGE-1, ROUGE-L, and METEOR (p &lt; 0.001), and better than Entail-reward in all Models R-1 R-2 R-L M Baseline <ref type="bibr">(XE)</ref> 35.50 14.57 32.19 14.36 ROUGE <ref type="bibr">(RL)</ref> 35  ROUGE metrics. Finally, we combined our two rewards ROUGESal+Entail to incorporate both saliency and entailment knowledge, and it gives the best results overall (p &lt; 0.001 in all metrics w.r.t. both baseline and ROUGE-reward models), setting the new state-of-the-art. <ref type="bibr">5</ref> Test-Only Transfer (DUC-2002) Results Finally, we also tested our model's generalizability/transfer skills, where we take the models trained on CNN/Daily Mail and directly test them on DUC-2002 in a test-only setup. As shown in <ref type="table" target="#tab_4">Table 2</ref>, our final ROUGESal+Entail multi-reward RL model is statistically significantly better than both the cross-entropy (pointer-generator + coverage) baseline as well as ROUGE reward RL model, in terms of all 4 metrics with a large margin (with p &lt; 0.001). This demonstrates that our ROUGESal+Entail model learned better transferable and generalizable skills of saliency and logical entailment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Output Analysis</head><p>Saliency Analysis We analyzed the output summaries generated by <ref type="bibr">See et al. (2017)</ref>, and our baseline, ROUGE-reward and ROUGESal-reward models, using our saliency prediction model <ref type="bibr">(Sec. 4)</ref>, and the scores are 27.95%, 28.00%, 28.80%, and 30.86%. We also used the original CNN/Daily Mail Cloze Q&amp;A setup ( <ref type="bibr">Hermann et al., 2015</ref>) with the fill-in-the-blank answers treated as salient information, and the results are 60.66%, 59.36%, 60.67%, and 64.66% for the four models. Both these experiments illustrate that our ROUGESal reward model is stat. signif. better in saliency than the <ref type="bibr">See et al. (2017)</ref>, our baseline, and ROUGE-reward models (p &lt; 0.001).</p><p>Entailment Analysis We also analyzed the entailment scores of the generated summaries from <ref type="bibr">See et al. (2017)</ref>, and our baseline, ROUGEreward, and Entail-reward models, and the results are 27.33%, 27.21%, 28.23%, and 28.98%. 6 <ref type="bibr">5</ref> Our last three rows in <ref type="table">Table 1</ref> are all stat. signif. better in all metrics with p &lt; 0.001 compared to <ref type="bibr">See et al. (2017)</ref>. <ref type="bibr">6</ref> Based on our ground-truth summary to output summary sentences' average entailment score (see Sec. 4); similar Models 2-gram 3-gram 4-gram See et al. <ref type="formula" target="#formula_3">(2017)</ref> 2.24 6.03 9.72 Baseline <ref type="bibr">(XE)</ref> 2.23 5.58 8.81 ROUGE <ref type="bibr">(RL)</ref> 2.69 6.57 10.23 ROUGESal <ref type="bibr">(RL)</ref> 2.37 6.00 9.50 Entail <ref type="bibr">(RL)</ref> 2.63 6.56 10.26 <ref type="table">Table 3</ref>: Abstractiveness: novel n-gram percentage.</p><p>We observe that our Entail-reward model achieves stat. significant entailment scores (p &lt; 0.001) w.r.t. all the other three models.</p><p>Abstractiveness Analysis In order to measure the abstractiveness of our models, we followed the 'novel n-gram overlap' approach suggested in <ref type="bibr">See et al. (2017)</ref>. First, we found that all our rewardbased RL models have significantly (p &lt; 0.01) more novel n-grams than our cross-entropy baseline (see <ref type="table">Table 3</ref>). Next, the Entail-reward model 'maintains' stat. equal abstractiveness as the ROUGE-reward model, likely because it encourages rewriting to create logical subsets of information, while the ROUGESal-reward model does a bit worse, probably because it focuses on copying more salient information (e.g., names). Compared to previous work ( <ref type="bibr">See et al., 2017)</ref>, our Entailreward and ROUGE-reward models achieve statistically significant improvement (p &lt; 0.01) while ROUGESal is comparable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusion</head><p>We presented a summarization model trained with novel RL reward functions to improve the saliency and directed logical entailment aspects of a good summary. Further, we introduced the novel and effective multi-reward approach of optimizing multiple rewards simultaneously in alternate minibatches. We achieve the new state-of-the-art on CNN/Daily Mail and also strong test-only improvements on a DUC-2002 transfer setup.</p><p>Yongzheng Zhang, Nur Zincir-Heywood, and Evangelos Milios. 2004. World wide web site summarization. Web Intelligence and Agent Systems: An International Journal 2(1):39-53.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Supplementary Material</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.1 Saliency Rewards</head><p>Here, we describe the ROUGE-L formulation at summary-level and later describe how we incorporate saliency information into it. Given a reference summary of u sentences containing a total of m tokens ({w r,k } m k=1 ) and a generated summary of v sentences with a total of n tokens ({w c,k } n k=1 ), let r i be the reference summary sentence and c j be the generated summary sentence. Then, the precision (P lcs ), recall (R lcs ), and F-score (F lcs ) for ROUGE-L are defined as follows:</p><formula xml:id="formula_5">P lcs = u i=1 LCS ∪ (r i , C) n (4) R lcs = u i=1 LCS ∪ (r i , C) m<label>(5)</label></formula><formula xml:id="formula_6">F lcs = (1 + β 2 )R lcs P lcs R lcs + β 2 P lcs (6)</formula><p>where LCS ∪ takes the union Longest Common Subsequence (LCS) between a reference summary sentence r i and every generated summary sentence c j (c j ∈ C), and β is defined in Lin (2004).</p><p>In the above ROUGE-L scores, we assume that every token has equal weight, i.e, 1. However, every summary has salient tokens which should be rewarded with more weight. Hence, we use the weights obtained from our novel saliency predictor to modify the ROUGE-L scores with salient information as follows:</p><formula xml:id="formula_7">P s lcs = u i=1 LCS * ∪ (r i , C) n k=1 η(w c,k ) (7) R s lcs = u i=1 LCS * ∪ (r i , C) m k=1 η(w r,k ) (8) F s lcs = (1 + β 2 )R s lcs P s lcs R s lcs + β 2 P s lcs (9)</formula><p>where η(w) is the weight assigned by the saliency predictor for token w, and β is defined in Lin (2004). <ref type="bibr">7</ref> Let {w k } p k=1 be the union LCS set, then LCS * ∪ (r i , C) is defined as follows:</p><formula xml:id="formula_8">LCS * ∪ (r i , C) = p k=1 η(w k )<label>(10)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 Experimental Setup</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2.1 Datasets CNN/Daily Mail Dataset CNN/Daily</head><p>Mail dataset ( <ref type="bibr">Hermann et al., 2015;</ref><ref type="bibr">Nallapati et al., 2016</ref>) is a collection of online articles and their summaries. The summaries are based on the human written highlights of these articles. The dataset has 287, 226 training pairs, 13, 368 validation pairs, and 11, 490 test pairs. We use the non-anonymous version of the dataset as described in <ref type="bibr">See et al. (2017)</ref>. SQuAD Dataset We use Stanford Question Answering Dataset (SQuAD) for our saliency prediction model. We process the SQuAD dataset to collect the sentence and their corresponding salient phrases pairs. Here again, we use the standard split following previous work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DUC Test Corpus</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2.2 Training Details</head><p>During training, all our LSTM-RNNs are set with hidden state size of 256. We use a vocabulary size of 50k, where word embeddings are represented in 128 dimension, and both the encoder and decoder share the same embedding for each word. We encode the source document using a 400 timestep unrolled LSTM-RNN and 100 time-step unrolled LSTM-RNN for decoder. We clip the gradients to a maximum gradient norm value of 2.0 and use Adam optimizer ( <ref type="bibr">Kingma and Ba, 2015</ref>) with a learning rate of 1 × 10 −3 for pointer baseline and 1 × 10 −4 while training along with coverage loss, and   <ref type="table" target="#tab_7">Table 4</ref> presents the performance of our saliency predictor (on the SQuAD-based dev set for answer span classification accuracy) and entailment classifier (on the Multi-NLI dev set accuracy). Our entailment classifier is comparable to the state-ofthe-art models. 9</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3 Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3.1 Saliency and Entailment Scorer</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Our sequence generator with RL training.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Overview of our saliency predictor model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>3</head><label></label><figDesc>http://www-nlpir.nist.gov/projects/duc/ guidelines/2002.html</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Models</head><label></label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head></head><label></label><figDesc>.97 15.45 32.72 14.50 ROUGESal+Ent (RL) 38.95 17.05 35.52 16.47</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><head>Table 2 : ROUGE F1 full length scores of our models on test-only DUC-2002 generalizability setup.</head><label>2</label><figDesc></figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" validated="false"><head>Table 4 :</head><label>4</label><figDesc></figDesc><table>Performance of our entailment classifier and 
saliency predictor. 

loss (XE+RL) optimization, we use the following 
γ values for various rewards: 0.9985 for ROUGE, 
0.9999 for Entail and ROUGE+Entail, and 0.9995 
for ROUGESal and ROUGESal+Entail. For re-
inforcement learning, we only use 5000 training 
samples (&lt; 2% of the actual data) to speed up con-
vergence, but we found it to work well in practice. 
During inference time, we use a beam search of 
size 4. 

</table></figure>

			<note place="foot" n="1"> For the rest of the paper, we mean ROUGE-L whenever we mention ROUGE-reward models.</note>

			<note place="foot" n="4"> Our baseline is statistically equal to the paper-reported scores of See et al. (2017) (see Table 1) on ROUGE-1, ROUGE-2, based on the bootstrap test (Efron and Tibshirani, 1994). Our baseline is stat. significantly better (p &lt; 0.001) in all ROUGE metrics w.r.t. the github scores (R-1: 38.82, R-2: 16.81, R-3: 35.71, M: 18.14) of See et al. (2017).</note>

			<note place="foot" n="7"> If a token is repeated at multiple times in the input sentence, we average the probabilities of those instances.</note>

			<note place="foot" n="9"> RepEval leaderboard: https://repeval2017. github.io/shared/</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We thank the reviewers for their helpful comments. This work was supported by DARPA (YFA17-D17AP00022), Google Faculty Research Award, Bloomberg Data Science Research Grant, and NVidia GPU awards. The views, opinions, and/or findings contained in this article are those of the authors and should not be interpreted as representing the official views or policies, either expressed or implied, of the funding agency.</p><p>trends hold for document-to-summary entailment scores.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Neural machine translation by jointly learning to align and translate</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dzmitry</forename><surname>Bahdanau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kyunghyun</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICLR</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A large annotated corpus for learning natural language inference</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabor</forename><surname>Samuel R Bowman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><surname>Angeli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher D</forename><surname>Potts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Manning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Distraction-based neural networks for modeling documents</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qian</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaodan</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhenhua</forename><surname>Ling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Si</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hui</forename><surname>Jiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IJCAI</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Unsupervised sentence enhancement for automatic summarization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jackie</forename><forename type="middle">Chi</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kit</forename><surname>Cheung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerald</forename><surname>Penn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="775" to="786" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Abstractive sentence summarization with attentive recurrent neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sumit</forename><surname>Chopra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Auli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander M</forename><surname>Rush</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HLT-NAACL</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
