<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Simple Framework for Contrastive Learning of Visual Representations</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ting</forename><surname>Chen</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Simon</forename><surname>Kornblith</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohammad</forename><surname>Norouzi</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoffrey</forename><surname>Hinton</surname></persName>
						</author>
						<title level="a" type="main">A Simple Framework for Contrastive Learning of Visual Representations</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-25T18:16+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper presents SimCLR: a simple framework for contrastive learning of visual representations. We simplify recently proposed contrastive selfsupervised learning algorithms without requiring specialized architectures or a memory bank. In order to understand what enables the contrastive prediction tasks to learn useful representations, we systematically study the major components of our framework. We show that (1) composition of data augmentations plays a critical role in defining effective predictive tasks, (2) introducing a learnable nonlinear transformation between the representation and the contrastive loss substantially improves the quality of the learned representations, and (3) contrastive learning benefits from larger batch sizes and more training steps compared to supervised learning. By combining these findings, we are able to considerably outperform previous methods for self-supervised and semi-supervised learning on ImageNet. A linear classifier trained on self-supervised representations learned by Sim-CLR achieves 76.5% top-1 accuracy, which is a 7% relative improvement over previous state-ofthe-art, matching the performance of a supervised ResNet-50. When fine-tuned on only 1% of the labels, we achieve 85.8% top-5 accuracy, outperforming AlexNet with 100× fewer labels. 1</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Learning effective visual representations without human supervision is a long-standing problem. Most mainstream approaches fall into one of two classes: generative or discriminative. Generative approaches learn to generate or otherwise model pixels in the input space <ref type="bibr" target="#b6">(Hinton et al., 2006;</ref><ref type="bibr" target="#b11">Kingma &amp; Welling, 2013;</ref><ref type="bibr">Goodfellow et al., 2014)</ref>.</p><p>Proceedings of the 37 th International Conference on Machine Learning, Vienna, Austria, PMLR 119, 2020. Copyright 2020 by the author(s). <ref type="bibr">1</ref> Code available at https://github.com/google-research/simclr. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PIRL-c2x</head><p>SimCLR SimCLR (2x) SimCLR (4x) Supervised <ref type="figure" target="#fig_11">Figure 1</ref>. ImageNet Top-1 accuracy of linear classifiers trained on representations learned with different self-supervised methods (pretrained on ImageNet). Gray cross indicates supervised ResNet-50. Our method, SimCLR, is shown in bold.</p><p>However, pixel-level generation is computationally expensive and may not be necessary for representation learning. Discriminative approaches learn representations using objective functions similar to those used for supervised learning, but train networks to perform pretext tasks where both the inputs and labels are derived from an unlabeled dataset. Many such approaches have relied on heuristics to design pretext tasks <ref type="bibr">(Doersch et al., 2015;</ref><ref type="bibr" target="#b3">Zhang et al., 2016;</ref><ref type="bibr" target="#b23">Noroozi &amp; Favaro, 2016;</ref><ref type="bibr">Gidaris et al., 2018)</ref>, which could limit the generality of the learned representations. Discriminative approaches based on contrastive learning in the latent space have recently shown great promise, achieving state-of-theart results <ref type="bibr" target="#b2">(Hadsell et al., 2006;</ref><ref type="bibr">Dosovitskiy et al., 2014;</ref><ref type="bibr" target="#b24">Oord et al., 2018;</ref><ref type="bibr">Bachman et al., 2019)</ref>.</p><p>In this work, we introduce a simple framework for contrastive learning of visual representations, which we call SimCLR. Not only does SimCLR outperform previous work <ref type="figure" target="#fig_11">(Figure 1</ref>), but it is also simpler, requiring neither specialized architectures <ref type="bibr">(Bachman et al., 2019;</ref><ref type="bibr" target="#b5">Hénaff et al., 2019)</ref> nor a memory bank <ref type="bibr">(Wu et al., 2018;</ref><ref type="bibr" target="#b32">Tian et al., 2019;</ref><ref type="bibr" target="#b4">He et al., 2019;</ref><ref type="bibr" target="#b21">Misra &amp; van der Maaten, 2019)</ref>.</p><p>In order to understand what enables good contrastive representation learning, we systematically study the major components of our framework and show that: arXiv:2002.05709v3 [cs.</p><p>LG] 1 Jul 2020</p><p>• Composition of multiple data augmentation operations is crucial in defining the contrastive prediction tasks that yield effective representations. In addition, unsupervised contrastive learning benefits from stronger data augmentation than supervised learning.</p><p>• Introducing a learnable nonlinear transformation between the representation and the contrastive loss substantially improves the quality of the learned representations.</p><p>• Representation learning with contrastive cross entropy loss benefits from normalized embeddings and an appropriately adjusted temperature parameter.</p><p>• Contrastive learning benefits from larger batch sizes and longer training compared to its supervised counterpart. Like supervised learning, contrastive learning benefits from deeper and wider networks.</p><p>We combine these findings to achieve a new state-of-the-art in self-supervised and semi-supervised learning on Ima-geNet ILSVRC-2012 <ref type="bibr" target="#b26">(Russakovsky et al., 2015)</ref>. Under the linear evaluation protocol, SimCLR achieves 76.5% top-1 accuracy, which is a 7% relative improvement over previous state-of-the-art <ref type="bibr" target="#b5">(Hénaff et al., 2019)</ref>. When fine-tuned with only 1% of the ImageNet labels, SimCLR achieves 85.8% top-5 accuracy, a relative improvement of 10% <ref type="bibr" target="#b5">(Hénaff et al., 2019)</ref>. When fine-tuned on other natural image classification datasets, SimCLR performs on par with or better than a strong supervised baseline <ref type="bibr" target="#b13">(Kornblith et al., 2019)</ref> on 10 out of 12 datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Method</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">The Contrastive Learning Framework</head><p>Inspired by recent contrastive learning algorithms (see Section 7 for an overview), SimCLR learns representations by maximizing agreement between differently augmented views of the same data example via a contrastive loss in the latent space. As illustrated in <ref type="figure">Figure 2</ref>, this framework comprises the following four major components.</p><p>• A stochastic data augmentation module that transforms any given data example randomly resulting in two correlated views of the same example, denotedx i andx j , which we consider as a positive pair. In this work, we sequentially apply three simple augmentations: random cropping followed by resize back to the original size, random color distortions, and random Gaussian blur. As shown in Section 3, the combination of random crop and color distortion is crucial to achieve a good performance.</p><p>• A neural network base encoder f (·) that extracts representation vectors from augmented data examples. Our framework allows various choices of the network architecture without any constraints. We opt for simplicity and adopt the commonly used ResNet <ref type="bibr" target="#b3">(He et al., 2016</ref>)</p><formula xml:id="formula_0">←− Representation −→ x xixj hi hj zi zj t ∼ T t ∼ T f (·) f (·) g(·) g(·)</formula><p>Maximize agreement <ref type="figure">Figure 2</ref>. A simple framework for contrastive learning of visual representations. Two separate data augmentation operators are sampled from the same family of augmentations (t ∼ T and t ∼ T ) and applied to each data example to obtain two correlated views. A base encoder network f (·) and a projection head g(·) are trained to maximize agreement using a contrastive loss. After training is completed, we throw away the projection head g(·) and use encoder f (·) and representation h for downstream tasks.</p><p>to obtain h i = f (x i ) = ResNet(x i ) where h i ∈ R d is the output after the average pooling layer.</p><p>• A small neural network projection head g(·) that maps representations to the space where contrastive loss is applied. We use a MLP with one hidden layer to obtain</p><formula xml:id="formula_1">z i = g(h i ) = W (2) σ(W (1) h i )</formula><p>where σ is a ReLU nonlinearity. As shown in section 4, we find it beneficial to define the contrastive loss on z i 's rather than h i 's.</p><p>• A contrastive loss function defined for a contrastive prediction task. Given a set {x k } including a positive pair of examplesx i andx j , the contrastive prediction task aims to identifyx j in {x k } k =i for a givenx i .</p><p>We randomly sample a minibatch of N examples and define the contrastive prediction task on pairs of augmented examples derived from the minibatch, resulting in 2N data points. We do not sample negative examples explicitly. Instead, given a positive pair, similar to <ref type="bibr">(Chen et al., 2017)</ref>, we treat the other 2(N − 1) augmented examples within a minibatch as negative examples. Let sim(u, v) = u v/ u v denote the dot product between 2 normalized u and v (i.e. cosine similarity). Then the loss function for a positive pair of examples (i, j) is defined as</p><formula xml:id="formula_2">i,j = − log exp(sim(z i , z j )/τ ) 2N k=1 1 [k =i] exp(sim(z i , z k )/τ ) ,<label>(1)</label></formula><p>where 1 [k =i] ∈ {0, 1} is an indicator function evaluating to 1 iff k = i and τ denotes a temperature parameter. The final loss is computed across all positive pairs, both (i, j) and (j, i), in a mini-batch. This loss has been used in previous work <ref type="bibr" target="#b29">(Sohn, 2016;</ref><ref type="bibr">Wu et al., 2018;</ref><ref type="bibr" target="#b24">Oord et al., 2018)</ref>; for convenience, we term it NT-Xent (the normalized temperature-scaled cross entropy loss).</p><p>Algorithm 1 SimCLR's main learning algorithm.</p><p>input: batch size N , constant τ , structure of f , g, T .</p><p>for sampled minibatch {x k } N k=1 do for all k ∈ {1, . . . , N } do draw two augmentation functions t ∼ T , t ∼ T # the first augmentatioñ</p><formula xml:id="formula_3">x 2k−1 = t(x k ) h 2k−1 = f (x 2k−1 ) # representation z 2k−1 = g(h 2k−1 ) # projection # the second augmentatioñ x 2k = t (x k ) h 2k = f (x 2k ) # representation z 2k = g(h 2k ) # projection end for for all i ∈ {1, . . . , 2N } and j ∈ {1, . . . , 2N } do s i,j = z i z j /( z i z j ) # pairwise similarity end for define (i, j) as (i, j) = − log exp(si,j /τ ) 2N k=1 1 [k =i] exp(s i,k /τ ) L = 1 2N N k=1 [ (2k−1, 2k) + (2k, 2k−1)</formula><p>] update networks f and g to minimize L end for return encoder network f (·), and throw away g(·)</p><p>Algorithm 1 summarizes the proposed method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Training with Large Batch Size</head><p>To keep it simple, we do not train the model with a memory bank <ref type="bibr">(Wu et al., 2018;</ref><ref type="bibr" target="#b4">He et al., 2019)</ref>. Instead, we vary the training batch size N from 256 to 8192. A batch size of 8192 gives us 16382 negative examples per positive pair from both augmentation views. Training with large batch size may be unstable when using standard SGD/Momentum with linear learning rate scaling <ref type="bibr" target="#b1">(Goyal et al., 2017)</ref>. To stabilize the training, we use the LARS optimizer <ref type="bibr">(You et al., 2017)</ref> for all batch sizes. We train our model with Cloud TPUs, using 32 to 128 cores depending on the batch size. 2 Global BN. Standard ResNets use batch normalization <ref type="bibr" target="#b9">(Ioffe &amp; Szegedy, 2015)</ref>. In distributed training with data parallelism, the BN mean and variance are typically aggregated locally per device. In our contrastive learning, as positive pairs are computed in the same device, the model can exploit the local information leakage to improve prediction accuracy without improving representations. We address this issue by aggregating BN mean and variance over all devices during the training. Other approaches include shuffling data examples across devices <ref type="bibr" target="#b4">(He et al., 2019)</ref>, or replacing BN with layer norm <ref type="bibr" target="#b5">(Hénaff et al., 2019)</ref>. <ref type="bibr">2</ref> With 128 TPU v3 cores, it takes ∼1.5 hours to train our ResNet-50 with a batch size of 4096 for 100 epochs.   . Solid rectangles are images, dashed rectangles are random crops. By randomly cropping images, we sample contrastive prediction tasks that include global to local view (B → A) or adjacent view (D → C) prediction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Evaluation Protocol</head><p>Here we lay out the protocol for our empirical studies, which aim to understand different design choices in our framework.</p><p>Dataset and Metrics. Most of our study for unsupervised pretraining (learning encoder network f without labels) is done using the ImageNet ILSVRC-2012 dataset <ref type="bibr" target="#b26">(Russakovsky et al., 2015)</ref>. Some additional pretraining experiments on CIFAR-10 <ref type="bibr" target="#b15">(Krizhevsky &amp; Hinton, 2009</ref>) can be found in Appendix B.9. We also test the pretrained results on a wide range of datasets for transfer learning. To evaluate the learned representations, we follow the widely used linear evaluation protocol <ref type="bibr" target="#b3">(Zhang et al., 2016;</ref><ref type="bibr" target="#b24">Oord et al., 2018;</ref><ref type="bibr">Bachman et al., 2019;</ref><ref type="bibr" target="#b12">Kolesnikov et al., 2019)</ref>, where a linear classifier is trained on top of the frozen base network, and test accuracy is used as a proxy for representation quality. Beyond linear evaluation, we also compare against state-of-the-art on semi-supervised and transfer learning.</p><p>Default setting. Unless otherwise specified, for data augmentation we use random crop and resize (with random flip), color distortions, and Gaussian blur (for details, see Appendix A). We use ResNet-50 as the base encoder network, and a 2-layer MLP projection head to project the representation to a 128-dimensional latent space. As the loss, we use NT-Xent, optimized using LARS with learning rate of 4.8 (= 0.3 × BatchSize/256) and weight decay of 10 −6 . We train at batch size 4096 for 100 epochs. 3 Furthermore, we use linear warmup for the first 10 epochs, and decay the learning rate with the cosine decay schedule without restarts <ref type="bibr" target="#b17">(Loshchilov &amp; Hutter, 2016)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Data Augmentation for Contrastive Representation Learning</head><p>Data augmentation defines predictive tasks. While data augmentation has been widely used in both supervised and unsupervised representation learning (Krizhevsky et al.,  prediction via a fixed image splitting procedure and a context aggregation network. We show that this complexity can be avoided by performing simple random cropping (with resizing) of target images, which creates a family of predictive tasks subsuming the above mentioned two, as shown in <ref type="figure" target="#fig_3">Figure 3</ref>. This simple design choice conveniently decouples the predictive task from other components such as the neural network architecture. Broader contrastive prediction tasks can be defined by extending the family of augmentations and composing them stochastically.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Composition of data augmentation operations is crucial for learning good representations</head><p>To systematically study the impact of data augmentation, we consider several common augmentations here. One type of augmentation involves spatial/geometric transformation of data, such as cropping and resizing (with horizontal flipping), rotation <ref type="bibr">(Gidaris et al., 2018)</ref> and cutout <ref type="bibr">(De-Vries &amp; Taylor, 2017)</ref>. The other type of augmentation involves appearance transformation, such as color distortion (including color dropping, brightness, contrast, saturation, hue) <ref type="bibr" target="#b8">(Howard, 2013;</ref><ref type="bibr" target="#b31">Szegedy et al., 2015)</ref>, Gaussian blur, and Sobel filtering. <ref type="figure" target="#fig_5">Figure 4</ref> visualizes the augmentations that we study in this work.  <ref type="figure" target="#fig_16">Figure 5</ref>. Linear evaluation (ImageNet top-1 accuracy) under individual or composition of data augmentations, applied only to one branch. For all columns but the last, diagonal entries correspond to single transformation, and off-diagonals correspond to composition of two transformations (applied sequentially). The last column reflects the average over the row.</p><p>To understand the effects of individual data augmentations and the importance of augmentation composition, we investigate the performance of our framework when applying augmentations individually or in pairs. Since ImageNet images are of different sizes, we always apply crop and resize images <ref type="bibr" target="#b16">(Krizhevsky et al., 2012;</ref><ref type="bibr" target="#b31">Szegedy et al., 2015)</ref>, which makes it difficult to study other augmentations in the absence of cropping. To eliminate this confound, we consider an asymmetric data transformation setting for this ablation. Specifically, we always first randomly crop images and resize them to the same resolution, and we then apply the targeted transformation(s) only to one branch of the framework in <ref type="figure">Figure 2</ref>, while leaving the other branch as the identity (i.e. t(x i ) = x i ). Note that this asymmet-   ric data augmentation hurts the performance. Nonetheless, this setup should not substantively change the impact of individual data augmentations or their compositions. <ref type="figure" target="#fig_16">Figure 5</ref> shows linear evaluation results under individual and composition of transformations. We observe that no single transformation suffices to learn good representations, even though the model can almost perfectly identify the positive pairs in the contrastive task. When composing augmentations, the contrastive prediction task becomes harder, but the quality of representation improves dramatically. Appendix B.2 provides a further study on composing broader set of augmentations.</p><p>One composition of augmentations stands out: random cropping and random color distortion. We conjecture that one serious issue when using only random cropping as data augmentation is that most patches from an image share a similar color distribution. <ref type="figure" target="#fig_7">Figure 6</ref> shows that color histograms alone suffice to distinguish images. Neural nets may exploit this shortcut to solve the predictive task. Therefore, it is critical to compose cropping with color distortion in order to learn generalizable features.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Contrastive learning needs stronger data augmentation than supervised learning</head><p>To further demonstrate the importance of the color augmentation, we adjust the strength of color augmentation as 5 Supervised models are trained for 90 epochs; longer training improves performance of stronger augmentation by ∼ 0.5%. </p><formula xml:id="formula_4">R101 R101(2x) R152 R152(2x) R18 R18(2x) R18(4x) R34 R34(2x) R34(4x) R50 R50(2x) R50(4x) Sup. R50 Sup. R50(2x) Sup. R50(4x) R50* R50(2x)* R50(4x)* Figure 7.</formula><p>Linear evaluation of models with varied depth and width. Models in blue dots are ours trained for 100 epochs, models in red stars are ours trained for 1000 epochs, and models in green crosses are supervised ResNets trained for 90 epochs 7 <ref type="bibr" target="#b3">(He et al., 2016)</ref>.</p><p>shown in <ref type="table" target="#tab_11">Table 1</ref>. Stronger color augmentation substantially improves the linear evaluation of the learned unsupervised models. In this context, AutoAugment (Cubuk et al., 2019), a sophisticated augmentation policy found using supervised learning, does not work better than simple cropping + (stronger) color distortion. When training supervised models with the same set of augmentations, we observe that stronger color augmentation does not improve or even hurts their performance. Thus, our experiments show that unsupervised contrastive learning benefits from stronger (color) data augmentation than supervised learning. Although previous work has reported that data augmentation is useful for self-supervised learning <ref type="bibr">(Doersch et al., 2015;</ref><ref type="bibr">Bachman et al., 2019;</ref><ref type="bibr" target="#b5">Hénaff et al., 2019;</ref><ref type="bibr" target="#b0">Asano et al., 2019)</ref>, we show that data augmentation that does not yield accuracy benefits for supervised learning can still help considerably with contrastive learning.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Architectures for Encoder and Head</head><p>4.1. Unsupervised contrastive learning benefits (more) from bigger models <ref type="figure">Figure 7</ref> shows, perhaps unsurprisingly, that increasing depth and width both improve performance. While similar findings hold for supervised learning <ref type="bibr" target="#b3">(He et al., 2016)</ref>, we find the gap between supervised models and linear classifiers trained on unsupervised models shrinks as the model size increases, suggesting that unsupervised learning benefits more from bigger models than its supervised counterpart.  </p><formula xml:id="formula_5">Name Negative loss function Gradient w.r.t. u NT-Xent u T v + /τ − log v∈{v + ,v − } exp(u T v/τ ) (1 − exp(u T v + /τ ) Z(u) )/τ v + − v − exp(u T v − /τ ) Z(u) /τ v − NT-Logistic log σ(u T v + /τ ) + log σ(−u T v − /τ ) (σ(−u T v + /τ ))/τ v + − σ(u T v − /τ )/τ v − Margin Triplet − max(u T v − − u T v + + m, 0) v + − v − if u T v + − u T v − &lt; m else 0</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">A nonlinear projection head improves the representation quality of the layer before it</head><p>We then study the importance of including a projection head, i.e. g(h). <ref type="figure" target="#fig_9">Figure 8</ref> shows linear evaluation results using three different architecture for the head: (1) identity mapping;</p><p>(2) linear projection, as used by several previous approaches (Wu et al., 2018); and (3) the default nonlinear projection with one additional hidden layer (and ReLU activation), similar to Bachman et al. <ref type="bibr">(2019)</ref>. We observe that a nonlinear projection is better than a linear projection (+3%), and much better than no projection (&gt;10%). When a projection head is used, similar results are observed regardless of output dimension. Furthermore, even when nonlinear projection is used, the layer before the projection head, h, is still much better (&gt;10%) than the layer after, z = g(h), which shows that the hidden layer before the projection head is a better representation than the layer after.</p><p>We conjecture that the importance of using the representation before the nonlinear projection is due to loss of information induced by the contrastive loss. In particular, z = g(h) is trained to be invariant to data transformation. Thus, g can remove information that may be useful for the downstream task, such as the color or orientation of objects. By leveraging the nonlinear transformation g(·), more information can be formed and maintained in h. To verify this hypothesis, we conduct experiments that use either h or g(h) to learn to predict the transformation applied during the pretraining.</p><p>Here we set g(h) = W (2) σ(W (1) h), with the same input and output dimensionality (i.e. 2048). <ref type="table" target="#tab_3">Table 3</ref> shows h contains much more information about the transformation applied, while g(h) loses information. Further analysis can We compare the NT-Xent loss against other commonly used contrastive loss functions, such as logistic loss <ref type="bibr" target="#b20">(Mikolov et al., 2013)</ref>, and margin loss <ref type="bibr" target="#b27">(Schroff et al., 2015)</ref>. <ref type="table" target="#tab_2">Table  2</ref> shows the objective function as well as the gradient to the input of the loss function. Looking at the gradient, we observe 1) 2 normalization (i.e. cosine similarity) along with temperature effectively weights different examples, and an appropriate temperature can help the model learn from hard negatives; and 2) unlike cross-entropy, other objective functions do not weigh the negatives by their relative hardness. As a result, one must apply semi-hard negative mining <ref type="bibr" target="#b27">(Schroff et al., 2015)</ref> for these loss functions: instead of computing the gradient over all loss terms, one can compute the gradient using semi-hard negative terms (i.e., those that are within the loss margin and closest in distance, but farther than positive examples).</p><p>To make the comparisons fair, we use the same 2 normalization for all loss functions, and we tune the hyperparameters, and report their best results. 8 <ref type="table" target="#tab_11">Table 4</ref> shows that, while (semi-hard) negative mining helps, the best result is still much worse than our default NT-Xent loss.  We next test the importance of the 2 normalization (i.e. cosine similarity vs dot product) and temperature τ in our default NT-Xent loss. <ref type="table" target="#tab_4">Table 5</ref> shows that without normalization and proper temperature scaling, performance is significantly worse. Without 2 normalization, the contrastive task accuracy is higher, but the resulting representation is worse under linear evaluation. <ref type="figure" target="#fig_10">Figure 9</ref> shows the impact of batch size when models are trained for different numbers of epochs. We find that, when the number of training epochs is small (e.g. 100 epochs), larger batch sizes have a significant advantage over the smaller ones. With more training steps/epochs, the gaps between different batch sizes decrease or disappear, provided the batches are randomly resampled. In contrast to 10 A linear learning rate scaling is used here. <ref type="figure">Figure B</ref>.1 shows using a square root learning rate scaling can improve performance of ones with small batch sizes. 2019; <ref type="bibr" target="#b32">Tian et al., 2019)</ref> in the linear evaluation setting (see Appendix B.6). <ref type="table" target="#tab_11">Table 1</ref> shows more numerical comparisons among different methods. We are able to use standard networks to obtain substantially better results compared to previous methods that require specifically designed architectures. The best result obtained with our ResNet-50 (4×) can match the supervised pretrained ResNet-50.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Contrastive learning benefits (more) from larger batch sizes and longer training</head><p>Semi-supervised learning. We follow Zhai et al. <ref type="formula" target="#formula_2">(2019)</ref> and sample 1% or 10% of the labeled ILSVRC-12 training datasets in a class-balanced way (∼12.8 and ∼128 images per class respectively). <ref type="bibr">11</ref> We simply fine-tune the whole base network on the labeled data without regularization (see Appendix B.5). Transfer learning. We evaluate transfer learning performance across 12 natural image datasets in both linear evaluation (fixed feature extractor) and fine-tuning settings. Following <ref type="bibr" target="#b13">Kornblith et al. (2019)</ref>, we perform hyperparameter tuning for each model-dataset combination and select the best hyperparameters on a validation set. <ref type="table" target="#tab_11">Table 8</ref> shows results with the ResNet-50 (4×) model. When fine-tuned, our self-supervised model significantly outperforms the supervised baseline on 5 datasets, whereas the supervised baseline is superior on only 2 (i.e. Pets and Flowers). On the remaining 5 datasets, the models are statistically tied. Full experimental details as well as results with the standard ResNet-50 architecture are provided in Appendix B.8. <ref type="bibr">11</ref> The details of sampling and exact subsets can be found in https://www.tensorflow.org/datasets/catalog/imagenet2012_subset.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Related Work</head><p>The idea of making representations of an image agree with each other under small transformations dates back to <ref type="bibr">Becker &amp; Hinton (1992)</ref>. We extend it by leveraging recent advances in data augmentation, network architecture and contrastive loss. A similar consistency idea, but for class label prediction, has been explored in other contexts such as semisupervised learning <ref type="bibr" target="#b4">(Xie et al., 2019;</ref><ref type="bibr">Berthelot et al., 2019)</ref>.</p><p>Handcrafted pretext tasks. The recent renaissance of selfsupervised learning began with artificially designed pretext tasks, such as relative patch prediction <ref type="bibr">(Doersch et al., 2015)</ref>, solving jigsaw puzzles <ref type="bibr" target="#b23">(Noroozi &amp; Favaro, 2016)</ref>, colorization <ref type="bibr" target="#b3">(Zhang et al., 2016)</ref> and rotation prediction <ref type="bibr">(Gidaris et al., 2018;</ref><ref type="bibr">Chen et al., 2019)</ref>. Although good results can be obtained with bigger networks and longer training <ref type="bibr" target="#b12">(Kolesnikov et al., 2019)</ref>, these pretext tasks rely on somewhat ad-hoc heuristics, which limits the generality of learned representations.</p><p>Contrastive visual representation learning. Dating back to <ref type="bibr" target="#b2">Hadsell et al. (2006)</ref>, these approaches learn representations by contrasting positive pairs against negative pairs. Along these lines, <ref type="bibr">Dosovitskiy et al. (2014)</ref> proposes to treat each instance as a class represented by a feature vector (in a parametric form). <ref type="bibr">Wu et al. (2018)</ref> proposes to use a memory bank to store the instance class representation vector, an approach adopted and extended in several recent papers <ref type="bibr">(Zhuang et al., 2019;</ref><ref type="bibr" target="#b32">Tian et al., 2019;</ref><ref type="bibr" target="#b4">He et al., 2019;</ref><ref type="bibr" target="#b21">Misra &amp; van der Maaten, 2019)</ref>. Other work explores the use of in-batch samples for negative sampling instead of a memory bank <ref type="bibr">(Doersch &amp; Zisserman, 2017;</ref><ref type="bibr">Ye et al., 2019;</ref><ref type="bibr" target="#b10">Ji et al., 2019)</ref>.</p><p>Recent literature has attempted to relate the success of their methods to maximization of mutual information between latent representations <ref type="bibr" target="#b24">(Oord et al., 2018;</ref><ref type="bibr" target="#b5">Hénaff et al., 2019;</ref><ref type="bibr" target="#b7">Hjelm et al., 2018;</ref><ref type="bibr">Bachman et al., 2019)</ref>. However, it is not clear if the success of contrastive approaches is determined by the mutual information, or by the specific form of the contrastive loss <ref type="bibr" target="#b33">(Tschannen et al., 2019)</ref>.</p><p>We note that almost all individual components of our framework have appeared in previous work, although the specific instantiations may be different. The superiority of our framework relative to previous work is not explained by any single design choice, but by their composition. We provide a comprehensive comparison of our design choices with those of previous work in Appendix C.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Conclusion</head><p>In this work, we present a simple framework and its instantiation for contrastive visual representation learning. We carefully study its components, and show the effects of different design choices. By combining our findings, we improve considerably over previous methods for selfsupervised, semi-supervised, and transfer learning.</p><p>Our approach differs from standard supervised learning on ImageNet only in the choice of data augmentation, the use of a nonlinear head at the end of the network, and the loss function. The strength of this simple framework suggests that, despite a recent surge in interest, self-supervised learning remains undervalued. Bachman, P., Hjelm, R. D., and Buchwalter, W. Learning representations by maximizing mutual information across views. In Advances in Neural Information Processing Systems, pp. 15509-15519, 2019.</p><p>Becker, S. and Hinton, G. E. Self-organizing neural network that discovers surfaces in random-dot stereograms. Nature, 355 </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Data Augmentation Details</head><p>In our default pretraining setting (which is used to train our best models), we utilize random crop (with resize and random flip), random color distortion, and random Gaussian blur as the data augmentations. The details of these three augmentations are provided below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Random crop and resize to 224x224</head><p>We use standard Inception-style random cropping . The crop of random size (uniform from 0.08 to 1.0 in area) of the original size and a random aspect ratio (default: of 3/4 to 4/3) of the original aspect ratio is made. This crop is finally resized to the original size. This has been implemented in Tensorflow as "slim.preprocessing.inception_preprocessing.distorted_bounding_box_crop", or in Pytorch as "torchvision.transforms.RandomResizedCrop". Additionally, the random crop (with resize) is always followed by a random horizontal/left-to-right flip with 50% probability. This is helpful but not essential. By removing this from our default augmentation policy, the top-1 linear evaluation drops from 64.5% to 63.4% for our ResNet-50 model trained in 100 epochs.</p><p>Color distortion Color distortion is composed by color jittering and color dropping. We find stronger color jittering usually helps, so we set a strength parameter.</p><p>A pseudo-code for color distortion using TensorFlow is as follows. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>return color_distort</head><p>Gaussian blur This augmentation is in our default policy. We find it helpful, as it improves our ResNet-50 trained for 100 epochs from 63.2% to 64.5%. We blur the image 50% of the time using a Gaussian kernel. We randomly sample σ ∈ [0.1, 2.0], and the kernel size is set to be 10% of the image height/width.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Additional Experimental Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.1. Batch Size and Training</head><p>Steps <ref type="figure">Figure B</ref>.1 shows the top-5 accuracy on linear evaluation when trained with different batch sizes and training epochs. The conclusion is very similar to top-1 accuracy shown before, except that the differences between different batch sizes and training steps seems slightly smaller here.</p><p>In both <ref type="figure" target="#fig_10">Figure 9</ref> and <ref type="figure">Figure B</ref>.1, we use a linear scaling of learning rate similar to <ref type="bibr" target="#b1">(Goyal et al., 2017)</ref>  We also train with larger batch size (up to 32K) and longer (up to 3200 epochs), with the square root learning rate scaling. A shown in <ref type="figure">Figure B</ref>.2, the performance seems to saturate with a batch size of 8192, while training longer can still significantly improve the performance.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.2. Broader composition of data augmentations further improves performance</head><p>Our best results in the main text <ref type="table" target="#tab_11">(Table 6</ref> and 7) can be further improved when expanding the default augmentation policy to include the following: (1) Sobel filtering, (2) additional color distortion (equalize, solarize), and (3) motion blur. For linear evaluation protocol, the ResNet-50 models (1×, 2×, 4×) trained with broader data augmentations achieve 70.0 (+0.7), 74.4 (+0.2), 76.8 (+0.3), respectively. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.3. Effects of Longer Training for Supervised Models</head><p>Here we perform experiments to see how training steps and stronger data augmentation affect supervised training. We test ResNet-50 and ResNet-50 (4×) under the same set of data augmentations (random crops, color distortion, 50% Gaussian blur) as used in our unsupervised models. <ref type="figure">Figure B</ref>.3 shows the top-1 accuracy. We observe that there is no significant benefit from training supervised models longer on ImageNet. Stronger data augmentation slightly improves the accuracy of ResNet-50 (4×) but does not help on ResNet-50. When stronger data augmentation is applied, ResNet-50 generally requires longer training (e.g. 500 epochs 14 ) to obtain the optimal result, while ResNet-50 (4×) does not benefit from longer training.     </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.5. Semi-supervised Learning via Fine-Tuning</head><p>Fine-tuning Procedure We fine-tune using the Nesterov momentum optimizer with a batch size of 4096, momentum of 0.9, and a learning rate of 0.8 (following LearningRate = 0.05 × BatchSize/256) without warmup. Only random cropping (with random left-to-right flipping and resizing to 224x224) is used for preprocessing. We do not use any regularization (including weight decay). For 1% labeled data we fine-tune for 60 epochs, and for 10% labeled data we fine-tune for 30 epochs. For the inference, we resize the given image to 256x256, and take a single center crop of 224x224. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.6. Linear Evaluation</head><p>For linear evaluation, we follow similar procedure as fine-tuning (described in Appendix B.5), except that a larger learning rate of 1.6 (following LearningRate = 0.1 × BatchSize/256) and longer training of 90 epochs. Alternatively, using LARS optimizer with the pretraining hyper-parameters also yield similar results. Furthermore, we find that attaching the linear classifier on top of the base encoder (with a stop_gradient on the input to linear classifier to prevent the label information from influencing the encoder) and train them simultaneously during the pretraining achieves similar performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.7. Correlation Between Linear Evaluation and Fine-Tuning</head><p>Here we study the correlation between linear evaluation and fine-tuning under different settings of training step and network architecture.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.8. Transfer Learning</head><p>We evaluated the performance of our self-supervised representation for transfer learning in two settings: linear evaluation, where a logistic regression classifier is trained to classify a new dataset based on the self-supervised representation learned on ImageNet, and fine-tuning, where we allow all weights to vary during training. In both cases, we follow the approach described by <ref type="bibr" target="#b13">Kornblith et al. (2019)</ref>, although our preprocessing differs slightly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.8.1. METHODS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Datasets</head><p>We investigated transfer learning performance on the Food-101 dataset <ref type="bibr">(Bossard et al., 2014)</ref>, CIFAR-10 and CIFAR-100 <ref type="bibr" target="#b15">(Krizhevsky &amp; Hinton, 2009</ref><ref type="bibr">), Birdsnap (Berg et al., 2014</ref>, the SUN397 scene dataset <ref type="bibr">(Xiao et al., 2010)</ref>, Stanford Cars <ref type="bibr" target="#b14">(Krause et al., 2013)</ref>, FGVC Aircraft <ref type="bibr" target="#b19">(Maji et al., 2013)</ref>, the PASCAL VOC 2007 classification task <ref type="bibr">(Everingham et al., 2010)</ref>, the Describable Textures Dataset (DTD) <ref type="bibr">(Cimpoi et al., 2014)</ref>, Oxford-IIIT Pets <ref type="bibr" target="#b25">(Parkhi et al., 2012)</ref>, <ref type="bibr">Caltech-101 (Fei-Fei et al., 2004)</ref>, and Oxford 102 Flowers <ref type="bibr" target="#b22">(Nilsback &amp; Zisserman, 2008)</ref>. We follow the evaluation protocols in the papers introducing these datasets, i.e., we report top-1 accuracy for  <ref type="bibr" target="#b28">, 2014;</ref><ref type="bibr" target="#b28">Simonyan &amp; Zisserman, 2014)</ref>.</p><p>We used the validation sets specified by the dataset creators to select hyperparameters for FGVC Aircraft, PASCAL VOC 2007, DTD, and Oxford 102 Flowers. For other datasets, we held out a subset of the training set for validation while performing hyperparameter tuning. After selecting the optimal hyperparameters on the validation set, we retrained the model using the selected parameters using all training and validation images. We report accuracy on the test set.</p><p>Transfer Learning via a Linear Classifier We trained an 2 -regularized multinomial logistic regression classifier on features extracted from the frozen pretrained network. We used L-BFGS to optimize the softmax cross-entropy objective and we did not apply data augmentation. As preprocessing, all images were resized to 224 pixels along the shorter side using bicubic resampling, after which we took a 224 × 224 center crop. We selected the 2 regularization parameter from a range of 45 logarithmically spaced values between 10 −6 and 10 5 .</p><p>Transfer Learning via Fine-Tuning We fine-tuned the entire network using the weights of the pretrained network as initialization. We trained for 20,000 steps at a batch size of 256 using SGD with Nesterov momentum with a momentum parameter of 0.9. We set the momentum parameter for the batch normalization statistics to max(1 − 10/s, 0.9) where s is the number of steps per epoch. As data augmentation during fine-tuning, we performed only random crops with resize and flips; in contrast to pretraining, we did not perform color augmentation or blurring. At test time, we resized images to 256 pixels along the shorter side and took a 224 × 224 center crop. (Additional accuracy improvements may be possible with further optimization of data augmentation, particularly on the CIFAR-10 and CIFAR-100 datasets.) We selected the learning rate and weight decay, with a grid of 7 logarithmically spaced learning rates between 0.0001 and 0.1 and 7 logarithmically spaced values of weight decay between 10 −6 and 10 −3 , as well as no weight decay. We divide these values of weight decay by the learning rate.</p><p>Training from Random Initialization We trained the network from random initialization using the same procedure as for fine-tuning, but for longer, and with an altered hyperparameter grid. We chose hyperparameters from a grid of 7 logarithmically spaced learning rates between 0.001 and 1.0 and 8 logarithmically spaced values of weight decay between 10 −5 and 10 −1.5 . Importantly, our random initialization baselines are trained for 40,000 steps, which is sufficiently long to achieve near-maximal accuracy, as demonstrated in <ref type="figure" target="#fig_9">Figure 8</ref> of <ref type="bibr" target="#b13">Kornblith et al. (2019)</ref>.</p><p>On Birdsnap, there are no statistically significant differences among methods, and on Food-101, Stanford Cars, and FGVC Aircraft datasets, fine-tuning provides only a small advantage over training from random initialization. However, on the remaining 8 datasets, pretraining has clear advantages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Supervised Baselines</head><p>We compare against architecturally identical ResNet models trained on ImageNet with standard cross-entropy loss. These models are trained with the same data augmentation as our self-supervised models (crops, strong color augmentation, and blur) and are also trained for 1000 epochs. We found that, although stronger data augmentation and longer training time do not benefit accuracy on ImageNet, these models performed significantly better than a supervised baseline trained for 90 epochs and ordinary data augmentation for linear evaluation on a subset of transfer datasets. The supervised ResNet-50 baseline achieves 76.3% top-1 accuracy on ImageNet, vs. 69.3% for the self-supervised counterpart, while the ResNet-50 (4×) baseline achieves 78.3%, vs. 76.5% for the self-supervised model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Statistical Significance Testing</head><p>We test for the significance of differences between model with a permutation test. Given predictions of two models, we generate 100,000 samples from the null distribution by randomly exchanging predictions for each example and computing the difference in accuracy after performing this randomization. We then compute the percentage of samples from the null distribution that are more extreme than the observed difference in predictions.  <ref type="table" target="#tab_11">Table B</ref>.5. Comparison of transfer learning performance of our self-supervised approach with supervised baselines across 12 natural image datasets, using ImageNet-pretrained ResNet models. See also <ref type="figure" target="#fig_9">Figure 8</ref> for results with the ResNet (4×) architecture.</p><p>model may relate to the accuracy gap between the supervised and self-supervised models on ImageNet. The self-supervised ResNet gets 69.3% top-1 accuracy, 6.8% worse than the supervised model in absolute terms, whereas the self-supervised ResNet (4×) model gets 76.5%, which is only 1.8% worse than the supervised model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.9. CIFAR-10</head><p>While we focus on using ImageNet as the main dataset for pretraining our unsupervised model, our method also works with other datasets. We demonstrate it by testing on CIFAR-10 as follows.</p><p>Setup As our goal is not to optimize CIFAR-10 performance, but rather to provide further confirmation of our observations on ImageNet, we use the same architecture (ResNet-50) for CIFAR-10 experiments. Because CIFAR-10 images are much smaller than ImageNet images, we replace the first 7x7 Conv of stride 2 with 3x3 Conv of stride 1, and also remove the first max pooling operation. For data augmentation, we use the same Inception crop (flip and resize to 32x32) as ImageNet, 15 and color distortion (strength=0.5), leaving out Gaussian blur. We pretrain with learning rate in {0.5, 1.0, 1.5}, temperature in {0.1, 0.5, 1.0}, and batch size in {256, 512, 1024, 2048, 4096}. The rest of the settings (including optimizer, weight decay, etc.) are the same as our ImageNet training.</p><p>Our best model trained with batch size 1024 can achieve a linear evaluation accuracy of 94.0%, compared to 95.1% from the supervised baseline using the same architecture and batch size. The best self-supervised model that reports linear evaluation result on CIFAR-10 is AMDIM (Bachman et al., 2019), which achieves 91.2% with a model 25× larger than ours. We note that our model can be improved by incorporating extra data augmentations as well as using a more suitable base network.</p><p>Performance under different batch sizes and training steps <ref type="figure">Figure B</ref>.7 shows the linear evaluation performance under different batch sizes and training steps. The results are consistent with our observations on ImageNet, although the largest batch size of 4096 seems to cause a small degradation in performance on CIFAR-10.  <ref type="figure">Figure B</ref>.7. Linear evaluation of ResNet-50 (with adjusted stem) trained with different batch size and epochs on CIFAR-10 dataset. Each bar is averaged over 3 runs with different learning rates (0.5, 1.0, 1.5) and temperature τ = 0.5. Error bar denotes standard deviation.</p><p>Optimal temperature under different batch sizes <ref type="figure">Figure B</ref>.8 shows the linear evaluation of model trained with three different temperatures under various batch sizes. We find that when training to convergence (e.g. training epochs &gt; 300), the optimal temperature in {0.1, 0.5, 1.0} is 0.5 and seems consistent regardless of the batch sizes. However, the performance with τ = 0.1 improves as batch size increases, which may suggest a small shift of optimal temperature towards 0.1. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.10. Tuning For Other Loss Functions</head><p>The learning rate that works best for NT-Xent loss may not be a good learning rate for other loss functions. To ensure a fair comparison, we also tune hyperparameters for both margin loss and logistic loss. Specifically, we tune learning rate in {0.01, 0.1, 0.3, 0.5, 1.0} for both loss functions. We further tune the margin in {0, 0.4, 0.8, 1.6} for margin loss, the temperature in {0.1, 0.2, 0.5, 1.0} for logistic loss. For simplicity, we only consider the negatives from one augmentation view (instead of both sides), which slightly impairs performance but ensures fair comparison.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Further Comparison to Related Methods</head><p>As we have noted in the main text, most individual components of SimCLR have appeared in previous work, and the improved performance is a result of a combination of these design choices.  In below, we provide an in-depth comparison of our method to the recently proposed contrastive representation learning methods:</p><p>• DIM/AMDIM <ref type="bibr" target="#b7">(Hjelm et al., 2018;</ref><ref type="bibr">Bachman et al., 2019)</ref> achieve global-to-local/local-to-neighbor prediction by predicting the middle layer of ConvNet. The ConvNet is a ResNet that has bewen modified to place significant constraints on the receptive fields of the network (e.g. replacing many 3x3 Convs with 1x1 Convs). In our framework, we decouple the prediction task and encoder architecture, by random cropping (with resizing) and using the final representations of two augmented views for prediction, so we can use standard and more powerful ResNets. Our NT-Xent loss function leverages normalization and temperature to restrict the range of similarity scores, whereas they use a tanh function with regularization. We use a simpler data augmentation policy, while they use FastAutoAugment for their best result.</p><p>• CPC v1 and v2 <ref type="bibr" target="#b24">(Oord et al., 2018;</ref><ref type="bibr" target="#b5">Hénaff et al., 2019</ref>) define the context prediction task using a deterministic strategy to split examples into patches, and a context aggregation network (a PixelCNN) to aggregate these patches. The base encoder network sees only patches, which are considerably smaller than the original image. We decouple the prediction task and the encoder architecture, so we do not require a context aggregation network, and our encoder can look at the images of wider spectrum of resolutions. In addition, we use the NT-Xent loss function, which leverages normalization and temperature, whereas they use an unnormalized cross-entropy-based objective. We use simpler data augmentation.</p><p>• InstDisc, MoCo, PIRL <ref type="bibr">(Wu et al., 2018;</ref><ref type="bibr" target="#b4">He et al., 2019;</ref><ref type="bibr" target="#b21">Misra &amp; van der Maaten, 2019)</ref> generalize the Exemplar approach originally proposed by <ref type="bibr">Dosovitskiy et al. (2014)</ref> and leverage an explicit memory bank. We do not use a memory bank; we find that, with a larger batch size, in-batch negative example sampling suffices. We also utilize a nonlinear projection head, and use the representation before the projection head. Although we use similar types of augmentations (e.g., random crop and color distortion), we expect specific parameters may be different.</p><p>• CMC <ref type="bibr" target="#b32">(Tian et al., 2019)</ref> uses a separated network for each view, while we simply use a single network shared for all randomly augmented views. The data augmentation, projection head and loss function are also different. We use larger batch size instead of a memory bank.</p><p>• Whereas Ye et al. (2019) maximize similarity between augmented and unaugmented copies of the same image, we apply data augmentation symmetrically to both branches of our framework ( <ref type="figure">Figure 2)</ref>. We also apply a nonlinear projection on the output of base feature network, and use the representation before projection network, whereas Ye et al. <ref type="formula" target="#formula_2">(2019)</ref> use the linearly projected final hidden vector as the representation. When training with large batch sizes using multiple accelerators, we use global BN to avoid shortcuts that can greatly decrease representation quality.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3</head><label>3</label><figDesc>Figure 3. Solid rectangles are images, dashed rectangles are random crops. By randomly cropping images, we sample contrastive prediction tasks that include global to local view (B → A) or adjacent view (D → C) prediction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>and resize (c) Crop, resize (and flip) (d) Color distort. (drop) (e) Color distort. (jitter) (f) Rotate {90 • , 180 • , 270 • } (</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 .</head><label>4</label><figDesc>Illustrations of the studied data augmentation operators. Each augmentation can transform data stochastically with some internal parameters (e.g. rotation degree, noise level). Note that we only test these operators in ablation, the augmentation policy used to train our models only includes random crop (with flip and resize), color distortion, and Gaussian blur. (Original image cc-by: Von.grzanka) 2012;<ref type="bibr" target="#b5">Hénaff et al., 2019;</ref> Bachman et al., 2019), it has not been considered as a systematic way to define the contrastive prediction task. Many existing approaches define contrastive prediction tasks by changing the architecture.For example, Hjelm et al. (2018); Bachman et al. (2019) achieve global-to-local view prediction via constraining the receptive field in the network architecture, whereas Oord et al. (2018); Hénaff et al. (2019) achieve neighboring view</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 6 .</head><label>6</label><figDesc>Histograms of pixel intensities (over all channels) for different crops of two different images (i.e. two rows). The image for the first row is fromFigure 4. All axes have the same range.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 8 .</head><label>8</label><figDesc>Linear evaluation of representations with different projection heads g(·) and various dimensions of z = g(h). The representation h (before projection) is 2048-dimensional here.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 9 .</head><label>9</label><figDesc>Linear evaluation models (ResNet-50) trained with different batch size and epochs. Each bar is a single run from scratch. 10</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure B. 1 .</head><label>1</label><figDesc>Linear evaluation (top-5) of ResNet-50 trained with different batch sizes and epochs. Each bar is a single run from scratch. SeeFigure 9for top-1 accuracy.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure B. 3</head><label>3</label><figDesc>shows the eigenvalue distribution of linear projection matrix W ∈ R 2048×2048 used to compute z = W h. This matrix has relatively few large eigenvalues, indicating that it is approximately low-rank.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure</head><label></label><figDesc>B.4 shows t-SNE<ref type="bibr" target="#b18">(Maaten &amp; Hinton, 2008)</ref> visualizations of h and z = g(h) for randomly selected 10 classes by our best ResNet-50 (top-1 linear evaluation 69.3%). Classes represented by h are better separated compared to z.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure B. 3 .</head><label>3</label><figDesc>Squared real eigenvalue distribution of linear projection matrix W ∈ R 2048×2048 used to compute g(h) = W h.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head></head><label></label><figDesc>z = g(h)Figure B.4. t-SNE visualizations of hidden vectors of images from a randomly selected 10 classes in the validation set.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>FigureFigure B. 5 .</head><label>5</label><figDesc>B.5 shows linear evaluation versus fine-tuning when training epochs of a ResNet-50 (using batch size of 4096) are varied from 50 to 3200 as inFigure B.2. While they are almost linearly correlated, it seems fine-tuning on a small fraction of labels benefits more from training longer. Top-1 accuracy of models trained in different epochs (fromFigure B.2), under linear evaluation and fine-tuning.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Figure</head><label></label><figDesc>B.6 shows shows linear evaluation versus fine-tuning for different architectures of choice. Top-1 accuracy of different architectures under linear evaluation and fine-tuning.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head></head><label></label><figDesc>Training epochs &gt; 300 Figure B.8. Linear evaluation of the model (ResNet-50) trained with three temperatures on different batch sizes on CIFAR-10. Each bar is averaged over multiple runs with different learning rates and total train epochs. Error bar denotes standard deviation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 .</head><label>2</label><figDesc>Negative loss functions and their gradients. All input vectors, i.e. u, v + , v − , are 2 normalized. NT-Xent is an abbreviation for "Normalized Temperature-scaled Cross Entropy". Different loss functions impose different weightings of positive and negative examples.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 .</head><label>3</label><figDesc>Accuracy of training additional MLPs on different representations to predict the transformation applied. Other than crop and color augmentation, we additionally and independently add rotation (one of {0 • , 90 • , 180 • , 270 • }), Gaussian noise, and Sobel filtering transformation during the pretraining for the last three rows. Both h and g(h) are of the same dimensionality, i.e. 2048. be found in Appendix B.4.</figDesc><table><row><cell>What to predict?</cell><cell>Random guess</cell><cell cols="2">Representation h g(h)</cell></row><row><cell>Color vs grayscale</cell><cell>80</cell><cell>99.3</cell><cell>97.4</cell></row><row><cell>Rotation</cell><cell>25</cell><cell>67.6</cell><cell>25.6</cell></row><row><cell>Orig. vs corrupted</cell><cell>50</cell><cell>99.5</cell><cell>59.6</cell></row><row><cell>Orig. vs Sobel filtered</cell><cell>50</cell><cell>96.6</cell><cell>56.3</cell></row><row><cell cols="2">5. Loss Functions and Batch Size</cell><cell></cell><cell></cell></row><row><cell cols="4">5.1. Normalized cross entropy loss with adjustable</cell></row><row><cell cols="3">temperature works better than alternatives</cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5 .</head><label>5</label><figDesc>Table 4. Linear evaluation (top-1) for models trained with different loss functions. "sh" means using semi-hard negative mining. Linear evaluation for models trained with different choices of 2 norm and temperature τ for NT-Xent loss. The contrastive distribution is over 4096 examples.</figDesc><table><row><cell></cell><cell cols="10">Margin NT-Logi. Margin (sh) NT-Logi.(sh) NT-Xent</cell></row><row><cell></cell><cell>50.9</cell><cell></cell><cell>51.6</cell><cell></cell><cell cols="2">57.5</cell><cell></cell><cell>57.9</cell><cell></cell><cell>63.9</cell></row><row><cell></cell><cell cols="2">2 norm?</cell><cell>τ</cell><cell></cell><cell cols="6">Entropy Contrastive acc. Top 1</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">0.05</cell><cell>1.0</cell><cell></cell><cell cols="2">90.5</cell><cell></cell><cell>59.7</cell></row><row><cell></cell><cell cols="2">Yes</cell><cell cols="2">0.1 0.5</cell><cell>4.5 8.2</cell><cell></cell><cell cols="2">87.8 68.2</cell><cell></cell><cell>64.4 60.7</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">1</cell><cell>8.3</cell><cell></cell><cell cols="2">59.1</cell><cell></cell><cell>58.0</cell></row><row><cell></cell><cell cols="2">No</cell><cell cols="2">10 100</cell><cell>0.5 0.5</cell><cell></cell><cell cols="2">91.7 92.1</cell><cell></cell><cell>57.2 57.0</cell></row><row><cell></cell><cell>70.0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>67.5</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>65.0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>62.5</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Top 1</cell><cell>60.0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Batch size</cell></row><row><cell></cell><cell>57.5</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>256</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>512</cell></row><row><cell></cell><cell>55.0</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>1024</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>2048</cell></row><row><cell></cell><cell>52.5</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>4096</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>8192</cell></row><row><cell></cell><cell>50.0</cell><cell>100</cell><cell>200</cell><cell>300</cell><cell>400</cell><cell>500</cell><cell>600</cell><cell>700</cell><cell>800</cell><cell>900 1000</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="3">Training epochs</cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 7 .</head><label>7</label><figDesc>ImageNet accuracy of models trained with few labels. supervised learning<ref type="bibr" target="#b1">(Goyal et al., 2017)</ref>, in contrastive learning, larger batch sizes provide more negative examples, facilitating convergence (i.e. taking fewer epochs and steps for a given accuracy). Training longer also provides more negative examples, improving the results. In Appendix B.1, results with even longer training steps are provided.6. Comparison with State-of-the-artIn this subsection, similar to<ref type="bibr" target="#b12">Kolesnikov et al. (2019)</ref>;<ref type="bibr" target="#b4">He et al. (2019)</ref>, we use ResNet-50 in 3 different hidden layer widths (width multipliers of 1×, 2×, and 4×). For better convergence, our models here are trained for 1000 epochs.Table 8. Comparison of transfer learning performance of our self-supervised approach with supervised baselines across 12 natural image classification datasets, for ResNet-50 (4×) models pretrained on ImageNet. Results not significantly worse than the best (p &gt; 0.05, permutation test) are shown in bold. See Appendix B.8 for experimental details and results with standard ResNet-50.</figDesc><table><row><cell>Method</cell><cell cols="2">Architecture</cell><cell cols="3">Param (M) Top 1 Top 5</cell></row><row><cell cols="2">Methods using ResNet-50:</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Local Agg.</cell><cell cols="2">ResNet-50</cell><cell></cell><cell>24</cell><cell>60.2</cell><cell>-</cell></row><row><cell>MoCo</cell><cell cols="2">ResNet-50</cell><cell></cell><cell>24</cell><cell>60.6</cell><cell>-</cell></row><row><cell>PIRL</cell><cell cols="2">ResNet-50</cell><cell></cell><cell>24</cell><cell>63.6</cell><cell>-</cell></row><row><cell>CPC v2</cell><cell cols="2">ResNet-50</cell><cell></cell><cell>24</cell><cell>63.8</cell><cell>85.3</cell></row><row><cell cols="3">SimCLR (ours) ResNet-50</cell><cell></cell><cell>24</cell><cell>69.3</cell><cell>89.0</cell></row><row><cell cols="4">Methods using other architectures:</cell><cell></cell></row><row><cell>Rotation</cell><cell cols="3">RevNet-50 (4×)</cell><cell>86</cell><cell>55.4</cell><cell>-</cell></row><row><cell>BigBiGAN</cell><cell cols="3">RevNet-50 (4×)</cell><cell>86</cell><cell>61.3</cell><cell>81.9</cell></row><row><cell>AMDIM</cell><cell cols="2">Custom-ResNet</cell><cell cols="2">626</cell><cell>68.1</cell><cell>-</cell></row><row><cell>CMC</cell><cell cols="2">ResNet-50 (2×)</cell><cell cols="2">188</cell><cell>68.4</cell><cell>88.2</cell></row><row><cell>MoCo</cell><cell cols="2">ResNet-50 (4×)</cell><cell cols="2">375</cell><cell>68.6</cell><cell>-</cell></row><row><cell>CPC v2</cell><cell cols="2">ResNet-161 ( * )</cell><cell cols="2">305</cell><cell>71.5</cell><cell>90.1</cell></row><row><cell cols="3">SimCLR (ours) ResNet-50 (2×)</cell><cell></cell><cell>94</cell><cell>74.2</cell><cell>92.0</cell></row><row><cell cols="3">SimCLR (ours) ResNet-50 (4×)</cell><cell cols="2">375</cell><cell>76.5</cell><cell>93.2</cell></row><row><cell cols="6">Table 6. ImageNet accuracies of linear classifiers trained on repre-</cell></row><row><cell cols="6">sentations learned with different self-supervised methods.</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Label fraction</cell></row><row><cell>Method</cell><cell></cell><cell cols="3">Architecture</cell><cell>1%</cell><cell>10%</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Top 5</cell></row><row><cell cols="2">Supervised baseline</cell><cell cols="2">ResNet-50</cell><cell></cell><cell>48.4</cell><cell>80.4</cell></row><row><cell cols="5">Methods using other label-propagation:</cell></row><row><cell>Pseudo-label</cell><cell></cell><cell cols="2">ResNet-50</cell><cell></cell><cell>51.6</cell><cell>82.4</cell></row><row><cell cols="2">VAT+Entropy Min.</cell><cell cols="2">ResNet-50</cell><cell></cell><cell>47.0</cell><cell>83.4</cell></row><row><cell cols="2">UDA (w. RandAug)</cell><cell cols="2">ResNet-50</cell><cell></cell><cell>-</cell><cell>88.5</cell></row><row><cell cols="4">FixMatch (w. RandAug) ResNet-50</cell><cell></cell><cell>-</cell><cell>89.1</cell></row><row><cell cols="5">S4L (Rot+VAT+En. M.) ResNet-50 (4×)</cell><cell>-</cell><cell>91.2</cell></row><row><cell cols="5">Methods using representation learning only:</cell></row><row><cell>InstDisc</cell><cell></cell><cell cols="2">ResNet-50</cell><cell></cell><cell>39.2</cell><cell>77.4</cell></row><row><cell>BigBiGAN</cell><cell></cell><cell cols="4">RevNet-50 (4×) 55.2</cell><cell>78.8</cell></row><row><cell>PIRL</cell><cell></cell><cell cols="2">ResNet-50</cell><cell></cell><cell>57.2</cell><cell>83.8</cell></row><row><cell>CPC v2</cell><cell></cell><cell cols="3">ResNet-161( * )</cell><cell>77.9</cell><cell>91.2</cell></row><row><cell>SimCLR (ours)</cell><cell></cell><cell cols="2">ResNet-50</cell><cell></cell><cell>75.5</cell><cell>87.8</cell></row><row><cell>SimCLR (ours)</cell><cell></cell><cell cols="4">ResNet-50 (2×) 83.0</cell><cell>91.2</cell></row><row><cell>SimCLR (ours)</cell><cell></cell><cell cols="4">ResNet-50 (4×) 85.8</cell><cell>92.6</cell></row></table><note>Linear evaluation. Table 6 compares our results with previ- ous approaches (Zhuang et al., 2019; He et al., 2019; Misra &amp; van der Maaten, 2019; Hénaff et al., 2019; Kolesnikov et al., 2019; Donahue &amp; Simonyan, 2019; Bachman et al.,</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 7</head><label>7</label><figDesc></figDesc><table /><note>shows the comparisons of our results against recent methods (Zhai et al., 2019; Xie et al., 2019; Sohn et al., 2020; Wu et al., 2018; Donahue &amp; Simonyan, 2019; Misra &amp; van der Maaten, 2019; Hénaff et al., 2019). The supervised baseline from (Zhai et al., 2019) is strong due to intensive search of hyper-parameters (including augmentation). Again, our approach significantly improves over state-of-the-art with both 1% and 10% of the labels. Interestingly, fine-tuning our pretrained ResNet-50 (2×, 4×) on full ImageNet are also significantly better then training from scratch (up to 2%, see Appendix B.2).</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head></head><label></label><figDesc>Chen, T., Sun, Y., Shi, Y., and Hong, L. On sampling strategies for neural network-based collaborative filtering. In Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pp. 767-776, 2017.Chen, T., Zhai, X., Ritter, M., Lucic, M., and Houlsby, N.Selfsupervised gans via auxiliary rotation loss. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pp. 12154-12163, 2019. Wu, Z., Xiong, Y., Yu, S. X., and Lin, D. Unsupervised feature learning via non-parametric instance discrimination. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pp. 3733-3742, 2018. Xiao, J., Hays, J., Ehinger, K. A., Oliva, A., and Torralba, A. Sun database: Large-scale scene recognition from abbey to zoo. In</figDesc><table><row><cell>IEEE Conference on Computer Vision and Pattern Recognition</cell><cell></cell></row><row><cell>(CVPR), pp. 3485-3492. IEEE, 2010.</cell><cell></cell></row><row><cell>Xie, Q., Dai, Z., Hovy, E., Luong, M.-T., and Le, Q. V. Unsu-pervised data augmentation. arXiv preprint arXiv:1904.12848, 2019.</cell><cell>Cimpoi, M., Maji, S., Kokkinos, I., Mohamed, S., and Vedaldi, A. Describing textures in the wild. In IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pp. 3606-</cell></row><row><cell>Ye, M., Zhang, X., Yuen, P. C., and Chang, S.-F. Unsupervised</cell><cell>3613. IEEE, 2014.</cell></row><row><cell>embedding learning via invariant and spreading instance feature. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pp. 6210-6219, 2019.</cell><cell>Cubuk, E. D., Zoph, B., Mane, D., Vasudevan, V., and Le, Q. V. Autoaugment: Learning augmentation strategies from data. In Proceedings of the IEEE conference on computer vision and</cell></row><row><cell>You, Y., Gitman, I., and Ginsburg, B. Large batch training of con-</cell><cell>pattern recognition, pp. 113-123, 2019.</cell></row><row><cell>volutional networks. arXiv preprint arXiv:1708.03888, 2017.</cell><cell></cell></row><row><cell></cell><cell>DeVries, T. and Taylor, G. W. Improved regularization of</cell></row><row><cell></cell><cell>convolutional neural networks with cutout. arXiv preprint</cell></row><row><cell></cell><cell>arXiv:1708.04552, 2017.</cell></row><row><cell></cell><cell>1422-1430, 2015.</cell></row><row><cell></cell><cell>Donahue, J. and Simonyan, K. Large scale adversarial representa-</cell></row><row><cell></cell><cell>tion learning. In Advances in Neural Information Processing</cell></row><row><cell></cell><cell>Systems, pp. 10541-10551, 2019.</cell></row><row><cell></cell><cell>Donahue, J., Jia, Y., Vinyals, O., Hoffman, J., Zhang, N., Tzeng, E.,</cell></row><row><cell></cell><cell>and Darrell, T. Decaf: A deep convolutional activation feature</cell></row><row><cell></cell><cell>for generic visual recognition. In International Conference on</cell></row><row><cell></cell><cell>Machine Learning, pp. 647-655, 2014.</cell></row><row><cell></cell><cell>Dosovitskiy, A., Springenberg, J. T., Riedmiller, M., and Brox, T.</cell></row><row><cell></cell><cell>Discriminative unsupervised feature learning with convolutional</cell></row><row><cell></cell><cell>neural networks. In Advances in neural information processing</cell></row><row><cell></cell><cell>systems, pp. 766-774, 2014.</cell></row><row><cell></cell><cell>Everingham, M., Van Gool, L., Williams, C. K., Winn, J., and</cell></row><row><cell></cell><cell>Zisserman, A. The pascal visual object classes (voc) challenge.</cell></row><row><cell>:161-163, 1992.</cell><cell>International Journal of Computer Vision, 88(2):303-338, 2010.</cell></row><row><cell>Berg, T., Liu, J., Lee, S. W., Alexander, M. L., Jacobs, D. W., and Belhumeur, P. N. Birdsnap: Large-scale fine-grained visual categorization of birds. In IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pp. 2019-2026. IEEE, 2014.</cell><cell>Fei-Fei, L., Fergus, R., and Perona, P. Learning generative visual models from few training examples: An incremental bayesian approach tested on 101 object categories. In IEEE Conference on Computer Vision and Pattern Recognition (CVPR) Workshop on Generative-Model Based Vision, 2004.</cell></row><row><cell>Berthelot, D., Carlini, N., Goodfellow, I., Papernot, N., Oliver,</cell><cell>Gidaris, S., Singh, P., and Komodakis, N. Unsupervised represen-</cell></row><row><cell>A., and Raffel, C. A. Mixmatch: A holistic approach to semi-</cell><cell>tation learning by predicting image rotations. arXiv preprint</cell></row><row><cell>supervised learning. In Advances in Neural Information Pro-</cell><cell>arXiv:1803.07728, 2018.</cell></row><row><cell>cessing Systems, pp. 5050-5060, 2019.</cell><cell></cell></row></table><note>Bossard, L., Guillaumin, M., and Van Gool, L. Food-101-mining discriminative components with random forests. In European conference on computer vision, pp. 446-461. Springer, 2014.Doersch, C. and Zisserman, A. Multi-task self-supervised visual learning. In Proceedings of the IEEE International Conference on Computer Vision, pp. 2051-2060, 2017. Doersch, C., Gupta, A., and Efros, A. A. Unsupervised visual representation learning by context prediction. In Proceedings of the IEEE International Conference on Computer Vision, pp.Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde- Farley, D., Ozair, S., Courville, A., and Bengio, Y. Generative adversarial nets. In Advances in neural information processing systems, pp. 2672-2680, 2014.Zhai, X., Oliver, A., Kolesnikov, A., and Beyer, L. S4l: Self- supervised semi-supervised learning. In The IEEE International Conference on Computer Vision (ICCV), October 2019. Zhang, R., Isola, P., and Efros, A. A. Colorful image coloriza- tion. In European conference on computer vision, pp. 649-666. Springer, 2016. Zhuang, C., Zhai, A. L., and Yamins, D. Local aggregation for unsupervised learning of visual embeddings. In Proceedings of the IEEE International Conference on Computer Vision, pp. 6002-6012, 2019.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head></head><label></label><figDesc>BatchSize/256 in the linear scaling case, but the learning rate is the same under both scaling methods when batch size of 4096 (our default batch size). A comparison is presented inTable B.1, where we observe that square root learning rate scaling improves the performance for models trained with small batch sizes and in smaller number of epochs.Table B.1. Linear evaluation (top-1) under different batch sizes and training epochs. On the left side of slash sign are models trained with linear LR scaling, and on the right are models trained with square root LR scaling. The result is bolded if it is more than 0.5% better. Square root LR scaling works better for smaller batch size trained in fewer epochs (with LARS optimizer).</figDesc><table><row><cell></cell><cell>when training</cell></row><row><cell cols="2">with different batch sizes. Although linear learning rate scaling is popular with SGD/Momentum optimizer, we find a</cell></row><row><cell cols="2">square root learning rate scaling is more desirable with LARS optimizer. With square root learning rate scaling, we have LearningRate = 0.075 × √ BatchSize, instead of LearningRate = 0.3 × Batch size \ Epochs 100 200 400 800</cell></row><row><cell>256</cell><cell>57.5 / 62.8 61.9 / 64.3 64.7 / 65.7 66.6 / 66.5</cell></row><row><cell>512</cell><cell>60.7 / 63.8 64.0 / 65.6 66.2 / 66.7 67.8 / 67.4</cell></row><row><cell>1024</cell><cell>62.8 / 64.3 65.3 / 66.1 67.2 / 67.2 68.5 / 68.3</cell></row><row><cell>2048</cell><cell>64.0 / 64.7 66.1 / 66.8 68.1 / 67.9 68.9 / 68.8</cell></row><row><cell>4096</cell><cell>64.6 / 64.5 66.5 / 66.8 68.2 / 68.0 68.9 / 69.1</cell></row><row><cell>8192</cell><cell>64.8 / 64.8 66.6 / 67.0 67.8 / 68.3 69.0 / 69.1</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head>Table B</head><label>B</label><figDesc></figDesc><table><row><cell cols="7">.2 shows ImageNet accuracy obtained by fine-tuning the SimCLR model (see Appendix B.5 for the details of</cell></row><row><cell cols="7">fine-tuning procedure). Interestingly, when fine-tuned on full (100%) ImageNet training set, our ResNet (4×) model</cell></row><row><cell cols="7">achieves 80.4% top-1 / 95.4% top-5 13 , which is significantly better than that (78.4% top-1 / 94.2% top-5) of training from</cell></row><row><cell cols="7">scratch using the same set of augmentations (i.e. random crop and horizontal flip). For ResNet-50 (2×), fine-tuning our</cell></row><row><cell cols="7">pre-trained ResNet-50 (2×) is also better than training from scratch (77.8% top-1 / 93.9% top-5). There is no improvement</cell></row><row><cell>from fine-tuning for ResNet-50.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">Label fraction</cell><cell></cell><cell></cell></row><row><cell>Architecture</cell><cell>1%</cell><cell></cell><cell cols="2">10%</cell><cell cols="2">100%</cell></row><row><cell></cell><cell cols="6">Top 1 Top 5 Top 1 Top 5 Top 1 Top 5</cell></row><row><cell>ResNet-50</cell><cell>49.4</cell><cell>76.6</cell><cell>66.1</cell><cell>88.1</cell><cell>76.0</cell><cell>93.1</cell></row><row><cell cols="2">ResNet-50 (2×) 59.4</cell><cell>83.7</cell><cell>71.8</cell><cell>91.2</cell><cell>79.1</cell><cell>94.8</cell></row><row><cell cols="2">ResNet-50 (4×) 64.1</cell><cell>86.6</cell><cell>74.8</cell><cell>92.8</cell><cell>80.4</cell><cell>95.4</cell></row></table><note>Table B.2. Classification accuracy obtained by fine-tuning the SimCLR (which is pretrained with broader data augmentations) on 1%, 10% and full of ImageNet. As a reference, our ResNet-50 (4×) trained from scratch on 100% labels achieves 78.4% top-1 / 94.2% top-5.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12"><head></head><label></label><figDesc>Table B.3. Top-1 accuracy of supervised models trained longer under various data augmentation procedures (from the same set of data augmentations for contrastive learning).</figDesc><table><row><cell>Model</cell><cell>Training epochs</cell><cell cols="3">Top 1 Crop +Color +Color+Blur</cell></row><row><cell></cell><cell>90</cell><cell>76.5</cell><cell>75.6</cell><cell>75.3</cell></row><row><cell>ResNet-50</cell><cell>500</cell><cell>76.2</cell><cell>76.5</cell><cell>76.7</cell></row><row><cell></cell><cell>1000</cell><cell>75.8</cell><cell>75.2</cell><cell>76.4</cell></row><row><cell></cell><cell>90</cell><cell>78.4</cell><cell>78.9</cell><cell>78.7</cell></row><row><cell>ResNet-50 (4×)</cell><cell>500</cell><cell>78.3</cell><cell>78.4</cell><cell>78.5</cell></row><row><cell></cell><cell>1000</cell><cell>77.9</cell><cell>78.2</cell><cell>78.3</cell></row><row><cell cols="2">B.4. Understanding The Non-Linear Projection Head</cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13"><head>Table B .</head><label>B</label><figDesc>4 shows the comparisons of top-1 accuracy for different methods for semi-supervised learning. Our models significantly improve state-of-the-art.Table B.4. ImageNet top-1 accuracy of models trained with few labels. SeeTable 7for top-5 accuracy.</figDesc><table><row><cell></cell><cell></cell><cell cols="2">Label fraction</cell></row><row><cell>Method</cell><cell>Architecture</cell><cell>1%</cell><cell>10%</cell></row><row><cell></cell><cell></cell><cell cols="2">Top 1</cell></row><row><cell>Supervised baseline</cell><cell>ResNet-50</cell><cell>25.4</cell><cell>56.4</cell></row><row><cell cols="2">Methods using label-propagation:</cell><cell></cell><cell></cell></row><row><cell>UDA (w. RandAug)</cell><cell>ResNet-50</cell><cell>-</cell><cell>68.8</cell></row><row><cell>FixMatch (w. RandAug)</cell><cell>ResNet-50</cell><cell>-</cell><cell>71.5</cell></row><row><cell cols="2">S4L (Rot+VAT+Ent. Min.) ResNet-50 (4×)</cell><cell>-</cell><cell>73.2</cell></row><row><cell cols="4">Methods using self-supervised representation learning only:</cell></row><row><cell>CPC v2</cell><cell>ResNet-161( * )</cell><cell>52.7</cell><cell>73.1</cell></row><row><cell>SimCLR (ours)</cell><cell>ResNet-50</cell><cell>48.3</cell><cell>65.6</cell></row><row><cell>SimCLR (ours)</cell><cell cols="2">ResNet-50 (2×) 58.5</cell><cell>71.7</cell></row><row><cell>SimCLR (ours)</cell><cell cols="2">ResNet-50 (4×) 63.0</cell><cell>74.4</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_14"><head></head><label></label><figDesc>Flowers; and the 11-point mAP metric as defined in Everingham et al. (2010) for PASCAL VOC 2007. For DTD and SUN397, the dataset creators defined multiple train/test splits; we report results only for the first split. Caltech-101 defines no train/test split, so we randomly chose 30 images per class and test on the remainder, for fair comparison with previous work (Donahue et al.</figDesc><table><row><cell>Food-101, CIFAR-10, CIFAR-100,</cell></row><row><cell>Birdsnap, SUN397, Stanford Cars, and DTD; mean per-class accuracy for FGVC Aircraft, Oxford-IIIT Pets, Caltech-101,</cell></row><row><cell>and Oxford 102</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_15"><head></head><label></label><figDesc>For top-1 accuracy, this procedure yields the same result as the exact McNemar test. The assumption of exchangeability under the null hypothesis is also valid for mean per-class accuracy, but not when computing average precision curves. Thus, we perform significance testing for a difference in accuracy on VOC 2007 rather than a difference in mAP. A caveat of this procedure is that it does not consider run-to-run variability when training the models, only variability arising from using a finite sample of images for evaluation.B.8.2. RESULTS WITH STANDARD RESNETThe ResNet-50 (4×) results shown inTable 8of the text show no clear advantage to the supervised or self-supervised models. With the narrower ResNet-50 architecture, however, supervised learning maintains a clear advantage over self-supervised learning. The supervised ResNet-50 model outperforms the self-supervised model on all datasets with linear evaluation, and most (10 of 12) datasets with fine-tuning. The weaker performance of the ResNet model compared to the ResNet (4×)</figDesc><table><row><cell cols="2">Linear evaluation:</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">SimCLR (ours) 68.4</cell><cell>90.6</cell><cell>71.6</cell><cell>37.4</cell><cell>58.8</cell><cell>50.3 50.3</cell><cell>80.5</cell><cell>74.5 83.6</cell><cell>90.3</cell><cell>91.2</cell></row><row><cell>Supervised</cell><cell>72.3</cell><cell>93.6</cell><cell>78.3</cell><cell>53.7</cell><cell>61.9</cell><cell>66.7 61.0</cell><cell>82.8</cell><cell>74.9 91.5</cell><cell>94.5</cell><cell>94.7</cell></row><row><cell>Fine-tuned:</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">SimCLR (ours) 88.2</cell><cell>97.7</cell><cell>85.9</cell><cell>75.9</cell><cell>63.5</cell><cell>91.3 88.1</cell><cell>84.1</cell><cell>73.2 89.2</cell><cell>92.1</cell><cell>97.0</cell></row><row><cell>Supervised</cell><cell>88.3</cell><cell>97.5</cell><cell>86.4</cell><cell>75.8</cell><cell>64.3</cell><cell>92.1 86.0</cell><cell>85.0</cell><cell>74.6 92.1</cell><cell>93.3</cell><cell>97.6</cell></row><row><cell>Random init</cell><cell>86.9</cell><cell>95.9</cell><cell>80.2</cell><cell>76.1</cell><cell>53.6</cell><cell>91.4 85.9</cell><cell>67.3</cell><cell>64.8 81.5</cell><cell>72.6</cell><cell>92.0</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_17"><head></head><label></label><figDesc>Table C.1 provides a high-level comparison of the design choices of our method with those of previous methods. Compared with previous work, our design choices are generally simpler.</figDesc><table><row><cell>Model</cell><cell cols="2">Data Augmentation Base Encoder</cell><cell cols="2">Projection Head Loss</cell><cell cols="2">Batch Size Train Epochs</cell></row><row><cell>CPC v2</cell><cell>Custom</cell><cell cols="2">ResNet-161 (modified) PixelCNN</cell><cell>Xent</cell><cell>512 #</cell><cell>∼200</cell></row><row><cell cols="2">AMDIM Fast AutoAug.</cell><cell>Custom ResNet</cell><cell cols="3">Non-linear MLP Xent w/ clip,reg 1008 #</cell><cell>150</cell></row><row><cell>CMC MoCo PIRL</cell><cell>Fast AutoAug. Crop+color Crop+color</cell><cell cols="2">ResNet-50 (2×, L+ab) Linear layer ResNet-50 (4×) Linear layer ResNet-50 (2×) Linear layer</cell><cell>Xent w/ 2, τ Xent w/ 2, τ Xent w/ 2, τ</cell><cell>156  *  256  *  1024  *</cell><cell>280 200 800</cell></row><row><cell cols="2">SimCLR Crop+color+blur</cell><cell>ResNet-50 (4×)</cell><cell cols="2">Non-linear MLP Xent w/ 2, τ</cell><cell>4096</cell><cell>1000</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_18"><head></head><label></label><figDesc>Table C.1. A high-level comparison of design choices and training setup (for best result on ImageNet) for each method. Note that descriptions provided here are general; even when they match for two methods, formulations and implementations may differ (e.g. for color augmentation). Refer to the original papers for more details. # Examples are split into multiple patches, which enlarges the effective batch size.</figDesc><table /><note>* A memory bank is employed.</note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">Google Research, Brain Team. Correspondence to: Ting Chen &lt;iamtingchen@google.com&gt;.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">Although max performance is not reached in 100 epochs, reasonable results are achieved, allowing fair and efficient ablations.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7">Training longer does not improve supervised ResNets (see Appendix B.3).</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8">Details can be found in Appendix B.10. For simplicity, we only consider the negatives from one augmentation view.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="13">It is 80.1% top-1 / 95.2% top-5 without broader augmentations for pretraining SimCLR. 14 With AutoAugment(Cubuk et al., 2019), optimal test accuracy can be achieved between 900 and 500 epochs.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="15">It is worth noting that, although CIFAR-10 images are much smaller than ImageNet images and image size does not differ among examples, cropping with resizing is still a very effective augmentation for contrastive learning.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>We would like to thank Xiaohua Zhai, Rafael Müller and Yani Ioannou for their feedback on the draft. We are also grateful for general support from Google Research teams in Toronto and elsewhere.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">A critical analysis of self-supervision, or what we can learn from a single image</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">M</forename><surname>Asano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rupprecht</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vedaldi</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1904.13132</idno>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Goyal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Dollár</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Girshick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Noordhuis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Wesolowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kyrola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tulloch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Accurate</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1706.02677</idno>
		<title level="m">Training imagenet in 1 hour</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Dimensionality reduction by learning an invariant mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hadsell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chopra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Lecun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2006 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR&apos;06)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2006" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1735" to="1742" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Deep residual learning for image recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE conference on computer vision and pattern recognition</title>
		<meeting>the IEEE conference on computer vision and pattern recognition</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="770" to="778" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Momentum contrast for unsupervised visual representation learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Girshick</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1911.05722</idno>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">J</forename><surname>Hénaff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Razavi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Doersch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Eslami</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">V</forename><surname>Oord</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1905.09272</idno>
		<title level="m">Data-efficient image recognition with contrastive predictive coding</title>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A fast learning algorithm for deep belief nets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osindero</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-W</forename><surname>Teh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural computation</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1527" to="1554" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Learning deep representations by mutual information estimation and maximization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">D</forename><surname>Hjelm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fedorov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lavoie-Marchildon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Grewal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Bachman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Trischler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1808.06670</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Some improvements on deep convolutional neural network based image classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">G</forename><surname>Howard</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1312.5402</idno>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Batch normalization: Accelerating deep network training by reducing internal covariate shift</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ioffe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Szegedy</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1502.03167</idno>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Invariant information clustering for unsupervised image classification and segmentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Ji</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Henriques</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vedaldi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Conference on Computer Vision</title>
		<meeting>the IEEE International Conference on Computer Vision</meeting>
		<imprint>
			<date type="published" when="2019" />
			<biblScope unit="page" from="9865" to="9874" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Welling</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1312.6114</idno>
		<title level="m">Auto-encoding variational bayes</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Revisiting self-supervised visual representation learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kolesnikov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Beyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE conference on Computer Vision and Pattern Recognition</title>
		<meeting>the IEEE conference on Computer Vision and Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="2019" />
			<biblScope unit="page" from="1920" to="1929" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Do better ImageNet models transfer better?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kornblith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shlens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><forename type="middle">V</forename><surname>Le</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE conference on computer vision and pattern recognition</title>
		<meeting>the IEEE conference on computer vision and pattern recognition</meeting>
		<imprint>
			<date type="published" when="2019" />
			<biblScope unit="page" from="2661" to="2671" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Collecting a large-scale dataset of fine-grained cars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Krause</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Fei-Fei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Second Workshop on Fine-Grained Visual Categorization</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Learning multiple layers of features from tiny images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Krizhevsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Hinton</surname></persName>
		</author>
		<ptr target="https://www.cs.toronto.edu/~kriz/learning-features-2009-TR.pdf" />
		<imprint>
			<date type="published" when="2009" />
		</imprint>
		<respStmt>
			<orgName>University of Toronto</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Imagenet classification with deep convolutional neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Krizhevsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1097" to="1105" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Loshchilov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Hutter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sgdr</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1608.03983</idno>
		<title level="m">Stochastic gradient descent with warm restarts</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Journal of machine learning research</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">V</forename><surname>Maaten</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Hinton</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008-11" />
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="2579" to="2605" />
		</imprint>
	</monogr>
	<note>Visualizing data using t-sne</note>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Fine-grained visual classification of aircraft</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Maji</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kannala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Rahtu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Blaschko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vedaldi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Efficient estimation of word representations in vector space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mikolov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dean</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1301.3781</idno>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Self-supervised learning of pretext-invariant representations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Misra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Van Der Maaten</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1912.01991</idno>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Automated flower classification over a large number of classes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-E</forename><surname>Nilsback</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zisserman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision, Graphics &amp; Image Processing</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="722" to="729" />
		</imprint>
	</monogr>
	<note>ICVGIP&apos;08. Sixth Indian Conference on</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Unsupervised learning of visual representations by solving jigsaw puzzles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Noroozi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Favaro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">European Conference on Computer Vision</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="69" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Oord</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Vinyals</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1807.03748</idno>
		<title level="m">Representation learning with contrastive predictive coding</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Cats and dogs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">M</forename><surname>Parkhi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vedaldi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zisserman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Jawahar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Conference on Computer Vision and Pattern Recognition (CVPR)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="3498" to="3505" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Imagenet large scale visual recognition challenge</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Russakovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Krause</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Satheesh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Karpathy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Khosla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bernstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International journal of computer vision</title>
		<imprint>
			<biblScope unit="volume">115</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="211" to="252" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Facenet: A unified embedding for face recognition and clustering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Schroff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kalenichenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Philbin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE conference on computer vision and pattern recognition</title>
		<meeting>the IEEE conference on computer vision and pattern recognition</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="815" to="823" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Simonyan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zisserman</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1409.1556</idno>
		<title level="m">Very deep convolutional networks for large-scale image recognition</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Improved deep metric learning with multi-class n-pair loss objective</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Sohn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="1857" to="1865" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Sohn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Berthelot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-L</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Carlini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">D</forename><surname>Cubuk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kurakin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Raffel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Fixmatch</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2001.07685</idno>
		<title level="m">Simplifying semi-supervised learning with consistency and confidence</title>
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Going deeper with convolutions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Szegedy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Sermanet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Reed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Anguelov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Erhan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Vanhoucke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rabinovich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE conference on computer vision and pattern recognition</title>
		<meeting>the IEEE conference on computer vision and pattern recognition</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Krishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Isola</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1906.05849</idno>
		<title level="m">Contrastive multiview coding</title>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">On mutual information maximization for representation learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tschannen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Djolonga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">K</forename><surname>Rubenstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gelly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lucic</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1907.13625</idno>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
