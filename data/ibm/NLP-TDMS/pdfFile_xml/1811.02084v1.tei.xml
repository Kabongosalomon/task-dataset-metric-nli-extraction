<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Mesh-TensorFlow: Deep Learning for Supercomputers</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Noam</forename><surname>Shazeer</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Youlong</forename><surname>Cheng</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Niki</forename><surname>Parmar</surname></persName>
							<email>nikip@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dustin</forename><surname>Tran</surname></persName>
							<email>trandustin@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ashish</forename><surname>Vaswani</surname></persName>
							<email>avaswani@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Penporn</forename><surname>Koanantakool</surname></persName>
							<email>penporn@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Hawkins</surname></persName>
							<email>phawkins@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hyoukjoong</forename><surname>Lee</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mingsheng</forename><surname>Hong</surname></persName>
							<email>hongm@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cliff</forename><surname>Young</surname></persName>
							<email>cliffy@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ryan</forename><surname>Sepassi</surname></persName>
							<email>rsepassi@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Blake</forename><surname>Hechtman</surname></persName>
							<email>blakehechtman@google.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Google</forename><surname>Brain</surname></persName>
						</author>
						<title level="a" type="main">Mesh-TensorFlow: Deep Learning for Supercomputers</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-26T07:33+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Batch-splitting (data-parallelism) is the dominant distributed Deep Neural Network (DNN) training strategy, due to its universal applicability and its amenability to Single-Program-Multiple-Data (SPMD) programming. However, batch-splitting suffers from problems including the inability to train very large models (due to memory constraints), high latency, and inefficiency at small batch sizes. All of these can be solved by more general distribution strategies (model-parallelism). Unfortunately, efficient model-parallel algorithms tend to be complicated to discover, describe, and to implement, particularly on large clusters. We introduce Mesh-TensorFlow, a language for specifying a general class of distributed tensor computations. Where data-parallelism can be viewed as splitting tensors and operations along the "batch" dimension, in Mesh-TensorFlow, the user can specify any tensor-dimensions to be split across any dimensions of a multi-dimensional mesh of processors. A Mesh-TensorFlow graph compiles into a SPMD program consisting of parallel operations coupled with collective communication primitives such as Allreduce. We use Mesh-TensorFlow to implement an efficient data-parallel, model-parallel version of the Transformer [21] sequence-to-sequence model. Using TPU meshes of up to 512 cores, we train Transformer models with up to 5 billion parameters, surpassing state of the art results on WMT'14 Englishto-French translation task and the one-billion-word language modeling benchmark. Mesh-Tensorflow is available at https://github.com/tensorflow/mesh .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Batch-splitting (data-parallelism) is the dominant distributed Deep Neural Network (DNN) training strategy, due to its universal applicability and its amenability to Single-Program-Multiple-Data (SPMD) programming. However, batch-splitting suffers from several major problems when training very large models. The memory required to store parameters and/or activations and the time necessary to synchronize parameters can make purely-data-parallel algorithms impossible or inefficient. Different distribution strategies (model-parallelism [9]) can solve these issues, but specifying these strategies can be complicated, and the current MIMD implementations generate very large programs which can be difficult to compile and to optimize.</p><p>We solve this problem by introducing Mesh-TensorFlow, a language for specifying a general class of distributed tensor computations. Where data-parallelism can be viewed as splitting tensors and operations along the "batch" dimension, in Mesh-TensorFlow, the user can specify any tensordimensions to be split across any dimensions of a multi-dimensional mesh of processors. A Mesh-TensorFlow graph compiles into a SPMD program consisting of parallel operations coupled with 32nd</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>collective communication primitives such as Allreduce. We use Mesh-TensorFlow to implement an efficient data-parallel, model-parallel version of the Transformer <ref type="bibr" target="#b20">[21]</ref> sequence-to-sequence model. Using TPU meshes of up to 512 cores, we train Transformer models with up to 5 billion parameters, surpassing state-of-the-art results on WMT'14 English-to-French translation task and the one-billion-word Language modeling benchmark.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Hardware Assumptions</head><p>While much work deals with heterogeneous and/or unreliable hardware, we focus on clusters of identical, reliable processors, each with a local memory. We define a mesh as an n-dimensional array of such processors. The mesh is only a naming abstraction and does not imply a physical network topology. As such, different meshes can be defined over the same set of physical processors. For example, a 512-core TPU cluster with a 16x16x2 toroidal network interconnect could be represented by a 3-dimensional mesh with shape <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b1">2]</ref>, a two-dimensional mesh with shape <ref type="bibr">[32,</ref><ref type="bibr" target="#b15">16]</ref>, a one-dimensional mesh with shape [512], etc. The physical network topology does affect performance; particularly important is the performance of MPI Allreduce, grouped by splitting the mesh by a subset of the dimensions, which can be very efficient <ref type="bibr" target="#b4">[5]</ref>  <ref type="bibr" target="#b5">[6]</ref> if each such group is physically connected.</p><p>3 Inspiration: Single-Program-Multiple-Data (SPMD) Batch-Splitting</p><p>We first review a commonly-used variant of synchronous data-parallelism where each processor keeps an identical copy of all parameters (Algorithm 1). For each step, the batch of training examples is split into sub-batches, one for each processor. Each processor computes the forward and backward passes on its sub-batch, resulting in gradients on the model parameters. These gradients are then summed across all processors and the results broadcast to all processors (MPI-allreduce). Finally, each processor updates its own copy of the parameters.</p><p>Algorithm 1 Synchronous data-parallelism with replicated parameters. Each processor maintains a complete copy of all weights W <ref type="bibr">(t)</ref> . The batch b <ref type="bibr">(t)</ref> of training examples for timestep t is partitioned among the set P of processors: b (t) =˙ p∈P b (t) p . Below is the computation performed on one processor p ∈ P . <ref type="bibr">1:</ref> Compute partial parameter gradients ∇Q(W (t) , b This algorithm is typically implemented using Single-Program-Multiple-Data (SPMD) programming, with every processor running the same program of local operations and MPI-allreduce primitives.</p><p>One way to see this algorithm is that every tensor and every operation in the computation is either split across all processors (if it has a "batch" dimension), or fully replicated across all processors (if it does not have a "batch" dimension). Operations which reduce out the "batch" dimension require an additional MPI-allreduce to produce the correct result. We can describe this as splitting the computation across the "batch" dimension. Mesh-TensorFlow generalizes this idea to splitting computations across arbitrary dimensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Mesh-TensorFlow: Beyond Batch Splitting</head><p>Mesh-Tensorflow generalizes from the batch-splitting algorithm described in section 3 to allow for splitting across different Tensor dimensions. The similarities are as follows:</p><p>• Each tensor in the computation is represented by one (not-necessarily-distinct) slice of the tensor on each processor. • Each operation in the computation is implemented as one operation on each processor. Most operations require no communication, with each processor producing its slice of the output from its slices of the inputs. Some operations additionally require collective communication primitives such as MPI-allreduce.</p><p>• Based on the above, the computation can be implemented as a SPMD program.</p><p>The new elements in Mesh-TensorFlow are as follows:</p><p>• Tensors have named dimensions. This allows for the idea of a logical dimension (like "batch") which will be split in the same way for different tensors and operations. It is illegal for a tensor to have two identically-named dimensions.</p><p>• Rather than an unstructured set of processors, Mesh-Tensorflow allows for an n-dimensional mesh of processors (section 2). The mesh also has named dimensions.</p><p>• A global "computation layout" is a partial map from tensor-dimension to mesh-dimension specifying which tensor-dimensions are split across which dimensions of the processormesh. For example, batch-splitting (data-parallelism) would be expressed by using a one-dimensional mesh with dimension "all_processors" and using the computation layout [("batch", "all_processors")]. This means that all tensors with a "batch" dimension are split along that dimension across all processors, while all other tensors are fully replicated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Tensor Representations</head><p>A tensor is represented as one slice of the tensor per processor. The layout of a tensor is an injective partial map from the tensor's dimensions to dimensions of the mesh, and is computed as the restriction of the global computation layout to that tensor's dimensions. It is illegal for two dimensions of the same tensor to map to the same mesh dimension. If a tensor's layout is empty, it is fully replicated on each processor. For every (tensor-dimension, mesh-dimension) pair in the tensor's layout, the slice on a processor is restricted along that tensor-dimension to a stripe corresponding to that processor's coordinate along that mesh-dimension. The current implementation of Mesh-TensorFlow requires the size of the tensor-dimension to be evenly divisible by the size of the mesh-dimension.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Operation Implementation</head><p>Each operation is implemented by parallel computation on every processor, and sometimes collective communication. We describe the implementations of some important operations here:</p><p>Component-wise Operations Mesh-TensorFlow supports component-wise operations where the shapes (and hence the layouts) of the input and output tensors are identical. These are trivially implemented by parallel operations on each processor to compute that processor's slice of the output from that processor's slice(s) of the input(s).</p><p>Reduction (reduce_sum(), reduce_max(), etc.) Mesh-TensorFlow supports reductions where the output dimensions are a subset of the input dimensions. These can be implemented by local reductions of each slice, followed by MPI-allreduce across any mesh dimensions corresponding to reduced-out Tensor dimensions. The allreduce operation is necessary because the local reduction only sums across a subset of the split tensor-dimension. Bandwidth-efficient implementations of allreduce exist when the processors for each group are connected in any type of tree. <ref type="bibr" target="#b4">[5]</ref>  <ref type="bibr" target="#b5">[6]</ref> Einstein Summation (matrix multiplication, etc.) Einstein-summation (einsum) notation (as defined in numpy, TensorFlow, etc.) is a way of expressing a class of operations including (batch) matrix multiplication, reductions and broadcasts, where the operation is defined by the names of the dimensions of the input and output tensors. Mesh-TensorFlow's use of named dimensions makes using einsum particularly convenient. Einsum can be defined as broadcasting all inputs to a shape consisting the union of all their dimensions, multiplying them component-wise, then reducing out all dimensions not in the specified output shape. Einsum is implemented by parallel einsum operations on each processor of that processor's input slices, followed by MPI-allreduce across any mesh dimensions corresponding to reduced-out Tensor dimensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Reshape</head><p>While reshape is simple in the non-distributed case, Mesh-TensorFlow reshape can require network communication, since the layout of the output tensor may differ from that of the input tensor. Even keeping the same dimension sizes, changing the dimension names (and hence the layout) can result in several different communication patterns: If a dimension is split in the input but not in the output, the implementation involves MPI-allgather communication across the corresponding mesh-dimension. If a dimension is split in the output but not in the input, the implementation involves no communication, just slicing on each processor. MPI-alltoall is used in the case where different dimensions in the input and the output are split across the same mesh dimension, as might be the case when switching between data-parallelism and model-parallelism for different layers of the same model, as in <ref type="bibr" target="#b19">[20]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Mesh-TensorFlow syntax</head><p>The Mesh-TensorFlow language is nearly identical to TensorFlow <ref type="bibr" target="#b15">[16]</ref>, with the familiar notions of graphs, tensors, operations, variables, devices (called meshes), and automatic gradient computation.</p><p>The principal difference is that in Mesh-TensorFlow, tensor-dimensions have a name as well as a size. The shape of each tensor is a statically-known tuple of such dimensions. Shapes are inferred automatically when possible, as they are in TensorFlow. Binary component-wise operations like addition employ implicit broadcasting in the case where the shape of one operand is a subset of the shape of the other.</p><p>The initial implementation of Mesh-TensorFlow is a Python library. The user builds a Mesh-TensorFlow graph in python, which the library "lowers" to generate part of a TensorFlow graph. As of the writing of this paper, implementations exist for generating SPMD TensorFlow code for TPUs, or MIMD code (using device placement) for multi-CPU/GPU configurations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Example: Two Fully-Connected Layers</head><p>We consider a simple example of two fully-connected layers in the middle of a neural network. The input layer x and the output layer y each have d io units, and the hidden layer h has d h units. The hidden layer also has a bias and Relu activation.</p><formula xml:id="formula_0">y = Relu(xw + bias)v<label>(1)</label></formula><p>This Mesh-TensorFlow code fragment runs these layers on a batch x of batch_size = b inputs.</p><formula xml:id="formula_1">... batch = mtf.Dimension("batch", b) io = mtf.Dimension("io", d_io) hidden = mtf.Dimension("hidden", d_h) # x.shape == [batch, io] w = mtf.get_variable("w", shape=[io, hidden]) bias = mtf.get_variable("bias", shape=[hidden]) v = mtf.get_variable("v", shape=[hidden, io]) h = mtf.relu(mtf.einsum(x, w, output_shape=[batch, hidden]) + bias) y = mtf.einsum(h, v, output_shape=[batch, io]) ...</formula><p>The code above defines only the mathematical model. We now discuss several different computation layouts. Each will produce identical results, but will have different performance characteristics. We also provide illustrations of the layouts in Appendix A.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">Data-Parallel Layout</head><p>To train the above model in data-parallel mode on a mesh of n processors, we would define:</p><formula xml:id="formula_2">mesh_shape = [("all", n)] computation_layout = [("batch", "all")]</formula><p>When the Mesh-TensorFlow graph is compiled with this layout, the parameter tensors w, v, and bias are replicated on all processors, but the activation matrices x, h, y, etc. are split across the batch dimension. For example, each processor keeps a slice of x with shape [ b n , d io ]. There is no inter-processor communication in the forward pass. However, the gradient computations for the parameters are mtf.einsum operations which reduce out the batch dimension, and hence produce Allreduce operations when they are compiled. The number of values allreduced per processor is equal to the number of parameters, approximately 2d io d h .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2">Model-Parallel Layout</head><p>Rather than splitting the batch, we can split the units in the hidden layer:</p><formula xml:id="formula_3">mesh_shape = [("all", n)] computation_layout = [("hidden", "all")]</formula><p>When the Mesh-TensorFlow graph is compiled with this layout, the input and output layers x, and y are replicated on all processors, but the hidden activations h and the parameter tensors w, v and bias are all split across the hidden dimension. For example, each processor keeps a slice of w with shape</p><formula xml:id="formula_4">[d io , d h n ] and a slice of v with shape [ d h n , d io ]</formula><p>. When computing y, the split hidden dimension is reduced out. Consequently, the results of that computation get allreduced across all processors. A similar allreduce happens in computing the gradients on x. In all, the number of values allreduced per processor is 2bd io .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.3">Data-Parallel, Model-Parallel Layouts</head><p>On a two-dimensional mesh of r × c processors, we can employ both data-parallelism and modelparallelism: mesh_shape = [("rows", r), ("cols", c)] computation_layout = [("batch", "rows"), ("hidden", "cols")]</p><p>In this layout, each row of processors handles a fraction of the batch, while each column of processors handles a fraction of the hidden units. Each processor keeps a slice of x with shape [ b r , d io ], with processors in the same row having identical slices. The hidden activation tensor h is tiled in two dimensions, with each processor keeping a slice with shape [ b r , d h c ]. This layout causes partitioned-allreduce operations in several places. For example, in computing y, we reduce out the hidden dimension, which is split over the cols dimension of the mesh, so the results of the operation need to be summed up by processor-column, as opposed to over the entire mesh. In all, the number of values allreduced per processor is 2bdio</p><formula xml:id="formula_5">r + 2diod h c</formula><p>If we have a three-dimensional mesh of processors, we can even split the computation in three dimensions: mesh_shape = [("rows", r), ("cols", c), ("planes", p)] computation_layout = [ ("batch", "rows"), ("hidden", "cols"), ("io", "planes"])</p><p>In this case, every matrix in the computation is tiled across two mesh dimensions and replicated in the third, and every einsum requires an allreduce across one mesh dimension.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.4">Inefficient Layouts</head><p>For a computation layout to be efficient, all expensive operations need to be split (as opposed to replicated) across all mesh dimensions. For example, the empty layout below produces correct results, but since it replicates all computation on every processor, it saves no time or memory. A general rule is that any expensive einsum operation should have one input dimension that is split across each batch dimension. mesh_shape = [("all", n)] computation_layout = []</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.5">Illegal Layouts</head><p>The computation layout below is illegal, because it causes the tensor h to have two dimensions which are split across the same dimension of the mesh. mesh_shape = [("all", n)] computation_layout = [("batch", "all"), ("hidden", "all")]</p><formula xml:id="formula_6">8.6 Performance Comparison Layout Comp. Time Comm. Time communication computation Memory/Processor [] bd io d h 0 0 bd io + bd h + d io d h [("batch", "all")] bdiodh n d io d h n b b n d io + b n d h + d io d h [("hidden", "all")] bdiodh n d io b n dh bd io + b dh n + d io dh n</formula><p>[("batch", "rows"), ("hidden", "cols")] bdiodh rc</p><formula xml:id="formula_7">d io ( b r + dh c ) c dh + r b b r d io + b r dh c + d io dh c</formula><p>[("batch", "rows"), ("hidden", "cols"), ("io", "planes")]   <ref type="table" target="#tab_0">Table 1</ref> shows the computational costs associated with our example computation layouts. The computation time is dominated by that of einsum operations. The communication time comes from the Allreduce operations, which are necessary whenever the inner dimension of einsum is split.</p><p>Assuming that the mesh has physical links between all pairs of logically adjacent processors, each Allreduce operations can be done in time proportional to the size of one slice divided by the per-link network bandwidth <ref type="bibr" target="#b5">[6]</ref>.</p><p>The network-boundedness of the computation is proportional to the value shown in the table column marked communication computation , with the constant of proportionality depending on the ratio of communication and computation speeds on the given hardware. In the data-parallel layout, the value is n b , the inverse of the per-processor batch size. Performance suffers if the per-processor batch is too small. In the model-parallel layout, the value is n d h , the inverse of the number of hidden units per processor. Performance suffers if the hidden layer is sliced too finely. For good performance, batch size is irrelevant, but we need the hidden layer to get larger as we increase the number of processors. In the first data-parallel, model-parallel layout, the value is c d h + r b . In this layout, we can quadratically increase the number of processors while only linearly increasing the batch size and hidden layer sizes necessary to maintain good efficiency. The final layout lets us cubically increase the number of processors in a 3-dimensional mesh, while only linearly increasing the batch size and the layer sizes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Model-Parallel "Transformer"</head><p>We implemented a model-parallel layout of the Transformer attention-based sequence-to-sequence model described in <ref type="bibr" target="#b20">[21]</ref>. The complete implementation is available in the tensor2tensor library on github. The layout is given by: mesh_shape = [("all", n)] computation_layout = [ ("vocab", "all"), ("d_ff", "all"), ("heads", "all")]</p><p>That is, the dimensions representing the vocabulary size, the size of the feed-forward hidden layer, and the number of attention heads are each split across all processors. This layout works because every expensive operation in the model has exactly one of these dimensions, and no tensor in the model has more than one. Similarly to the model-parallel layout for our example network (Section 8.2), network-boundedness and memory usage per processor remain constant if we scale all of these dimensions proportionally to the number of processors. We did just this, training transformer models with ever larger hidden layers and numbers of attention heads on ever larger TPU clusters (we did not increase the vocabulary size). As expected, we saw very similar performance characteristics between the models. This scaling turns out to be highly beneficial to model quality (Section 9.1).</p><p>To use even more processors, we combined this model-parallelism with data parallelism, splitting the batch across one dimension of a 2-dimensional TPU mesh and the dimensions described above across the other dimension of the mesh: mesh_shape = [("rows", r), ("cols", c")] computation_layout = [("batch", "rows"), ("vocab", "cols"), ("d_ff", "cols"), ("heads", "cols")]</p><p>This layout maintains constant performance if the batch size is scaled proportionally to r and the mentioned model dimensions are scaled proportionally to c. Using this layout, we trained Transformer models with feed-forward hidden dimensions up to 262144 and up to 256 attention heads on 2dimensional TPUv2 meshes of up to 16x32=512 cores, maintaining computational efficiency of over 50% (6 PFLOP/s out of a maximum 11.5 PFLOP/s) on the largest models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1">Experiments and Results</head><p>To examine the benefit of scaling the Transformer model in the manner suggested by the previous section, we trained such models on machine translation and language modeling tasks. Results are given in <ref type="table" target="#tab_1">Tables 2 and 3</ref>.</p><p>For the billion-word language modeling benchmark, we trained the models for 10 epochs. The largest model (4.9B parameters) took 13 hours to train on a 512-core TPUv2 cluster. Batch size for all models was 256 sequences of 256 tokens each (each sequence was the concatenation of multiple training sentences). The batch was split along the mesh dimension of size 16 and the model dimensions were split along the mesh dimension of size 32. Per-word dev-perplexity for the largest model was 24.0, but dropped to 23.5 when the model was evaluated with the logits multiplied by 0.9 (likely due to overfitting). This represents the best published result on this dataset. As expected, perplexity was lower for larger models. We have included random samples from these models in Appendix C. On the languagemodel_wiki_noref_v128k_l1k dataset from the Tensor2Tensor library 1 , consisting of over 5 billion tokens of text from Wikipedia, perplexity continued to improve significantly with a model size of 5 billion parameters.</p><p>On the WMT14 En-Fr translation tasks <ref type="formula">(3)</ref>, we trained the models for 3 epochs. The largest model (2.9B parameters) was trained for 22 hours on a 128-core TPUv2 cluster. Quality improved with model size, with the largest model achieved BLEU score 43.9 (evaluated using sacrebleu), the best published result to date. For the WMT14 En-De dataset, gains from model size were smaller, presumably due to the small size of the training data.</p><p>Additional details about the configurations for these experiments are available as part of the tensor2tensor library on github.  <ref type="bibr" target="#b19">[20]</ref> 6.5 28.0 Best DNN Ensemble <ref type="bibr" target="#b16">[17]</ref> 26.1 Best Ensemble (different methods) <ref type="bibr" target="#b16">[17]</ref> &gt; 100 23.7 10 Related Work A large part of deep learning computations is a series of matrix multiplications and tensor contractions (Einsums). Distributed matrix multiplication is a well-studied problem in high performance computing. Efficient algorithms partition the computational space, instead of partitioning work by the output matrix/tensor (owners compute), to minimize communication. This technique is sometimes called iteration space tiling <ref type="bibr" target="#b1">[2]</ref>, replication <ref type="bibr" target="#b7">[8]</ref>, or task parallelism <ref type="bibr" target="#b14">[15]</ref>. Mesh-TensorFlow can express a wide range of uniform partitionings of the iteration space and therefore can adopt many best known mappings, e.g., 3D <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b0">1]</ref> and 2.5D <ref type="bibr" target="#b7">[8]</ref> algorithms for square matrices, CARMA <ref type="bibr" target="#b12">[13]</ref> for rectangular matrices, 1.5D <ref type="bibr" target="#b17">[18]</ref> algorithm for matrices with different sparsities, best tile sizes for direct convolutions <ref type="bibr" target="#b21">[22]</ref>, etc., although sometimes with higher memory requirements. Furthermore, in most existing work, when multiple multiplications are composed together, the user has to specify the data layout for each matrix separately <ref type="bibr" target="#b25">[26]</ref>. Mesh-TensorFlow lets the user name the dimension to split, simplifying the process and allowing for much easier mapping explorations. Feature-wise, Mesh-TensorFlow shares many similarities with the Cyclops Tensor Framework <ref type="bibr" target="#b13">[14]</ref>, a distributed tensor contraction library originally developed for quantum chemistry applications, which also supports replication and arbitrary mappings.</p><p>In the context of deep learning, partitioning the iteration space, e.g., interpolating between data and model parallelism, is relatively new. Gholami et al. <ref type="bibr" target="#b18">[19]</ref> analytically showed that using both data and model parallelism at the same time can be more beneficial than using just one of them. Building on top of 1.5D matrix multiplication algorithms, their algorithm can support replication and arbitrary processor grid shapes. However, they only explored the parallelization of AlexNet <ref type="bibr" target="#b9">[10]</ref> and they have not implemented the algorithm. Jia et al. <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b22">23]</ref> implemented a framework that uses cost modeling to pick the best parallelization strategy, including how to partition work for each operation.</p><p>Their parallelizable dimensions are defined as the set of all divisible dimensions in the output tensor (owners compute), and therefore their mapping can be suboptimal in terms of communication. We expand on this in Appendix B.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11">Future Work</head><p>The Mesh-TensorFlow library is available at https://github.com/tensorflow/mesh and is under active development. Some potential areas for development are:</p><p>• Automated search for optimal computation layout.</p><p>• Implementations of different models and operations. For example, convolutions on spatiallypartitioned tensors will require the communication of "halo" regions, as described in <ref type="bibr" target="#b24">[25]</ref>. • Implementation of SPMD programming on CPU/GPU clusters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="12">Conclusion</head><p>In this paper, we introduce the Mesh-TensorFlow language, facilitating a broad class of SPMD distributed tensor computations. Applying Mesh-TensorFlow to the Transformer model, we are able to train models with 5 billion parameters on up to 512-core clusters, establishing new state-of-the-art results for WMT14 En-Fr translation task and the One Billion Word language modeling benchmark.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Illustrations for the Two Fully-Connected Layers Example</head><p>This section provides the illustrations of the four layouts mentioned in the Two Fully-Connected Layers example in Section 8. The overall computation is shown in <ref type="figure" target="#fig_2">Figure 1</ref>. We draw a matrix multiplication C = AB by putting A to the left of C and putting B above C. For each matrix, we put its name inside, its number of rows on the left or right side, and its number of columns above or below it. We omit the numbers of rows or columns that can be implied from adjacent matrices, i.e., knowing that the multiplication dimensions must match.   There are 4 processors, arranged into a 2-by-2 mesh. Each processor is assigned a serialized rank which is used to label matrix slices that it owns.  There are 8 processors, arranged into a 2-by-2-by-2 mesh. Each processor is assigned a serialized rank which is used to label matrix slices that it owns.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B Per-operation Parallelizations and Communication Costs</head><p>Communication is much more expensive than computation and is usually the bottleneck in a parallel program, especially in distributed setting. The section shows how the more common owner-compute parallelization strategies can be communication-suboptimal. We start with a simplified overview of the parallelization schemes used in distributed matrix multiplication and tensor contractions (Einsums), focusing on their communication bandwidth costs. (See <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b11">12]</ref> for rigorous communication lower bounds analyses.) We only discuss distributed matrix multiplication here since the concept is trivially generalizable to its tensor counterpart.</p><p>Iteration Space. The iteration space is the set of all index tuples required to compute a problem. For example, the matrix multiplication problem C = AB computes c ij = k a ik b kj . Its iteration space consists of all possible tuples (i, j, k) ∈ Z 3 , 0 ≤ i &lt; u, 0 ≤ j &lt; v, 0 ≤ k &lt; w, where C is u-by-v, A is u-by-w, and B is w-by-v, as shown in <ref type="figure" target="#fig_6">Figure 6</ref>. Parallelization. Let n be the number of processors. Parallelization corresponds to partitioning the set of voxels into n (not necessarily) equal subsets for each processor to compute. For matrix multiplication, the most widely-used partitionings are grouped into three categories <ref type="bibr" target="#b10">[11]</ref>: 1D, 2D, and 3D, based on the number of dimensions of the iteration space that are split. <ref type="figure" target="#fig_7">Figure 7</ref> shows an example for each category. The left image is 1D partitioning (n = 8) because only the j axis is split. The middle image splits axes i and j so it is 2D partitioning (n = 64). The right image is 3D partitioning (n = 64) because all three axes are split. Owner computes. Owner-compute strategies split a matrix (or matrices) equally among processors and each processor is responsible for all computations related to the matrix chunk it owns. The 1D and 2D partitionings in <ref type="figure" target="#fig_7">Figure 7</ref> are owner-compute strategies. In 1D case, each processor owns a slice of matrices B and C each, and computes the whole slab requires for its slice of C. In 2D case, each processor owns a patch of C and computes a pencil corresponding to it. The 3D partitioning goes beyond owner-compute rule, since no processor is responsible for all computations associated with the data it has. Owner-compute schemes are more common because they are the most intuitive as we often view the output data as the unit of work. We will show why its communication costs are usually suboptimal in the next paragraph.</p><p>Communication. Here, we focus on the number of elements that have to be transferred by a processor. Let V be the voxel subset assigned to a processor, and V A , V B , and V C be the projections of V onto the A, B, and C planes, respectively. The total number of elements a processor has to access to complete its computation is simply |V A | + |V B | + |V C |, where | · | denotes set cardinality.</p><p>Since a processor can only hold a limited amount of data in memory, the rest of the elements must come through communication. The volume of the subset designates the computational workload. As mentioned in the paper, we would like to maximize the computation-to-communication ratio, therefore we want V to have as low surface-to-volume ratio as possible. Assuming V only takes cuboid shapes, then the best shape is a cube.</p><p>Owner-compute methods fall short when it cannot partition the space into cubes. To illustrate, we compare 2D and 3D partitionings for p = 64 processors in <ref type="figure" target="#fig_7">Figure 7</ref>. When u = v = w, each pencil in the 2D partitioning has a computation-to-communication ratio, r 2D = 2u 3 /64 u 2 /64 + 2u 2 /8 = 2u/17 ≈ 0.12u.</p><p>Each cube in the 3D partitioning has a higher computation-to-communication ratio,</p><formula xml:id="formula_8">r 3D = 2u 3 /64 3u 2 /16 = u/6 ≈ 0.17u.</formula><p>Mesh-TensorFlow. Mesh-TensorFlow can express more fine-grained parallelism than ownercompute, even though all we have to do is just specifying the data layout for each tensor. That is because our layout allows the tensor to be replicated. This, combines with multiple layouts from multiple tensors involved in an operation, can split the iteration space in as many dimensions as necessary (up to the rank of the iteration space).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C Random Samples from Transformer Language Models Trained on Billion-Word Language Modeling Benchmark</head><p>The following samples were randomly generated from the Transformer language models described in the paper. All sentences were seeded with the initial words "According to Ray Kurzweil", and continued randomly by the model. While all the models produce mostly grammatical sentences, the larger models exhibit more world knowledge.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>2 : 3 :</head><label>23</label><figDesc>∇Q(W (t) , b (t) ) = p ∈P ∇Q(W (t) , b W (t+1) = U pdate(W (t) , ∇Q(W (t) , b (t) ) Local computation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 1 :</head><label>1</label><figDesc>The overall computation of the Two Fully-Connected Layers example. First, x is multiplied with w. The temporary result xw is summed with bias, applied component-wise Relu, and then stored in h. Lastly, we multiply h with v to get y. The component-wise operations and the intermediate matrix xw are not shown in the figure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2</head><label>2</label><figDesc>presents the purely data-parallel layout with n = 2 processors. We number the processors 0 and 1, respectively. The ranks of the processors that store each matrix part are written in blue on the matrix part. The matrix names are moved to the bottom-left corners. The whole w and v are labeled with both 0 and 1 because both of them are fully replicated between the two processors. The purely model-parallel layout are drawn similarly inFigure 3.Figures 4 and5show the mixed data-and-model-parallel layout with a 2-by-2 and a 2-by-2-by-2 processor meshes, respectively. We give each processor a serialized rank as shown in the figure, and use the serialized rank to label matrix slices.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 2 :Figure 3 :Figure 4 :</head><label>234</label><figDesc>The data-parallel layout for the Two Fully-Connected Layers example, with n = 2 processors ∈ {0, 1}. Blue numbers on matrices indicate the ranks of the processors the matrix slices reside on. The batch dimension is split among all processors. w and v are fully replicated. The model-parallel layout for the Two Fully-Connected Layers example, with n = 2 processors ∈ {0, 1}. Blue numbers on matrices indicate the ranks of the processors the matrix slices reside on. The hidden dimension is split among all processors. x and y are fully replicated. The mixed data-and-model-parallel layout for the Two Fully-Connected Layers example.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>The mixed data-and-model-parallel layout for the Two Fully-Connected Layers example.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :</head><label>6</label><figDesc>The iteration space of the matrix multiplication problem C = AB. Each voxel (i, j, k) represents the computation c ij += a ik b kj .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 :</head><label>7</label><figDesc>Example partitionings of the iteration space for the matrix multiplication problem. The names 1D, 2D, and 3D comes from the number of dimensions that are split.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc></figDesc><table /><note>Computation, communication and memory costs for different layouts of the computation in Algorithm 1. Constant factors and lower-order terms are dropped.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>Transformer-Decoder Language Models: d model = 1024, d k = d v = 256</figDesc><table><row><cell>d f f</cell><cell>heads</cell><cell cols="2">Parameters Billion-Word Benchmark</cell><cell>Wikipedia</cell></row><row><cell></cell><cell></cell><cell>(Billions)</cell><cell>Word-Perplexity</cell><cell>Subword-Perplexity</cell></row><row><cell>4096</cell><cell>4</cell><cell>0.14</cell><cell>35.0</cell><cell>8.74</cell></row><row><cell>8192</cell><cell>8</cell><cell>0.22</cell><cell>31.7</cell><cell>8.03</cell></row><row><cell>16384</cell><cell>16</cell><cell>0.37</cell><cell>28.9</cell><cell>7.44</cell></row><row><cell>32768</cell><cell>32</cell><cell>0.67</cell><cell>26.8</cell><cell>6.99</cell></row><row><cell>65516</cell><cell>64</cell><cell>1.28</cell><cell>25.1</cell><cell>6.55</cell></row><row><cell>131072</cell><cell>128</cell><cell>2.48</cell><cell>24.1</cell><cell>6.24</cell></row><row><cell>262144</cell><cell>256</cell><cell>4.90</cell><cell>24.0(23.5)</cell><cell>6.01</cell></row><row><cell>Prev Best DNN</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 :</head><label>3</label><figDesc>Transformer Machine-Translation Results. d model = 1024, d k = d v = 128</figDesc><table><row><cell>d f f</cell><cell cols="5">heads d k , d v Parameters WMT14 EN-DE WMT14 EN-FR</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>(Billions)</cell><cell>BLEU</cell><cell>BLEU</cell><cell></cell></row><row><cell>2048</cell><cell>4</cell><cell>128</cell><cell>0.15</cell><cell>25.5</cell><cell>41.8</cell><cell></cell></row><row><cell>4096</cell><cell>8</cell><cell>128</cell><cell>0.24</cell><cell>26.5</cell><cell>42.5</cell><cell></cell></row><row><cell>8192</cell><cell>16</cell><cell>128</cell><cell>0.42</cell><cell>27.1</cell><cell>43.3</cell><cell></cell></row><row><cell>16384</cell><cell>32</cell><cell>128</cell><cell>0.77</cell><cell>27.5</cell><cell>43.5</cell><cell></cell></row><row><cell>32768</cell><cell>64</cell><cell>128</cell><cell>1.48</cell><cell>27.5</cell><cell>43.8</cell><cell></cell></row><row><cell>65536</cell><cell>128</cell><cell>128</cell><cell>2.89</cell><cell>26.7</cell><cell>43.9</cell><cell></cell></row><row><cell>4096</cell><cell>16</cell><cell>64</cell><cell>0.21</cell><cell>28.4</cell><cell>41.8</cell><cell>[21]</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">No published results exist for this dataset.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Communication efficient matrix multiplication on hypercubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jarle</forename><surname>Berntsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Parallel computing</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="335" to="342" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">More Iteration Space Tiling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wolfe</surname></persName>
		</author>
		<idno type="DOI">http:/doi.acm.org/10.1145/76263.76337</idno>
		<ptr target="http://doi.acm.org/10.1145/76263.76337" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1989 ACM/IEEE Conference on Supercomputing. Supercomputing &apos;89</title>
		<meeting>the 1989 ACM/IEEE Conference on Supercomputing. Supercomputing &apos;89<address><addrLine>Reno, Nevada, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1989" />
			<biblScope unit="page" from="655" to="664" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alok</forename><surname>Aggarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ashok</forename><forename type="middle">K</forename><surname>Chandra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Snir</surname></persName>
		</author>
		<idno type="DOI">10.1016/0304-3975(90)90188-N</idno>
		<ptr target="http://dx.doi.org/10.1016/0304-3975(90)90188-N" />
	</analytic>
	<monogr>
		<title level="j">Communication Complexity of PRAMs&quot;. In: Theor. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">71</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="3" to="28" />
			<date type="published" when="1990-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Communication lower bounds for distributedmemory matrix multiplication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dror</forename><surname>Irony</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sivan</forename><surname>Toledo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><surname>Tiskin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Parallel and Distributed Computing</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="page" from="1017" to="1026" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Bandwidth optimal all-reduce algorithms for clusters of workstations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pitch</forename><surname>Patarasuk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xin</forename><surname>Yuan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009-02" />
			<biblScope unit="page" from="117" to="124" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nikhil</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yogish</forename><surname>Sabharwal</surname></persName>
		</author>
		<title level="m">In: Proceedings of the 24th ACM International Conference on Supercomputing. 2010</title>
		<imprint>
			<biblScope unit="page" from="27" to="36" />
		</imprint>
	</monogr>
	<note>Optimal bucket algorithms for large mpi collectives on torus interconnects</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Minimizing communication in numerical linear algebra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Grey</forename><surname>Ballard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Matrix Analysis and Applications</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="866" to="901" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Communication-Optimal Parallel 2.5D Matrix Multiplication and LU Factorization Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Edgar</forename><surname>Solomonik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Demmel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Euro-Par</title>
		<imprint>
			<biblScope unit="volume">6853</biblScope>
			<biblScope unit="page" from="978" to="981" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Large Scale Distributed Deep Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><surname>Dean</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=2999134.2999271" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 25th International Conference on Neural Information Processing Systems</title>
		<meeting>the 25th International Conference on Neural Information Processing Systems<address><addrLine>Tahoe, Nevada</addrLine></address></meeting>
		<imprint>
			<publisher>Curran Associates Inc</publisher>
			<date type="published" when="2012" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="1223" to="1231" />
		</imprint>
	</monogr>
	<note>NIPS&apos;12. Lake</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Imagenet classification with deep convolutional neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Krizhevsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ilya</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoffrey</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1097" to="1105" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Communication optimal parallel multiplication of sparse random matrices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Grey</forename><surname>Ballard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the twenty-fifth annual ACM symposium on Parallelism in algorithms and architectures</title>
		<meeting>the twenty-fifth annual ACM symposium on Parallelism in algorithms and architectures</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="222" to="231" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Communication Lower Bounds and Optimal Algorithms for Programs That Reference Arrays -Part 1</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Christ</surname></persName>
		</author>
		<ptr target="http://www.eecs.berkeley.edu/Pubs/TechRpts/2013/EECS-2013-61.html" />
		<imprint>
			<date type="published" when="2013-05" />
		</imprint>
		<respStmt>
			<orgName>EECS Department, University of California, Berkeley</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Tech. rep. UCB/EECS-2013-61</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Communication-optimal parallel recursive rectangular matrix multiplication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Demmel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE 27th International Symposium on. IEEE. 2013</title>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="261" to="272" />
		</imprint>
	</monogr>
	<note>Parallel &amp; Distributed Processing (IPDPS)</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A massively parallel tensor contraction framework for coupled-cluster computations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Edgar</forename><surname>Solomonik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Parallel and Distributed Computing</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="page" from="3176" to="3190" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Scalable Task-based Algorithm for Multiplication of Block-rank-sparse Matrices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Justus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cannada</forename><forename type="middle">A</forename><surname>Calvin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Edward</forename><forename type="middle">F</forename><surname>Lewis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Valeev</surname></persName>
		</author>
		<idno type="DOI">http:/doi.acm.org/10.1145/2833179.2833186</idno>
		<ptr target="http://doi.acm.org/10.1145/2833179.2833186" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th Workshop on Irregular Applications: Architectures and Algorithms. IA3 &apos;15</title>
		<meeting>the 5th Workshop on Irregular Applications: Architectures and Algorithms. IA3 &apos;15<address><addrLine>Austin, Texas</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015" />
			<biblScope unit="volume">4</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Abadi</surname></persName>
		</author>
		<ptr target="https://www.tensorflow.org/" />
		<title level="m">Large-Scale Machine Learning on Heterogeneous Systems. Software available from tensorflow.org</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Exploring the Limits of Language Modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rafal</forename><surname>Jozefowicz</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1602.02410</idno>
		<ptr target="http://arxiv.org/abs/1602.02410" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Communication-Avoiding Parallel Sparse-Dense Matrix-Matrix Multiplication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Penporn</forename><surname>Koanantakool</surname></persName>
		</author>
		<idno type="DOI">10.1109/IPDPS.2016.117</idno>
	</analytic>
	<monogr>
		<title level="m">IEEE International Parallel and Distributed Processing Symposium (IPDPS)</title>
		<imprint>
			<date type="published" when="2016-05" />
			<biblScope unit="page" from="842" to="853" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Integrated Model and Data Parallelism in Training Neural Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amir</forename><surname>Gholami</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1712.04432</idno>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Outrageously Large Neural Networks: The Sparsely-Gated Mixture-of-Experts Layer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Noam</forename><surname>Shazeer</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1701.06538</idno>
		<ptr target="http://arxiv.org/abs/1701.06538" />
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Attention Is All You Need</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ashish</forename><surname>Vaswani</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1706.03762</idno>
		<ptr target="http://arxiv.org/abs/1706.03762" />
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Communication-Optimal Convolutional Neural Nets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Demmel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Grace</forename><surname>Dinh</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1802.06905</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Beyond Data and Model Parallelism for Deep Neural Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhihao</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matei</forename><surname>Zaharia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Aiken</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1807.05358</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Exploring Hidden Dimensions in Parallelizing Convolutional Neural Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhihao</forename><surname>Jia</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1802.04924</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Spatially Parallel Convolutions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Boris</forename><surname>Ginsburg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kurt</forename><surname>Keutzer</surname></persName>
		</author>
		<ptr target="https://openreview.net/forum?id=S1Yt0d1vG" />
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Penporn</forename><surname>Koanantakool</surname></persName>
		</author>
		<ptr target="http://proceedings.mlr.press/v84/koanantakool18a.html" />
		<title level="m">Communication-Avoiding Optimization Methods for Distributed Massive-Scale Sparse Inverse Covariance Estimation</title>
		<editor>Amos Storkey and Fernando Perez-Cruz</editor>
		<meeting><address><addrLine>Playa Blanca, Lanzarote, Canary Islands</addrLine></address></meeting>
		<imprint>
			<publisher>PMLR</publisher>
			<date type="published" when="2018-04" />
			<biblScope unit="volume">84</biblScope>
			<biblScope unit="page" from="1376" to="1386" />
		</imprint>
	</monogr>
	<note>Proceedings of Machine Learning Research</note>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">professor of musical economics at the University of California , Berkeley , the military &apos;s &quot; biggest challenge &quot; might have been growing the region &apos;s growing urban sprawl</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">the chief executive of ITC Emerging Markets , the metals sector should contribute about $ 210 billion by year-end 2008 -a figure that has now risen to $ 3 billion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">the head of PMI , he has now written off all his employees fairly</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">senior vice president of sales and marketing at Aspen , there is a percentage of the online response for the auto company escalating to 18 customers and increasing to 30 days a year</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">director of the Economic Policy Institute , India ranks 21st out of 221 nations in the current budget deficit</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>which ranks 13th globally</note>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Victor Hesketh &apos;s food agency that produces , sends and distributes the raw beef and pork through the state &apos;s Food and Drug Administration , and they &apos;re also allowed to take the lamb by their own account alongside the chicken and veal</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Smoking : The Letters of Hysteria and Reclining the State of South Carolina</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the author of</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="volume">30</biblScope>
		</imprint>
	</monogr>
	<note>percent of liquor &apos;s coconut is sold on the first batch</note>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">an MIT student who is not involved in anything more than a stock-market move , the latest system of debt and bankruptcy parallels the completely unregulated collection of debt that emerged in the early 1990s , when a financial industry boom brought a financial crisis that spilled almost everywhere from the United States</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">Model with 0.37B Parameters</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">According to Ray Kurzweil</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">the owner and web guru at Stanford University , even a single person might fall in love with the internet simultaneously</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">PhD , a professor of computer science at Princeton who has staked his reputation on the ability of code technicians to simultaneously amplify a cursor &apos;s legal weight , machines will go digital by using meta-dimensions instead of a brick</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>and design schemes closer to the core of GPUs</note>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">chief executive of the company , very few people work through chronology , and most people can &apos;t use tables on their machines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">we are saving the most jobs in the world</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">creator of the Star Wars creator and creator of the popular game</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>Indiana Jones and the Kingdom of the Crystal Skull , &quot; here comes Martin Schafer ( &quot; Spider-Man 3 &quot; ) to describe the businessman as a grand master</note>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title level="m" type="main">a technology expert at the Massachusetts Institute of Technology and a host of from academia , Ardipithecus ramidus was frequently incubated with solar-powered cells to frighten away and frighten out the predators , and housed in them so they could damage Lego &apos;s control panels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">the famously headstrong and egocentric stack-on-stack , a keyboard is more than a part of the laptop &apos;s muscle when it is standing upright rather than crouching</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>and its outlet at the right end of the screen was probably the key to how the phone turned into its belly</note>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">founder of the Stanford-funded company , similar &quot; recycled book &quot; concepts are also more of an obsession , as this lets authors track their emotions in print product forms and refuse to look at one all-, -certain identity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title level="m" type="main">a transplant surgeon and Harvard astrophysicist , the results are illuminated in Honolulu</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename></persName>
		</author>
		<imprint>
			<pubPlace>Vietnam</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">of UNK , a software company in California , computer games are alive and well , with millions of gamers , but most games do not make money</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title level="m" type="main">Professor of Physics at MIT , if we all assume that the project will continue to go ahead , we will eventually be in an era when human beings are capable of figuring out just what our genetic make-up is focused on</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Watson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Watson</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
		<title level="m" type="main">the physicist who has kept many of these principles alive , the world has vanished into &quot; more and more of the static world &quot; -and in many ways we &apos;re losing the earth &apos;s ability to appreciate water</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<title level="m" type="main">creator and the only original idea from the series , the tablet is expected to be a device that combines a USB 2.0 card with an iPad , a laptop and an iPod Touch -with UNK sharp-wired connections to the Internet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<title level="m" type="main">and a panel of experts testifying in Los Angeles , six years in Congress attempts to improve &quot; brain &quot; of Americans by hitting them with a $ 50 annual fee</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>then having them likely pay the company $ 3,000 for every additional year in life they are in a job</note>
</biblStruct>

<biblStruct xml:id="b50">
	<monogr>
		<title level="m" type="main">creator of the Review of Medical UNK , the organisation could be the &quot; holy grail</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>of degenerative brain disease</note>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
		<title level="m" type="main">music analyst and co-founder of zero-carbon quantum computing firm Redpoint , if you listen carefully , you &apos;ll hear a far more universal &quot; idea &quot; of how this new car is supposed to be or what it should not be</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>or how much going to cost</note>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<title level="m" type="main">chief technology officer for the US Department of Energy , aviation has &quot; potential to be the largest and fastest growing source of consumer and commercial emissions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<monogr>
		<title level="m" type="main">the futurist son of the futurist who wrote The Singularity is Near , the &quot; early days</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>of Google are not the right time to push forward with the next great leap</note>
</biblStruct>

<biblStruct xml:id="b54">
	<monogr>
		<title level="m" type="main">creator of the first modern computer , the sexy cyborg was the brainchild of an MIT professor , Thomas Harris , and a former banking entrepreneur , Henry Lee , who was looking for an UNK</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>a light that could be recovered and used to light up the Internet</note>
</biblStruct>

<biblStruct xml:id="b55">
	<monogr>
		<title level="m" type="main">the inventor of the modern personal computer , the shrinking human brain could eventually replace the Internet as a tool of human intelligence and imagination</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<monogr>
		<title level="m" type="main">the expert and co-author of &quot; The Singularity is Near : Comprehending the Technological Future of Engineering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>people are looking for ways to protect and make their lives better</note>
</biblStruct>

<biblStruct xml:id="b57">
	<monogr>
		<title level="m" type="main">creator of the Gaia hypothesis , earlier computer systems should become not just more efficient , but more-efficient , increasing their efficiency by reducing human errors ( the unexpected , but often the regrettable ) and even the number of errors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<monogr>
		<title level="m" type="main">who will make an appearance at this year &apos;s Consumer Electronics Show in Las Vegas next week , these mobile gadgets will be able to &quot; talk</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
	<note>to each other</note>
</biblStruct>

<biblStruct xml:id="b59">
	<monogr>
		<title level="m" type="main">the futurist turned futurist , the onset of Alzheimer &apos;s coincided precisely with the rate of unemployment in America</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">.</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
