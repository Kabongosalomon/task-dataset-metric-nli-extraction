<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">CommunityGAN: Community Detection with Generative Adversarial Nets</title>
			</titleStmt>
			<publicationStmt>
				<publisher>ACM</publisher>
				<availability status="unknown"><p>Copyright ACM</p>
				</availability>
				<date>May 13-17, 2019</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuting</forename><surname>Jia</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Shanghai Jiao Tong University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qinqin</forename><surname>Zhang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Shanghai Jiao Tong University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Weinan</forename><surname>Zhang</surname></persName>
							<email>wnzhang@sjtu.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="institution">Shanghai Jiao Tong University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xinbing</forename><surname>Wang</surname></persName>
							<email>xwang8@sjtu.edu.cn</email>
							<affiliation key="aff0">
								<orgName type="institution">Shanghai Jiao Tong University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">CommunityGAN: Community Detection with Generative Adversarial Nets</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 2019 World Wide Web Conference (WWW&apos;19)</title>
						<meeting>the 2019 World Wide Web Conference (WWW&apos;19) <address><addrLine>San Francisco, CA, USA; New York, NY, USA</addrLine></address>
						</meeting>
						<imprint>
							<publisher>ACM</publisher>
							<biblScope unit="volume">11</biblScope>
							<date type="published">May 13-17, 2019</date>
						</imprint>
					</monogr>
					<idno type="DOI">10.1145/3308558.3313564</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-25T18:10+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>CCS CONCEPTS • Information systems → Clustering</term>
					<term>Social networks KEYWORDS Community Detection</term>
					<term>Graph Representation Learning</term>
					<term>Generative Adversarial Nets ACM Reference Format: Yuting Jia, Qinqin Zhang, Weinan Zhang, Xinbing Wang 2019 Commu- nityGAN: Community Detection with Generative Adversarial Nets In</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Community detection refers to the task of discovering groups of vertices sharing similar properties or functions so as to understand the network data. With the recent development of deep learning, graph representation learning techniques are also utilized for community detection. However, the communities can only be inferred by applying clustering algorithms based on learned vertex embeddings. These general cluster algorithms like K-means and Gaussian Mixture Model cannot output much overlapped communities, which have been proved to be very common in many real-world networks. In this paper, we propose CommunityGAN, a novel community detection framework that jointly solves overlapping community detection and graph representation learning. First, unlike the embedding of conventional graph representation learning algorithms where the vector entry values have no specific meanings, the embedding of CommunityGAN indicates the membership strength of vertices to communities. Second, a specifically designed Generative Adversarial Net (GAN) is adopted to optimize such embedding. Through the minimax competition between the motif-level generator and discriminator, both of them can alternatively and iteratively boost their performance and finally output a better community structure. Extensive experiments on synthetic data and real-world tasks demonstrate that CommunityGAN achieves substantial community detection performance gains over the state-of-the-art methods.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Network is a powerful language to represent relational information among data objects from social, natural and academic domains <ref type="bibr" target="#b31">[32]</ref>. One way to understand network is to identify and analyze groups of vertices which share highly similar properties or functions. Such groups of vertices can be users from the same organization in social networks <ref type="bibr" target="#b15">[16]</ref>, proteins with similar functionality in biochemical networks <ref type="bibr" target="#b11">[12]</ref>, and papers from the same scientific fields in citation networks <ref type="bibr" target="#b19">[20]</ref>. The research task of discovering such groups is known as the community detection problem <ref type="bibr" target="#b35">[36]</ref>.</p><p>Graph representation learning, also known as network embedding, which aims to represent each vertex in a graph as a lowdimensional vector, has been consistently studied in recent years. The application of deep learning algorithms including Skip-gram <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b18">19]</ref> and convolutional network <ref type="bibr" target="#b9">[10]</ref> has improved the efficiency and performance of graph representation learning dramatically. Moreover, Generative Adversarial Nets (GAN) has also been introduced for learning better graph representation <ref type="bibr" target="#b24">[25]</ref>. The learned vertex representation vectors can benefit a wide range of network analysis tasks including link prediction <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b25">26]</ref>, recommendation <ref type="bibr" target="#b33">[34,</ref><ref type="bibr" target="#b34">35]</ref>, and node classification <ref type="bibr" target="#b22">[23]</ref>.</p><p>However, there still exists many limitations for the application of such embedding in overlapping community detection problems because of the dense overlapping of communities. Generally, the useful information of vertex embedding vectors is the relevant distance of these vectors, while the specific value in vertex embedding vectors has no meanings. Thus, given the representation vectors of the vertices, one has to adopt other algorithms like logistic regression to accomplish the real-world application tasks. To detect communities, a straightforward way is to run some clustering algorithms in the vector space. However, in some real-world datasets, one vertex may belong to tens of communities simultaneously <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b29">30]</ref>, while most clustering algorithms cannot handle such dense overlapping. In recent years, some researchers try to perform the community detection and network embedding simultaneously in a unified framework <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b26">27]</ref> but still fail to solve the dense overlapping problem.</p><p>In this paper, we propose CommunityGAN, a novel community detection framework that jointly solves overlapping community detection and graph representation learning. The input-output overview of CommunityGAN is shown in <ref type="figure" target="#fig_1">Figure 1</ref>. With Communi-tyGAN, we aim to learn network embeddings like AGM (Affiliation Graph Model) through a specifically designed GAN. AGM <ref type="bibr" target="#b29">[30,</ref><ref type="bibr" target="#b30">31]</ref> is a framework which can model densely overlapping community structures. It assigns each vertex-community pair a nonnegative factor which represents the degree of membership of the vertex to the community. Thus, the strengths of membership from a vertex to all communities compose the representation vector of it.</p><p>Moreover, in recent years, motifs have been proved as essential features in community detection tasks <ref type="bibr" target="#b10">[11]</ref>. Thus in this paper, unlike most previous works considering relationship between only  two vertices (the relationship between a center vertex and one of the other vertices in a window), we try to generate and discriminate motifs. Specifically, CommunityGAN trains two models during the learning process: 1) a generator G(s |v c ), which tries to generate the most likely vertex subset s to compose a specified kind of motif; 2) a discriminator D(s), which attempts to distinguish whether the vertex subset s is a real motif or not. In the proposed Community-GAN, the generator G and the discriminator D act as two players in a minimax game. Competition in this game drives both of them to improve their capability until the generator is indistinguishable from the true connectivity distribution. The contributions of our work are threefold:</p><p>• We combine AGM and GAN in a unified framework, which achieves both the outstanding performance of GAN and the direct vertex-community membership representation in AGM. • We study the motif distribution among ground-truth communities and analyze how they can help improve the quality of detected communities. • We propose a novel implementation for motif generation called Graph AGM, which can generate the most likely motifs with graph structure awareness in a computationally efficient way.</p><p>Empirically, two experiments were conducted on a series of synthetic data, and the results prove: 1) the ability of Commu-nityGAN to solve dense overlapping problem; 2) the efficacy of motif-level generation and discrimination. Additionally, to complement these experiments, we evaluate CommunityGAN on two real-world scenarios, i.e., community detection and clique prediction, using five real-world datasets. The experiment results show that CommunityGAN substantially outperforms the state-of-the-art methods in the field of community detection and graph representation learning. Specifically, CommunityGAN outperforms baselines by 7.9% to 21.0% in terms of F1-Score for community detection. Additionally, in 3-clique and 4-clique prediction tasks, Community-GAN improves AUC score to at least 0.990 and 0.956 respectively. The superiority of CommunityGAN relies on its joint advantage of particular embedding design, adversarial learning and motif-level optimization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Community Detection. Many community detection algorithms have been proposed from different perspectives. One direction is to design some measure of the quality of a community like modularity, and community structure can be uncovered by optimizing such measures <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b27">28]</ref>. Another direction is to adopt the generative models to describe the generation of the graphs, and the communities can be inferred by fitting graphs to such models <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b35">36]</ref>. Moreover, some models focus on the graph adjacency matrix and output the relationship between vertices and communities by adopting matrix factorization algorithms on the graph adjacency matrix <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b30">31]</ref>. These models often consider the dense community overlapping problem and detect overlapping communities. However, the performance of these methods are restricted by performing pair reconstruction with bi-linear models.</p><p>Graph representation learning. In recent years, several graph representation learning algorithms have been proposed. For example, DeepWalk <ref type="bibr" target="#b18">[19]</ref> shows the random walk in a graph is similar to the text sequence in natural language. Thus it adopts Skip-gram, a word representation learning model <ref type="bibr" target="#b14">[15]</ref>, to learn vertex representation. Node2vec <ref type="bibr" target="#b7">[8]</ref> further extends the idea of DeepWalk by proposing a biased random walk algorithm, which provides more flexibility when generating the sampled vertex sequence. LINE <ref type="bibr" target="#b23">[24]</ref> first learns the vertex representation preserving both the first and second order proximities. Thereafter, GraRep <ref type="bibr" target="#b1">[2]</ref> applies different loss functions defined on graphs to capture different k-order proximities and the global structural properties of the graph. Moreover, GAN has also been introduced into graph representation learning. GraphGAN <ref type="bibr" target="#b24">[25]</ref> proposes a unified adversarial learning framework, which naturally captures structural information from graphs to learn the graph representation. ANE <ref type="bibr" target="#b4">[5]</ref> utilizes GAN as a regularizer for learning stable and robust feature extractor. However, all of the above algorithms focus on general graph representation learning. For community detection tasks, we have to adopt other clustering algorithms on vertex embeddings, which cannot handle the dense community overlapping problem. Compared to above mentioned methods, our CommunityGAN can output the membership of vertices to communities directly.</p><p>Unified framework for graph representation learning and community detection. In recent years, some unified frameworks for both graph representation learning and community detection have been proposed. Wang et al. <ref type="bibr" target="#b26">[27]</ref> developed a modularized nonnegative matrix factorization algorithm to preserve both vertex similarity and community structure. However, because of the complexity of matrix factorization, this model cannot be applied on many real-world graphs containing millions of vertices. Cavallari et al. <ref type="bibr" target="#b2">[3]</ref> designed a framework that jointly solves community embedding, community detection and node embedding together. However, although the community structures and vertex embeddings are optimized together, the community structures are still inferred through a clustering algorithm (e.g., Gaussian Mixture Model) based on the vertex embedding, which means the dense community overlapping problem cannot be avoided.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">EMPIRICAL OBSERVATION</head><p>In this section, data analysis of the relationship between motifs and communities is presented, which motivates the development of CommunityGAN. We first describe the network datasets with   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Datasets</head><p>We study the five networks proposed by Yang and Leskovec <ref type="bibr" target="#b29">[30]</ref>, where LiveJournal, Orkut and Youtube are all online social networks, while DBLP and Amazon are collaboration network and product network respectively. <ref type="table" target="#tab_1">Table 1</ref> provides the statistics of these networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Empirical Observations</head><p>Now we present our empirical observations by answering two critical questions. How do the communities contribute to the generation of motifs? What is the change in motif generation with communities overlapping? First, we investigate the relationship between motif generation and community structure. For each time, we randomly select one community. Then we sample 2/3/4 vertices from this community and judge whether they could compose a motif or not. We repeat this process for billions of times and get the occurrence probability of motifs in one community. We compare this value with the motif occurrence probability in the whole network. Because, in this paper, we mostly focus on a particular kind of motifs (clique), we only demonstrate the occurrence probability of 2/3/4-vertex cliques. As shown in <ref type="table" target="#tab_2">Table 2</ref>, the average occurrence probabilities of cliques for vertices in one community are much higher than that for vertices randomly selected from the whole network. This observation demonstrates that the occurrence of motifs is strongly correlated to the community structure.</p><p>Next, we study the influence of community overlapping on the generation of motifs. Yang and Leskovec <ref type="bibr" target="#b30">[31]</ref> have conducted the  relationship of 2-clique (edge) probability with community overlapping that the more communities two vertices have in common, the higher probability for them to be 2-clique. In this paper, we further study the influence of community overlapping on the generation of 3-clique and 4-clique. As shown in <ref type="figure" target="#fig_4">Figure 2</ref>, similar to 2-clique, the probability curve increases in the overall trend as the number of shared communities increases. Such observation accords with the base assumption of AGM framework that vertices residing in communities' overlaps are more densely connected to each other than the vertices in a single community. So we can extend the AGM from edge generation to clique generation, and the details will be explained in §4.4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">METHODOLOGY</head><p>Notation. In this paper, all vectors are column vectors and denoted by lower-case bold letters like d v and g v . Calligraphic letters are used to represent sets like V and E. And for simplicity, the corresponding normal letters are used to denote their size like V = |V |. The details of notations in this paper are listed in <ref type="table" target="#tab_3">Table 3</ref>.</p><p>In this section, we introduce the framework of Community-GAN and discuss the implementation and optimization of the generator and discriminator in CommunityGAN.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">CommunityGAN Framework</head><formula xml:id="formula_0">Let G = (V, E, M) represent the studied graph, where V = {v 1 , . . . , v V } is a set of vertices, E = {e i j } V i, j=1</formula><p>is the set of edges among the vertices, and M is the set of motifs in graph G. In this paper, notably, we only focus on a particular kind of motifs: cliques. Moreover, the D and G are also designed to discriminate and generate cliques. For a given vertex v c , we define M(v c ) as the set of motifs in the graph covering v c , whose size is generally much smaller than the total number of vertices V . Moreover, we define conditional probability p t rue (m|v c ) as the preference distribution of motifs covering v c over all other motifs in M. Thus M(v c ) can be seen as a set of observed motifs drawn from p t rue (m|v c ). Given the graph G, we aim to learn the following two models: Generator G(s |v c ; θ G ), which tries to approximate p t rue (m|v c ), and generate (or select) subsets of vertices from V covering v c most likely to be real motifs; and Discriminator D(s, θ D ), which aims to estimate the probability that a vertex subset s is a real motif, i.e., comes from M. </p><formula xml:id="formula_1">G M (v c ) Set of motifs covering v c in graph G N (v c ) Set of neighbors of vertex v c in graph G s The subset of vertices from V p t r ue (m |v c )</formula><p>The preference distribution of motifs covering v c over all other motifs in M G(s |v c ; θ G )</p><p>Generator trying to generate vertex subsets from V covering v c most likely to be real motifs D(s, θ D )</p><p>Discriminator aiming to estimate the probability that a vertex subset s is a real motif</p><formula xml:id="formula_2">d v , g v ∈ R C + Nonnegative C-dimensional representation vector of vertex v in discriminator D and generator G, respectively θ D , θ G ∈ R V ×C + The union of all d v and g v , respectively F uc ∈ R +</formula><p>The nonnegative strength for vertex u to be affiliated to community c used in AGM</p><formula xml:id="formula_3">p c (v 1 , v 2 , . . . , v m )</formula><p>The probability of m vertices v 1 to v m to be a clique through of community c</p><formula xml:id="formula_4">p(v 1 , v 2 , . . . , v m )</formula><p>The probability of m vertices v 1 to v m to be a clique through of any one community</p><formula xml:id="formula_5">⊙(F v 1 , F v 2 , . . . , F vm ) Sum of the entrywise product from F v 1 to F vm , i.e., C c =1 m i =1 F v i c G v (v sm |v s 1 , . . . , v s m−1 ) The vertex generator based on selected vertices v s 1 , . . . , v s m−1 in vertex subset generation pro- cess p vv (v i |v c )</formula><p>The relevance probability of v i given v c with root v v in random walk process</p><p>The generator G and discriminator D are combined by playing a minimax game: generator G would try to perfectly approximate p t r ue (m|v c ) and generate the most likely vertex subsets similar to real motifs covering v c to fool the discriminator, while discriminator D would try to distinguish between ground-truth motifs from p t r ue (m|v c ) and the ones generated by G. Formally, G and D act as two opponents in the following two-player minimax game with the joint value function V (G, D):</p><formula xml:id="formula_6">min θ G max θ D V (G, D) = V c =1 E m∼pt r ue (·|vc ) [log D(m; θ D )] + E s ∼G(s |vc ;θ G ) [log(1 − D(s; θ D ))] .<label>(1)</label></formula><p>Based on Eq. (1), the optimal G and D can be learned by alternatively maximizing (D) and minimizing (G) the value function V (G, D). The CommunityGAN framework is illustrated in <ref type="figure" target="#fig_5">Figure 3</ref>. Discriminator D is trained with positive samples from p t rue (·|v c ) and negative samples from G(·|v c ; θ G ), and generator G is updated with policy gradient technique <ref type="bibr" target="#b21">[22]</ref> under the guidance of D (detailedly described later in this section). Competition between G and D drives both of them to improve until G is indistinguishable from the true motif distribution p t r ue .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">CommunityGAN Optimization</head><p>Given positive samples from true motif distribution p t r ue and negative samples from the generator G, the discriminator aims to maximize the log-probability of correctly classifying these samples, which could be solved by gradient ascent if D is differentiable for </p><formula xml:id="formula_7">( | ; ) c G G v   ( | ) true c p v  ( , ) D D  </formula><formula xml:id="formula_8">θ D , i.e., ∇ θ D V (G, D) = V c =1 E m∼pt r ue (·|vc ) [∇ θ D log D(m; θ D )] + E s ∼G (s |vc ;θ G ) [∇ θ D log(1 − D(s; θ D ))] .<label>(2)</label></formula><p>In contrast to the discriminator, the objective of the generator is to minimize the log-probability that the discriminator correctly distinguishes samples from G. Because the sampling of s is discrete, we follow <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b32">33]</ref> to compute the gradient of V (G, D) with respect to θ G by policy gradient:</p><formula xml:id="formula_9">∇ θ G V (G, D) = ∇ θ G V c =1 E s ∼G(·|vc ) [log(1 − D(s))] = V c =1 E s ∼G (·|vc ) [∇ θ G log G(s |v c ) log(1 − D(s))].</formula><p>(3)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">A Naive Implementation of D and G</head><p>A naive implementation of the discriminator and generator is based on sigmoid and softmax functions, respectively.</p><p>For the discriminator D, intuitively we can define it as the multiplication of the sigmoid function of the inner product of every two vertices in the input vertex subset s:</p><formula xml:id="formula_10">D(s) = (u,v )∈s,u v σ (d ⊤ u · d v ),<label>(4)</label></formula><p>where d u , d v ∈ R k are the k-dimensional representation vectors for discriminator D of vertices u and v respectively, and θ D is the union of all d v 's. For the implementation of G, to generate a vertex subset s covering vertex v c , we can regard the subset as a sequence of vertices</p><formula xml:id="formula_11">(v s 1 , v s 2 , . . . , v s m ) where v s 1 = v c .</formula><p>Then the generator G can be defined as follows:</p><formula xml:id="formula_12">G(s |v c ) =G v (v s 2 |v s 1 )G v (v s 3 |v s 1 , v s 2 ) · · · G v (v sm |v s 1 , . . . , v s m−1 ).<label>(5)</label></formula><p>Notably, in Eq. (5), the generation of v s m is based on vertices from v s 1 to v s m−1 , not only on v s m−1 . Because if we generate v s m based only on v s m−1 , it will be very likely that vertex v s m and the other vertices belong to different communities. For example, vertices from v s 1 to v s m−1 are students in one university, while vertex v s m is the parent of v s m−1 . Simply, we can know the probability of the vertex subset s being a clique will be very low. Thus, we generate v s m based on all the vertices from v s 1 to v s m−1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Community Affiliation Network</head><p>Nonnegative Affiliation weight matrix For the implementation of the vertex generator G v , straightforwardly, we can define it as a softmax function over all other vertices, i.e.,</p><formula xml:id="formula_13">. . . . . . . . . . . . . . . . . . 1 c 2 c 3 c 3 v 2 v 1 v F 1,1 F 1,2 F 1,3 F 2,3 F 2,2 F 2,1 F 3,1 F 3,2</formula><formula xml:id="formula_14">G v (v sm |v s 1 , . . . , v s m−1 ) = exp( m−1 i =1 g ⊤ vs m g vs i ) v (vs 1 , . . .,vs m−1 ) exp( m−1 i =1 g ⊤ v g vs i ) ,<label>(6)</label></formula><p>where g v ∈ R k is the k-dimensional representation vectors for generator G v of vertex v, and θ G is the union of all g v 's.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Graph AGM</head><p>Sigmoid and softmax function provide concise and intuitive definitions for the motif discrimination in D s and vertex generation in G v , but they have three limitations in community detection task: 1) To detect community, after learning the vertex representation vectors based on Eq. <ref type="formula" target="#formula_10">(4)</ref> and <ref type="formula" target="#formula_14">(6)</ref>, we still need to adopt some clustering algorithms to detect the communities. According to <ref type="bibr" target="#b28">[29]</ref>, the overlap is indeed a significant feature of many real-world social networks. Moreover, in <ref type="bibr" target="#b29">[30]</ref>, the authors showed that in some real-world datasets, one vertex might belong to tens of communities simultaneously. However, general clustering algorithms cannot handle such dense overlapping.</p><p>2) The calculation of softmax in Eq. (6) involves all vertices in the graph, which is computationally inefficient.</p><p>3) The graph structure encodes rich information of proximity among vertices, but the softmax in Eq. (6) completely ignores it.</p><p>To address these problems, in CommunityGAN we propose a novel implementation for the discriminator and generator, which is called Graph AGM.</p><p>AGM (Affiliation Graph Model) <ref type="bibr" target="#b29">[30,</ref><ref type="bibr" target="#b30">31]</ref> is based on the idea that communities arise due to shared group affiliation, and views the whole network as a result generated by a community-affiliation graph model. The framework of AGM is illustrated in <ref type="figure">Figure 4</ref>, which can be either seen as a bipartite network between vertices and communities, or written as a nonnegative affiliation weight matrix. In AGM, each vertex could be affiliated to zero, one or more communities. If vertex u is affiliated to community c, there will be a nonnegative strength F uc of this affiliation. For any community c ∈ C, it connects its member vertices u, v with probability 1 − exp(−F uc · F vc ). Moreover, each community c creates edges independently. If the pair of vertices u, v are connected multiple times through different communities, the probability is 1 − exp(− c F uc · F vc ). So that the probability that vertices u, v are connected (through any possible communities) is p(u, v)</p><formula xml:id="formula_15">= 1 − exp(−F ⊤ u · F v ),</formula><p>where F u and F v are the nonnegative C-dimensional affiliation vectors for vertices u and v respectively. We extend AGM from edge generation to motif generation. For any m vertices v 1 to v m , we assume that the probability of them to be a clique through of community c is defined as</p><formula xml:id="formula_16">p c (v 1 , v 2 , . . . , v m ) = 1 − exp(− m i=1 F v i c ).</formula><p>Then the probability that these m vertices compose a clique through any possible communities can be calculated via</p><formula xml:id="formula_17">p(v 1 , v 2 , . . . , v m ) = 1 − c (1 − p c (v 1 , v 2 , . . . , v m )) = 1 − exp(− ⊙ (F v 1 , F v 2 , . . . , F vm )),<label>(7)</label></formula><p>where</p><formula xml:id="formula_18">⊙(F v 1 , F v 2 , . . . , F v m ) means the sum of the entrywise prod- uct from F v 1 to F v m , i.e., C c=1 m i=1 F v i c .</formula><p>Then the discriminator, which was defined as the product of sigmoid in a straightforward way, can be redefined as</p><formula xml:id="formula_19">D(s) = 1 − exp(− ⊙ (d v 1 , d v 2 , . . . , d vm )),<label>(8)</label></formula><p>where d v ∈ R C is the nonnegative C-dimensional representation vectors of vertex v for discriminator D, and θ D is the union of all d v 's. Moreover, the generator G v can be redefined as the softmax function over all other possible vertices to compose a clique with m − 1 chosen vertices:</p><formula xml:id="formula_20">G v (v sm |v s 1 , . . . , v s m−1 ) = 1 − exp(− ⊙ (g vs 1 , . . . , g vs m )) v (vs 1 , . . .,vs m−1 ) 1 − exp(− ⊙ (g vs 1 , . . . , g vs m−1 , g v )) ,<label>(9)</label></formula><p>where g v ∈ R C is the nonnegative C-dimensional representation vectors of vertex v for generator G v , and θ G is the union of all g v 's. With this setting, the learned vertex representation vectors g v will represent the affiliation weight between vertex v and communities, which means we need no additional clustering algorithms to find the communities and the first aforementioned limitation is omitted. To further overcome the other two limitations, inspired by <ref type="bibr" target="#b24">[25]</ref>, we design graph AGM as follows. To calculate G v (v s m |v s 1 , . . . , v s m−1 ), we first assume there is a virtual vertex v v which is connected to all the vertices in the union of neighbors of vertices from v s 1 to v s m−1 , i.e., N (v v ) = N (v s 1 ) ∪ · · · ∪ N (v s m−1 ) where N (v) represents the set of neighbors of vertex v. Moreover, we assign g v v = g v s 1 • · · · • g v s m−1 , i.e., the representation vector of v v is the entrywise product of the representation vectors of vertices from v s 1 to v s m−1 . For simplicity, we substitute</p><formula xml:id="formula_21">G v (v s m |v s 1 , . . . , v s m−1 ) with G v (v s m |v v ).</formula><p>Then we adopt random walk starting from the virtual vertex v v based on a well designed probability distribution (Eq. (10)). During the process of random walk, if the currently visited vertex is v and generator G decides to visit v's previous vertex, then v is chosen as the generated vertex and the random walk process stops. The whole process for generating a vertex subset with the size of 3 is illustrated in <ref type="figure">Figure 5</ref>.</p><p>Moreover, in the random walk process, we wish the walk path is always relevant to the root vertex v v for maximizing the probability of the generated vertex subset to be a motif. So that for a given vertex v c and one of its neighbors v i ∈ N (v c ), we define the relevance probability of v i given v c as If we denote the path of random walk as P r = (v r 1 , v r 2 , . . . , v r n ) where v r 1 = v v , the probability for selecting this path will be</p><formula xml:id="formula_22">p vv (v i |v c ) =</formula><formula xml:id="formula_23">p v v (v r n−1 |v r n ) · n−1 i=1 p v v (v r i +1 |v r i ).</formula><p>In the policy gradient, we regard the selection of this path as an action and the target is to maximize its reward from D. Thus, although there may be multiple paths between v r 1 and v r n , if we have selected the path P r , we will optimize the policy gradient on it and neglect other paths. In other words, if we select the path P r , we assign G v (v s m |v v ) as follows:</p><formula xml:id="formula_24">G v (v sm |v v ) = p vv (v r n−1 |v rn ) · n−1 i =1 p vv (v r i +1 |v r i ).<label>(11)</label></formula><p>Finally, the overall solution of CommunityGAN is summarized in Algorithm 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Other Issues</head><p>Model Initialization. We have two methods to initialize the generator G and the discriminator D. The first is that we can deploy AGM model on the graph to learn a community affiliation vector F i for each vertex v i , and then we can set</p><formula xml:id="formula_25">д v i = d v i = F i directly.</formula><p>The second is that we can use locally minimal neighborhoods <ref type="bibr" target="#b6">[7]</ref> to initialize θ G and θ D . We can regard each vertex v i along with its neighbors N (v i ), denoted as C(v i ), as a community. Community C ( v i ) is called locally minimal if C ( v i ) has lower conductance than all the C ( v j ) for vertices v j who are connected to vertex v i . Gleich and Seshadhri <ref type="bibr" target="#b6">[7]</ref> have empirically showed that the locally minimal neighborhoods are good seed sets for community detection algorithms. For a node v i who belongs to a locally minimal neighborhood c, we initialize</p><formula xml:id="formula_26">F v i c = 1, otherwise F v i c = 0.</formula><p>The second method can save the training time of AGM on the graph. However, we find that the performance of such initialization is a little lower than the first initialization. To achieve best performance, in this paper, we choose to adopt the first initialization method. Moreover, in the efficiency analysis experiment (refer to §6.4), the training time of CommunityGAN includes the time of the pre-training process.</p><p>Determining community membership. After learning parameters θ G and θ D , we need to determine the "hard" community membership of each node. We achieve this by thresholding θ G and θ D with a threshold δ . The basic intuition is that if two nodes belong to the same community c, then the probability of having a link between them through community c should be larger than the background edge probability ϵ = 2E/V (V − 1). Following this idea, we can obtain the threshold δ as below:</p><formula xml:id="formula_27">1 − exp(−δ 2 ) = ϵ ⇒ δ = − log(1 − ϵ )<label>(12)</label></formula><p>With δ obtained, we consider vertex v i belonging to community c if g v i c ≥ δ or d v i c ≥ δ for generator G and discriminator D respectively.</p><p>Choosing the number of communities. We follow the method proposed in <ref type="bibr" target="#b0">[1]</ref> to choose the number of communities C. Specifically, we reserve 20% of links for validation and learn the model parameters with the remaining 80% of links for different C. After that, we use the learned parameters to predict the links in validation set and select the C with the maximum prediction score as the number of communities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">SYNTHETIC DATA EXPERIMENTS</head><p>In this section, in order to evaluate the effectiveness of Commu-nityGAN, we conduct a series of experiments based on synthetic datasets. Specifically, we conduct two experiments to prove: 1) the ability of CommunityGAN to solve the dense overlapping problem; 2) the efficacy of motif-level generation and discrimination. To simulate the real-world graphs with ground-truth overlapping communities, we adopt CKB Graph Generator -a method that can generate large random social graphs with realistic overlapping community structure <ref type="bibr" target="#b3">[4]</ref> -to generate such synthetic graphs. The </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Evaluation Metric</head><p>The availability of ground-truth communities allows us to quantitatively evaluate the performance of community detection algorithms. Given a graph G = (V, E, M), we denote the set of ground-truth communities as C * and the set of detected communities asĈ, where each ground-truth community c * i ∈ C * and each detected communityĉ i ∈Ĉ are both defined by a set of their member nodes. We consider the average F1-Score as the metric to measure the performance of the detected communitiesĈ. To compute the F1-Score between detected communities and ground-truth communities, we need to determine which c * i ∈ C * corresponds to whichĉ j ∈Ĉ. We define final F1-Score as the average of the F1-score of the bestmatching ground-truth community to each detected community, and the F1-score of the best-matching detected community to each ground-truth community:</p><formula xml:id="formula_28">F 1(C * ,Ĉ) = 1 2 ( 1 C * c * i ∈C * max c j ∈Ĉ F 1(c * i ,ĉ j ) + 1 C ĉ i ∈Ĉ max c * j ∈C * F 1(c * j ,ĉ i ))<label>(13)</label></formula><p>The higher F1-Score means that the detected communities are more accurate and have better qualities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Datasets</head><p>To prove CommunityGAN's ability to solve the dense overlapping problem, we utilize the CKB Graph Generator to generate synthetic graphs with ground-truth communities of different overlapping levels. All the parameters of CKB are set as default except two: 'power law exponent of user-community membership distribution (β 1 )' and 'power law exponent of community size distribution (β 2 )' <ref type="bibr" target="#b3">[4]</ref>. By setting β 1 = β 2 = 2.9, 2.8, 2.76, 2.73, 2.7, 2.67, we can get a series of graphs with different levels of community overlapping. The detailed statistics of these graphs are shown in <ref type="table" target="#tab_4">Table 4</ref>. We can see that the percentages of overlapped communities (denoted by P) are all 100%, indicating that all the communities overlap more or less with others. Besides, with the decrease of β 1 and β 2 , the average number of community memberships per vertex (denoted by A) increases, which means the density of community overlapping is becoming higher and higher.  <ref type="figure">Figure 6</ref>: Performance of methods on the synthetic graphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Comparative Methods</head><p>We compare CommunityGAN with 7 baseline methods, of which 3 are traditional overlapping community detection methods (MMSB, CPM and AGM), 3 are recent graph representation learning methods (node2vec, LINE and GraphGAN), and 1 combines graph representation learning as well as community detection (ComE).</p><p>MMSB <ref type="bibr" target="#b0">[1]</ref> is one of the representatives of overlapping community detection methods based on dense subgraph extraction. CPM <ref type="bibr" target="#b17">[18]</ref> builds up the communities from k-cliques and allows overlapping between the communities in a natural way. AGM <ref type="bibr" target="#b30">[31]</ref> is a framework which can model densely overlapping community structures. Node2vec <ref type="bibr" target="#b7">[8]</ref> adopts biased random walk and Skip-Gram to learn vertex embeddings. LINE <ref type="bibr" target="#b23">[24]</ref> preserves the first-order and second-order proximity among vertices in the graph. GraphGAN <ref type="bibr" target="#b24">[25]</ref> unifies generative and discriminative graph representation learning methodologies via adversarial training in a minimax game. ComE <ref type="bibr" target="#b2">[3]</ref> jointly solves the graph representation learning and community detection problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Experiment Setup</head><p>For all the experiments, we perform stochastic gradient descent to update parameters with learning rate 0.001. In each iteration, m and n are both 5, i.e., 5 positive and 5 negative vertex subsets will be sampled or generated for each vertex (refer to Algorithm 1), and then we update G and D on these vertex subsets for 3 times. The final learned communities and vertex representations are g v 's. Hyperparameter settings for all baselines are as default. For CommunityGAN, CPM, AGM, MMSB and ComE, which directly output the communities for vertices, we fit the network into them to detect communities directly. For node2vec, LINE and GraphGAN, which can only output the representation for vertices, we fit the network into them and apply K-means to the learned embeddings to get the communities. Because of the randomness of K-means, we repeat 5 times and report the average results. Moreover, the number of ground-truth communities is set as the input parameters to the community detection models and K-means.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Ability of CommunityGAN to Solve Dense</head><p>Overlapping Problem</p><p>For each method and each dataset, we calculate the average value of F1-Score. The performance of 8 methods on the series of graphs is shown in <ref type="figure">Figure 6</ref>. As we can see: 1) CommunityGAN significantly outperforms all the baselines on all the synthetic graphs. 2) Although CommunityGAN is based on AGM and utilizes AGM as the pre-train method, with the minimax game competition between the discriminator and generator, CommunityGAN achieves huge improvements compared to AGM. 3) On the whole, the performance of 4 graph representation learning methods (node2vec, LINE, Graph-GAN, ComE) falls with the increase of overlapping density among communities, while 3 traditional overlapping community detection methods (MMSB, CPM, AGM) keep relatively steady. Among these 3 methods, the only exception is that the performance of MMSB and AGM drops largely on ckb-267. One possible reason is that the average degree of ckb-267 increases significantly compared to other graphs, and thus the performance of the two methods are affected. However, although based on AGM, CommunityGAN still performs very well on the graph ckb-267 with the well designed positive/negative sampling and the minimax game between the generator and discriminator.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.6">Efficacy of Motif-Level Generation and Discrimination</head><p>To evaluate the efficacy of the motif-level generation and discrimination, we tune the size of cliques in the training process of Commu-nityGAN. <ref type="figure" target="#fig_8">Figure 7</ref> shows the performance of CommunityGAN with different sizes of cliques on the series of synthetic graphs. We can find that, generally, cliques with a size of 4 or 5 can reach the best performance. It means that, compared to edges and triangles, the larger cliques in graphs correspond more to the community structure. In other words, community detection methods should not only focus on the edges in the graph, but also pay more attention to the motifs, especially larger motifs. However, we can see that in most graphs the performance falls when CommunityGAN generates and discriminates 6-vertex cliques. Our explanation is that too-large cliques are rare in graphs, which can only cover a relatively small number of nodes. Because of these uncovered nodes, few positive samples can be used in the training process, which in turn causes CommunityGAN to fail to learn appropriate representation vectors.</p><p>To prove such an explanation, we have counted the number of cliques and number of vertices covered by such cliques, as shown in <ref type="table">Table 5</ref>. We can see that no matter whether the number of cliques increases or not, the number of covered vertices does not change very much from 2-clique to 5-clique. Thus CommunityGAN can benefit from the larger cliques to gather better community structure, and then reaches the best performance when clique size is 4 </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Community Detection</head><p>The community detection experiment is conducted on three networks with ground-truth community memberships, which allows us  to quantify the accuracy of community detection methods by evaluating the level of correspondence between detected and groundtruth communities.</p><p>Setup. In the community detection experiment, all the baselines and setups are the same as the synthetic data experiments, whose details refer to §5.4.</p><p>Evaluation Metric. Besides the F1-Score described in synthetic dataset experiments (refer to §5.1), to comprehensively evaluate the performance of methods, we also introduce the Normalized Mutual Information (NMI) in the community detection experiment. NMI is a measure of similarity borrowed from information theory. Later, it is extended to measure the quality of overlapping communities. Similar to F1-Score, the higher NMI means the better performance. Please refer to <ref type="bibr" target="#b12">[13]</ref> for details.</p><p>Results. <ref type="table" target="#tab_6">Table 6</ref> shows the F1-Score and NMI of 8 methods on 3 networks, respectively. As we can see: 1) Performance of CPM, MMSB and LINE is relatively poor in community detection, which means they cannot capture the pattern of community structure in graphs well. 2) Node2vec, ComE and GraphGAN perform better than CPM, MMSB and LINE. One possible reason is that node2vec and GraphGAN adopt the random walk to capture the vertex context which is similar to community structure in some way, and ComE solves the network embedding and community detection task in one unified framework. 3) CommunityGAN outperforms all the baselines (including its pre-train method AGM) in community detection task. Specifically, CommunityGAN improves F1-Score by 7.9% (on Youtube) to 21.0% (on Amazon) and improves NMI by at most 34.3% (on Amazon). Our explanation is that the consideration of dense community overlapping provides CommunityGAN a higher learning flexibility than the non-overlapping or sparse overlapping community detection baselines. Moreover, the minimax game between the generator and discriminator drives Communi-tyGAN to gain significant performance improvements based on AGM.</p><p>To intuitively understand the learning stability of Community-GAN, we further illustrate the learning curves of the generator and the discriminator on the three datasets in <ref type="figure" target="#fig_10">Figure 8</ref>. Because the F1-Score on the three datasets differs very much, we only demonstrate the relative increase in the score. As we can see, the generator performs outstandingly well after convergence, while the performance of the discriminator falls a little or boosts at first and then falls. Maybe it is because that the discriminator aims to distinguish ground truth from generated samples better. However, the generated samples are all around the center vertex, which causes the discriminator to lose some global discrimination ability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Clique Prediction</head><p>In clique prediction, our goal is to predict whether a given subset of vertices is a clique. Therefore, this task shows the performance of graph local structure extraction ability of different graph representation learning methods.</p><p>Setup. In the clique prediction experiment, because some traditional community detection methods (including MMSB and CPM) cannot predict the existence of edges among vertices, these methods are omitted in this experiment. To analyze the effect of motif generation and discrimination in CommunityGAN, in this experiment, we have evaluated the prediction for 2-clique (same to edge), 3-clique and 4-clique. With the size of cliques determined, we randomly hide some cliques, which cover 10% of edges, in the original graph as ground truth, and use the left graph to train all graph representation learning models. After training, we obtain the representation vectors for all vertices and use logistic regression method to predict the probability of being clique for a given vertex set. Our test set consists of the hidden vertex sets (cliques) in the original graph as the positive samples and the randomly selected non-fully connected vertex sets as negative samples with the equal number.</p><p>Results. We use arXiv-AstroPh and arXiv-GrQc as datasets, and report the results of AUC in <ref type="table" target="#tab_7">Table 7</ref>. As we can see, even though in 2-clique (edge) prediction CommunityGAN does not always get the highest score, CommunityGAN outperforms all the baselines in both 3-clique and 4-clique prediction. For example, on arXiv-GrQc, CommunityGAN achieves gains of 0.40% to 74.52% and 4.60% to 79.03% in 3-clique and 4-clique prediction, respectively. This indicates that though CommunityGAN is designed for community detection, with the design of motif generation and discrimination, it can still effectively encode the information of clique structures into the learned representations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Efficiency analysis</head><p>In this paper, we propose Graph AGM for efficiently generating the most likely motifs with graph structure awareness. Because of the random walk process, in which the exact time complexity is not easy to infer, we evaluate the efficiency of CommunityGAN by directly comparing the training time with baselines. In this evaluation, the number of threads is set as 16 if the model supports parallelization and other parameters for baselines are as default. <ref type="figure" target="#fig_11">Figure 9</ref> illustrates the performance and training time. Notably, the training time of CommunityGAN includes the time of the pretraining process. Even though CommunityGAN is not the fastest model, the training time of CommunityGAN is still acceptable and its performance significantly outperforms the faster models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION</head><p>In this paper we proposed CommunityGAN that jointly solves the overlapping community detection and graph representation learning. Unlike the embedding of general graph learning algorithms in which the vector values have no meanings, the embedding in Com-munityGAN indicates the membership strength of vertices to communities, which enables CommunityGAN to detect densely overlapped communities. Then a specifically designed GAN is adopted to optimize such embedding. Through the minimax game of motiflevel generator and discriminator, both of them can boost their performance and finally output better community structures. We adopted CKB Graph Generator to create a series of synthetic graphs with ground-truth communities. Two experiments were conducted on these graphs to prove the ability of CommunityGAN to solve dense overlapping problem and its efficacy of motif generation and discrimination. Additionally, to complement the experiments on the synthetic datasets, we did experiments on five real-world datasets in two scenarios, where the results demonstrate that Community-GAN substantially outperforms baselines in all experiments due to its specific embedding design and motif-level optimization.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>This paper is published under the Creative Commons Attribution 4.0 International (CC-BY 4.0) license. Authors reserve their rights to disseminate the work on their personal and corporate Web sites with the appropriate attribution. WWW '19, May 13-17, 2019, San Francisco, CA, USA © 2019 IW3C2 (International World Wide Web Conference Committee), published under Creative Commons CC-BY 4.0 License. ACM ISBN 978-1-4503-6674-8/19/05. https://doi.org/10.1145/3308558.3313564</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>of vertices to communities and the strength of memberships (C: community; V: vertex) community The input-output overview of CommunityGAN.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>communities and then present our empirical observations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 2 :</head><label>2</label><figDesc>Normalized probability for vertices to be a clique as a function of number of shared communities. Probabilities are scaled so that maximum value is one.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 3 :</head><label>3</label><figDesc>Framework of CommunityGAN</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>F 3 , 3 FFigure 4 :</head><label>334</label><figDesc>AGM framework. V: vertices; C: communities; F : affiliation of vertices to communities.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 5 : 8 9</head><label>589</label><figDesc>The generation process for vertex subset s. Blue arrows indicate the path of random walk. At the two blue vertices, because the vertex generator decides to visit the previous vertex, the random walk finishes and the blue vertices are selected.Algorithm 1: CommunityGAN framework Input: number of communities c, size of discriminating samples m, size of generating samples n. Output: generator G(s |v c ; θ G ), discriminator D(s, θ D ). 1 Initialize and pre-train G(s |v c ; θ G ) and D(s, θ D ); 2 while CommunityGAN not converge do 3 for G-steps do 4 Generate n vertex subsets from G(s |v c ; θ G ) for each vertex v c based on the random walk process; 5 Update θ G according to Eq. (3), (5), (10) and (11); Sample m positive vertex subsets from p t r ue and s negative vertex subsets from G(s |v c ; θ G ) for each vertex v c ; Update θ D according to Eq. (2) and (8); G(s |v c ; θ G ) and D(s, θ D );</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 7 :</head><label>7</label><figDesc>Performance of CommunityGAN with different size of cliques on the synthetic graphs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>3 http://snap.stanford.edu/data/#canets</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 8 :</head><label>8</label><figDesc>Learning curves of the generator and the discriminator of CommunityGAN in community detection.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 9 :</head><label>9</label><figDesc>Performance as training time (Sec.).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>arXiv:1901.06631v3 [cs.AI] 16 Dec 2019</figDesc><table><row><cell>F1,1</cell><cell>F1,2</cell></row><row><cell>F2,1</cell><cell>F2,2</cell></row><row><cell>F3,1 . . .</cell><cell>F3,2 . . .</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Dataset statistics. V : number of vertices, E: number of edges, T : number of 3-clique (triangle), C: number of communities, A: community memberships per vertex.</figDesc><table><row><cell>Dataset</cell><cell>V</cell><cell>E</cell><cell>T</cell><cell>C</cell><cell>A</cell></row><row><cell>LiveJournal</cell><cell cols="4">4.0M 34.9M 178M 310K</cell><cell>3.09</cell></row><row><cell>Orkut</cell><cell cols="5">3.1M 120M 528M 8.5M 95.93</cell></row><row><cell>Youtube</cell><cell>1.1M</cell><cell>3.0M</cell><cell>3.1M</cell><cell>30K</cell><cell>0.26</cell></row><row><cell>DBLP</cell><cell>0.43M</cell><cell>1.3M</cell><cell cols="2">2.2M 2.5K</cell><cell>2.57</cell></row><row><cell>Amazon</cell><cell cols="3">0.34M 0.93M 0.67M</cell><cell cols="2">49K 14.83</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2</head><label>2</label><figDesc></figDesc><table><row><cell>: The occurrence probability of cliques for vertices</cell></row><row><cell>sampled from all vertices or from one community. R: from</cell></row><row><cell>all vertices. C: from one community.</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 :</head><label>3</label><figDesc>Notations used in this paper</figDesc><table><row><cell>Symbol</cell><cell>Description</cell></row><row><cell>G</cell><cell>The studied graph</cell></row><row><cell>V, E, M, C</cell><cell>Set of vertices, edges, motifs, communities in</cell></row><row><cell></cell><cell>graph G</cell></row><row><cell>V , E, M, C</cell><cell>Number of vertices, edges, motifs, communities</cell></row><row><cell></cell><cell>in graph</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 4 :</head><label>4</label><figDesc>Synthetic Graphs statistics. V : number of vertices, E: number of edges, C: number of communities, A: average number of community memberships per vertex, P: percentage of communities that have overlapping with others</figDesc><table><row><cell>Graph</cell><cell>V</cell><cell>E</cell><cell>C</cell><cell>A</cell><cell>P</cell></row><row><cell cols="6">ckb-290 1078 29491 226 2.76 100%</cell></row><row><cell cols="6">ckb-280 1044 30055 252 3.03 100%</cell></row><row><cell cols="6">ckb-276 1023 38775 339 3.74 100%</cell></row><row><cell cols="6">ckb-273 1018 28025 372 3.94 100%</cell></row><row><cell cols="6">ckb-270 1007 30740 371 4.20 100%</cell></row><row><cell cols="6">ckb-267 1123 65813 381 4.57 100%</cell></row><row><cell cols="6">code of CommunityGAN (including pre-training model) and demo</cell></row><row><cell cols="2">datasets are available online 1 .</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 6 :</head><label>6</label><figDesc>F1-Score and NMI on community detection.</figDesc><table><row><cell></cell><cell>F1-Score</cell><cell></cell><cell></cell></row><row><cell>Model</cell><cell cols="3">Amazon Youtube DBLP</cell></row><row><cell>MMSB</cell><cell>0.366</cell><cell>0.124</cell><cell>0.104</cell></row><row><cell>CPM</cell><cell>0.214</cell><cell>0.058</cell><cell>0.318</cell></row><row><cell>AGM</cell><cell>0.711</cell><cell>0.158</cell><cell>0.398</cell></row><row><cell>node2vec</cell><cell>0.550</cell><cell>0.288</cell><cell>0.265</cell></row><row><cell>LINE</cell><cell>0.532</cell><cell>0.170</cell><cell>0.208</cell></row><row><cell>GraphGAN</cell><cell>0.518</cell><cell>0.303</cell><cell>0.276</cell></row><row><cell>ComE</cell><cell>0.562</cell><cell>0.213</cell><cell>0.240</cell></row><row><cell>CommunityGAN</cell><cell>0.860</cell><cell>0.327</cell><cell>0.456</cell></row><row><cell></cell><cell>NMI</cell><cell></cell><cell></cell></row><row><cell>Model</cell><cell cols="3">Amazon Youtube DBLP</cell></row><row><cell>MMSB</cell><cell>0.068</cell><cell>0.031</cell><cell>0.000</cell></row><row><cell>CPM</cell><cell>0.027</cell><cell>0.000</cell><cell>0.066</cell></row><row><cell>AGM</cell><cell>0.635</cell><cell>0.025</cell><cell>0.059</cell></row><row><cell>node2vec</cell><cell>0.370</cell><cell>0.071</cell><cell>0.068</cell></row><row><cell>LINE</cell><cell>0.248</cell><cell>0.070</cell><cell>0.027</cell></row><row><cell>GraphGAN</cell><cell>0.417</cell><cell>0.049</cell><cell>0.083</cell></row><row><cell>ComE</cell><cell>0.413</cell><cell>0.091</cell><cell>0.059</cell></row><row><cell>CommunityGAN</cell><cell>0.853</cell><cell>0.091</cell><cell>0.153</cell></row><row><cell cols="4">Amazon is collected by crawling Amazon website. The ver-</cell></row><row><cell cols="4">tices represent products; the edges indicate the frequently</cell></row><row><cell cols="4">co-purchase relationships; the ground-truth communities</cell></row><row><cell cols="4">are defined by the product categories in Amazon. This graph</cell></row><row><cell cols="3">has 3,225 vertices and 10,262 edges.</cell><cell></cell></row><row><cell cols="4">Youtube is a network of social relationships of Youtube web-</cell></row><row><cell cols="4">site users. The vertices represent users; the edges indicate</cell></row><row><cell cols="4">friendships among the users; the user-defined groups are</cell></row><row><cell cols="4">considered as ground-truth communities. This graph has</cell></row><row><cell cols="2">4,890 vertices and 20,787 edges.</cell><cell></cell><cell></cell></row><row><cell cols="4">DBLP is a co-authorship network from DBLP. The vertices</cell></row><row><cell cols="4">represent researchers; the edges indicate the co-author rela-</cell></row><row><cell cols="4">tionships; authors who have published in a same journal or</cell></row><row><cell cols="4">conference form a community. This graph has 10,824 vertices</cell></row><row><cell>and 38,732 edges.</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">Datasets without ground-truth communities. 3</cell><cell></cell></row><row><cell cols="4">arXiv-AstroPh is from the e-print arXiv and covers scientific</cell></row><row><cell cols="4">collaborations between authors with papers submitted to</cell></row><row><cell cols="4">the Astro Physics category. The vertices represent authors,</cell></row><row><cell cols="4">and the edges indicate co-author relationships. This graph</cell></row><row><cell cols="3">has 18,772 vertices and 198,110 edges.</cell><cell></cell></row><row><cell cols="4">arXiv-GrQc is also from arXiv and covers scientific collabora-</cell></row><row><cell cols="4">tions between authors with papers submitted to the General</cell></row><row><cell cols="4">Relativity and Quantum Cosmology categories. This graph</cell></row><row><cell cols="3">has 5,242 vertices and 14,496 edges.</cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 7 :</head><label>7</label><figDesc>AUC on clique prediction.</figDesc><table><row><cell></cell><cell cols="2">arXiv-AstroPh</cell><cell></cell></row><row><cell>Model</cell><cell cols="3">2-clique 3-clique 4-clique</cell></row><row><cell>AGM</cell><cell>0.919</cell><cell>0.987</cell><cell>0.959</cell></row><row><cell>node2vec</cell><cell>0.579</cell><cell>0.514</cell><cell>0.544</cell></row><row><cell>LINE</cell><cell>0.918</cell><cell>0.980</cell><cell>0.963</cell></row><row><cell>GraphGAN</cell><cell>0.799</cell><cell>0.859</cell><cell>0.855</cell></row><row><cell>ComE</cell><cell>0.904</cell><cell>0.951</cell><cell>0.953</cell></row><row><cell>CommunityGAN</cell><cell>0.923</cell><cell>0.990</cell><cell>0.970</cell></row><row><cell></cell><cell>arXiv-GrQc</cell><cell></cell><cell></cell></row><row><cell>Model</cell><cell cols="3">2-clique 3-clique 4-clique</cell></row><row><cell>AGM</cell><cell>0.900</cell><cell>0.980</cell><cell>0.871</cell></row><row><cell>node2vec</cell><cell>0.632</cell><cell>0.569</cell><cell>0.534</cell></row><row><cell>LINE</cell><cell>0.969</cell><cell>0.989</cell><cell>0.880</cell></row><row><cell>GraphGAN</cell><cell>0.756</cell><cell>0.880</cell><cell>0.728</cell></row><row><cell>ComE</cell><cell>0.924</cell><cell>0.962</cell><cell>0.914</cell></row><row><cell>CommunityGAN</cell><cell>0.904</cell><cell>0.993</cell><cell>0.956</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">− exp(− ⊙ (g v i , g vc , g vv )) v j ∈N (vc ) 1 − exp(− ⊙ (g v j , g vc , g vv )) ,(10)which is actually a softmax function over N (v c ) for composing clique with vertices v v and v c .</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6">REAL-WORLD SCENARIOSTo complement the previous experiments, in this section, we evaluate the performance of CommunityGAN on a series of real-world datasets. Specifically, we choose two application scenarios for experiments, i.e., community detection and clique prediction.6.1 DatasetsWe evaluate our model using two categories of datasets, one with ground-truth communities and one without.Datasets with ground-truth communities.<ref type="bibr" target="#b1">2</ref> Because of the training time of some baselines, we only sample three subgraphs with 100 ground-truth communities as the experiment networks from these three large networks. 2 http://snap.stanford.edu/data/#communities</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">ACKNOWLEDGEMENTS</head></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.7">Discussion</head><p>With the two experiments on the series of synthetic graphs, we can draw the following conclusions:</p><p>• With the same special vector design as AGM, Community-GAN holds the ability to solve the dense overlapping problem. With the increase of overlapping among communities, the performance of CommunityGAN can maintain steadiness and does not fall like the baseline methods. • With the minimax game competition between the discriminator and generator, CommunityGAN gains significant performance improvements based on AGM. • With proper sizes, the motif-level generation and discrimination can help models learn better community structures compared to edge-level optimization.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Mixed membership stochastic blockmodels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Edo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Airoldi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>David</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><forename type="middle">E</forename><surname>Blei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><forename type="middle">P</forename><surname>Fienberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Xing</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="33" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">GraRep: Learning Graph Representations with Global Structural Information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shaosheng</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qiongkai</forename><surname>Xu</surname></persName>
		</author>
		<idno type="DOI">10.1145/2806416.2806512</idno>
		<ptr target="https://doi.org/10.1145/2806416.2806512" />
	</analytic>
	<monogr>
		<title level="m">CIKM. ACM</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="891" to="900" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Learning community embedding with community detection and node embedding on graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sandro</forename><surname>Cavallari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Vincent</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hongyun</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kevin</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chang</forename><surname>Chen-Chuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Erik</forename><surname>Cambria</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CIKM. ACM</title>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="377" to="386" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Distributed Generation of Billion-node Social Graphs with Overlapping Community Structure</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kyrylo</forename><surname>Chykhradze</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anton</forename><surname>Korshunov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nazar</forename><surname>Buzun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roman</forename><surname>Pastukhov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nikolay</forename><surname>Kuzyurin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Denis</forename><surname>Turdakov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hangkyu</forename><surname>Kim</surname></persName>
		</author>
		<editor>Complex Networks V, Pierluigi Contucci, Ronaldo Menezes, Andrea Omicini, and Julia Poncela-Casasnovas</editor>
		<imprint>
			<date type="published" when="2014" />
			<publisher>Springer International Publishing</publisher>
			<biblScope unit="page" from="199" to="208" />
			<pubPlace>Cham</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Adversarial Network Embedding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Quanyu</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qiang</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jian</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Wang</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1711.07838</idno>
		<ptr target="http://arxiv.org/abs/1711.07838" />
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Temporal link prediction by integrating content and structure information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sheng</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ludovic</forename><surname>Denoyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patrick</forename><surname>Gallinari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th ACM international conference on Information and knowledge management</title>
		<meeting>the 20th ACM international conference on Information and knowledge management</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="1169" to="1174" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Neighborhoods are good communities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">F</forename><surname>Gleich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Seshadhri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD&apos;12</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aditya</forename><surname>Grover</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jure</forename><surname>Leskovec</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1607.00653</idno>
		<ptr target="http://arxiv.org/abs/1607.00653" />
		<title level="m">node2vec: Scalable Feature Learning for Networks</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Community level diffusion extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhiting</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Junjie</forename><surname>Yao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data</title>
		<meeting>the 2015 ACM SIGMOD International Conference on Management of Data</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1555" to="1569" />
		</imprint>
	</monogr>
	<note>Bin Cui, and Eric Xing</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Semi-Supervised Classification with Graph Convolutional Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Thomas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Max</forename><surname>Kipf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Welling</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1609.02907</idno>
		<ptr target="http://arxiv.org/abs/1609.02907" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Using Triangles to Improve Community Detection in Directed Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christine</forename><surname>Klymko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">F</forename><surname>Gleich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tamara</forename><forename type="middle">G</forename><surname>Kolda</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1404.5874</idno>
		<ptr target="http://arxiv.org/abs/1404.5874" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Global landscape of protein complexes in the yeast Saccharomyces cerevisiae</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Nevan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerard</forename><surname>Krogan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Haiyuan</forename><surname>Cagney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gouqing</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xinghua</forename><surname>Zhong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexandr</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joyce</forename><surname>Ignatchenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shuye</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nira</forename><surname>Pu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron</forename><forename type="middle">P</forename><surname>Datta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tikuisis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">440</biblScope>
			<biblScope unit="page" from="637" to="643" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Detecting the overlapping and hierarchical community structure in complex networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrea</forename><surname>Lancichinetti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Santo</forename><surname>Fortunato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">János</forename><surname>Kertész</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">New Journal of Physics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page">33015</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Community Detection in Attributed Graphs: An Embedding Approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ye</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chaofeng</forename><surname>Sha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xin</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yanchun</forename><surname>Zhang</surname></persName>
		</author>
		<ptr target="https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/17142" />
	</analytic>
	<monogr>
		<title level="m">AAAI Conference on Artificial Intelligence</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Distributed Representations of Words and Phrases and their Compositionality. CoRR abs/1310</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tomas</forename><surname>Mikolov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ilya</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><surname>Dean</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1310.4546</idno>
		<ptr target="http://arxiv.org/abs/1310.4546" />
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page">4546</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Detecting community structure in networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename><surname>Mark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The European Physical Journal B-Condensed Matter and Complex Systems</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="321" to="330" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Modularity and community structure in networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename><surname>Mark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the national academy of sciences</title>
		<meeting>the national academy of sciences</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="volume">103</biblScope>
			<biblScope unit="page" from="8577" to="8582" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Uncovering the overlapping community structure of complex networks in nature and society</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gergely</forename><surname>Palla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Imre</forename><surname>Derényi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">435</biblScope>
			<biblScope unit="page" from="814" to="818" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
	<note>Illés Farkas, and Tamás Vicsek</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">DeepWalk: Online Learning of Social Representations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bryan</forename><surname>Perozzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rami</forename><surname>Al-Rfou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><surname>Skiena</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1403.6652</idno>
		<ptr target="http://arxiv.org/abs/1403.6652" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Efficient community detection in large networks using content and links</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yiye</forename><surname>Ruan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Fuhry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Srinivasan</forename><surname>Parthasarathy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd international conference on World Wide Web</title>
		<meeting>the 22nd international conference on World Wide Web</meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="1089" to="1098" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Gradient estimation using stochastic computation graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Schulman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nicolas</forename><surname>Heess</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Theophane</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pieter</forename><surname>Abbeel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="3528" to="3536" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Policy gradient methods for reinforcement learning with function approximation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Richard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">A</forename><surname>Sutton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mcallester</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Satinder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yishay</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mansour</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="1057" to="1063" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Node classification in signed social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiliang</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charu</forename><surname>Aggarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Huan</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 SIAM International Conference on Data Mining. SIAM</title>
		<meeting>the 2016 SIAM International Conference on Data Mining. SIAM</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="54" to="62" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">LINE: Large-scale Information Network Embedding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jian</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Meng</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mingzhe</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ming</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jun</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qiaozhu</forename><surname>Mei</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1503.03578</idno>
		<ptr target="http://arxiv.org/abs/1503.03578" />
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">GraphGAN: Graph Representation Learning With Generative Adversarial Nets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hongwei</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jia</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jialin</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miao</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Weinan</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fuzheng</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xing</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Minyi</forename><surname>Guo</surname></persName>
		</author>
		<ptr target="https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/16611" />
	</analytic>
	<monogr>
		<title level="m">AAAI Conference on Artificial Intelligence</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">SHINE: signed heterogeneous information network embedding for sentiment link prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hongwei</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fuzheng</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Min</forename><surname>Hou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xing</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Minyi</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qi</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eleventh ACM International Conference on Web Search and Data Mining</title>
		<meeting>the Eleventh ACM International Conference on Web Search and Data Mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2018" />
			<biblScope unit="page" from="592" to="600" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Community Preserving Network Embedding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiao</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peng</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jing</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jian</forename><surname>Pei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wenwu</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shiqiang</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI</title>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="203" to="209" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Local modularity for community detection in complex networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ju</forename><surname>Xiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tao</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yan</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ke</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jian-Ming</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiao-Ke</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cui-Cui</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shi</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physica A: Statistical Mechanics and its Applications</title>
		<imprint>
			<biblScope unit="volume">443</biblScope>
			<biblScope unit="page" from="451" to="459" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Overlapping Community Detection in Networks: the State of the Art and Comparative Study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jierui</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><surname>Kelley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Boleslaw</forename><forename type="middle">K</forename><surname>Szymanski</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1110.5813</idno>
		<ptr target="http://arxiv.org/abs/1110.5813" />
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Community-affiliation graph model for overlapping network community detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jaewon</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jure</forename><surname>Leskovec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2012 IEEE 12th International Conference on Data Mining</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1170" to="1175" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Overlapping community detection at scale: a nonnegative matrix factorization approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jaewon</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jure</forename><surname>Leskovec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the sixth ACM international conference on Web search and data mining</title>
		<meeting>the sixth ACM international conference on Web search and data mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="587" to="596" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Detecting cohesive and 2-mode communities indirected and undirected networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jaewon</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Julian</forename><surname>Mcauley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jure</forename><surname>Leskovec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th ACM international conference on Web search and data mining</title>
		<meeting>the 7th ACM international conference on Web search and data mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="323" to="332" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">SeqGAN: Sequence Generative Adversarial Nets with Policy Gradient</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lantao</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Weinan</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jun</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yong</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI</title>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="2852" to="2858" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Personalized entity recommendation: A heterogeneous information network approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiao</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiang</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yizhou</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Quanquan</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bradley</forename><surname>Sturt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Urvashi</forename><surname>Khandelwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brandon</forename><surname>Norick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiawei</forename><surname>Han</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th ACM international conference on Web search and data mining</title>
		<meeting>the 7th ACM international conference on Web search and data mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="283" to="292" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">Collaborative User Network Embedding for Social Recommender Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chuxu</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lu</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yan</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chirag</forename><surname>Shah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiangliang</forename><surname>Zhang</surname></persName>
		</author>
		<idno type="DOI">http:/arxiv.org/abs/https:/epubs.siam.org/doi/pdf/10.1137/1.9781611974973.43</idno>
		<ptr target="https://epubs.siam.org/doi/pdf/10.1137/1.9781611974973.43" />
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="381" to="389" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Incorporating Implicit Link Preference into Overlapping Community Detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hongyi</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Irwin</forename><surname>King</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">R</forename><surname>Lyu</surname></persName>
		</author>
		<ptr target="http://dl.acm.org/citation.cfm?id=2887007.2887063" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twenty-Ninth AAAI Conference on Artificial Intelligence (AAAI&apos;15)</title>
		<meeting>the Twenty-Ninth AAAI Conference on Artificial Intelligence (AAAI&apos;15)</meeting>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="396" to="402" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
