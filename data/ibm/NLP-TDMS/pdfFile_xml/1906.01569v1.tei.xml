<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Sequence Tagging with Contextual and Non-Contextual Subword Representations: A Multilingual Evaluation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benjamin</forename><surname>Heinzerling</surname></persName>
							<email>benjamin.heinzerling@riken.jp|michael.strube@h-its.org</email>
							<affiliation key="aff0">
								<orgName type="laboratory">RIKEN AIP &amp; Tohoku University ‡ Heidelberg Institute for Theoretical Studies gGmbH</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Strube</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">RIKEN AIP &amp; Tohoku University ‡ Heidelberg Institute for Theoretical Studies gGmbH</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Sequence Tagging with Contextual and Non-Contextual Subword Representations: A Multilingual Evaluation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-26T08:49+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Pretrained contextual and non-contextual subword embeddings have become available in over 250 languages, allowing massively multilingual NLP. However, while there is no dearth of pretrained embeddings, the distinct lack of systematic evaluations makes it difficult for practitioners to choose between them. In this work, we conduct an extensive evaluation comparing non-contextual subword embeddings, namely FastText and BPEmb, and a contextual representation method, namely BERT, on multilingual named entity recognition and part-of-speech tagging.</p><p>We find that overall, a combination of BERT, BPEmb, and character representations works well across languages and tasks. A more detailed analysis reveals different strengths and weaknesses: Multilingual BERT performs well in medium-to high-resource languages, but is outperformed by non-contextual subword embeddings in a low-resource setting.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Rare and unknown words pose a difficult challenge for embedding methods that rely on seeing a word frequently during training <ref type="bibr">(Bullinaria and Levy, 2007;</ref><ref type="bibr">Luong et al., 2013)</ref>. Subword segmentation methods avoid this problem by assuming a word's meaning can be inferred from the meaning of its parts. Linguistically motivated subword approaches first split words into morphemes and then represent word meaning by composing morpheme embeddings <ref type="bibr">(Luong et al., 2013)</ref>. More recently, character-ngram approaches <ref type="bibr">(Luong and Manning, 2016;</ref><ref type="bibr">Bojanowski et al., 2017)</ref> and Byte Pair Encoding (BPE) <ref type="bibr">(Sennrich et al., 2016)</ref> have grown in popularity, likely due to their computational simplicity and language-agnosticity. 1 * Work done while at HITS. 1 While language-agnostic, these approaches are not language-independent. See Appendix B for a discussion. Sequence tagging with subwords. Subword information has long been recognized as an important feature in sequence tagging tasks such as named entity recognition (NER) and part-ofspeech (POS) tagging. For example, the suffix -ly often indicates adverbs in English POS tagging and English NER may exploit that professions often end in suffixes like -ist (journalist, cyclist) or companies in suffixes like -tech orsoft. In early systems, these observations were operationalized with manually compiled lists of such word endings or with character-ngram features <ref type="bibr">(Nadeau and Sekine, 2007)</ref>. Since the advent of neural sequence tagging <ref type="bibr">(Graves, 2012;</ref><ref type="bibr"></ref> Method Subword segmentation and token transformation</p><p>Original text Magnus Carlsen played against Viswanathan Anand Characters M a g n u s C a r l s e n p l a y e d a g a i n s t V i s w a n a t h a n A n a n d   <ref type="bibr">Huang et al., 2015)</ref>, the predominant way of incorporating character-level subword information is learning embeddings for each character in a word, which are then composed into a fixedsize representation using a character-CNN <ref type="bibr">(Chiu and Nichols, 2016)</ref> or character-RNN (char-RNN) <ref type="bibr">(Lample et al., 2016)</ref>. Moving beyond single characters, pretrained subword representations such as FastText, BPEmb, and those provided by BERT (see 2) have become available.</p><p>While there now exist several pretrained subword representations in many languages, a practitioner faced with these options has a simple question: Which subword embeddings should I use?</p><p>In this work, we answer this question for multilingual named entity recognition and part-of-speech tagging and make the following contributions:</p><p>• We present a large-scale evaluation of multilingual subword representations on two sequence tagging tasks; • We find that subword vocabulary size matters and give recommendations for choosing it; • We find that different methods have different strengths: Monolingual BPEmb works best in medium-and high-resource settings, multilingual non-contextual subword embeddings are best in low-resource languages, while multilingual BERT gives good or best results across languages.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Subword Embeddings</head><p>We now introduce the three kinds of multilingual subword embeddings compared in our evaluation: FastText and BPEmb are collections of pretrained, monolingual, non-contextual subword embeddings available in many languages, while BERT provides contextual subword embeddings for many languages in a single pretrained language model with a vocabulary shared among all languages. <ref type="table" target="#tab_1">Table 1</ref> shows examples of the subword segmentations these methods produce.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">FastText: Character-ngram Embeddings</head><p>FastText <ref type="bibr">(Bojanowski et al., 2017)</ref> represents a word w as the sum of the learned embeddings z g of its constituting character-ngrams g and, in case of in-vocabulary words, an embedding z w of the word itself: w = z w + g∈Gw z g , where G w is the set of all constituting character n-grams for 3 ≤ n ≤ 6. Bojanowski et al. provide embeddings trained on Wikipedia editions in 294 languages. 2</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">BPEmb: Byte-Pair Embeddings</head><p>Byte Pair Encoding (BPE) is an unsupervised segmentation method which operates by iteratively merging frequent pairs of adjacent symbols into new symbols. E.g., when applied to English text, BPE merges the characters h and e into the new byte-pair symbol he, then the pair consisting of the character t and the byte-pair symbol he into the new symbol the and so on. These merge operations are learned from a large background corpus. The set of byte-pair symbols learned in this fashion is called the BPE vocabulary.</p><p>Applying BPE, i.e. iteratively performing learned merge operations, segments a text into subwords (see BPE segmentations for vocabulary sizes vs1000 to vs100000 in <ref type="table" target="#tab_1">Table 1</ref>). By employing an embedding algorithm, e.g. GloVe <ref type="bibr">(Pennington et al., 2014)</ref>, to train embeddings on such a subword-segmented text, one obtains embeddings for all byte-pair symbols in the BPE vocabulary. In this work, we evaluate BPEmb (Heinzerling and Strube, 2018), a collection of byte-pair embeddings trained on Wikipedia editions in 275 languages. 3</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">BERT: Contextual Subword Embeddings</head><p>One of the drawbacks of the subword embeddings introduced above, and of pretrained word embeddings in general, is their lack of context. For example, with a non-contextual representation, the embedding of the word play will be the same both in the phrase a play by Shakespeare and the phrase to play Chess, even though play in the first phrase is a noun with a distinctly different meaning than the verb play in the second phrase. Contextual word representations <ref type="bibr">(Dai and Le, 2015;</ref><ref type="bibr">Melamud et al., 2016;</ref><ref type="bibr">Ramachandran et al., 2017;</ref><ref type="bibr">Peters et al., 2018;</ref><ref type="bibr">Radford et al., 2018;</ref><ref type="bibr">Howard and Ruder, 2018)</ref> overcome this shortcoming via pretrained language models.</p><p>Instead of representing a word or subword by a lookup of a learned embedding, which is the same regardless of context, a contextual representation is obtained by encoding the word in context using a neural language model <ref type="bibr">(Bengio et al., 2003)</ref>. Neural language models typically employ a sequence encoder such as a bidirectional LSTM <ref type="bibr">(Hochreiter and Schmidhuber, 1997)</ref> or Transformer <ref type="bibr">(Vaswani et al., 2017)</ref>. In such a model, each word or subword in the input sequence is encoded into a vector representation. With a bidirectional LSTM, this representation is influenced by its left and right context through state updates when encoding the sequence from left to right and from right to left. With a Transformer, context influences a word's or subword's representation via an attention mechanism <ref type="bibr">(Bahdanau et al., 2015)</ref>.</p><p>In this work we evaluate BERT (Devlin et al., 2019), a Transformer-based pretrained language model operating on subwords similar to BPE (see last row in <ref type="table" target="#tab_1">Table 1</ref>). We choose BERT among the pretrained language models mentioned above since it is the only one for which a multilingual version is publicly available. Multilingual BERT 4 has been trained on the 104 largest Wikipedia editions, so that, in contrast to FastText and BPEmb, many low-resource languages are not supported.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Multilingual Evaluation</head><p>We compare the three different pretrained subword representations introduced in §2 on two tasks: NER and POS tagging. Our multilingual evaluation is split in four parts. After devising a sequence tagging architecture ( §3.1), we investigate an important hyper-parameter in BPE-based subword segmentation: the BPE vocabulary size ( §3.2). Then, we conduct NER experiments on two sets of languages (see <ref type="table" target="#tab_3">Table 2</ref>  <ref type="bibr">, 2016)</ref>. These annotations take the form of language-universal POS tags <ref type="bibr">(Petrov et al., 2012)</ref>, such as noun, verb, adjective, determiner, and numeral.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Sequence Tagging Architecture</head><p>Our sequence tagging architecture is depicted in <ref type="figure" target="#fig_0">Figure 1</ref>. The architecture is modular and allows encoding text using one or more subword embedding methods. The model receives a sequence of tokens as input, here Magnus Carlsen played.</p><p>After subword segmentation and an embedding lookup, subword embeddings are encoded with an encoder specific to the respective subword method. For BERT, this is a pretrained Transformer, which is finetuned during training. For all other methods we train bidirectional LSTMs. Depending on the particular subword method, input tokens are segmented into different subwords.</p><p>Here, BERT splits Carlsen into two subwords resulting in two encoder states for this token, while BPEmb with an LSTM encoder splits this word into three. FastText (not depicted) and character RNNs yield one encoder state per token. To match subword representations with the tokenization of the gold data, we arbitrarily select the encoder state corresponding to the first subword in each token. A meta-LSTM combines the token representations produced by each encoder before classification. <ref type="bibr">5</ref> Decoding the sequence of a neural model's pre-classification states with a conditional random field (CRF) <ref type="bibr">(Lafferty et al., 2001)</ref> has been shown to improve NER performance by 0.7 to 1.8 F1 points (Ma and Hovy, 2016; Reimers and Gurevych, 2017) on a benchmark dataset. In our preliminary experiments on WikiAnn, CRFs considerably increased training time but did not show consistent improvements across languages. <ref type="bibr">6</ref> Since our study involves a large number of experiments comparing several subword representations with cross-validation in over 250 languages, we omit the CRF in order to reduce model training time. Implementation details. Our sequence tagging architecture is implemented in PyTorch <ref type="bibr">(Paszke et al., 2017)</ref>. All model hyper-parameters for a given subword representation are tuned in preliminary experiments on development sets and then kept the same for all languages (see Appendix D). For many low-resource languages, WikiAnn provides only a few hundred instances with skewed entity type distributions. In order to mitigate the impact of variance from random train-devtest splits in such cases, we report averages of n-fold cross-validation runs, with n=10 for lowresource, n=5 for medium-resource, and n=3 for high-resource languages. 7 For experiments in-  volving FastText, we precompute a 300d embedding for each word and update embeddings during training. We use BERT in a finetuning setting, that is, we start training with a pretrained model and then update that model's weights by backpropagating through all of BERT's layers. Finetuning is computationally more expensive, but gives better results than feature extraction, i.e. using one or more of BERT's layers for classification without finetuning <ref type="bibr">(Devlin et al., 2019)</ref>. For BPEmb, we use 100d embeddings and choose the best BPE vocabulary size as described in the next subsection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Tuning BPE</head><p>In subword segmentation with BPE, performing only a small number of byte-pair merge operations results in a small vocabulary. This leads to oversegmentation, i.e., words are split into many short subwords (see BPE vs1000 in <ref type="table" target="#tab_1">Table 1</ref>). With more merge operations, both the vocabulary size and the average subword length increase. As the byte-pair vocabulary grows larger it adds symbols corresponding to frequent words, resulting in such words not being split into subwords. Note, for example, that the common English preposition against is not split even with the smallest vocabulary size, or that played is split into the stem play and suffix ed with a vocabulary of size 1000, but is not split with larger vocabulary sizes. The choice of vocabulary size involves a tradeoff. On the one hand, a small vocabulary re-  quires less data for pre-training subword embeddings since there are fewer subwords for which embeddings need to be learned. Furthermore, a smaller vocabulary size is more convenient for model training since training time increases with vocabulary size <ref type="bibr">(Morin and Bengio, 2005</ref>) and hence a model with a smaller vocabulary trains faster. On the other hand, a small vocabulary results in less meaningful subwords and longer input sequence lengths due to oversegmentation. Conversely, a larger BPE vocabulary tends to yield longer, more meaningful subwords so that subword composition becomes easier -or in case of frequent words even unnecessary -in downstream applications, but a larger vocabulary also requires a larger text corpus for pre-training good embeddings for all symbols in the vocabulary. Furthermore, a larger vocabulary size requires more annotated data for training larger neural models and increases training time.</p><p>Since the optimal BPE vocabulary size for a given dataset and a given language is not a priori clear, we determine this hyper-parameter empirically. To do so, we train NER models with varying BPE vocabulary sizes 8 for each language and record the best vocabulary size on the language's development set as a function of dataset size <ref type="bibr">(Figure 2)</ref>. This data shows that larger vocabulary sizes are better for high-resource languages with more training data, and smaller vocabulary sizes are better for low-resource languages with smaller datasets. In all experiments involving byte-pair embeddings, we choose the BPE vocabulary size for the given language according to this data. 9</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">NER with FastText and BPEmb</head><p>In this section, we evaluate FastText and BPEmb on NER in 265 languages. As baseline, we com- <ref type="bibr">8</ref> We perform experiments with vocabulary sizes in {1000, 3000, 5000, 10000, 25000, 50000, 100000}. <ref type="bibr">9</ref> The procedure for selecting BPE vocabulary size is given in Appendix C.  <ref type="table" target="#tab_7">Table 3</ref>). Averaged over all languages, FastText performs 4.1 F1 points worse than this baseline. BPEmb is on par overall, with higher scores for medium-and high-resource languages, but a worse F1 score on low-resource languages. BPEmb combined with character embeddings (+char) yields the overall highest scores for medium-and high-resource languages among monolingual methods. Word shape. When training word embeddings, lowercasing is a common preprocessing step <ref type="bibr">(Pennington et al., 2014</ref>) that on the one hand reduces vocabulary size, but on the other loses information in writing systems with a distinction between upper and lower case letters. As a more expressive alternative to restoring case information via a binary feature indicating capitalized or lowercased words <ref type="bibr">(Curran and Clark, 2003)</ref>, word shapes <ref type="bibr">(Collins, 2002;</ref><ref type="bibr">Finkel et al., 2005)</ref> map   <ref type="table" target="#tab_7">Table 3</ref>) yields similar improvements as character embeddings.</p><p>Since capitalization is not important in all languages, we heuristically decide whether shape embeddings should be added for a given language or not. We define the capitalization ratio of a language as the ratio of upper case characters among all characters in a written sample. As <ref type="figure" target="#fig_2">Figure 3</ref> shows, capitalization ratios vary between languages, with shape embeddings tending to be more beneficial in languages with higher ratios. By thresholding on the capitalization ratio, we only add shape embeddings for languages with a high ratio (+someshape). This leads to an overall higher average F1 score of 85.3 among monolingual models, due to improved performance (81.9 vs. 81.5) on low-resource languages. One NER model for 265 languages. The reduction in vocabulary size achieved by BPE is a crucial advantage in neural machine translation <ref type="bibr">(Johnson et al., 2017)</ref> and other tasks which involve the costly operation of taking a softmax over the entire output vocabulary (see <ref type="bibr">Morin and Bengio, 2005;</ref><ref type="bibr">Li et al., 2019)</ref>. BPE vocabulary sizes between 8k and 64k are common in neural machine translation. Multilingual BERT operates on a subword vocabulary of size 100k which is shared among 104 languages. Even with shared sym-bols among languages, this allots at best only a few thousand byte-pair symbols to each language. Given that sequence tagging does not involve taking a softmax over the vocabulary, much larger vocabulary sizes are feasible, and as §3.2 shows, a larger BPE vocabulary is better when enough training data is available. To study the effect of a large BPE vocabulary size in a multilingual setting, we train BPE models and byte-pair embeddings with subword vocabularies of up to 1000k BPE symbols, which are shared among all languages in our evaluation. <ref type="bibr">10</ref> The shared BPE vocabulary and corresponding byte-pair embeddings allow training a single NER model for all 265 languages. To do so, we first encode WikiAnn in all languages using the shared BPE vocabulary and then train a single multilingual NER model in the same fashion as a monolingual model. As the vocabulary size has a large effect on the distribution of BPE symbol lengths ( <ref type="figure" target="#fig_3">Figure 4</ref>, also see §3.2) and model quality, we determine this hyper-parameter empirically (Table 4). To reduce the disparity between dataset sizes of different languages, and to keep training time short, we limit training data to a maximum of 3000 instances per language. 11 Results for this multilingual model (MultiBPEmb) with shared character embeddings (+char) and without further finetuning -finetune show a strong improvement in low-resource languages (89.7 vs. 81.9 with +someshape), while performance degrades drastically on high-resource languages. Since the 188 low-resource languages in WikiAnn are typologically and genealogically diverse, the improvement suggests that low-resource languages not only profit from cross-lingual transfer from similar languages (Cotterell and Heigold, 2017), but that multilingual training brings other benefits, as well. In multilingual training, certain aspects of the task at hand, such as tag distribution and BIO constraints have to be learned only once, while they have to be separately learned on each language in monolingual training. Furthermore, multilingual training may prevent overfitting to biases in small monolingual datasets, such as a skewed tag distri-  <ref type="bibr">, 2018)</ref>. As there is no 1-to-1 correspondence between BPE symbols and languages in a shared multilingual vocabulary, it is not possible to color BPE symbols by language. Instead, we color symbols by Unicode code point. This yields a coloring in which, for example, BPE symbols consisting of characters from the Latin alphabet are green (large cluster in the center), symbols in Cyrillic script blue (large cluster at 11 o'clock), and symbols in Arabic script purple (cluster at 5 o'clock). Best viewed in color.  butions. A visualization of the multilingual subword embedding space ( <ref type="figure" target="#fig_4">Figure 5)</ref> gives evidence for this view. Before training, distinct clusters of subword embeddings from the same language are visible. After training, some of these clusters are more spread out and show more overlap, which indicates that some embeddings from different languages appear to have moved "closer together", as one would expect embeddings of semanticallyrelated words to do. However, the overall structure of the embedding space remains largely unchanged. The model maintains language-specific subspaces and does not appear to create an interlingual semantic space which could facilitate cross-lingual transfer.</p><p>Having trained a multilingual model on all languages, we can further train this model on a single language <ref type="table" target="#tab_7">(Table 3</ref>, +finetune). This finetuning further improves performance, giving the best overall score (91.4) and an 8.8 point improvement over Pan et al. on low-resource languages (90.4 vs. 81.6). These results show that multilingual training followed by monolingual finetuning is an ef-fective method for low-resource sequence tagging. <ref type="table" target="#tab_10">Table 5</ref> shows NER results on the intersection of languages supported by all methods in our evaluation. As in §3.3, FastText performs worst overall, monolingual BPEmb with character embeddings performs best on high-resource languages (93.6 F1), and multilingual BPEmb best on lowresource languages (91.1). Multilingual BERT outperforms the Pan17 baseline and shows strong results in comparison to monolingual BPEmb. The combination of multilingual BERT, monolingual BPEmb, and character embeddings is best overall (92.0) among models trained only on monolingual NER data. However, this ensemble of contextual and non-contextual subword embeddings is inferior to MultiBPEmb (93.2), which was first trained on multilingual data from all languages collectively, and then separately finetuned to each language. Score distributions and detailed NER results for each language and method are shown in Appendix E and Appendix F.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">NER with Multilingual BERT</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">POS Tagging in 27 Languages</head><p>We perform POS tagging experiments in the 21 high-resource ( </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Limitations and Conclusions</head><p>Limitations. While extensive, our evaluation is not without limitations. Throughout this study, we have used a Wikipedia edition in a given language as a sample of that language. The degree to which this sample is representative varies, and low-resource Wikipedias in particular contain large fractions of "foreign" text and noise, which propagates into embeddings and datasets. Our evaluation did not include other subword representations, most notably ELMo <ref type="bibr">(Peters et al., 2018)</ref> and contextual string embeddings (Akbik et al., 2018), since, even though they are languageagnostic in principle, pretrained models are only available in a few languages. Conclusions. We have presented a large-scale study of contextual and non-contextual subword embeddings, in which we trained monolingual and multilingual NER models in 265 languages and POS-tagging models in 27 languages. BPE vocabulary size has a large effect on model quality, both in monolingual settings and with a large vocabulary shared among 265 languages. As a rule of thumb, a smaller vocabulary size is better for small datasets and larger vocabulary sizes better for larger datasets. Large improvements over monolingual training showed that low-resource languages benefit from multilingual model training with shared subword embeddings. Such improvements are likely not solely caused by cross-lingual transfer, but also by the prevention of overfitting and mitigation of noise in small monolingual datasets. Monolingual finetuning of a multilingual model improves performance in almost all cases (compare -finetune and +finetune columns in <ref type="table">Table 9</ref> in Appendix F). For high-resource languages, we found that monolingual embeddings and monolingual training perform better than multilingual approaches with a shared vocabulary. This is likely due to the fact that a high-resource language provides large background corpora for learning good embeddings of a large vocabulary and also provides so much training data for the task at hand that little additional information can be gained from training data in other languages. Our experiments also show that even a large multilingual contextual model like BERT benefits from character embeddings and additional monolingual embeddings.</p><p>Finally, and while asking the reader to bear above limitations in mind, we make the following practical recommendations for multilingual sequence tagging with subword representations:</p><p>• Choose the largest feasible subword vocabulary size when a large amount of data is available.</p><p>• Choose smaller subword vocabulary sizes in low-resource settings.</p><p>• Multilingual BERT is a robust choice across tasks and languages if the computational requirements can be met.</p><p>• With limited computational resources, use small monolingual, non-contextual representations, such as BPEmb combined with character embeddings.</p><p>• Combine different subword representations for better results.</p><p>• In low-resource scenarios, first perform multilingual pretraining with a shared subword vocabulary, then finetune to the language of interest.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Acknowledgements</head><p>We thank the anonymous reviewers for insightful comments. This work has been funded by the Klaus Tschira Foundation, Heidelberg, Germany, and partially funded by the German Research Foundation as part of the Research Training Tag entropy rank  <ref type="bibr">(bottom)</ref>. Languages are sorted from left to right from highest to lowest tag distribution entropy. That is, the NER tags in WikiAnn for the language in question are well-balanced for higher-ranked languages on the left and become more skewed for lower-ranked languages towards the right. Pan et al. achieve NER F1 scores up to 100 percent on some languages, which can be explained by the highly skewed, i.e. low-entropy, tag distribution in these languages (compare F1 scores &gt;99% in middle subfigure with skewed tag distributions in top subfigure). Better balance, i.e. higher entropy, of tag distribution tends to be found in languages for which WikiAnn provides more data (compare top and bottom subfigures).</p><p>B BPE and character-ngrams are not language-independent Some methods proposed in NLP are unjustifiedly claimed to be language-independent (Bender, 2011). Subword segmentation with BPE or character-ngrams is language-agnostic, i.e., such a segmentation can be applied to any sequence of symbols, regardless of the language or meaning of these symbols. However, BPE and characterngrams are based on the assumption that meaningful subwords consist of adjacent characters, such as the suffix -ed indicating past tense in English or the copular negation nai in Japanese. This assumption does not hold in languages with nonconcatenative morphology. For example, Semitic roots in languages such as Arabic and Hebrew are patterns of discontinuous sequences of consonants which form words by insertion of vowels and other consonants. For instance, words related to writing are derived from the root k-t-b: kataba "he wrote" or kitab "book". BPE and characterngrams are not suited to efficiently capture such patterns of non-adjacent characters, and hence are not language-independent.</p><p>C Procedure for selecting the best BPE vocabulary size</p><p>We determine the best BPE vocabulary size for each language according to the following procedure.</p><p>1. For each language l in the set of all languages L and each BPE vocabulary size v ∈ V , run n-fold cross-validation with each fold comprising a random split into training, development, and test set. 12 2. Find the best BPE vocabulary size v l for each language, according to the mean evaluation score on the development set of each crossvalidation fold.</p><p>3. Determine the dataset size, measured in number of instances N l , for each language.</p><p>4. For each vocabulary size v, compute the median number of training instances of the languages for which v gives the maximum evaluation score on the development set, i.e. N v = median({N l |v = v l ∀l ∈ L}).</p><p>12 V = {1000, 3000, 5000, 10000, 25000, 50000, 100000} in our experiments. 5. Given a language with dataset size N l , the best BPE vocabulary sizev l is the one whose N v is closest to N l :     <ref type="table">Table 9</ref>: Per-language NER F1 scores on WikiAnn.</p><formula xml:id="formula_0">v l = argmin v∈V N l − N v D</formula></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>A high-performing ensemble of subword representations encodes the input using multilingual BERT (yellow, bottom left), an LSTM with BPEmb (pink, bottom middle), and a character-RNN (blue, bottom right). A meta-LSTM (green, center) combines the different encodings before classification (top). Horizontal arrows symbolize bidirectional LSTMs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Impact of word shape embeddings on NER performance in a given language as function of the capitalization ratio in a random Wikipedia sample. pare to Pan et al. (2017)'s system, which combines morphological features mined from Wikipedia markup with cross-lingual knowledge transfer via Wikipedia language links (Pan17 in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>The distribution of byte-pair symbol lengths varies with BPE vocabulary size.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Shared multilingual byte-pair embedding space pretrained (left) and after NER model training (right), 2-d UMAP projection (McInnes et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>WikiAnn named entity tag distribution for each language (top) in comparison to Pan et al. NER F1 scores (middle) and each language's dataset size</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>NER results for the 265 languages represented inPan et al. (2017), FastText, and BPEmb (top), and the 101 languages constituting the intersection of these methods and BERT (bottom). Per-language F1 scores achieved by each method are sorted in descending order from left to right. The data points at rank 1 show the highest score among all languages achieved by the method in question, rank 2 the second-highest score etc.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>. . carlsen+car+arl+. . . played+. . . against+. . . vis+isw+. . . +nathan ana+. . .</figDesc><table><row><cell>Word shape</cell><cell>Aa</cell><cell>Aa</cell><cell>a</cell><cell>a</cell><cell>Aa</cell><cell>Aa</cell></row><row><cell cols="2">FastText magnus+mag+. BPE vs1000 m ag n us</cell><cell>car l s en</cell><cell>play ed</cell><cell>against</cell><cell>v is w an ath an</cell><cell>an and</cell></row><row><cell>BPE vs3000</cell><cell>mag n us</cell><cell>car ls en</cell><cell>played</cell><cell>against</cell><cell>vis w an ath an</cell><cell>an and</cell></row><row><cell>BPE vs5000</cell><cell>magn us</cell><cell>car ls en</cell><cell>played</cell><cell>against</cell><cell>vis wan ath an</cell><cell>an and</cell></row><row><cell>BPE vs10000</cell><cell>magn us</cell><cell>car ls en</cell><cell>played</cell><cell>against</cell><cell>vis wan athan</cell><cell>an and</cell></row><row><cell>BPE vs25000</cell><cell>magnus</cell><cell>car ls en</cell><cell>played</cell><cell>against</cell><cell>vis wan athan</cell><cell>an and</cell></row><row><cell>BPE vs50000</cell><cell>magnus</cell><cell>carls en</cell><cell>played</cell><cell>against</cell><cell>vis wan athan</cell><cell>anand</cell></row><row><cell>BPE vs100000</cell><cell>magnus</cell><cell>carlsen</cell><cell>played</cell><cell>against</cell><cell>viswan athan</cell><cell>anand</cell></row><row><cell>BERT</cell><cell>Magnus</cell><cell>Carl ##sen</cell><cell>played</cell><cell>against</cell><cell cols="2">V ##is ##wana ##than Anand</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Overview of the subword segmentations and token transformations evaluated in this work.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 2 :</head><label>2</label><figDesc>Number of languages supported by the three subword embedding methods compared in our evaluation, as well as the NER baseline system (Pan17).</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 3</head><label>3</label><figDesc></figDesc><table><row><cell>: NER results on WikiAnn. The first row shows macro-averaged F1 scores (%) for all 265 languages in</cell></row><row><cell>the Intersect. 1 setting. Rows two to four break down scores for 188 low-resource languages (&lt;10k instances), 48</cell></row><row><cell>medium-resource languages (10k to 100k instances), and 29 high-resource languages (&gt;100k instances).</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 4 :</head><label>4</label><figDesc></figDesc><table /><note>Average WikiAnn NER F1 scores on the de- velopment sets of 265 languages with shared vocabu- laries of different size.characters to their type and collapse repeats. For example, Magnus is mapped to the word shape Aa and G.M. to A.A. Adding such shape embeddings to the model (+shape in</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>Table 5 :</head><label>5</label><figDesc>NER F1 scores for the 101 WikiAnn languages supported by all evaluated methods.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head></head><label></label><figDesc>BiLSTM Adv. FastText BPEmb +char +shape BERT +char +char+BPemb -finetune +finetune</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>BPEmb</cell><cell></cell><cell></cell><cell>BERT</cell><cell></cell><cell cols="2">MultiBPEmb+char</cell></row><row><cell>Lang. Avg.</cell><cell>96.4 96.6</cell><cell>95.6</cell><cell>95.2</cell><cell>96.4</cell><cell>95.7</cell><cell>95.6</cell><cell>96.3</cell><cell>96.8</cell><cell>96.1</cell><cell>96.6</cell></row><row><cell>bg</cell><cell>98.0 98.5</cell><cell>97.7</cell><cell>97.8</cell><cell>98.5</cell><cell>97.9</cell><cell>98.0</cell><cell>98.5</cell><cell>98.7</cell><cell>98.6</cell><cell>98.7</cell></row><row><cell>cs</cell><cell>98.2 98.8</cell><cell>98.3</cell><cell>98.5</cell><cell>98.9</cell><cell>98.7</cell><cell>98.4</cell><cell>98.8</cell><cell>99.0</cell><cell>97.9</cell><cell>98.9</cell></row><row><cell>da</cell><cell>96.4 96.7</cell><cell>95.3</cell><cell>94.9</cell><cell>96.4</cell><cell>95.9</cell><cell>95.8</cell><cell>96.3</cell><cell>97.2</cell><cell>94.4</cell><cell>97.0</cell></row><row><cell>de</cell><cell>93.4 94.4</cell><cell>90.8</cell><cell>92.7</cell><cell>93.8</cell><cell>93.5</cell><cell>93.7</cell><cell>93.8</cell><cell>94.4</cell><cell>93.6</cell><cell>94.0</cell></row><row><cell>en</cell><cell>95.2 95.8</cell><cell>94.3</cell><cell>94.2</cell><cell>95.5</cell><cell>94.9</cell><cell>95.0</cell><cell>95.5</cell><cell>96.1</cell><cell>95.2</cell><cell>95.6</cell></row><row><cell>es</cell><cell>95.7 96.4</cell><cell>96.3</cell><cell>96.1</cell><cell>96.6</cell><cell>96.0</cell><cell>96.1</cell><cell>96.3</cell><cell>96.8</cell><cell>96.4</cell><cell>96.5</cell></row><row><cell>eu</cell><cell>95.5 94.7</cell><cell>94.6</cell><cell>94.3</cell><cell>96.1</cell><cell>94.8</cell><cell>93.4</cell><cell>95.0</cell><cell>96.0</cell><cell>95.3</cell><cell>95.6</cell></row><row><cell>fa</cell><cell>97.5 97.5</cell><cell>97.1</cell><cell>95.9</cell><cell>97.0</cell><cell>96.0</cell><cell>95.7</cell><cell>96.5</cell><cell>97.3</cell><cell>97.0</cell><cell>97.1</cell></row><row><cell>fi</cell><cell>95.8 95.4</cell><cell>92.8</cell><cell>92.8</cell><cell>94.4</cell><cell>93.5</cell><cell>92.1</cell><cell>93.8</cell><cell>94.3</cell><cell>92.2</cell><cell>94.6</cell></row><row><cell>fr</cell><cell>96.1 96.6</cell><cell>96.0</cell><cell>95.5</cell><cell>96.1</cell><cell>95.8</cell><cell>96.1</cell><cell>96.5</cell><cell>96.5</cell><cell>96.2</cell><cell>96.2</cell></row><row><cell>he</cell><cell>97.0 97.4</cell><cell>97.0</cell><cell>96.3</cell><cell>96.8</cell><cell>96.0</cell><cell>96.5</cell><cell>96.8</cell><cell>97.3</cell><cell>96.5</cell><cell>96.6</cell></row><row><cell>hi</cell><cell>97.1 97.2</cell><cell>97.1</cell><cell>96.9</cell><cell>97.2</cell><cell>96.9</cell><cell>96.3</cell><cell>96.8</cell><cell>97.4</cell><cell>97.0</cell><cell>97.0</cell></row><row><cell>hr</cell><cell>96.8 96.3</cell><cell>95.5</cell><cell>93.6</cell><cell>95.4</cell><cell>94.5</cell><cell>96.2</cell><cell>96.6</cell><cell>96.8</cell><cell>96.4</cell><cell>96.8</cell></row><row><cell>id</cell><cell>93.4 94.0</cell><cell>91.9</cell><cell>90.7</cell><cell>93.4</cell><cell>93.0</cell><cell>92.2</cell><cell>93.0</cell><cell>93.5</cell><cell>93.0</cell><cell>93.4</cell></row><row><cell>it</cell><cell>98.0 98.1</cell><cell>97.4</cell><cell>97.0</cell><cell>97.8</cell><cell>97.3</cell><cell>97.5</cell><cell>97.9</cell><cell>98.0</cell><cell>97.9</cell><cell>98.1</cell></row><row><cell>nl</cell><cell>93.3 93.1</cell><cell>90.0</cell><cell>91.7</cell><cell>93.2</cell><cell>92.5</cell><cell>91.5</cell><cell>92.6</cell><cell>93.3</cell><cell>93.3</cell><cell>93.8</cell></row><row><cell>no</cell><cell>98.0 98.1</cell><cell>97.4</cell><cell>97.0</cell><cell>98.2</cell><cell>97.8</cell><cell>97.5</cell><cell>98.0</cell><cell>98.5</cell><cell>97.7</cell><cell>98.1</cell></row><row><cell>pl</cell><cell>97.6 97.6</cell><cell>96.2</cell><cell>95.8</cell><cell>97.1</cell><cell>96.1</cell><cell>96.5</cell><cell>97.7</cell><cell>97.6</cell><cell>97.2</cell><cell>97.5</cell></row><row><cell>pt</cell><cell>97.9 98.1</cell><cell>97.3</cell><cell>96.3</cell><cell>97.7</cell><cell>97.2</cell><cell>97.5</cell><cell>97.8</cell><cell>98.1</cell><cell>97.9</cell><cell>98.2</cell></row><row><cell>sl</cell><cell>96.8 98.1</cell><cell>97.1</cell><cell>96.2</cell><cell>97.7</cell><cell>96.8</cell><cell>96.3</cell><cell>97.4</cell><cell>97.9</cell><cell>97.7</cell><cell>98.0</cell></row><row><cell>sv</cell><cell>96.7 96.7</cell><cell>96.7</cell><cell>95.3</cell><cell>96.7</cell><cell>95.7</cell><cell>96.2</cell><cell>97.1</cell><cell>97.4</cell><cell>96.7</cell><cell>97.3</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12"><head>Table 6 :</head><label>6</label><figDesc>POS tagging accuracy on high-resource languages in UD 1.2.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell>BPEmb</cell><cell>MultiBPEmb</cell></row><row><cell cols="3">Lang. Adv. FastText</cell><cell cols="2">+char +char+finetune</cell></row><row><cell>Avg.</cell><cell>91.6</cell><cell>90.4</cell><cell>79.3</cell><cell>92.4</cell></row><row><cell>el</cell><cell>98.2</cell><cell>97.2</cell><cell>96.5</cell><cell>97.9</cell></row><row><cell>et</cell><cell>91.3</cell><cell>89.5</cell><cell>82.1</cell><cell>92.8</cell></row><row><cell>ga</cell><cell>91.1</cell><cell>89.2</cell><cell>81.6</cell><cell>91.0</cell></row><row><cell>hu</cell><cell>94.0</cell><cell>92.9</cell><cell>83.1</cell><cell>94.0</cell></row><row><cell>ro</cell><cell>91.5</cell><cell>88.6</cell><cell>73.9</cell><cell>89.7</cell></row><row><cell>ta</cell><cell>83.2</cell><cell>85.2</cell><cell>58.7</cell><cell>88.7</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13"><head>Table 7 :</head><label>7</label><figDesc></figDesc><table /><note>POS tagging accuracy on low-resource lan- guages in UD 1.2.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_14"><head>Table 6</head><label>6</label><figDesc></figDesc><table /><note>) and 6 low-resource lan- guages (Table 7) from the Universal Dependencies (UD) treebanks on which Yasunaga et al. (2018) report state-of-the-art results via adversarial train- ing (Adv.). In high-resource POS tagging, we also compare to the BiLSTM by Plank et al. (2016). While differences between methods are less pro- nounced than for NER, we observe similar pat- terns. On average, the combination of multilingual BERT, monolingual BPEmb, and character em- beddings is best for high-resource languages and outperforms Adv. by 0.2 percent (96.8 vs. 96.6). For low-resource languages, multilingual BPEmb with character embeddings and finetuning is the best method, yielding an average improvement of 0.8 percent over Adv. (92.4 vs. 91.6).</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_15"><head></head><label></label><figDesc>Group "Adaptive Preparation of Information from Heterogeneous Sources" (AIPHES) under grant No. GRK 1994/1. Kevin Knight, and Heng Ji. 2017. Crosslingual name tagging and linking for 282 languages. In Proceedings of the 55th Annual Meeting of the Barry Haddow, and Alexandra Birch. 2016. Neural machine translation of rare words with subword units. In Proceedings of the 54th Annual Meeting of the Association for Computational</figDesc><table><row><cell>Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Evaluation (LREC 2016), Paris, France. European</cell><cell>International Conference on Machine Learning, 338-348. Association for Computational Linguis-</cell></row><row><cell>Kristina Toutanova. 2019. BERT: Pre-training of Language Resources Association (ELRA).</cell><cell>Williamstown, Mass., 28 June -1 July 2001, pages tics.</cell></row><row><cell>deep bidirectional transformers for language under-</cell><cell>282-289.</cell></row><row><cell>standing. In Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long and Short Papers), Xiaoman Pan, Boliang Zhang, Jonathan May, Joel Nothman, Association for Computational Linguistics (Volume pages 4171-4186, Minneapolis, Minnesota. Associ-1: Long Papers), pages 1946-1958. Association for ation for Computational Linguistics. Computational Linguistics. Jenny Rose Finkel, Trond Grenager, and Christopher Adam Paszke, Sam Gross, Soumith Chintala, Gre-Manning. 2005. Incorporating non-local informa-gory Chanan, Edward Yang, Zachary DeVito, Zem-tion into information extraction systems by Gibbs ing Lin, Alban Desmaison, Luca Antiga, and Adam sampling. In Proceedings of the 43rd Annual Meet-Lerer. 2017. Automatic differentiation in PyTorch. ing of the Association for Computational Linguistics (ACL'05), pages 363-370. Association for Compu-In Autodiff Workshop, NIPS 2017. tational Linguistics. Alex Graves. 2012. Supervised sequence labelling with recurrent neural networks. Ph.D. thesis, Technical University of Munich. Benjamin Heinzerling and Michael Strube. 2018. BPEmb: Tokenization-free pre-trained subword em-Jeffrey Pennington, Richard Socher, and Christo-pher D. Manning. 2014. GloVe: Global vectors for word representation. In Proceedings of the 2014 Conference on Empirical Methods in Natural Lan-guage Processing (EMNLP), pages 1532-1543. As-sociation for Computational Linguistics. beddings in 275 languages. In Proceedings of the Eleventh International Conference on Language Resources and Evaluation (LREC 2018), Paris, France. European Language Resources Association (ELRA). Sepp Hochreiter and Jrgen Schmidhuber. 1997. Matthew Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and Luke Zettlemoyer. 2018. Deep contextualized word repre-sentations. In Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long Papers), pages 2227-Long short-term memory. Neural computation, 2237. Association for Computational Linguistics. 9(8):1735-1780. Jeremy Howard and Sebastian Ruder. 2018. Universal language model fine-tuning for text classification. In Proceedings of the 56th Annual Meeting of the As-sociation for Computational Linguistics (Volume 1: Slav Petrov, Dipanjan Das, and Ryan McDonald. 2012. A universal part-of-speech tagset. In Pro-ceedings of the Eighth International Conference on Language Resources and Evaluation (LREC-2012), pages 2089-2096, Istanbul, Turkey. European Lan-CoRR. Melvin Johnson, Mike Schuster, Quoc V. Le, Maxim Krikun, Yonghui Wu, Zhifeng Chen, Nikhil Thorat, Macduff Hughes, and Jeffrey Dean. 2017. Google's multilingual neural machine translation system: En-Ilya Sutskever. 2018. Improving language under-Alec Radford, Karthik Narasimhan, Tim Salimans, and Fernanda Viégas, Martin Wattenberg, Greg Corrado, Association for Computational Linguistics. guistics (Volume 2: Short Papers), pages 412-418. Meeting of the Association for Computational Lin-auxiliary loss. In Proceedings of the 54th Annual Long Papers), pages 328-339. Association for Com-putational Linguistics. Zhiheng Huang, Wei Xu, and Kai Yu. 2015. Bidi-rectional LSTM-CRF models for sequence tagging. guage Resources Association (ELRA). bidirectional long short-term memory models and 2016. Multilingual part-of-speech tagging with Barbara Plank, Anders Søgaard, and Yoav Goldberg. 1 50 100</cell><cell>References Alan Akbik, Duncan Blythe, and Roland Vollgraf. 2018. Contextual string embeddings for sequence Guillaume Lample, Miguel Ballesteros, Sandeep Sub-ramanian, Kazuya Kawakami, and Chris Dyer. 2016. Neural architectures for named entity recognition. In Proceedings of the 2016 Conference of the North Rico Sennrich, Linguistics (Volume 1: Long Papers), pages 1715-American Chapter of the Association for Computa-1725, Berlin, Germany. Association for Computa-tional Linguistics: Human Language Technologies, tional Linguistics. labeling. In Proceedings of the 27th International Conference on Computational Linguistics, pages 1638-1649. Association for Computational Linguis-tics. Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-pages 260-270. Association for Computational Lin-guistics. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Łukasz Liunian Harold Li, Patrick H. Chen, Cho-Jui Hsieh, Kaiser, and Illia Polosukhin. 2017. Attention is all and Kai-Wei Chang. 2019. Efficient contextual rep-you need. In Advances in Neural Information Pro-resentation learning without softmax layer. CoRR. cessing Systems, pages 5998-6008. gio. 2015. Neural machine translation by jointly learning to align and translate. In 3rd Inter-national Conference on Learning Representations, ICLR 2015, San Diego, CA, USA, May 7-9, 2015, Conference Track Proceedings. Emily M Bender. 2011. On achieving and evaluating language-independence in NLP. Linguistic Issues Minh-Thang Luong and Christopher D. Manning. Michihiro Yasunaga, Jungo Kasai, and Dragomir 2016. Achieving open vocabulary neural machine Radev. 2018. Robust multilingual part-of-speech translation with hybrid word-character models. In tagging via adversarial training. In Proceedings of Proceedings of the 54th Annual Meeting of the As-the 2018 Conference of the North American Chap-sociation for Computational Linguistics (Volume 1: ter of the Association for Computational Linguistics: Long Papers), pages 1054-1063. Association for Human Language Technologies, Volume 1 (Long Computational Linguistics. Papers), pages 976-986. Association for Computa-in Language Technology, 6(3):1-26. Yoshua Bengio, Rjean Ducharme, Pascal Vincent, and Christian Jauvin. 2003. A neural probabilistic lan-guage model. Journal of machine learning research, 3(Feb):1137-1155. tional Linguistics. Minh-Thang Luong, Richard Socher, and Christo-pher D. Manning. 2013. Better word representations with recursive neural networks for morphology. In Proceedings of the Seventeenth Conference on Com-putational Natural Language Learning, pages 104-113. Association for Computational Linguistics. Piotr Bojanowski, Edouard Grave, Armand Joulin, and Tomas Mikolov. 2017. Enriching word vectors with subword information. Transactions of the Associa-tion for Computational Linguistics, 5:135-146. John A Bullinaria and Joseph P Levy. 2007. Extracting semantic representations from word co-occurrence Xuezhe Ma and Eduard Hovy. 2016. End-to-end sequence labeling via bi-directional LSTM-CNNs-CRF. In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Vol-ume 1: Long Papers), pages 1064-1074. Associa-tion for Computational Linguistics. statistics: A computational study. Behavior re-search methods, 39(3):510-526. Jason Chiu and Eric Nichols. 2016. Named entity recognition with bidirectional LSTM-CNNs. Trans-guistics, 4:357-370. Michael Collins. 2002. Ranking algorithms for named entity extraction: Boosting and the VotedPerceptron. In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics. tion for Computational Linguistics. Natural Language Learning, pages 51-61. Associa-of The 20th SIGNLL Conference on Computational bedding with bidirectional LSTM. In Proceedings 2016. context2vec: Learning generic context em-Oren Melamud, Jacob Goldberger, and Ido Dagan. actions of the Association for Computational Lin-Leland McInnes, John Healy, Nathaniel Saul, and Lukas Grossberger. 2018. Umap: Uniform mani-Open Source Software, 3(29):861. fold approximation and projection. The Journal of 150 200 250 265</cell></row><row><cell>abling zero-shot translation. Transactions of the As-standing by generative pre-training. Technical re-</cell><cell>Ryan Cotterell and Georg Heigold. 2017. Cross-Frederic Morin and Yoshua Bengio. 2005. Hierarchi-</cell></row><row><cell>sociation for Computational Linguistics, 5:339-351. port, OpenAI.</cell><cell>lingual character-level neural morphological tag-cal probabilistic neural network language model. In</cell></row><row><cell>Taku Kudo and John Richardson. 2018. Sentence-Prajit Ramachandran, Peter Liu, and Quoc Le. 2017.</cell><cell>ging. In Proceedings of the 2017 Conference on Empirical Methods in Natural Language Process-AISTATS, volume 5, pages 246-252.</cell></row><row><cell>Piece: A simple and language independent subword Unsupervised pretraining for sequence to sequence</cell><cell>ing, pages 748-759. Association for Computational David Nadeau and Satoshi Sekine. 2007. A sur-</cell></row><row><cell>tokenizer and detokenizer for neural text processing. learning. In Proceedings of the 2017 Conference on</cell><cell>Linguistics. vey of named entity recognition and classification.</cell></row><row><cell>In Proceedings of the 2018 Conference on Empiri-Empirical Methods in Natural Language Process-</cell><cell>Lingvisticae Investigationes, 30(1):3-26.</cell></row><row><cell>cal Methods in Natural Language Processing: Sys-ing, pages 383-391. Association for Computational</cell><cell>James Curran and Stephen Clark. 2003. Language in-</cell></row><row><cell>tem Demonstrations, pages 66-71. Association for Linguistics.</cell><cell>dependent NER using a maximum entropy tagger. Joakim Nivre, Marie-Catherine de Marneffe, Filip Gin-</cell></row><row><cell>Computational Linguistics.</cell><cell>ter, Yoav Goldberg, Jan Hajic, Christopher D. Man-</cell></row><row><cell>Nils Reimers and Iryna Gurevych. 2017. Reporting</cell><cell>ning, Ryan McDonald, Slav Petrov, Sampo Pyysalo,</cell></row><row><cell>John Lafferty, Andrew McCallum, and Fernando score distributions makes a difference: Performance</cell><cell>Natalia Silveira, Reut Tsarfaty, and Daniel Zeman.</cell></row><row><cell>Pereira. 2001. Conditional random fields: Prob-study of LSTM-networks for sequence tagging. In</cell><cell>2016. Universal dependencies v1: A multilingual</cell></row><row><cell>abilistic models for segmenting and labeling se-Proceedings of the 2017 Conference on Empirical</cell><cell>treebank collection. In Proceedings of the Tenth In-</cell></row><row><cell>quence data. Methods in Natural Language Processing, pages In Proceedings of the 18th</cell><cell>ternational Conference on Language Resources and</cell></row></table><note>In Proceedings of the Seventh Conference on Natu- ral Language Learning at HLT-NAACL 2003. Andrew M Dai and Quoc V Le. 2015. Semi-supervised sequence learning. In Advances in neural informa- tion processing systems, pages 3079-3087.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_17"><head>Table 8 :</head><label>8</label><figDesc>Hyper-parameters used in our experiments.</figDesc><table><row><cell>E NER score distributions on WikiAnn</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">https://fasttext.cc/docs/en/ pretrained-vectors.html</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">https://nlp.h-its.org/bpemb/ 4 https://github.com/google-research/ bert/blob/f39e881/multilingual.md</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5">In preliminary experiments (results not shown), we found that performing classification directly on the concatenated token representation without such an additional LSTM on top does not work well.6  The system we compare to as baseline (Pan et al., 2017) includes a CRF but did not report an ablation without it. 7 Due to high computational resource requirements, we set n=1 for finetuning experiments with BERT.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10">Specifically, we extract up to 500k randomly selected paragraphs from articles in each Wikipedia edition, yielding 16GB of text in 265 languages. Then, we train BPE models with vocabulary sizes 100k, 320k, and 1000k using Senten-cePiece(Kudo and Richardson, 2018), and finally train 300d subword embeddings using GloVe.11  With this limit, training takes about a week on one NVIDIA P40 GPU.</note>
		</body>
		<back>
			<div type="references">

				<listBibl/>
			</div>
		</back>
	</text>
</TEI>
