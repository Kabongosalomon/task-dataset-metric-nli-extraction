<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Incrementally Improving Graph WaveNet Performance on Traffic Prediction</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2019-12-17">December 17, 2019</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sam</forename><surname>Shleifer</surname></persName>
							<email>shleifer@stanford.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">Stanford University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Clara</forename><surname>Mccreery</surname></persName>
							<email>mccreery@stanford.edu</email>
							<affiliation key="aff1">
								<orgName type="institution">Stanford University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vamsi</forename><surname>Chitters</surname></persName>
							<email>vamsikc@stanford.edu</email>
							<affiliation key="aff2">
								<orgName type="institution">Stanford University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Incrementally Improving Graph WaveNet Performance on Traffic Prediction</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2019-12-17">December 17, 2019</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-26T11:23+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We present a series of modifications which improve upon Graph WaveNet's previously state-of-the-art performance on the METR-LA traffic prediction task. The goal of this task is to predict the future speed of traffic at each sensor in a network using the past hour of sensor readings. Graph WaveNet (GWN) is a spatio-temporal graph neural network which interleaves graph convolution to aggregate information from nearby sensors and dilated convolutions to aggregate information from the past. We improve GWN by (1) using better hyperparameters, (2) adding connections that allow larger gradients to flow back to the early convolutional layers, and (3) pretraining on an easier short-term traffic prediction task. These modifications reduce the mean absolute error by .06 on the METR-LA task, nearly equal to GWN's improvement over its predecessor. These improvements generalize to the PEMS-BAY dataset, with similar relative magnitude. We also show that ensembling separate models for short-and long-term predictions further improves performance. Code is available at https://github.com/sshleifer/ Graph-WaveNet.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Americans spend an average of 51 minutes per day driving, and 11 minutes sitting in traffic. 1 Improved traffic prediction can help minimize traffic congestion by warning travelers of delays, so they can adjust their routes or departure times. Furthermore, the insights gained from improved spatio-temporal modeling might be extended to other important applications, like ecology, epidemiology, and climatology. This paper focuses on traffic forecasting: predicting the future traffic speeds at each sensor in a network given recent traffic speeds at each sensor and spatial information. The road network is represented as an adjacency matrix containing the on-road distance between sensors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">DATASET</head><p>We use the same traffic dataset as Graph WaveNet and its predecessor, DCRNN, which we discuss further in our Related Works section:</p><p>METR-LA: This dataset comes from sensors along the Los Angeles County highways which record the velocities of passing vehicles. Each sensor's readings are binned into 5-minute chunks and subsequently averaged. We ran all experiments on the METR-LA dataset, and then verified that our modifications improve accuracy on a larger but similarly structured dataset, PEMS-BAY, which contains 325 sensors and 6 months of data from the bay area. The dataset also includes a directed adjacency matrix that reflects the connection strength based on the driving distance from one sensor to another in meters. Specifically:</p><formula xml:id="formula_0">W ij = max(e − D ij σ 2 − k, 0)</formula><p>where W ij is the edge weight between nodes i and j, and D ij is the driving distance. A normalizing term, σ, is the standard deviation of all of the distances between any two nodes in the graph (standard deviation of D), and k is some threshold below which all weights are set equal to 0. All self-loops are included. In the DCRNN and Graph WaveNet papers, k = 0.1, which we use as well.</p><p>The features for each node at a given timestep have shape (2, 12) corresponding to speed and time-ofday for each of the 12 timesteps preceding the measurement of interest. Since the model needs to see all nodes in the network to perform graph convolution, batches are shaped (BatchSize=64, NumNodes, 12, 2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">EVALUATION METRIC</head><p>Similar to the WaveNet (Oord et al., 2016) paper, we use Mean Absolute Error (MAE) as both the loss that the model back-propagates and the reported metric:</p><formula xml:id="formula_1">M AE t = 1 Z i∈Sensors |P redictedSpeed i,t − Speed i,t |</formula><p>where Z = |Sensors| is a normalizing constant, and t is the prediction horizon. We also continue the friendly convention of assigning 0 loss to the roughly 5% of observations where Speed i,t = 0, which, according to the DCRNN authors, represent intervals where no cars passed over the sensor, rather than standstill traffic. The metric MeanMAE</p><formula xml:id="formula_2">M eanM AE = 1 12 1≤t≤12 M AE t</formula><p>represents the average MAE across all prediction horizons. Note that each t is a 5 minute increment so the horizon t = 12 is one hour in the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RELATED WORK</head><p>There are two recent papers in the traffic-prediction lineage whose work we leverage heavily. DCRNN <ref type="bibr" target="#b0">(Li et al., 2018)</ref> is the first paper to use graph convolution on the road network graph, which they split into two adjacency matrices: D −1 O W for the downstream traffic and (D −1 I W T ) for the upstream traffic. They then compute a diffusion convolution operation, shown in equation <ref type="formula">(2)</ref>. Graph WaveNet adopts this split, and we do not modify it.</p><p>DCRNN uses a Gated Recurrent Unit (GRU) to model short-term temporal interactions, and significantly outperforms all predecessors, which are either non-neural or do not take full advantage of the network structure. Graph WaveNet <ref type="bibr" target="#b3">(Wu et al., 2019)</ref> addresses two shortcomings in DCRNN. First, the distancebased adjacency matrix built by DCRNN assumes that sensors are always correlated to one another when they are spatially close. This is a much better prior than training from a random adjacency matrix, but may overemphasize the importance of an edge between two nearby sensors even if the route between them is unlikely to be traversed. For example, if two sensors are on nearby one-way roads going in opposite directions, both E i,j and E j,i would be large in the adjacency matrix, even though traffic at j is not very predictive of traffic at i and vice versa.</p><p>Graph WaveNet <ref type="bibr" target="#b3">(Wu et al., 2019)</ref> attempts to relax this assumption by learning source and target embeddings of size d = 10 for each sensor, and using:</p><formula xml:id="formula_3">W learned = Sof tM ax(ReLU (matmul(emb src , emb dest )))</formula><p>in addition to the fixed, distance-based adjacency matrices.</p><p>DCRNN also used a very expensive encoder decoder setup, which took a long time to train. GWN replaces the GRU based encoder decoder setup with blocks inspired by the original WaveNet <ref type="bibr" target="#b1">(Oord et al., 2016)</ref>, which was first used for audio generation. These blocks, shown in <ref type="figure">Figure 3</ref> use 1D and 2D dilated convolutions, and predict all 12 timesteps at once, rather than decoding one step at a time. Put together, these changes reduce training time by a factor of 6 and inference time by a factor of 10. They also help performance: GWN improves over DCRNN in MeanMAE by .07 (from 3.11 to 3.04).</p><p>Figure 3: GWN's diagram of their WaveNet inspired blocks. Architecture adopted from Graph WaveNet. The Gated TCN is a 1D temporal convolutional module, while the GCN unit incorporates the learned adjacency matrix.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">IMPROVEMENTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">HYPERPARAMETERS</head><p>We adjust several hyperparameters across all of our models and observe a drop in MAE of 0.03 compared to that reported by the original Graph WaveNet. The impact of each individual hyperparameter change is shown in <ref type="table" target="#tab_2">Table 2</ref>.</p><p>Learning Rate Decay: We multiply the learning rate by 0.97 after each epoch. Graph WaveNet did not use learning rate decay, effectively multiplying by 1 after each epoch.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Number of Filters:</head><p>We find that increasing the number of filters used by all layers in the Gated-TCN block and the GCN block from 32 to 40 improves performance with just a 5% increase in training time. This change increases the number of trainable parameters from 309,400 to 477,872 (54%).</p><p>Gradient Clipping: We find that clipping gradients to L2 = 3 provides a lower error than the original Graph WaveNet, which clipped gradients to L2 = 5.</p><p>Missing Data Representation: As previously mentioned, the loss function assigns 0 loss to observations where the sensor reading is 0, which means no vehicles passed the sensor during the 5 minute interval. Roughly 5% of the data contain these zeroes, and although they do not cause loss when they are in the targets, they still contribute nonsensical numbers to the predictions of nearby sensors when they are in the features. With this representation, the model must learn that lower speed measurements indicate higher traffic, except when the speed measurement is 0, in which case it represents no traffic. We therefore replace these 0's with the average speed in the training data, and get another .01 improvement in MAE, as well as faster convergence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">MORE SKIP CONNECTIONS</head><p>From <ref type="figure">Figure 4</ref>, we note that the output of the Gated TCN at each layer passes through a GCN directly, and intermediate results are not carried forward independent of that. As a result, during backpropagation, Graph WaveNet passes very small gradients back to the early convolution layers that are furthest from the loss calculation. To rectify this, in each block, we add the output of the Gated TCN to the output of the GCN at each block, effectively providing a skip connection around the GCN, similar to the skip connections that already exist between entire layers. To rephrase, where each layer previously computed</p><formula xml:id="formula_4">x i+1 = GraphConv(x i ), we now compute x i+1 = x i + GraphConv(x i ),</formula><p>thereby allowing the gradients a more direct route to the earliest layers in the network. This change makes the gradients into the early blocks larger, reinforcing the need to clip gradients more restrictively. In our model gradients are clipped at L2 norm = 3, a reduction from L2 norm = 5 in the original GWN.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">PRETRAINING ON SHORTER PREDICTION HORIZONS</head><p>We find that models trained on a short-term subset of the full 1 hour prediction horizon perform better on these short-term predictions than models trained to predict the full hour, as shown in <ref type="figure">Figure 4</ref>. In other words, models that are allowed to specialize on the short-term traffic do better for short-term predictions than those which are trying to learn short-and long-term patterns simultaneously.</p><p>This finding motivated us to initialize the weights for the full task with weights learned on shorter range tasks, providing a .01 reduction in MAE (averaged across 2 runs). This pretrain/finetune approach takes only 7 minutes more than training from scratch, because the short-horizon model converges after 60 epochs, and the finetuned model converges after only 29 epochs. Training on the full task from scratch converges after 100 epochs. 2 <ref type="figure">Figure 4</ref>: MAE improvement over baseline for different pretraining and finetuning tasks. For example, t ≤ 3 is a model trained to predict 3 timesteps (5, 10, and 15 mins) ahead, and therefore only has 3 data points in the chart. We observe that models trained to predict short-range traffic do so better than models trained to predict both short-and long-range. We plot improvement over baseline rather than absolute MAE because the MAE at later timesteps increases significantly, making it difficult to visualize the differences between models.</p><p>As the model improves on longer horizons, it worsens on shorter horizons. In <ref type="figure">Figure 4</ref>, the brown curve underperforms the green curve (from which it was finetuned) at short horizons. For this reason, using an ensemble of the green short-horizon model (for short horizon predictions) and the brown finetuned model (for longer horizon predictions) achieives a further .01 reduction in MeanMAE with no additional training cost. We did not spend time optimizing hyperparameters for finetuning or ensembling and there may be modifications that reduce the "forgetting" of the short-term pretraining task.</p><p>We hypothesize that shorter prediction ranges allow the model to ignore further away nodes, and focus on a simpler task, but not all of our experimental data supports this. For example, a model trained to only predict 7 ≤ t ≤ 12 (not shown in plot) performed much worse than a model trained on the full task: 1 ≤ t ≤ 12, even though it should be able to "focus" more. Second, a model trained to predict only the next 45 minutes (red) performed worse on validation data than a model trained to predict the next hour (purple). These dynamics merit further investigation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">OVERVIEW</head><p>Using a combination of small modifications to the Graph WaveNet architecture and training schedule, we reduced this model's error on the METR-LA task from 3.04 down to 2.98, a new state-of-the-art on this traffic prediction task. An overview of the improvements achieved by each of the modifications can be found in <ref type="table" target="#tab_1">Table 1</ref>.</p><p>Following the precedent set by DCRNN and Graph WaveNet, we split the data into 70%, 10%, and 20% for our train, validation, and test splits respectively. The splits reflect time: the train set precedes the validation set which precedes the test set. We considered only the validation MAE for model selection and early   <ref type="table" target="#tab_2">Table 2</ref>). Finetuned model is initialized with weights of a model trained to predict traffic up to 30 minutes forward. RangeEnsemble uses that same 30 minute model to predict the first 30 minutes, and the finetuned model to predict minutes 35-60. All reported metrics are the average of 2 runs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">ANALYSIS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">FAILED EXPERIMENTS</head><p>To save other researchers cloud computing credits and partially offset our carbon impact, we briefly list experiments we tried that did not improve validation MAE.</p><p>1. Adding day of week information.</p><p>• Empirically, traffic speeds are about 10 mph slower on weekdays at 5pm than on weekends. However, adding the day of week to the model, either in a one hot representation, or as a scalar, did not influence the metrics, or even make the model converge faster. Either this information needs to be added in a different format, or this indicates that short-term traffic readings already capture these trends adequately. Intuitively, it seems like there should be a few minutes, right before rush hour starts, where there is very little recent traffic, and knowing the day of the week would help predict whether there will be a rush hour. It could also make sense to use a business calendar to build a binary isWorkday feature. 2. Using the last 75 minutes instead of the last 60. 3. Changing dropout, learning rate, weight decay, activation functions. 4. Cyclical learning rates.</p><p>• Cyclical learning rates <ref type="bibr" target="#b2">(Smith, 2017)</ref> lead to faster training and better metrics in many contexts, but not this one! 5. Transfer learning between road networks</p><p>• We tried finetuning a model on METR-LA based on a fully trained checkpoint on PEMS-BAY (besides the adjacency matrices which are the wrong shape, and also obviously shouldn't transfer). This model was about .03 MAE worse than training from scratch, although it trained faster, suggesting some local minimum was reached. This also isn't very useful practically since there are only two such traffic datasets that we know of.</p><p>6. Larger batch sizes and half precision.</p><p>• Switching to half precision actually made training a tiny amount slower, and hurt metrics considerably. At default batch size, the model is not memory bottlenecked, requiring only 4GB of GPU RAM. We tried to increase batch size both with and without half precision. In both contexts, larger batch size impacted performance negatively, (even with commensurate learning rate increases), and multiplying batch size by 8 only sped up training by 10%.</p><p>7. Using transformers instead of 1D Convolutions.</p><p>• Passing the features through 1 transformer with 1 attention head at the very beginning of the model hurt metrics. Adding any transformer inside the block, of which there are 8, made training unbearably slow. We did let a run finish and it was very bad, but too slow and not promising enough to iterate further.</p><p>8. Removing the information deletion in the block.</p><p>• Each layer downsamples the time dimension of the tensor by 1 or 2, so skip connections of previous layers discard the outputs for the "extra timesteps" from the earliest part of the previous output. We tried to address this by mean-pooling the channels that would have been discarded. This did not improve performance, and reflects the trend that the most recent 30 minutes is much more useful for prediction than the next 30.</p><p>9. Initializing the learned adjacency matrix from the SVD decomposition of the provided road network.</p><p>10. Directly backpropagating RMSE instead of MAE improves RMSE slightly but hurts MAE.</p><p>11. Changing the temperature of the softmax applied to the learned adjacency matrix.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="12.">Changing number of layers per block. (This slows things down a lot!)</head><p>13. Reducing/increasing the size of the learned node embeddings, emb src and emb dest .</p><p>14. Adding batch normalization after the graph convolution step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">ABLATIONS</head><p>In  We also provide an ablation over the number of timesteps used. We find that using more history to make predictions does tend to help, but the improvement is not monotonic, and starts to plateau after 5 time steps.</p><p>In the table below, we show the performance of models that are given access to different amounts of history. All prediction horizons are 60 minutes (12 timesteps) into the future.</p><p>History Length 1 2 3 4 5 6 9 12 MAE 3.058 3.034 3.014 3.017 3.007 3.015 3.024 3.002 <ref type="table">Table 3</ref>: Mean MAE of models given access to different amounts of history. For example History Length=6 uses the last 30 minutes. All models are trained to predict the next hour.</p><p>Finally, we verify that graph convolution in general and Graph WaveNet's learned adjacency matrix are crucial for strong performance. Without any graph convolution (or other modifications), we get Mean MAE of 3.59. Without the learned adjacency matrix, we get mean MAE of 3.08. And, without time of day information or modifications, the model achieves MeanMAE of 3.1. This last result is surprisingly strong, and supports the overall trend we observed that short-term traffic information is far more useful than longer-term information and attributes like time-of-day, day-of-the-week, or traffic readings from more than an hour ago.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSION AND FUTURE WORK</head><p>We showed that a few small modifications to the Graph WaveNet architecture: increasing the size of some internal convolutional layers, a skip connection, learning rate decay, and changing the representation of missing data, improves performance on both of the traffic datasets with which we experimented. Replacing 0s in the features with the average speed in improved results, but we believe that slightly more complex interpolation schemes, like copying the most recent nonzero sensor reading may produce further gains.</p><p>We also show that pretraining on easier short-term traffic speeds improves full task performance, but that as the finetuned model learns longer horizon relationships, it loses some of its performance on the shorter horizons. Mysteriously, a model trained to predict only longer-term traffic horizons performed poorly. Future work should aim to solve this mystery and ideally find a way to train one model that excels at both short-and long-term traffic prediction.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>METR-LA Sensor distribution Figure 2: Speed vs. time of day in LA across all sensors. T raffic slows down around morning and evening rush hours.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>stopping, but we report test MAE in tables and figures to facilitate comparison with the GWN paper, which does not report validation results. Across all of our runs, test set MAE was 94% correlated with validation MAE, and the improvements we discuss improved both validation MAE and test MAE. After deciding on the final set of approaches, we ran everything on PEMS-BAY to verify that our changes generalize to another traffic dataset.</figDesc><table><row><cell>METR-LA</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>PEMS BAY</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Model</cell><cell cols="5">15 min 30 min 60 min Mean 15 min</cell><cell cols="3">30 min 60 min Mean</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>MAE</cell><cell></cell><cell></cell><cell></cell><cell>MAE</cell></row><row><cell>DCRNN (Reported)</cell><cell>2.77</cell><cell>3.15</cell><cell>3.60</cell><cell>3.11</cell><cell>1.380</cell><cell>1.740</cell><cell>2.070</cell><cell>1.680</cell></row><row><cell>GWN (Reported)</cell><cell>2.69</cell><cell>3.07</cell><cell>3.53</cell><cell>3.04</cell><cell>1.30</cell><cell>1.63</cell><cell>1.95</cell><cell>1.58</cell></row><row><cell>GWN (Replicated)</cell><cell>2.70</cell><cell>3.10</cell><cell>3.55</cell><cell>3.06</cell><cell>1.316</cell><cell>1.647</cell><cell>1.968</cell><cell>1.591</cell></row><row><cell>GWNV2 (Ours)</cell><cell>2.67</cell><cell>3.04</cell><cell>3.45</cell><cell>3.00</cell><cell>1.303</cell><cell>1.622</cell><cell>1.909</cell><cell>1.560</cell></row><row><cell>Finetuned (Ours)</cell><cell>2.66</cell><cell>3.03</cell><cell>3.47</cell><cell>2.99</cell><cell>1.299</cell><cell>1.613</cell><cell>1.896</cell><cell>1.552</cell></row><row><cell cols="2">RangeEnsemble (Ours) 2.64</cell><cell>3.03</cell><cell>3.47</cell><cell>2.98</cell><cell>1.286</cell><cell>1.606</cell><cell>1.896</cell><cell>1.546</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>MAE for different models. GWNV2 incorporates the skip connection around GCN as well as modified hyperparameters (further breakdown of how each modification contributes to this number can be found in</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2</head><label>2</label><figDesc>, we show that none of our modifications can be removed architecture without impacting performance. In particular, learning rate decay, a simple change, is essential.</figDesc><table><row><cell>Modification</cell><cell>Mean MAE</cell></row><row><cell cols="2">GWN baseline (no modifications) 3.057</cell></row><row><cell>without n channels=40</cell><cell>3.024</cell></row><row><cell>without skip connection</cell><cell>3.013</cell></row><row><cell>without 0 replacement</cell><cell>3.010</cell></row><row><cell>without grad clipping=3</cell><cell>3.023</cell></row><row><cell>without lr decay</cell><cell>3.032</cell></row><row><cell>with all modifications</cell><cell>3.002</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 2 :</head><label>2</label><figDesc>We experiment with removing each of our proposed modifications from the final architecture, and resetting them to default values. Default values: clip=5, lr decay=1 (no decay), n channels=32.</figDesc><table /><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">2019 Urban Mobility Report, https://static.tti.tamu.edu/tti.tamu.edu/documents/ mobility-report-2019.pdf</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">80 minutes on an NVIDIA v100 GPU. And, somehow, 4 hours on a T4 GPU!</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Diffusion convolutional recurrent neural network: Data-driven traffic forecasting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yaguang</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rose</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cyrus</forename><surname>Shahabi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yan</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations (ICLR &apos;18)</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron</forename><surname>Van Den Oord</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sander</forename><surname>Dieleman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Heiga</forename><surname>Zen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Karen</forename><surname>Simonyan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oriol</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nal</forename><surname>Kalchbrenner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Senior</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Koray</forename><surname>Kavukcuoglu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1609.03499</idno>
		<title level="m">Wavenet: A generative model for raw audio</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Cyclical learning rates for training neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leslie</forename><forename type="middle">N</forename><surname>Smith</surname></persName>
		</author>
		<idno type="DOI">10.1109/WACV.2017.58</idno>
		<ptr target="http://dx.doi.org/10.1109/WACV.2017.58" />
	</analytic>
	<monogr>
		<title level="m">IEEE Winter Conference on Applications of Computer Vision (WACV)</title>
		<imprint>
			<date type="published" when="2017-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Graph wavenet for deep spatialtemporal graph modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zonghan</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shirui</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guodong</forename><surname>Long</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jing</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chengqi</forename><surname>Zhang</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1906.00121</idno>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
