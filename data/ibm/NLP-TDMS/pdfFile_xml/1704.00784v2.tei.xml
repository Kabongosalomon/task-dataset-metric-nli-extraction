<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Online and Linear-Time Attention by Enforcing Monotonic Alignments</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Colin</forename><surname>Raffel</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Minh-Thang</forename><surname>Luong</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><forename type="middle">J</forename><surname>Liu</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ron</forename><forename type="middle">J</forename><surname>Weiss</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Douglas</forename><surname>Eck</surname></persName>
						</author>
						<title level="a" type="main">Online and Linear-Time Attention by Enforcing Monotonic Alignments</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-26T12:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Recurrent neural network models with an attention mechanism have proven to be extremely effective on a wide variety of sequence-tosequence problems. However, the fact that soft attention mechanisms perform a pass over the entire input sequence when producing each element in the output sequence precludes their use in online settings and results in a quadratic time complexity. Based on the insight that the alignment between input and output sequence elements is monotonic in many problems of interest, we propose an end-to-end differentiable method for learning monotonic alignments which, at test time, enables computing attention online and in linear time. We validate our approach on sentence summarization, machine translation, and online speech recognition problems and achieve results competitive with existing sequence-tosequence models.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Recently, the "sequence-to-sequence" framework <ref type="bibr" target="#b35">(Sutskever et al., 2014;</ref><ref type="bibr" target="#b5">Cho et al., 2014)</ref> has facilitated the use of recurrent neural networks (RNNs) on sequence transduction problems such as machine translation and speech recognition. In this framework, an input sequence is processed with an RNN to produce an "encoding"; this encoding is then used by a second RNN to produce the target sequence. As originally proposed, the encoding is a single fixed-length vector representation of the input sequence. This requires the model to effectively compress all important information about the input sequence into a single vector. In practice, this often results in the model having difficulty generalizing to longer sequences than those seen during training .</p><p>An effective solution to these shortcomings are attention 1 Google Brain, Mountain View, California, USA. Correspondence to: Colin Raffel &lt;craffel@gmail.com&gt;.</p><p>Proceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s). mechanisms . In a sequence-tosequence model with attention, the encoder produces a sequence of hidden states (instead of a single fixed-length vector) which correspond to entries in the input sequence. The decoder is then allowed to refer back to any of the encoder states as it produces its output. Similar mechanisms have been used as soft addressing schemes in memoryaugmented neural network architectures <ref type="bibr" target="#b17">(Graves et al., 2014;</ref><ref type="bibr">Sukhbaatar et al., 2015)</ref> and RNNs used for sequence generation <ref type="bibr" target="#b14">(Graves, 2013)</ref>. Attention-based sequence-tosequence models have proven to be extremely effective on a wide variety of problems, including machine translation <ref type="bibr" target="#b32">Luong et al., 2015)</ref>, image captioning <ref type="bibr">(Xu et al., 2015)</ref>, speech recognition <ref type="bibr" target="#b8">(Chorowski et al., 2015;</ref><ref type="bibr" target="#b4">Chan et al., 2016)</ref>, and sentence summarization <ref type="bibr" target="#b34">(Rush et al., 2015)</ref>. In addition, attention creates an implicit soft alignment between entries in the output sequence and entries in the input sequence, which can give useful insight into the model's behavior.</p><p>A common criticism of soft attention is that the model must perform a pass over the entire input sequence when producing each element of the output sequence. This results in the decoding process having complexity O(T U ), where T and U are the input and output sequence lengths respectively. Furthermore, because the entire sequence must be processed prior to outputting any symbols, soft attention cannot be used in "online" settings where output sequence elements are produced when the input has only been partially observed.</p><p>The focus of this paper is to propose an alternative attention mechanism which has linear-time complexity and can be used in online settings. To achieve this, we first note that in many problems, the input-output alignment is roughly monotonic. For example, when transcribing an audio recording of someone saying "good morning", the region of the speech utterance corresponding to "good" will always precede the region corresponding to "morning". Even when the alignment is not strictly monotonic, it often only contains local input-output reorderings. Separately, despite the fact that soft attention allows for assignment of focus to multiple disparate entries of the input sequence, in many cases the attention is assigned mostly to a single entry. For examples of alignments with these characteristics, we refer to e.g. <ref type="bibr" target="#b8">(Chorowski et al. 2015</ref>  <ref type="figure">Figure  2</ref>; <ref type="bibr" target="#b4">Chan et al. 2016</ref>  <ref type="figure">Figure 2</ref>; <ref type="bibr" target="#b34">Rush et al. 2015</ref>  <ref type="figure">Figure 1</ref>; <ref type="bibr" target="#b2">Bahdanau et al. 2015</ref>  <ref type="figure">Figure 3</ref>), etc. Of course, this is not true in all problems; for example, when using soft attention for image captioning, the model will often change focus arbitrarily between output steps and will spread attention across large regions of the input image <ref type="bibr">(Xu et al., 2015)</ref>.</p><p>Motivated by these observations, we propose using hard monotonic alignments for sequence-to-sequence problems because, as we argue in section 2.2, they enable computing attention online and in linear time. Towards this end, we show that it is possible to train such an attention mechanism with a quadratic-time algorithm which computes its expected output. This allows us to continue using standard backpropagation for training while still facilitating efficient online decoding at test-time. On all problems we studied, we found these added benefits only incur a small decrease in performance compared to softmax-based attention.</p><p>The rest of this paper is structured as follows: In the following section, we develop an interpretation of soft attention as optimizing a stochastic process in expectation and formulate a corresponding stochastic process which allows for online and linear-time decoding by relying on hard monotonic alignments. In analogy with soft attention, we then show how to compute the expected output of the monotonic attention process and elucidate how the resulting algorithm differs from standard softmax attention. After giving an overview of related work, we apply our approach to the tasks of sentence summarization, machine translation, and online speech recognition, achieving results competitive with existing sequence-to-sequence models. Finally, we present additional derivations, experimental details, and ideas for future research in the appendix.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Online and Linear-Time Attention</head><p>To motivate our approach, we first point out that softmaxbased attention is computing the expected output of a simple stochastic process. We then detail an alternative process which enables online and linear-time decoding. Because this process is nondifferentiable, we derive an algorithm for computing its expected output, allowing us to train a model with standard backpropagation while applying our online and linear-time process at test time. Finally, we propose an alternative energy function motivated by the differences between monotonic attention and softmax-based attention.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Soft Attention</head><p>To begin with, we review the commonly-used form of soft attention proposed originally in . Broadly, a sequence-to-sequence model produces a sequence of outputs based on a processed input sequence. The model consists of two RNNs, referred to as the "encoder" and "decoder". The encoder RNN processes the input sequence x = {x 1 , . . . , x T } to produce a sequence of hidden states h = {h 1 , . . . , h T }. We refer to h as the "memory" to emphasize its connection to memory-augmented neural networks <ref type="bibr" target="#b17">(Graves et al., 2014;</ref><ref type="bibr">Sukhbaatar et al., 2015)</ref>. The decoder RNN then produces an output sequence y = {y 1 , . . . , y U }, conditioned on the memory, until a special end-of-sequence token is produced.</p><p>When computing y i , a soft attention-based decoder uses a learnable nonlinear function a(·) to produce a scalar value e i,j for each entry h j in the memory based on h j and the decoder's state at the previous timestep s i−1 . Typically, a(·) is a single-layer neural network using a tanh nonlinearity, but other functions such as a simple dot product between s i−1 and h j have been used <ref type="bibr" target="#b32">(Luong et al., 2015;</ref><ref type="bibr" target="#b17">Graves et al., 2014)</ref>. These scalar values are normalized using the softmax function to produce a probability distribution over the memory, which is used to compute a context vector c i as the weighted sum of h. Because items in the memory have a sequential correspondence with items in the input, these attention distributions create a soft alignment between the output and input. Finally, the decoder updates its state to s i based on s i−1 and c i and produces y i . In total, producing y i involves</p><formula xml:id="formula_0">e i,j = a(s i−1 , h j ) (1) α i,j = exp(e i,j ) T k=1 exp(e i,k )<label>(2)</label></formula><formula xml:id="formula_1">c i = T j=1 α i,j h j (3) s i = f (s i−1 , y i−1 , c i ) (4) y i = g(s i , c i )<label>(5)</label></formula><p>where f (·) is a recurrent neural network (typically one or more LSTM <ref type="bibr" target="#b18">(Hochreiter &amp; Schmidhuber, 1997)</ref> or GRU <ref type="bibr" target="#b9">(Chung et al., 2014)</ref> layers) and g(·) is a learnable nonlinear function which maps the decoder state to the output space (e.g. an affine transformation followed by a softmax when the target sequences consist of discrete symbols).</p><p>To motivate our monotonic alignment scheme, we observe that eqs.</p><p>(2) and (3) are computing the expected output of a simple stochastic process, which can be formulated as follows: First, a probability α i,j is computed independently for each entry h j of the memory. Then, a memory index k is sampled by k ∼ Categorical(α i ) and c i is set to h k . We visualize this process in <ref type="figure">fig. 1</ref>. Clearly, eq. (3) shows that soft attention replaces sampling k and assigning c i = h k with direct computation of the expected value of c i .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Memory h</head><p>Output y <ref type="figure">Figure 1</ref>. Schematic of the stochastic process underlying softmax-based attention decoders. Each node represents a possible alignment between an entry of the output sequence (vertical axis) and the memory (horizontal axis). At each output timestep, the decoder inspects all memory entries (indicated in gray) and attends to a single one (indicated in black). A black node indicates that memory element hj is aligned to output yi. In terms of which memory entry is chosen, there is no dependence across output timesteps or between memory entries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">A Hard Monotonic Attention Process</head><p>The discussion above makes clear that softmax-based attention requires a pass over the entire memory to compute the terms α i,j required to produce each element of the output sequence. This precludes its use in online settings, and results in a complexity of O(T U ) for generating the output sequence. In addition, despite the fact that h represents a transformation of a sequence (which ostensibly exhibits dependencies between subsequent elements), the attention probabilities are computed independent of temporal order and the attention distribution at the previous timestep.</p><p>We address these shortcomings by first formulating a stochastic process which explicitly processes the memory in a left-to-right manner. Specifically, for output timestep i we begin processing memory entries from index t i−1 , where t i is the index of the memory entry chosen at output timestep i (for convenience, letting t 0 = 1). We sequentially compute, for j = t i−1 , t i−1 + 1, t i−1 + 2, . . .</p><formula xml:id="formula_2">e i,j = a(s i−1 , h j ) (6) p i,j = σ(e i,j ) (7) z i,j ∼ Bernoulli(p i,j )<label>(8)</label></formula><p>where a(·) is a learnable deterministic "energy function" and σ(·) is the logistic sigmoid function. As soon as we sample z i,j = 1 for some j, we stop and set c i = h j and t i = j, "choosing" memory entry j for the context vector. Each z i,j can be seen as representing a discrete choice of whether to ingest a new item from the memory (z i,j = 0) or produce an output (z i,j = 1). For all sub-</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Memory h</head><p>Output y <ref type="figure">Figure 2</ref>. Schematic of our novel monotonic stochastic decoding process. At each output timestep, the decoder inspects memory entries (indicated in gray) from left-to-right starting from where it left off at the previous output timestep and chooses a single one (indicated in black). A black node indicates that memory element hj is aligned to output yi. White nodes indicate that a particular input-output alignment was not considered because it violates monotonicity. Arrows indicate the order of processing and dependence between memory entries and output timesteps.</p><p>sequent output timesteps, we repeat this process, always starting from t i−1 (the memory index chosen at the previous timestep). If for any output timestep i we have z i,j = 0 for j ∈ {t i−1 , . . . , T }, we simply set c i to a vector of zeros. This process is visualized in <ref type="figure">fig. 2</ref> and is presented more explicitly in algorithm 1 (appendix A).</p><p>Note that by construction, in order to compute p i,j , we only need to have computed h k for k ∈ {1, . . . , j}. It follows that our novel process can be computed in an online manner; i.e. we do not need to wait to observe the entire input sequence before we start producing the output sequence. Furthermore, because we start inspecting memory elements from where we left off at the previous output timestep (i.e. at index t i−1 ), the resulting process only computes at most max(T, U ) terms p i,j , giving it a linear runtime. Of course, it also makes the strong assumption that the alignment between the input and output sequence is strictly monotonic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Training in Expectation</head><p>The online alignment process described above involves sampling, which precludes the use of standard backpropagation. In analogy with softmax-based attention, we therefore propose training with respect to the expected value of c i , which can be computed straightforwardly as follows. We first compute e i,j and p i,j exactly as in eqs. (6) and <ref type="formula">(7)</ref>, where p i,j are interpreted as the probability of choosing memory element j at output timestep i. The attention distribution over the memory is then given by (see appendix C for a derivation)</p><formula xml:id="formula_3">α i,j = p i,j j k=1 α i−1,k j−1 l=k (1 − p i,l ) (9) = p i,j (1 − p i,j−1 ) α i,j−1 p i,j−1 + α i−1,j<label>(10)</label></formula><p>We provide a solution to the recurrence relation of eq. (10) which allows computing α i,j for j ∈ {1, . . . , T } in parallel with cumulative sum and cumulative product operations in appendix C.1. Defining q i,j = α i,j /p i,j gives the following procedure for computing α i,j :</p><formula xml:id="formula_4">e i,j = a(s i−1 , h j ) (11) p i,j = σ(e i,j ) (12) q i,j = (1 − p i,j−1 )q i,j−1 + α i−1,j (13) α i,j = p i,j q i,j<label>(14)</label></formula><p>where we define the special cases of q i,0 = 0, p i,0 = 0 to maintain equivalence with eq. (9). As in softmaxbased attention, the α i,j values produce a weighting over the memory, which are then used to compute the context vector at each timestep as in eq. (3). However, note that α i may not be a valid probability distribution because j α i,j ≤ 1. Using α i as-is, without normalization, effectively associates any additional probability not allocated to memory entries to an additional all-zero memory location. Normalizing α i so that T j=1 α i,j = 1 has two issues: First, we can't perform this normalization at test time and still achieve online decoding because the normalization depends on α i,j for j ∈ {1, . . . , T }, and second, it would result in a mismatch compared to the probability distribution induced by the hard monotonic attention process which sets c i to a vector of zeros when z i,j = 0 for j ∈ {t i−1 , . . . , T }.</p><p>Note that computing c i still has a quadratic complexity because we must compute α i,j for j ∈ {1, . . . , T } for each output timestep i. However, because we are training directly with respect to the expected value of c i , we will train our decoders using eqs. (11) to (14) and then use the online, linear-time attention process of section 2.2 at test time. Furthermore, if p i,j ∈ {0, 1} these approaches are equivalent, so in order for the model to exhibit similar behavior at training and test time, we need p i,j ≈ 0 or p i,j ≈ 1. We address this in section 2.5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.">Modified Energy Function</head><p>While various "energy functions" a(·) have been proposed, the most common to our knowledge is the one proposed in :</p><formula xml:id="formula_5">a(s i−1 , h j ) = v tanh(W s i−1 + V h j + b)<label>(15)</label></formula><p>where W and V are weight matrices, b is a bias vector, 1 and v is a weight vector. We make two modifications to eq. (15) for use with our monotonic decoder: First, while the softmax is invariant to offset, 2 the logistic sigmoid is not. As a result, we make the simple modification of adding a scalar variable r after the tanh function, allowing the model to learn the appropriate offset for the pre-sigmoid activations. Note that eq. (13) tends to exponentially decay attention over the memory because 1 − p i,j ∈ [0, 1]; we therefore initialized r to a negative value prior to training so that 1 − p i,j tends to be close to 1. Second, the use of the sigmoid nonlinearity in eq. (12) implies that our mechanism is particularly sensitive to the scale of the energy terms e i,j , or correspondingly, the scale of the energy vector v. We found an effective solution to this issue was to apply weight normalization <ref type="bibr">(Salimans &amp; Kingma, 2016)</ref> to v, replacing it by gv/ v where g is a scalar parameter. Initializing g to the inverse square root of the attention hidden dimension worked well for all problems we studied.</p><p>The above produces the energy function</p><formula xml:id="formula_6">a(s i−1 , h j ) = g v v tanh(W s i−1 + V h j + b) + r (16)</formula><p>The addition of the two scalar parameters g and r prevented the issues described above in all our experiments while incurring a negligible increase in the number of parameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5.">Encouraging Discreteness</head><p>As mentioned above, in order for our mechanism to exhibit similar behavior when training in expectation and when using the hard monotonic attention process at test time, we require that p i,j ≈ 0 or p i,j ≈ 1. A straightforward way to encourage this behavior is to add noise before the sigmoid in eq. (12), as was done e.g. in <ref type="bibr" target="#b11">(Frey, 1997;</ref><ref type="bibr">Salakhutdinov &amp; Hinton, 2009;</ref><ref type="bibr" target="#b10">Foerster et al., 2016)</ref>. We found that simply adding zero-mean, unit-variance Gaussian noise to the pre-sigmoid activations was sufficient in all of our experiments. This approach is similar to the recently proposed Gumbel-Softmax trick <ref type="bibr" target="#b20">(Jang et al., 2016;</ref><ref type="bibr">Maddison et al., 2016)</ref>, except we did not find it necessary to anneal the temperature as suggested in <ref type="bibr" target="#b20">(Jang et al., 2016)</ref>.</p><p>Note that once we have a model which produces p i,j which are effectively discrete, we can eschew the sampling involved in the process of section 2.2 and instead simply set</p><formula xml:id="formula_7">z i,j = I(p i,j &gt; τ )</formula><p>where I is the indicator function and τ is a threshold. We used this approach in all of our experiments, setting τ = 0.5. Furthermore, at test time we do not add pre-sigmoid noise, making decoding purely deter-ministic. Combining all of the above, we present our differentiable approach to training the monotonic alignment decoder in algorithm 2 (appendix A). <ref type="bibr">(Luo et al., 2016)</ref> and <ref type="bibr">(Zaremba &amp; Sutskever, 2015)</ref> both study a similar framework in which a decoder RNN can decide whether to ingest another entry from the input sequence or emit an entry of the output sequence. Instead of training in expectation, they maintain the discrete nature of this decision while training and use reinforcement learning (RL) techniques. We initially experimented with RL-based training methods but were unable to find an approach which worked reliably on the different tasks we studied. Empirically, we also show superior performance to (Luo et al., 2016) on online speech recognition tasks; we did not attempt any of the tasks from <ref type="bibr">(Zaremba &amp; Sutskever, 2015)</ref>. <ref type="bibr" target="#b1">(Aharoni &amp; Goldberg, 2016)</ref> also study hard monotonic alignments, but their approach requires target alignments computed via a separate statistical alignment algorithm in order to be trained.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Related Work</head><p>As an alternative approach to monotonic alignments, Connectionist Temporal Classification (CTC) <ref type="bibr" target="#b15">(Graves et al., 2006)</ref> and the RNN Transducer <ref type="bibr" target="#b13">(Graves, 2012)</ref> both assume that the output sequences consist of symbols, and add an additional "null" symbol which corresponds to "produce no output". More closely to our model, (Yu et al., 2016b) similarly add "shift" and "emit" operations to an RNN. Finally, the Segmental RNN (Kong et al., 2015) treats a segmentation of the input sequence as a latent random variable. In all cases, the alignment path is marginalized out via a dynamic program in order to obtain a conditional probability distribution over label sequences and train directly with maximum likelihood. These models either require conditional independence assumptions between output symbols or don't condition the decoder (language model) RNN on the input sequence. We instead follow the framework of attention and marginalize out alignment paths when computing the context vectors c i which are subsequently fed into the decoder RNN, which allows the decoder to condition on its past output as well as the input sequence. Our approach can therefore be seen as a marriage of these CTCstyle techniques and attention. Separately, instead of performing an approximate search for the most probable output sequence at test time, we use hard alignments which facilitates linear-time decoding.</p><p>A related idea is proposed in <ref type="bibr">(Raffel &amp; Lawson, 2017)</ref>, where "subsampling" probabilities are assigned to each entry in the memory and a stochastic process is formulated which involves keeping or discarding entries from the input sequence according to the subsampling probabilities. A dynamic program similar to the one derived in section 2.3 is then used to compute the expected output which allows for training with standard backpropagation. Our approach differs in that we utilize an RNN decoder to construct the output sequence, and furthermore allows for output sequences which are longer than the input.</p><p>Some similar ideas to those in section 2.3 were proposed in the context of speech recognition in <ref type="bibr" target="#b8">(Chorowski et al., 2015)</ref>: First, the prior attention distributions are convolved with a bank of one-dimensional filters and then included in the energy function calculation. Second, instead of computing attention over the entire memory they only compute it over a sliding window. This reduces the runtime complexity at the expense of the strong assumption that memory locations attended to at subsequent output timesteps fall within a small window of one another. Finally, they also advocate replacing the softmax function with a sigmoid, but they then normalize by the sum of these sigmoid activations across the memory window instead of interpreting these probabilities in the left-to-right framework we use. While these modifications encourage monotonic attention, they do not explicitly enforce it, and so the authors do not investigate online decoding.</p><p>In a similar vein, <ref type="bibr" target="#b32">(Luong et al., 2015)</ref> explore only computing attention over a small window of the memory. In addition to simply monotonically increasing the window location at each output timestep, they also consider learning a policy for producing the center of the memory window based on the current decoder state. <ref type="bibr" target="#b21">(Kim et al., 2017)</ref> also make the connection between soft attention and selecting items from memory in expectation. They consider replacing the softmax in standard soft attention with an elementwise sigmoid nonlinearity, but do not formulate the interpretation of addressing memory from left-to-right and the corresponding probability distributions as we do in section 2.3. <ref type="bibr" target="#b19">(Jaitly et al., 2015)</ref> apply standard softmax attention in online settings by splitting the input sequence into chunks and producing output tokens using the attentive sequence-tosequence framework over each chunk. They then devise a dynamic program for finding the approximate best alignment between the model output and the target sequence. In contrast, our ingest/emit probabilities p i,j can be seen as adaptively chunking the input sequence (rather than providing a fixed setting of the chunk size) and we instead train by exactly computing the expectation over alignment paths.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Experiments</head><p>To validate our proposed approach for learning monotonic alignments, we applied it to a variety of sequenceto-sequence problems: sentence summarization, machine translation, and online speech recognition. In the follow-ing subsections, we give an overview of the models used and the results we obtained; for more details about hyperparamers and training specifics please see appendix D. Incidentally, all experiments involved predicting discrete symbols (e.g. phonemes, characters, or words); as a result, the output of the decoder in each of our models was fed into an affine transformation followed by a softmax nonlinearity with a dimensionality corresponding to the number of possible symbols. At test time, we performed a beam search over softmax predictions on all problems except machine translation. All networks were trained using standard cross-entropy loss with teacher forcing against target sequences using the Adam optimizer <ref type="bibr" target="#b29">(Kingma &amp; Ba, 2014)</ref>. All of our decoders used the monotonic attention mechanism of section 2.3 during training to address the hidden states of the encoder. For comparison, we report test-time results using both the hard linear-time decoding method of section 2.2 and the "soft" monotonic attention distribution. We also present the results of a synthetic benchmark we used to measure the potential speedup offered by our linear-time decoding process in appendix F.</p><p>Online Speech Recognition Online speech recognition involves transcribing the words spoken in a speech utterance in real-time, i.e. as a person is talking. This problem is a natural application for monotonic alignments because online decoding is an explicit requirement. In addition, this precludes the use of bidirectional RNNs, which degrades performance somewhat . We tested our approach on two datasets: TIMIT <ref type="bibr" target="#b12">(Garofolo et al., 1993)</ref> and the Wall Street Journal corpus <ref type="bibr">(Paul &amp; Baker, 1992)</ref>.</p><p>Speech recognition on the TIMIT dataset involves transcribing the phoneme sequence underlying a given speech utterance. Speech utterances were represented as sequences of 40-filter (plus energy) mel-filterbank spectra, computed every 10 milliseconds, with delta-and deltadelta-features. Our encoder RNN consisted of three unidirectional LSTM layers. Following <ref type="bibr" target="#b4">(Chan et al., 2016)</ref>, after the first and second LSTM layer we placed time reduction layers which skip every other sequence element.</p><p>Our decoder RNN was a single unidirectional LSTM. Our output softmax had 62 dimensions, corresponding to the 60 phonemes from TIMIT plus special start-of-sequence and end-of-sequence tokens. At test time, we utilized a beam search over softmax predictions, with a beam width of 10. We report the phone error rate (PER) after applying the standard mapping to 39 phonemes . We used the standard train/validation/test split and report results on the test set.</p><p>Our model's performance, with a comparison to other online approaches, is shown in table 1. We achieve better performance than recently proposed sequence-to-sequence models <ref type="bibr">(Luo et al., 2016;</ref><ref type="bibr" target="#b19">Jaitly et al., 2015)</ref>, though the small size of the TIMIT dataset and the resulting variability of results precludes making substantiative claims about one approach being best. We note that <ref type="bibr" target="#b19">(Jaitly et al., 2015)</ref> were able to improve performance by precomputing alignments using an HMM system and providing them as a supervised signal to their decoder; we did not experiment with this idea. CTC  still outperforms all sequence-to-sequence models. In addition, there remains a substantial gap between these online results and offline results using bidirectional LSTMs, e.g. <ref type="bibr" target="#b8">(Chorowski et al., 2015)</ref> achieves a 17.6% phone error rate using a softmax-based attention mechanism and  achieved 17.7% using a pre-trained RNN transducer model. We are interested in investigating ways to close this gap in future work.</p><p>Because of the size of the dataset, performance on TIMIT is often highly dependent on appropriate regularization. We therefore also evaluated our approach on the Wall Street Journal (WSJ) speech recognition dataset, which is about 10 times larger. For the WSJ corpus, we present speech utterances to the network as 80-filter mel-filterbank spectra with delta-and delta-delta features, and normalized using per-speaker mean and variance computed offline. The model architecture is a variation of that from <ref type="bibr">(Zhang et al., 2016)</ref>, using an 8 layer encoder including: two convolutional layers which downsample the sequence in time, followed by one unidirectional convolutional LSTM layer, and finally a stack of three unidirectional LSTM layers interleaved with linear projection layers and batch normalization. The encoder output sequence is consumed by the proposed online attention mechanism which is passed into a decoder consisting of a single unidirectional LSTM layer followed by a softmax layer.</p><p>Our output softmax predicted one of 49 symbols, consisting of alphanumeric characters, punctuation marks, and start-of sequence, end-of-sequence, "unknown", "noise", and word delimiter tokens. We utilized label smoothing during training , replacing the targets at time y t with a convex weighted combination of the surrounding five labels (full details in appendix D.1.2). Performance was measured in terms of word error rate (WER) on the test set after segmenting the model's predic- tions according to the word delimiter tokens. We used the standard dataset split of si284 for training, dev93 for validation, and eval92 for testing. We did not use a language model to improve decoding performance.</p><p>Our results on WSJ are shown in table 2. Our model, with hard monotonic decoding, achieved a significantly lower WER than the other online methods. While these figures show a clear advantage to our approach, our model architecture differed significantly from those of <ref type="bibr">(Luo et al., 2016;</ref><ref type="bibr">Wang et al., 2016)</ref>. We therefore additionally measured performance against a baseline model which was identical to our model except that it used softmax-based attention (which makes it quadratic-time and offline) instead of a monotonic alignment decoder. This resulted in a small decrease of 1.4% WER, suggesting that our hard monotonic attention approach achieves competitive performance while being substantially more efficient. To get a qualitative picture of our model's behavior compared to the softmax-attention baseline, we plot each model's inputoutput alignments for two example speech utterances in <ref type="figure" target="#fig_2">fig. 4 (appendix B</ref>). Both models learn roughly the same alignment, with some minor differences caused by ours being both hard and strictly monotonic.</p><p>Sentence Summarization Speech recognition exhibits a strictly monotonic input-output alignment. We are interested in testing whether our approach is also effective on problems which only exhibit approximately monotonic alignments. We therefore ran a "sentence summarization" experiment using the Gigaword corpus, which involves predicting the headline of a news article from its first sentence.</p><p>Overall, we used the model of <ref type="bibr" target="#b31">(Liu &amp; Pan, 2016)</ref>, modifying it only so that it used our monotonic alignment decoder instead of a soft attention decoder. Because online decoding is not important for sentence summarization, we utilized bidirectional RNNs in the encoder for this task (as is standard). We expect that the bidirectional RNNs will give the model local context which may help allow for strictly monotonic alignments. The model both took as input and produced as output one-hot representations of the word IDs, with a vocabulary of the 200,000 most common words in the training set. Our encoder consisted of <ref type="table">Table 3</ref>. ROUGE F-measure scores for sentence summarization on the Gigaword test set of <ref type="bibr" target="#b34">(Rush et al., 2015)</ref>. <ref type="bibr" target="#b34">(Rush et al., 2015)</ref> reports ROUGE recall scores, so we report the F-1 scores computed for that approach from <ref type="bibr" target="#b6">(Chopra et al., 2016)</ref>. As is standard, we report unigram, bigram, and longest common subsequence metrics as R-1, R-2, and R-L respectively.  <ref type="figure">Figure 3</ref>. Example sentence-summary pair with attention alignments for our hard monotonic model and the softmax-based attention model of <ref type="bibr" target="#b31">(Liu &amp; Pan, 2016)</ref>. Attention matrices are displayed so that black corresponds to 1 and white corresponds to 0. The ground-truth summary is "greece pumps more money and personnel into bird flu defense". a word embedding matrix (which was initialized randomly and trained as part of the model) followed by four bidirectional LSTM layers. We used a single LSTM layer for the decoder. For data preparation and evaluation, we followed the approach of <ref type="bibr" target="#b34">(Rush et al., 2015)</ref>, measuring performance using the ROUGE metric.</p><p>Our results, along with the scores achieved by other approaches, are presented in table 3. While the monotonic alignment model outperformed existing models by a substantial margin, it fell slightly behind the model of <ref type="bibr" target="#b31">(Liu &amp; Pan, 2016)</ref> which we used as a baseline. The higher performance of our model and the model of <ref type="bibr" target="#b31">(Liu &amp; Pan, 2016)</ref> can be partially explained by the fact that their encoders have roughly twice as many layers as most models proposed in the literature.</p><p>For qualitative evaluation, we plot an example input-output pair and alignment matrices for our hard monotonic attention model and the softmax-attention baseline of <ref type="bibr" target="#b31">(Liu &amp; Pan, 2016)</ref> in <ref type="figure">fig. 3</ref> (an additional example is shown in <ref type="figure">fig. 6, appendix B)</ref>. Most apparent is that a given word in the summary is not always aligned to the most obvious word in the input sentence; the hard monotonic decoder aligns the first four words in the summary reasonably (greek ↔ greek, government ↔ finance, approves ↔ approved, more ↔ more), but the latter four words have unexpected alignments (funds ↔ in, to ↔ for, bird ↔ measures, bird ↔ flu). We believe this is due to the ability of the multilayer bidirectional RNN encoder to reorder words in the input sequence. This effect is also apparent in <ref type="figure">fig. 6/  (appendix B)</ref>, where the monotonic alignment decoder is able to produce the phrase "human rights criticism" despite the fact that the input sentence has the phrase "criticism of human rights". Separately, we note that the softmax attention model's alignments are extremely "soft" and nonmonotonic; this may be advantageous for this problem and partially explain its slightly superior performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Machine Translation</head><p>We also evaluated our approach on machine translation, another task which does not exhibit strictly monotonic alignments. In fact, for some language pairs (e.g. English and Japanese, English and Korean), we do not expect monotonicity at all. However, for other pairs (e.g. English and French, English and Vietnamese) only local word reorderings are required. Our translation experiments therefore involved English to Vietnamese translation using the parallel corpus of TED talks (133K sentence pairs) provided by the IWSLT 2015 Evaluation Campaign <ref type="bibr" target="#b3">(Cettolo et al., 2015)</ref>. Following <ref type="bibr" target="#b32">(Luong &amp; Manning, 2015)</ref>, we tokenize the corpus with the default Moses tokenizer, preserve casing, and replace words whose frequencies are less than 5 by &lt;unk&gt;. As a result, our vocabulary sizes are 17K and 7.7K for English and Vietnamese respectively. We use the TED tst2012 (1553 sentences) as a validation set for hyperparameter tuning and TED tst2013 (1268 sentences) as a test set. We report results in both perplexity and BLEU.</p><p>Our baseline neural machine translation (NMT) system is the softmax attention-based sequence-to-sequence model described in <ref type="bibr" target="#b32">(Luong et al., 2015)</ref>. From that baseline, we substitute the softmax-based attention mechanism with our proposed monotonic alignment decoder. The model utilizes two-layer unidirectional LSTM networks for both the encoder and decoder.</p><p>In <ref type="bibr" target="#b32">(Luong et al., 2015)</ref>, the authors demonstrated that under their proposed architecture, a dot product-based energy function worked better than eq. (15). Since our architecture is based on that of <ref type="bibr" target="#b32">(Luong et al., 2015)</ref>, to facilitate comparison we also tested the following variant: where g and r are scalars (initialized as in section 2.4) and W is a weight matrix.</p><formula xml:id="formula_8">a(s i−1 , h j ) = g(s i−1 W h) + r<label>(17)</label></formula><p>Our results are shown in <ref type="table" target="#tab_3">Table 4</ref>. To get a better picture of each model's behavior, we plot input-output alignments in <ref type="figure">fig. 5 (appendix B)</ref>. Most noticeable is that the monotonic alignment model tends to focus attention later in the input sequence than the baseline softmax-attention model. We hypothesize that this is a way to compensate for non-monotonic alignments when a unidirectional encoder is used; i.e. the model has effectively learned to focus on words at the end of phrases which require reordering, at which point the unidirectional encoder has observed the whole phrase. This can be seen most clearly in the example on the right, where translating "a huge famine" to Vietnamese requires reordering (as suggested by the softmax-attention model's alignment), so the hard monotonic alignment model focuses attention on the final word in the phrase ("famine") while producing its translation. We suspect our model's small decrease in BLEU compared to the baseline model may be due in part to this increased modeling burden.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Discussion</head><p>Our results show that our differentiable approach to enforcing monotonic alignments can produce models which, following the decoding process of section 2.2, provide efficient online decoding at test time without sacrificing substantial performance on a wide variety of tasks. We believe our framework presents a promising environment for future work on online and linear-time sequence-to-sequence models. We are interested in investigating various extensions to this approach, which we outline in appendix E. To facilitate experimentation with our proposed attention mechanism, we have made an example TensorFlow  implementation of our approach available online 3 and added a reference implementation to Tensor-Flow's tf.contrib.seq2seq module. We also provide a "practitioner's guide" in appendix G. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Algorithms</head><p>Below are algorithms for the hard monotonic decoding process we used at test time (algorithm 1) and the approach for computing its expected output that we used to train the network (algorithm 2). Terminology matches the main text, except we use 0 to signify a vector of zeros.</p><p>Algorithm <ref type="formula">1</ref>  Input: memory h of length T , target outputsŷ = {StartOfSequence,ŷ 1 ,ŷ 2 , . . . , EndOfSequence} State: s 0 = 0, i = 1, α 0,j = δ j for j ∈ {1, . . . , T } whileŷ i−1 = EndOfSequence do // Produce output tokens until end of the target sequence p i,0 = 0, q i,0 = 0 // Special cases so that the recurrence relation matches eq. (9) for j = 1 to T do // Inspect all memory entries h j e i,j = a(s i−1 , h j ) // Compute attention energy for h j using eq. (16) e i,j = e i,j + N (0, 1) // Add pre-sigmoid noise to encourage p i,j ≈ 0 or p i,j ≈ 1 p i,j = σ(e i,j ) // Compute probability of choosing h j q i,j = (1 − p i,j−1 )q i,j−1 + α i−1,j // Iterate recurrence relation derived in eq. (10) α i,j = p i,j q i,j // Compute the probability that c i = h j end for c i = T j=1 α i,j h j // Compute weighted combination of memory for context vector s i = f (s i−1 , y i−1 , c i ) // Update the state based on the new context vector using the RNN f y i = g(s i , c i ) // Compute predicted output for timestep i using the softmax layer g i = i + 1 end while</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Figures</head><p>Below are example hard monotonic and softmax attention alignments for each of the different tasks we included in our experiments. Attention matrices are displayed so that black corresponds to 1 and white corresponds to 0.    Softmax Attention <ref type="figure">Figure 5</ref>. English sentences, predicted Vietnamese sentences, and input-output alignments for our proposed hard monotonic alignment model and the baseline model of <ref type="bibr" target="#b32">(Luong &amp; Manning, 2015)</ref>. The Vietnamese model outputs for the left example can be translated back to English as "And I on this stage because I am a model." (monotonic) and "And I am on this stage because I am a structure." (softmax). The input word "model" can mean either a person or a thing; the monotonic alignment model correctly chose the former while the softmax alignment model chose the latter. The monotonic alignment model erroneously skipped the first verb in the sentence. For the right example, translations of the model outputs back to English are "A large famine in North Korea." (monotonic) and "An invasion of a huge famine in &lt;unk&gt;." (softmax). The monotonic alignment model managed to translate the proper noun North Korea, while the softmax alignment model produced &lt;unk&gt;. Both models skipped the phrase "mid-1990s"; this type of error is common in neural machine translation systems. <ref type="figure">Figure 6</ref>. Additional example sentence-summary pair and attention alignment matrices for our hard monotonic model and the softmaxbased attention model of <ref type="bibr" target="#b31">(Liu &amp; Pan, 2016)</ref>. The ground-truth summary is "china attacks us human rights".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Output sequence index i</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Softmax Attention</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Monotonic Attention Distribution</head><p>Recall that our goal is to compute the expected value of c i under the stochastic process defined by eqs. (6) to (8). To achieve this, we will derive an expression for the probability that c i = h j for j ∈ {1, . . . , T }, which in accordance with eq. (2) we denote α i,j . For i = 1, α 1,j is the probability that memory element j was chosen (p 1,j ) multiplied by the probability that memory elements k ∈ {1, 2, . . . , j − 1} were not chosen ((1 − p i,k )), giving</p><formula xml:id="formula_9">α 1,j = p 1,j j−1 k=1 (1 − p 1,k )<label>(18)</label></formula><p>For i &gt; 0, in order for c i = h j we must have that c i−1 = h k for some k ∈ {1, . . . , j} (which occurs with probability α i−1,k ) and that none of h k , . . . , h j−1 were chosen. Summing over possible values of k, we have</p><formula xml:id="formula_10">α i,j = p i,j j k=1 α i−1,k j−1 l=k (1 − p i,l )<label>(19)</label></formula><p>where for convenience we define m n x = 1 when n &gt; m. We provide a schematic and explanation of eq. (19) in <ref type="figure">fig. 7</ref>. Note that we can recover eq. (18) from eq. (19) by defining the special case α 0,j = δ j (i.e. α 0,1 = 1 and α 0,j = 0 for j ∈ {2, . . . , T }). Expanding eq. (19) reveals we can compute α i,j directly given α i−1,j and α i,j−1 :</p><formula xml:id="formula_11">α i,j = p i,j j−1 k=1 α i−1,k j−1 l=k (1−p i,l ) +α i−1,j<label>(20)</label></formula><formula xml:id="formula_12">= p i,j (1 − p i,j−1 ) j−1 k=1 α i−1,k j−2 l=k (1 − p i,l ) + α i−1,j (21) = p i,j (1 − p i,j−1 ) α i,j−1 p i,j−1 + α i−1,j<label>(22)</label></formula><p>Defining q i,j = α i,j /p i,j produces eqs. <ref type="formula">(13)</ref> and <ref type="formula" target="#formula_4">(14)</ref>. Equation <ref type="formula" target="#formula_0">(22)</ref> also has an intuitive interpretation: The expression (1 − p i,j−1 )α i,j−1 /p i,j−1 represents the probability that the model attended to memory item j − 1 at output timestep i, adjusted for the fact that memory item j − 1 was not chosen by multiplying (1 − p i,j−1 ) and dividing p i,j−1 . Adding α i−1,j reflects the additional possibility that the model attended to memory item j at the previous output timestep, and multiplying by p i,j enforces that memory item j was chosen at the current output timestep i.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Output y</head><p>Memory h <ref type="figure">Figure 7</ref>. Visualization of eq. (19). In this example, we are showing the computation of α3,4. Each grid shows each of the four terms in the summation, corresponding to the possibilities that we attended to memory item k = 1, 2, 3, 4 at the previous output timestep i − 1 = 2. Gray nodes with curved arrows represent the probability of not selecting to the lth memory entry (1 − p i,l ). The black nodes represent the possibility of attending to memory item j at timestep i.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.1. Recurrence Relation Solution</head><p>While eqs. <ref type="formula" target="#formula_3">(10)</ref> and <ref type="formula" target="#formula_0">(22)</ref> allow us to compute α i,j directly from α i−1,j and α i,j−1 , the dependence on α i,j−1 means that we must compute the terms α i,1 , α i,2 , . . . , α i,T sequentially. This is in contrast to softmax attention, where these terms can be computed in parallel because they are independent. Fortunately, there is a solution to the recurrence relation of eq. (10) which allows the terms of α i to be computed directly via parallelizable cumulative sum and cumulative product operations. Using eq. (13) which substitutes q i,j = α i,j /p i,j , we have</p><formula xml:id="formula_13">q i,j = (1 − p i,j−1 )q i,j−1 + α i−1,j (23) q i,j − (1 − p i,j−1 )q i,j−1 = α i−1,j (24) q i,j j k=1 (1 − p i,k−1 ) − (1 − p i,j−1 )q i,j−1 j k=1 (1 − p i,k−1 ) = α i−1,j j k=1 (1 − p i,k−1 ) (25) q i,j j k=1 (1 − p i,k−1 ) − q i,j−1 j−1 k=1 (1 − p i,k−1 ) = α i−1,j j k=1 (1 − p i,k−1 ) (26) j l=1 q i,l l k=1 (1 − p i,k−1 ) − q i,l−1 l−1 k=1 (1 − p i,k−1 ) = j l=1 α i−1,l l k=1 (1 − p i,k−1 ) (27) q i,j j k=1 (1 − p i,k−1 ) − q i,0 = j l=1 α i−1,l l k=1 (1 − p i,k−1 )<label>(28)</label></formula><formula xml:id="formula_14">q i,j = j k=1 (1 − p i,k−1 ) j l=1 α i−1,l l k=1 (1 − p i,k−1 )<label>(29)</label></formula><formula xml:id="formula_15">⇒ q i = cumprod(1 − p i )cumsum α i−1 cumprod(1 − p i )<label>(30)</label></formula><p>where cumprod(x) = [1, x 1 , x 1 x 2 , . . . , |x|−1 i</p><p>x i ] and cumsum(x) = [x 1 , x 1 + x 2 , . . . , |x| i x i ]. Note that we use the "exclusive" variant of cumprod 4 in keeping with our defined special case p i,0 = 0. Unlike the recurrence relation of eq. (10), these operations can be computed efficiently in parallel <ref type="bibr" target="#b30">(Ladner &amp; Fischer, 1980)</ref>. The primary disadvantage of this approach is that the product in the denominator of eq. (29) can cause numerical instabilities; we address this in appendix G.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Experiment Details</head><p>In this section, we give further details into the models and training procedures used in section 4. Any further questions about implementation details should be directed to the corresponding author. All models were implemented with TensorFlow .</p><formula xml:id="formula_16">D.1. Speech Recognition D.1.1. TIMIT</formula><p>Mel filterbank features were standardized to have zero mean and unit variance across feature dimensions according to their training set statistics and were fed directly into an RNN encoder with three unidirectional LSTM layers, each with 512 hidden units. After the first and second LSTM layers, we downsampled hidden state sequences by skipping every other state before feeding into the subsequent layer. For the decoder, we used a single unidirectional LSTM layer with 256 units, fed directly into the output softmax layer. All weight matrices were initialized uniformly from [−0.075, 0.075]. The output tokens were embedded via a learned embedding matrix with dimensionality 30, initialized uniformly from [− 3/30, 3/30]. Our decoder attention energy function used a hidden dimensionality of 512, with the scalar bias r initialized to -1. The model was regularized by adding weight noise with a standard deviation of 0.5 after 2,000 training updates. L2 weight regularization was also applied with a weight of 10 −6 .</p><p>We trained the network using Adam <ref type="bibr" target="#b29">(Kingma &amp; Ba, 2014)</ref>, with β 1 = 0.9, β 2 = 0.999, and = 10 −6 . Utterances were fed to the network with a minibatch size of 4. Our initial learning rate was 10 −4 , which we halved after 40,000 training steps. We clipped gradients when their global norm exceeded 2. We used three training replicas. Beam search decoding was used to produce output sequences with a beam width of 10.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.1.2. WALL STREET JOURNAL</head><p>The input 80 mel filterbank / delta / delta-delta features were organized as a T × 80 × 3 tensor, i.e. raw features, deltas, and delta-deltas are concatenated along the "depth" dimension. This was passed into a stack of two convolutional layers with ReLU activations, each consisting of 32 3×3× depth kernels in time × frequency. These were both strided by 2 × 2 in order to downsample the sequence in time, minimizing the computation performed in the following layers. Batch normalization <ref type="bibr" target="#b28">(Ioffe &amp; Szegedy, 2015)</ref> was applied prior to the ReLU activation in each layer. All encoder weight matrices and filters were initialized via a truncated Gaussian with zero mean and a standard deviation of 0.1. This downsampled feature sequence was then passed into a single unidirectional convolutional LSTM layer using 1x3 filter (i.e. only convolving across the frequency dimension within each timestep). Finally, this was passed into a stack of three unidirectional LSTM layers of size 256, interleaved with a 256 dimensional linear projection, following by batch normalization, and a ReLU activation. Decoder weight matrices were initialized uniformly at random from</p><formula xml:id="formula_17">[−0.1, 0.1].</formula><p>The decoder input is created by concatenating a 64 dimensional embedding corresponding to the symbol emitted at the previous timestep, and the 256 dimensional attention context vector. The embedding was initialized uniformly from <ref type="bibr">[−1, 1]</ref>. This was passed into a single unidirectional LSTM layer with 256 units. We used an attention energy function hidden dimensionality of 128 and initialized the bias scalar r to -4. Finally the concatenation of the attention context and LSTM output is passed into the softmax output layer.</p><p>We applied label smoothing , replacingŷ t , the target at time t, with (0.015ŷ t−2 + 0.035ŷ t−1 +ŷ t + 0.035ŷ t+1 + 0.015ŷ t+2 )/1.1. We used beam search decoding at test time with rank pruning at 8 hypotheses and a pruning threshold of 3.</p><p>The network was trained using teacher forcing on minibatches of 8 input utterances, optimized using Adam <ref type="bibr" target="#b29">(Kingma &amp; Ba, 2014)</ref> with β 1 = 0.9, β 2 = 0.999, and = 10 −6 . Gradients were clipped to a maximum global norm of 1. We set the initial learning rate to 0.0002 and decayed by a factor of 10 after 700,000, 1,000,000, and 1,300,000 training steps. L2 weight decay is used with a weight of 10 −6 , and, beginning from step 20,000, Gaussian weight noise with standard deviation of 0.075 was added to weights for all LSTM layers and decoder embeddings. We trained using 16 replicas.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.2. Sentence Summarization</head><p>For data preparation, we used the same Gigaword data processing scripts provided in <ref type="bibr" target="#b34">(Rush et al., 2015)</ref> and tokenized into words by splitting on spaces. The vocabulary was determined by selecting the most frequent 200,000 tokens. Only the tokens of the first sentence of the article were used as input to the model. An embedding layer was used to embed tokens into a 200 dimensional space; embeddings were initialized using random normal distribution with mean 0 and standard deviation 10 −4 .</p><p>We used a 4-layer bidirectional LSTM encoder with 4 layers and a single-layer unidirectional LSTM decoder. All LSTMs, and the attention energy function, had a hidden dimensionality of 256. The decoder LSTM was fed directly into the softmax output layer. All weights were initialized uniform-randomly between −0.1 and 0.1. In our monotonic alignment decoder, we initialized r to -4. At test time, we used a beam search over possible label sequences with a beam width of 4.</p><p>A batch size of 64 was used and the model was trained to minimize the sampled-softmax cross-entropy loss with 4096 negative samples. The Adam optimizer <ref type="bibr" target="#b29">(Kingma &amp; Ba, 2014)</ref> was used with β 1 = 0.9, β 2 = 0.999, and = 10 −4 , and an initial learning rate of 10 −3 ; an exponential decay was applied by multiplying the initial learning rate by .98 n/30000 where n is the current training step. Gradients were clipped to have a maximum global norm of 2. Early stopping was used with respect to validation loss and took about 300,000 steps for the baseline model, and 180,000 steps for the monotonic model. Training was conducted on 16 machines with 4 GPUs each. We reported ROUGE scores computed over the test set of <ref type="bibr" target="#b34">(Rush et al., 2015)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.3. Machine Translation</head><p>Overall, we followed the model of <ref type="bibr" target="#b32">(Luong &amp; Manning, 2015)</ref> closely; our hyperparameters are largely the same: Words were mapped to 512-dimensional embeddings, which were learned during training. We passed sentences to the network in minibatches of size 128. As mentioned in the text, we used two unidirectional LSTM layers in both the encoder and decoder. All LSTM layers, and the attention energy function, had a hidden dimensionality of 512. We trained with a single replica for 40 epochs using Adam <ref type="bibr" target="#b29">(Kingma &amp; Ba, 2014)</ref> with β 1 = 0.9, β 2 = 0.999, and = 10 −8 . We performed grid searches over initial learning rate and decay schedules separately for models using each of the two energy functions eq. (16) and eq. (17). For the model using eq. (16), we used an initial learning rate of 0.0005, and after 10 epochs we multiplied the learning rate by 0.8 each epoch; for eq. (17) we started at 0.001 and multiplied by 0.8 each epoch starting at the eighth epoch. Parameters were uniformly initialized in range [−0.1, 0.1]. Gradients were scaled whenever their norms exceeded 5. We used dropout with probability 0.3 as described in <ref type="bibr" target="#b33">(Pham et al., 2014)</ref>. Unlike <ref type="bibr" target="#b32">(Luong &amp; Manning, 2015)</ref>, we did not reverse source sentences in our monotonic attention experiments. We set r = −2 for the attention energy function bias scalar for both eq. (16) and eq. (17). We used greedy decoding (i.e. no beam search) at test time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Future Work</head><p>We believe there are a variety of promising extensions of our monotonic attention mechanism, which we outline briefly below.</p><p>• The primary drawback of training in expectation is that it retains the quadratic complexity during training. One idea would be to replace the cumulative product in eq. (9) with the thresholded remainder method of <ref type="bibr" target="#b25">(Graves, 2016)</ref> and <ref type="bibr" target="#b26">(Grefenstette et al., 2015)</ref>, but in preliminary experiments we were unable to successfully learn alignments with this approach. Alternatively, we could further our investigation into gradient estimators for discrete decisions (such as REINFORCE or straightthrough) instead of training in expectation <ref type="bibr" target="#b23">(Bengio et al., 2013)</ref>.</p><p>• As we point out in section 2.4, our method can fail when the attention energies e i,j are poorly scaled. This primarily stems from the strict enforcement of monotonicity. One possibility to mitigate this would be to instead regularize the model with a soft penalty which discourages non-monotonic alignments, instead of preventing them outright.</p><p>• In some problems, the input-output alignment is nonmonotonic only in small regions. A simple modification to our approach which would allow this would be to subtract a constant integer from t i−1 between output timesteps. Alternatively, utilizing multiple monotonic attention mechanisms in parallel would allow the model to attend to disparate memory locations at each output timestep (effectively allowing for non-monotonic alignments) while still maintaining linear-time decoding.</p><p>• To facilitate comparison, we sought to modify the standard softmax-based attention framework as little as possible. As a result, we have thus far not fully taken advantage of the fact that the decoding process is much more efficient. Specifically, the attention energy function of eq. (15) was primarily motivated by the fact that it is trivially parallelizable so that its repeated application is inexpensive. We could instead use a recurrent attention energy function, whose output depends on both the attention energies for prior memory items and those at the previous output timestep.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F. How much faster is linear-time decoding?</head><p>Throughout this paper, we have emphasized that one advantage of our approach is that it allows for linear-time decoding, i.e. the decoder RNN only makes a single pass over the memory in the course of producing the output sequence. However, we have thus far not attempted to quantify how much of a speedup this incurs in practice. Towards this end, we conducted an additional experiment to measure the speed of efficiently-implemented softmax-based and hard monotonic attention mechanisms. We chose to focus solely on the speed of the attention mechanisms rather than an entire RNN sequence-to-sequence model because models using these attention mechanisms are otherwise equivalent. Measuring the speed of the attention mechanisms alone allows us to isolate the difference in computational cost between the two approaches.</p><p>Specifically, we implemented both attention mechanisms using the highly-efficient C++ linear algebra package Eigen <ref type="bibr" target="#b27">(Guennebaud et al., 2010)</ref>. We set entries of the memory h and the decoder hidden states s i to random vectors with entries sampled uniformly in the range [−1, 1]. We then computed context vectors following eqs. <ref type="formula" target="#formula_0">(2)</ref> and <ref type="formula">(3)</ref> for the softmax attention mechanism and following algorithm 1 for hard monotonic attention. We varied the input and output sequence lengths and averaged the time to produce all of the corresponding context vectors over 100 trials for each setting.</p><p>The speedup of the monotonic attention mechanism compared to softmax attention is visualized in <ref type="figure" target="#fig_4">fig. 8</ref>. We found monotonic attention to be about 4 − 40× faster depending on the input and output sequence lengths. The most prominent difference occurred for short input sequences and long output sequences; in these cases the monotonic attention mechanism finishes processing the input sequence before it finishes producing the output sequence and therefore is able to stop computing context vectors. We emphasize that these numbers represent the best-case speedup from our approach; a more general insight is simply that our proposed hard monotonic attention mechanism has the potential to make decoding significantly more efficient for long sequences. Additionally, this advantage is distinct from the fact that our hard monotonic attention mechanism can be used for online sequence-to-sequence problems. We also emphasize that at training time, we expect our soft monotonic attention approach to have roughly the computational cost as standard softmax attention, thanks to the fact that we can compute the resulting attention distribution in parallel as described in appendix C.1. The code used for this benchmark is available in the repository for this paper. 5</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G. Practitioner's Guide</head><p>Because we are proposing a novel attention mechanism, we share here some insights gained from applying it in various settings in order to help practitioners try it on their own problems:</p><p>• The recursive structure of computing α i,j in eq. (9) can result in exploding gradients. We found it vital to apply gradient clipping in all of our experiments, as described in appendix D.</p><p>• Many automatic differentiation packages can produce numerically unstable gradients when using their cumulative product function. 67 Our simple solution was to compute the product in log-space, i.e. replacing n x n = exp( i log(x n )).</p><p>• In addition, the product in the denominator of eq. (29) can become negligibly small because the terms (1 − p i,k−1 ) all fall in the range [0, 1]. The simplest way to prevent the resulting numerical instabilities is to clip the range of the denominator to be within [ , 1] where is a small constant (we used = 10 −10 ). This can result in incorrect values for α i,j particularly when some p i,j are close to 1, but we encountered no discernible effect on our results.</p><p>• Alternatively, we found in preliminary experiments that simply setting the denominator to 1 still produced good results. This can be explained by the observation that when all p i,j ∈ {0, 1} (which we encourage during training), eq. (29) is equivalent to the recurrence relation of eq. (10) even when the denominator is 1.</p><p>• As we mention in the experiment details of the previous section, we ended up using a small range of values for the initial energy function scalar bias r. In general, performance was not very sensitive to this parameter, but we found small performance gains from using values in {−5, −4, −3, −2, −1} for different problems.</p><p>• More broadly, while the attention energy function modifications described in section 2.4 allowed models using our mechanism to be effectively trained on all tasks we 5 https://github.com/craffel/mad 6 https://github.com/tensorflow/ tensorflow/issues/3862 7 https://github.com/Theano/Theano/issues/ 5197 tried, they were not always necessary for convergence. Specifically, in speech recognition experiments the performance of our model was the same using eq. (15) and eq. (16), but for summarization experiments the models were unable to learn to utilize attention when using eq. (15). For ease of implementation, we recommend starting with the standard attention energy function of eq. (15) and then applying the modifications of eq. (16) if the model fails to utilize attention.</p><p>• It is occasionally recommended to reverse the input sequence prior to feeding it into sequence-to-sequence models <ref type="bibr" target="#b35">(Sutskever et al., 2014)</ref>. This violates our assumption that the input should be processed in a leftto-right manner when computing attention, so should be avoided.</p><p>• Finally, we highly recommend visualizing the attention alignments α i,j over the course of training. Attention provides valuable insight into the model's behavior, and failure modes can be quickly spotted (e.g. if α i,j = 0 for all i and j).</p><p>With the above factors in mind, on all problems we studied, we were able to replace softmax-based attention with our novel attention and immediately achieve competitive performance.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Hard Monotonic Attention ProcessInput: memory h of length T State: s 0 = 0, t 0 = 1, i = 1, y 0 = StartOfSequence while y i−1 = EndOfSequence do // Produce output tokens until end-of-sequence token is produced finished = 0 // Keep track of whether we chose a memory entry or not for j = t i−1 to T do // Start inspecting memory entries h j left-to-right from where we left offe i,j = a(s i−1 , h j ) // Compute attention energy for h j p i,j = σ(e i,j ) // Compute probability of choosing h j z i,j ∼ Bernoulli(p i,j ) //Sample whether to ingest another memory entry or output new symbol if z i,j = 1 then // If we sample 1, we stop scanning the memory c i = h j // Set the context vector to the chosen memory entry t i = j // Remember where we left off for the next output timestep finished = 1 // Keep track of the fact that we chose a memory entry break // Stop scanning the memory end if end for if finished = 0 then c i = 0 // If we scanned the entire memory without selecting anything, set c i to a vector of zeros end if s i = f (s i−1 , y i−1 , c i ) // Update the state based on the new context vector using the RNN f y i = g(s i , c i ) // Output a new symbol using the softmax layer g i = i + 1 end while Algorithm 2 Soft Monotonic Attention Decoder</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 .</head><label>4</label><figDesc>Attention alignments from hard monotonic attention and softmax-based attention models for a two example speech utterances. From top to bottom, we show the hard monotonic alignment, the softmax-attention alignment, and the utterance feature sequence. Differences in the alignments are highlighted with dashed red circles. Gaps in the alignment paths correspond to effectively ignoring silences and pauses in the speech utterances.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 8 .</head><label>8</label><figDesc>Speedup of hard monotonic attention mechanism compared to softmax attention on a synthetic benchmark.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 .</head><label>1</label><figDesc>Phone error rate on the TIMIT dataset for different online methods.</figDesc><table><row><cell>Method</cell><cell>PER</cell></row><row><cell>(Luo et al., 2016) (stacked LSTM)</cell><cell>21.5%</cell></row><row><cell>(Jaitly et al., 2015) (end-to-end)</cell><cell>20.8%</cell></row><row><cell>(Luo et al., 2016) (grid LSTM)</cell><cell>20.5%</cell></row><row><cell>Hard Monotonic Attention (ours)</cell><cell>20.4%</cell></row><row><cell cols="2">Soft Monotonic Attention (ours, offline) 20.1%</cell></row><row><cell>(Graves et al., 2013) (CTC)</cell><cell>19.6%</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 .</head><label>2</label><figDesc>Word error rate on the WSJ dataset. All approaches used a unidirectional encoder; results in grey indicate offline models.</figDesc><table><row><cell>Method</cell><cell>WER</cell></row><row><cell>CTC (our model)</cell><cell>33.4%</cell></row><row><cell>(Luo et al., 2016) (hard attention)</cell><cell>27.0%</cell></row><row><cell>(Wang et al., 2016) (CTC)</cell><cell>22.7%</cell></row><row><cell cols="2">Hard Monotonic Attention (our model) 17.4%</cell></row><row><cell>Soft Monotonic Attention (our model)</cell><cell>16.5%</cell></row><row><cell>Softmax Attention (our model)</cell><cell>16.0%</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4 .</head><label>4</label><figDesc>Performance on the IWSLT 2015 English-Vietnamese TED talks for our monotonic alignment model and the baseline softmax-attention model of<ref type="bibr" target="#b32">(Luong &amp; Manning, 2015)</ref>.</figDesc><table><row><cell>Method</cell><cell>BLEU</cell></row><row><cell>(Luong &amp; Manning, 2015)</cell><cell>23.3</cell></row><row><cell>Hard Monotonic, energy function eq. (16)</cell><cell>22.6</cell></row><row><cell>Hard Monotonic, energy function eq. (17)</cell><cell>23.0</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>Tim and Kingma, Diederik P. Weight normalization: A simple reparameterization to accelerate training of deep neural networks. In Advances in Neural Information Processing Systems, 2016.</figDesc><table><row><cell>Kingma, Diederik and Ba, Jimmy. method for stochastic optimization. arXiv preprint Adam: A arXiv:1412.6980, 2014. Kong, Lingpeng, Dyer, Chris, and Smith, Noah A. Seg-mental recurrent neural networks. arXiv preprint</cell><cell cols="2">Salimans, Sukhbaatar, Sainbayar, Szlam, Arthur, Weston, Jason, and</cell></row><row><cell>arXiv:1511.06018, 2015.</cell><cell cols="2">Fergus, Rob. End-to-end memory networks. In Advances</cell></row><row><cell></cell><cell cols="2">in neural information processing systems, 2015.</cell></row><row><cell>Liu, Peter J. and Pan, Xin. Text summarization with Ten-</cell><cell></cell><cell></cell></row><row><cell>sorFlow. http://goo.gl/16RNEu, 2016.</cell><cell cols="2">Sutskever, Ilya, Vinyals, Oriol, and Le, Quoc V. Sequence</cell></row><row><cell></cell><cell cols="2">to sequence learning with neural networks. In Advances</cell></row><row><cell>Luo, Yuping, Chiu, Chung-Cheng, Jaitly, Navdeep, and</cell><cell cols="2">in neural information processing systems, 2014.</cell></row><row><cell>Sutskever, Ilya. continuous rewards policy gradient. arXiv preprint Learning online alignments with arXiv:1608.01281, 2016.</cell><cell cols="2">Suzuki, Jun and Nagata, Masaaki. Cutting-off redundant repeating generations for neural abstractive summariza-tion. arXiv preprint arXiv:1701.00138, 2017.</cell></row><row><cell>Luong, Minh-Thang and Manning, Christopher D. Stan-ford neural machine translation systems for spoken lan-guage domain. In International Workshop on Spoken Language Translation, 2015.</cell><cell cols="2">Wang, Chong, Yogatama, Dani, Coates, Adam, Han, Tony, Hannun, Awni, and Xiao, Bo. Lookahead convolution layer for unidirectional recurrent neural networks. In Workshop Extended Abstracts of the 4th International</cell></row><row><cell>Luong, Minh-Thang, Pham, Hieu, and Manning, Christo-</cell><cell cols="2">Conference on Learning Representations, 2016.</cell></row><row><cell>pher D. Effective approaches to attention-based neural machine translation. In Conference on Empirical Meth-ods in Natural Language Processing, 2015.</cell><cell cols="2">Xu, Kelvin, Ba, Jimmy, Kiros, Ryan, Cho, Kyunghyun, Courville, Aaron, Salakhudinov, Ruslan, Zemel, Rich, and Bengio, Yoshua. Show, attend and tell: Neural im-</cell></row><row><cell>Maddison, Chris J., Mnih, Andriy, and Teh, Yee Whye. The concrete distribution: A continuous relax-</cell><cell cols="2">age caption generation with visual attention. In Interna-tional Conference on Machine Learning, 2015.</cell></row><row><cell>ation of discrete random variables. arXiv preprint arXiv:1611.00712, 2016.</cell><cell cols="2">Yu, Lei, Blunsom, Phil, Dyer, Chris, Grefenstette, Edward, and Kocisky, Tomas. The neural noisy channel. arXiv</cell></row><row><cell>Miao, Yishu and Blunsom, Phil. Language as a latent vari-</cell><cell>preprint arXiv:1611.02554, 2016a.</cell><cell></cell></row><row><cell>able: Discrete generative models for sentence compres-</cell><cell cols="2">Yu, Lei, Buys, Jan, and Blunsom, Phil. Online segment to</cell></row><row><cell>sion. arXiv preprint arXiv:1609.07317, 2016.</cell><cell cols="2">segment neural transduction. In Conference on Empiri-</cell></row><row><cell>Nallapati, Ramesh, Zhou, Bowen, dos Santos,</cell><cell cols="2">cal Methods in Natural Language Processing, 2016b.</cell></row><row><cell>Cícero Nogueira, Gülçehre, Çaglar, and Xiang,</cell><cell>Zaremba, Wojciech and Sutskever, Ilya.</cell><cell>Reinforce-</cell></row><row><cell>Bing. Abstractive text summarization using sequence-</cell><cell cols="2">ment learning neural turing machines. arXiv preprint</cell></row><row><cell>to-sequence RNNs and beyond. In Conference on</cell><cell>arXiv:1505.00521, 362, 2015.</cell><cell></cell></row><row><cell>Computational Natural Language Learning, 2016.</cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="2">Zeng, Wenyuan, Luo, Wenjie, Fidler, Sanja, and Urta-</cell></row><row><cell>Paul, Douglas B. and Baker, Janet M. The design for the</cell><cell cols="2">sun, Raquel. Efficient summarization with read-again</cell></row><row><cell>Wall Street Journal-based CSR corpus. In Workshop on</cell><cell cols="2">and copy mechanism. arXiv preprint arXiv:1611.03382,</cell></row><row><cell>Speech and Natural Language, 1992.</cell><cell>2016.</cell><cell></cell></row><row><cell>Raffel, Colin and Lawson, Dieterich. Training a sub-</cell><cell cols="2">Zhang, Yu, Chan, William, and Jaitly, Navdeep. Very deep</cell></row><row><cell>sampling mechanism in expectation. arXiv preprint</cell><cell cols="2">convolutional networks for end-to-end speech recogni-</cell></row><row><cell>arXiv:1702.06914, 2017.</cell><cell>tion. arXiv preprint arXiv:1610.03022, 2016.</cell><cell></cell></row><row><cell>Rush, Alexander M., Chopra, Sumit, and Weston, Jason. A</cell><cell></cell><cell></cell></row><row><cell>neural attention model for abstractive sentence summa-</cell><cell></cell><cell></cell></row><row><cell>rization. In Conference on Empirical Methods in Natural</cell><cell></cell><cell></cell></row><row><cell>Language Processing, 2015.</cell><cell></cell><cell></cell></row><row><cell>Salakhutdinov, Ruslan and Hinton, Geoffrey. Semantic</cell><cell></cell><cell></cell></row><row><cell>hashing. International Journal of Approximate Reason-</cell><cell></cell><cell></cell></row><row><cell>ing, 50(7), 2009.</cell><cell></cell><cell></cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">b is occasionally omitted, but we found it often improves performance and only incurs a modest increase in parameters, so we include it.2 That is, softmax(e) = softmax(e + r) for any r ∈ R.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">https://github.com/craffel/mad</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">This can be computed e.g. in Tensorflow via tf.cumprod(x, exclusive=True)   </note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>We thank Jan Chorowski, Mark Daoust, Pietro Kreitlon Carolino, Dieterich Lawson, Navdeep Jaitly, George Tucker, Quoc V. Le, Kelvin Xu, Cinjon Resnick, Melody Guan, Matthew D. Hoffman, Jeffrey Dean, Kevin Swersky, Ashish Vaswani, and members of the Google Brain team for helpful discussions and insight.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">TensorFlow: A system for large-scale machine learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Abadi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Barham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Paul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Jianmin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Zhifeng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andy</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Dean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Jeffrey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Devin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Matthieu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ghemawat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sanjay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoffrey</forename><surname>Irving</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Isard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Michael</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kudlur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Manjunath</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Josh</forename><surname>Levenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Monga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Rajat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Moore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sherry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Derek</forename><forename type="middle">G</forename><surname>Murray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Steiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Benoit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tucker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Paul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Vasudevan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Vijay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Warden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Pete</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Wicke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuan</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Zheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Operating Systems Design and Implementation</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Sequence to sequence transduction with hard monotonic attention</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roee</forename><surname>Aharoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoav</forename><surname>Goldberg</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1611.01487</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Neural machine translation by jointly learning to align and translate</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dzmitry</forename><surname>Bahdanau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kyunghyun</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The IWSLT 2015 evaluation campaign</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mauro</forename><surname>Cettolo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan</forename><surname>Niehues</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Stüker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sebastian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bentivogli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Luisa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roldano</forename><surname>Cattoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marcello</forename><surname>Federico</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Spoken Language Translation</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Oriol. Listen, attend and spell: A neural network for large vocabulary conversational speech recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Jaitly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Navdeep</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Le</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Quoc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vinyals</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Acoustics, Speech and Signal Processing</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Learning phrase representations using RNN encoder-decoder for statistical machine translation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kyunghyun</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Van Merriënboer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Gülçehre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Çaglar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bahdanau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Dzmitry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bougares</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Fethi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Holger</forename><surname>Schwenk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Conference on Empirical Methods in Natural Language Processing</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Abstractive sentence summarization with attentive recurrent neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Chopra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sumit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Auli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><forename type="middle">M</forename><surname>Rush</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Towards better decoding and language model integration in sequence to sequence models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan</forename><surname>Chorowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Navdeep</forename><surname>Jaitly</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1612.02695</idno>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Attention-based models for speech recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan</forename><surname>Chorowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bahdanau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Dzmitry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Serdyuk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Dmitriy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kyunghyun</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Conference on Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Empirical evaluation of gated recurrent neural networks on sequence modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Junyoung</forename><surname>Chung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Gulcehre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Caglar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kyunghyun</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1412.3555</idno>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Learning to communicate with deep multi-agent reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jakob</forename><surname>Foerster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Yannis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nando</forename><surname>De Freitas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shimon</forename><surname>Whiteson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Continuous sigmoidal belief networks trained using slice sampling. Advances in neural information processing systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brendan</forename><forename type="middle">J</forename><surname>Frey</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">DARPA TIMIT acoustic-phonetic continous speech corpus</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">S</forename><surname>Garofolo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lori</forename><forename type="middle">F</forename><surname>Lamel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">M</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathon</forename><forename type="middle">G</forename><surname>Fiscus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">S</forename><surname>Pallett</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1211.3711</idno>
		<title level="m">Sequence transduction with recurrent neural networks</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Generating sequences with recurrent neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1308.0850</idno>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Connectionist temporal classification: labelling unsegmented sequence data with recurrent neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Fernández</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Santiago</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Faustino</forename><surname>Gomez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jürgen</forename><surname>Schmidhuber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International conference on Machine learning</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Speech recognition with deep recurrent neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohamed</forename><surname>Hinton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoffrey</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Acoustics, Speech and Signal Processing</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Wayne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Danihelka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ivo</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1410.5401</idno>
		<title level="m">Neural turing machines</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Long shortterm memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sepp</forename><surname>Hochreiter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jürgen</forename><surname>Schmidhuber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural computation</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">8</biblScope>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Navdeep</forename><surname>Jaitly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sussillo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>David</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Le</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Quoc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Oriol</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ilya</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Samy</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1511.04868</idno>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note type="report_type">A neural transducer. arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Jang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shixiang</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Poole</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1611.01144</idno>
		<title level="m">Categorical reparameterization with gumbel-softmax</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoon</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Denton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Carl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luong</forename><surname>Hoang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><forename type="middle">M</forename><surname>Rush</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1702.00887</idno>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">TensorFlow: A system for large-scale machine learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Abadi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Barham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Paul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Jianmin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Zhifeng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andy</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Dean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Jeffrey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Devin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Matthieu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ghemawat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sanjay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoffrey</forename><surname>Irving</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Isard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Michael</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kudlur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Manjunath</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Josh</forename><surname>Levenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Monga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Rajat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Moore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sherry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Derek</forename><forename type="middle">G</forename><surname>Murray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Steiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Benoit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tucker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Paul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Vasudevan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Vijay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Warden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Pete</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Wicke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuan</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Zheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Operating Systems Design and Implementation</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Estimating or propagating gradients through stochastic neurons for conditional computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nicholas</forename><surname>Léonard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron</forename><surname>Courville</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1308.3432</idno>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Towards better decoding and language model integration in sequence to sequence models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan</forename><surname>Chorowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Navdeep</forename><surname>Jaitly</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1612.02695</idno>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Adaptive computation time for recurrent neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1603.08983</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Learning to transduce with unbounded memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Edward</forename><surname>Grefenstette</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Karl</forename><surname>Hermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Moritz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mustafa</forename><surname>Suleyman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Phil</forename><surname>Blunsom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Eigen v3</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Guennebaud</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Gaël</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Jacob</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Benoıt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Avery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Philip</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bachrach</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Abraham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Barthelemy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sebastien</surname></persName>
		</author>
		<ptr target="http://eigen.tuxfamily.org" />
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Batch normalization: Accelerating deep network training by reducing internal covariate shift</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergey</forename><surname>Ioffe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Szegedy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Diederik</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jimmy</forename><surname>Ba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Adam</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1412.6980</idno>
		<title level="m">A method for stochastic optimization</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Parallel prefix computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><forename type="middle">E</forename><surname>Ladner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">J</forename><surname>Fischer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM (JACM)</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="831" to="838" />
			<date type="published" when="1980" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Text summarization with Ten-sorFlow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><forename type="middle">J</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xin</forename><surname>Pan</surname></persName>
		</author>
		<ptr target="http://goo.gl/16RNEu" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Stanford neural machine translation systems for spoken language domain</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Minh-Thang</forename><surname>Luong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><forename type="middle">D</forename><surname>Manning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Spoken Language Translation</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Dropout improves recurrent neural networks for handwriting recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Pham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Vu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bluche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Théodore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><surname>Kermorvant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jérôme</forename><surname>Louradour</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Frontiers in Handwriting Recognition</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">A neural attention model for abstractive sentence summarization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><forename type="middle">M</forename><surname>Rush</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sumit</forename><surname>Chopra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Weston</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Conference on Empirical Methods in Natural Language Processing</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Sequence to sequence learning with neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ilya</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oriol</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Le</forename><surname>Quoc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
