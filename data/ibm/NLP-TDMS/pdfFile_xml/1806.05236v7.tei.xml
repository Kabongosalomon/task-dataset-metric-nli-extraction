<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Manifold Mixup: Better Representations by Interpolating Hidden States</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vikas</forename><surname>Verma</surname></persName>
							<email>vikas.verma@aalto.fi</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Lamb</surname></persName>
							<email>lambalex@iro.umontreal.ca</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><surname>Beckham</surname></persName>
							<email>christopher.j.beckham@gmail.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amir</forename><surname>Najafi</surname></persName>
							<email>najafy@ce.sharif.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron</forename><surname>Courville</surname></persName>
							<email>courvila@iro.umontreal.ca</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Lopez-Paz</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Aalto Univeristy</orgName>
								<address>
									<country key="FI">Finland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Montréal Institute for Learning Algorithms</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Montréal Institute for Learning Algorithms</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">Sharif University of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="department">Ioannis Mitliagkas Montréal Institute for Learning Algorithms</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<orgName type="department">Montréal Institute for Learning Algorithms</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff6">
								<orgName type="department">Facebook AI Research</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff7">
								<orgName type="department">Montréal Institute for Learning Algorithms CIFAR Senior Fellow</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Manifold Mixup: Better Representations by Interpolating Hidden States</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-26T07:12+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Deep neural networks excel at learning the training data, but often provide incorrect and confident predictions when evaluated on slightly different test examples. This includes distribution shifts, outliers, and adversarial examples. To address these issues, we propose Manifold Mixup, a simple regularizer that encourages neural networks to predict less confidently on interpolations of hidden representations. Manifold Mixup leverages semantic interpolations as additional training signal, obtaining neural networks with smoother decision boundaries at multiple levels of representation. As a result, neural networks trained with Manifold Mixup learn class-representations with fewer directions of variance. We prove theory on why this flattening happens under ideal conditions, validate it on practical situations, and connect it to previous works on information theory and generalization. In spite of incurring no significant computation and being implemented in a few lines of code, Manifold Mixup improves strong baselines in supervised learning, robustness to single-step adversarial attacks, and test log-likelihood.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Deep neural networks are the backbone of state-of-the-art systems for computer vision, speech recognition, and language translation <ref type="bibr" target="#b19">(LeCun et al., 2015)</ref>. However, these systems perform well only when evaluated on instances very similar to those from the training set. When evaluated on slightly different distributions, neural networks often provide incorrect predictions with strikingly high confidence. This is a worrying prospect, since deep learning systems are being deployed in settings where data may be subject to distributional shifts. Adversarial examples <ref type="bibr" target="#b28">(Szegedy et al., 2014)</ref> are one such failure case: deep neural networks with nearly perfect performance provide incorrect <ref type="bibr">(a)</ref> (b) (c) (d) (e) (f) <ref type="figure" target="#fig_1">Figure 1</ref>: An experiment on a network trained on the 2D spiral dataset with a 2D bottleneck hidden representation in the middle of the network. Manifold mixup has three effects on learning when compared to vanilla training. First, it smoothens decision boundaries (from a. to b.). Second, it improves the arrangement of hidden representations and encourages broader regions of low-confidence predictions (from d. to e.). Black dots are the hidden representation of the inputs sampled uniformly from the range of the input space. Third, it flattens the representations (c. at layer 1, f. at layer 3). <ref type="figure">Figure 2</ref> shows that these effects are not accomplished by other well-studied regularizers (input mixup, weight decay, dropout, batch normalization, and adding noise to the hidden representations).</p><p>predictions with very high confidence when evaluated on perturbations imperceptible to the human eye. Adversarial examples are a serious hazard when deploying machine learning systems in securitysensitive applications. More generally, deep learning systems quickly degrade in performance as the distributions of training and testing data differ slightly from each other <ref type="bibr" target="#b7">(Ben-David et al., 2010)</ref>.</p><p>In this paper, we realize several troubling properties concerning the hidden representations and decision boundaries of state-of-the-art neural networks. First, we observe that the decision boundary is often sharp and close to the data. Second, we observe that the vast majority of the hidden representation space corresponds to high confidence predictions, both on and off of the data manifold.</p><p>Motivated by these intuitions we propose Manifold Mixup (Section 2), a simple regularizer that addresses several of these flaws by training neural networks on linear combinations of hidden representations of training examples. Previous work, including the study of analogies through word embeddings (e.g. king − man + woman ≈ queen), has shown that interpolations are an effective way of combining factors <ref type="bibr" target="#b23">(Mikolov et al., 2013)</ref>. Since high-level representations are often low-dimensional and useful to linear classifiers, linear interpolations of hidden representations should explore meaningful regions of the feature space effectively. To use combinations of hidden representations of data as novel training signal, we also perform the same linear interpolation in the associated pair of one-hot labels, leading to mixed examples with soft targets.</p><p>To start off with the right intuitions, <ref type="figure" target="#fig_1">Figure 1</ref> illustrates the impact of Manifold Mixup on a simple two-dimensional classification task with small data. In this example, vanilla training of a deep neural network leads to an irregular decision boundary <ref type="figure" target="#fig_1">(Figure 1a)</ref>, and a complex arrangement of</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Input Space</head><p>Weight Decay Hidden space</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Noise</head><p>Dropout Batch-Norm Input Mixup <ref type="figure">Figure 2</ref>: The same experimental setup as <ref type="figure" target="#fig_1">Figure 1</ref>, but using a variety of competitive regularizers. This shows that the effect of concentrating the hidden representation for each class and providing a broad region of low confidence between the regions is not accomplished by the other regularizers (although input space mixup does produce regions of low confidence, it does not flatten the classspecific state distribution). Noise refers to gaussian noise in the input layer, dropout refers to dropout of 50% in all layers except the bottleneck itself (due to its low dimensionality), and batch normalization refers to batch normalization in all layers.</p><p>hidden representations <ref type="figure" target="#fig_1">(Figure 1d</ref>). Moreover, every point in both the raw <ref type="figure" target="#fig_1">(Figure 1a</ref>) and hidden ( <ref type="figure" target="#fig_1">Figure 1d</ref>) data representations is assigned a prediction with very high confidence. This includes points (depicted in black) that correspond to inputs off the data manifold! In contrast, training the same deep neural network with Manifold Mixup leads to a smoother decision boundary ( <ref type="figure" target="#fig_1">Figure 1b</ref>) and a simpler (linear) arrangement of hidden representations <ref type="figure" target="#fig_1">(Figure 1e</ref>). In sum, the representations obtained by Manifold Mixup have two desirable properties: the class-representations are flattened into a minimal amount of directions of variation, and all points in-between these flat representations, most unobserved during training and off the data manifold, are assigned low-confidence predictions.</p><p>This example conveys the central message of this paper:</p><p>Manifold Mixup improves the hidden representations and decision boundaries of neural networks at multiple layers.</p><p>More specifically, Manifold Mixup improves generalization in deep neural networks because it:</p><p>• Leads to smoother decision boundaries that are further away from the training data, at multiple levels of representation. Smoothness and margin are well-established factors of generalization <ref type="bibr" target="#b4">(Bartlett &amp; Shawe-taylor, 1998;</ref><ref type="bibr" target="#b21">Lee et al., 1995)</ref>.</p><p>• Leverages interpolations in deeper hidden layers, which capture higher level information <ref type="bibr" target="#b33">(Zeiler &amp; Fergus, 2013)</ref> to provide additional training signal.</p><p>• Flattens the class-representations, reducing their number of directions with significant variance (Section 3). This can be seen as a form of compression, which is linked to generalization by a well-established theory <ref type="bibr" target="#b29">(Tishby &amp; Zaslavsky, 2015;</ref><ref type="bibr" target="#b27">Shwartz-Ziv &amp; Tishby, 2017)</ref> and extensive experimentation <ref type="bibr" target="#b1">(Alemi et al., 2017;</ref><ref type="bibr" target="#b6">Belghazi et al., 2018;</ref><ref type="bibr" target="#b11">Goyal et al., 2018;</ref><ref type="bibr" target="#b0">Achille &amp; Soatto, 2018)</ref>.</p><p>Throughout a variety of experiments, we demonstrate four benefits of Manifold Mixup:</p><p>• Better generalization than other competitive regularizers (such as Cutout, Mixup, AdaMix, and Dropout) (Section 5.1).</p><p>• Improved log-likelihood on test samples (Section 5.1).</p><p>• Increased performance at predicting data subject to novel deformations (Section 5.2). The interpolation between A1 and B2 in the left panel soft-labels the black dot as 50% red and 50% blue, regardless of being very close to a blue point. In the middle panel a different interpolation between A2 and B1 soft-labels the same point as 95% blue and 5% red. However, since Manifold Mixup learns the hidden representations, the pressure to predict consistent soft-labels at interpolated points causes the states to become flattened (right panel).</p><p>• Improved robustness to single-step adversarial attacks. This is the evidence that Manifold Mixup pushes the decision boundary away from the data in some directions (Section 5.3). This is not to be confused with full adversarial robustness, which is defined in terms of moving the decision boundary away from the data in all directions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Manifold Mixup</head><p>Consider training a deep neural network f (x) = f k (g k (x)), where g k denotes the part of the neural network mapping the input data to the hidden representation at layer k, and f k denotes the part mapping such hidden representation to the output f (x). Training f using Manifold Mixup is performed in five steps. First, we select a random layer k from a set of eligible layers S in the neural network. This set may include the input layer g 0 (x). Second, we process two random data minibatches (x, y) and (x , y ) as usual, until reaching layer k. This provides us with two intermediate minibatches (g k (x), y) and (g k (x ), y ). Third, we perform Input Mixup <ref type="bibr" target="#b34">(Zhang et al., 2018)</ref> on these intermediate minibatches. This produces the mixed minibatch:</p><formula xml:id="formula_0">(g k ,ỹ) := (Mix λ (g k (x), g k (x )), Mix λ (y, y )), where Mix λ (a, b) = λ · a + (1 − λ) · b.</formula><p>Here, (y, y ) are one-hot labels, and the mixing coefficient λ ∼ Beta(α, α) as proposed in mixup <ref type="bibr" target="#b34">(Zhang et al., 2018)</ref>. For instance, α = 1.0 is equivalent to sampling λ ∼ U (0, 1). Fourth, we continue the forward pass in the network from layer k until the output using the mixed minibatch (g k ,ỹ). Fifth, this output is used to compute the loss value and gradients that update all the parameters of the neural network.</p><p>Mathematically, Manifold Mixup minimizes:</p><formula xml:id="formula_1">L(f ) = E (x,y)∼P E (x ,y )∼P E λ∼Beta(α,α) E k∼S (f k (Mix λ (g k (x), g k (x ))), Mix λ (y, y )).<label>(1)</label></formula><p>Some implementation considerations. We backpropagate gradients through the entire computational graph, including those layers before the mixup layer k (Section 5.1 and appendix Section B explore this issue in more detail). In the case where S = {0}, Manifold Mixup reduces to the original mixup algorithm of <ref type="bibr" target="#b34">Zhang et al. (2018)</ref>.</p><p>While one could try to reduce the variance of the gradient updates by sampling a random (k, λ) per example, we opted for the simpler alternative of sampling a single (k, λ) per minibatch, which in practice gives the same performance. As in Input Mixup, we use a single minibatch to compute the mixed minibatch. We do so by mixing the minibatch with copy of itself with shuffled rows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Manifold Mixup Flattens Representations</head><p>We turn to the study of how Manifold Mixup impacts the hidden representations of a deep neural network. At a high level, Manifold Mixup flattens the class-specific representations. More specifically, this flattening reduces the number of directions with significant variance (akin to reducing their number of principal components).</p><p>In the sequel, we first prove a theory (Section 3.1) that characterizes this behavior precisely under idealized conditions. Second, we show that this flattening also happens in practice, by performing the SVD of class-specific representations of neural networks trained on real datasets (Section 3.2). Finally, we discuss why the flattening of class-specific representations is a desirable property (Section 3.3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Theory</head><p>We start by characterizing how the representations of a neural network are changed by Manifold Mixup, under a simplifying set of assumptions. More concretely, we will show that if one performs mixup in a sufficiently deep hidden layer in a neural network, then the loss can be driven to zero if the dimensionality of that hidden layer dim (H) is greater than the number of classes d. As a consequence of this, the resulting representations for that class will have dim (H) − d + 1 dimensions.</p><p>A more intuitive and less formal version of this argument is given in <ref type="figure" target="#fig_0">Figure 3</ref> and Appendix F.</p><p>To this end, assume that X and H denote the input and representation spaces, respectively. We denote the label-set by Y and let Z = X × Y. Let G ⊆ H X denote the set of functions realizable by the neural network, from the input to the representation. Similarly, let F ⊆ Y H be the set of all functions realizable by the neural network, from the representation to the output.</p><p>We are interested in the solution of the following problem in some asymptotic regimes:</p><formula xml:id="formula_2">J(P ) = inf g∈G,f ∈F E (x,y),(x ,y ),λ (f (Mix λ (g(x), g(x ))), Mix λ (y, y )).<label>(2)</label></formula><p>More specifically, let P D be the empirical distribution defined by a dataset</p><formula xml:id="formula_3">D = {(x i , y i )} n i=1 .</formula><p>Then, let f ∈ F and g ∈ G be the minimizers of (2) for P = P D . Also, let G = H X , F = Y H , and H be a vector space. These conditions <ref type="bibr" target="#b8">(Cybenko, 1989)</ref> state that the mappings realizable by large neural networks are dense in the set of all continuous bounded functions. In this case, we show that the minimizer f is a linear function from H to Y. In this case, the objective (2) can be rewritten as: Proof. First, we observe that the following statement is true if dim (H) ≥ d − 1:</p><formula xml:id="formula_4">J(P D ) = inf h1,...,hn∈H 1 n (n − 1) n i =j inf f ∈F 1 0 (f (Mix λ (h i , h j )), Mix λ (y i , y j )) p(λ)dλ , where h i = g(x i ).</formula><formula xml:id="formula_5">∃ A, H ∈ R dim(H)×d , b ∈ R d : A H + b1 d = I d×d ,</formula><p>where I d×d and 1 d denote the d-dimensional identity matrix and all-one vector, respectively. In fact, b1 d is a rank-one matrix, while the rank of identity matrix is d. So, A H only needs rank d − 1.</p><formula xml:id="formula_6">Let f (h) = A h + b for all h ∈ H. Let g (x i ) = H ζi,: be the ζ i -th column of H, where ζ i ∈ {1, .</formula><p>. . , d} stands for the class-index of the example x i . These choices minimize (2), since:  Proof. From the proof of Theorem 1, A H = I d×d − b1 d . The r.h.s. of this expression is a rank-(d − 1) matrix for a properly chosen b. Thus, A can have a null-space of dimension dim (H) − d + 1. This way, one can assign g (x i ) = H ζi,: + e i , where H ζi,: is defined as in the proof of Theorem 1, and e i are arbitrary vectors in the null-space of A, for all i = 1, . . . , n.</p><formula xml:id="formula_7">(f (Mix λ (g (x i ), g (x j ))), Mix λ (y i , y j )) = (A Mix λ (H ζi,: , H ζj ,: ) + b, Mix λ (y i,ζi , y j,ζj )) = (u, u) = 0.</formula><p>This result implies that if the Manifold Mixup loss is minimized, then the representation of each class lies on a subspace of dimension dim (H) − d + 1. In the extreme case where dim (H) = d − 1, each class representation will collapse to a single point, meaning that hidden representations would not change in any direction, for each class-conditional manifold. In the more general case with larger dim (H), the majority of directions in H-space will be empty in the class-conditional manifold.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Empirical Investigation of Flattening</head><p>We now show that the "flattening" theory that we have just developed also holds for real neural networks networks trained on real data. To this end, we trained a collection of fully-connected neural networks on the MNIST dataset using multiple regularizers, including Manifold Mixup. When using Manifold Mixup, we mixed representations at a single, fixed hidden layer per network. After training, we performed the Singular Value Decomposition (SVD) of the hidden representations of each network, and analyzed their spectrum decay.</p><p>More specifically, we computed the largest singular value per class, as well as the sum of the all other singular values. We computed these statistics at the first hidden layer for all networks and regularizers. For the largest singular value, we obtained: 51.73 (baseline), 33.76 (weight decay), 28.83 (dropout), 33.46 (input mixup), and 31.65 (manifold mixup). For the sum of all the other singular values, we obtained: 78.67 (baseline), 73.36 (weight decay), 77.47 (dropout), 66.89 (input mixup), and 40.98 (manifold mixup). Therefore, weight decay, dropout, and input mixup all reduce the largest singular value, but only Manifold Mixup achieves a reduction of the sum of the all other singular values (e.g. flattening). For more details regarding this experiment, consult Appendix G.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Why is Flattening Representations Desirable?</head><p>We have presented evidence to conclude that Manifold Mixup leads to flatter class-specific representations, and that such flattening is not accomplished by other regularizers.</p><p>But why is this flattening desirable? First, it means that the hidden representations computed from our data occupy a much smaller volume. Thus, a randomly sampled hidden representation within the convex hull spanned by the data in this space is more likely to have a classification score with lower confidence (higher entropy). Second, compression has been linked to generalization in the information theory literature <ref type="bibr" target="#b29">(Tishby &amp; Zaslavsky, 2015;</ref><ref type="bibr" target="#b27">Shwartz-Ziv &amp; Tishby, 2017)</ref>. Third compression has been been linked to generalization empirically in the past by work which minimizes mutual information between the features and the inputs as a regularizer <ref type="bibr" target="#b6">(Belghazi et al., 2018;</ref><ref type="bibr" target="#b1">Alemi et al., 2017;</ref><ref type="bibr" target="#b0">Achille &amp; Soatto, 2018)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Related Work</head><p>Regularization is a major area of research in machine learning. Manifold Mixup is a generalization of Input Mixup, the idea of building random interpolations between training examples and perform the same interpolation for their labels <ref type="bibr" target="#b34">(Zhang et al., 2018;</ref><ref type="bibr" target="#b30">Tokozume et al., 2018)</ref>.</p><p>Intriguingly, our experiments show that Manifold Mixup changes the representations associated to the layers before and after the mixing operation, and that this effect is crucial to achieve good results (Section 5.1, Appendix G). This suggests that Manifold Mixup works differently than Input Mixup.</p><p>Another line of research closely related to Manifold Mixup involves regularizing deep networks by perturbing their hidden representations. These methods include dropout <ref type="bibr" target="#b17">(Hinton et al., 2012)</ref>, batch normalization <ref type="bibr" target="#b18">(Ioffe &amp; Szegedy, 2015)</ref>, and the information bottleneck <ref type="bibr" target="#b1">(Alemi et al., 2017)</ref>. Notably, <ref type="bibr" target="#b17">Hinton et al. (2012)</ref> and <ref type="bibr" target="#b18">Ioffe &amp; Szegedy (2015)</ref> demonstrated that regularizers that work well in the input space can also be applied to the hidden layers of a deep network, often to further improve results. We believe that Manifold Mixup is a complimentary form of regularization. Zhao &amp; Cho (2018) explored improving adversarial robustness by classifying points using a function of the nearest neighbors in a fixed feature space. This involves applying mixup between each set of nearest neighbor examples in that feature space. The similarity between <ref type="bibr" target="#b35">(Zhao &amp; Cho, 2018)</ref> and Manifold Mixup is that both consider linear interpolations of hidden representations with the same interpolation applied to their labels. However, an important difference is that Manifold Mixup backpropagates gradients through the earlier parts of the network (the layers before the point where mixup is applied), unlike <ref type="bibr" target="#b35">(Zhao &amp; Cho, 2018)</ref>. In Section 3 we explain how this discrepancy significantly affects the learning process.</p><p>AdaMix <ref type="bibr" target="#b14">(Guo et al., 2018a)</ref> is another related method which attempts to learn better mixing distributions to avoid overlap. AdaMix performs interpolations only on the input space, reporting that their method degrades significantly when applied to hidden layers. Thus, AdaMix may likely work for different reasons than Manifold Mixup, and perhaps the two are complementary. AgrLearn <ref type="bibr" target="#b15">(Guo et al., 2018b)</ref> adds an information bottleneck layer to the output of deep neural networks. AgrLearn leads to substantial improvements, achieving 2.45% test error on CIFAR-10 when combined with Input Mixup <ref type="bibr" target="#b34">(Zhang et al., 2018)</ref>. As AgrLearn is complimentary to Input Mixup, it may be also complimentary to Manifold Mixup. <ref type="bibr" target="#b31">Wang et al. (2018)</ref> proposed an interpolation exclusively in the output space, does not backpropagate through the interpolation procedure, and has a very different framing in terms of the Euler-Lagrange equation <ref type="formula" target="#formula_2">(Equation 2)</ref> where the cost is based on unlabeled data (and the pseudolabels at those points) and the labeled data provide constraints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Experiments</head><p>We now turn to the empirical evaluation of Manifold Mixup. We will study its regularization properties in supervised learning (Section 5.1), as well as how it affects the robustness of neural networks to novel input deformations (Section 5.2), and adversarial examples (Section 5.3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Generalization on Supervised Learning</head><p>We train a variety of residual networks <ref type="bibr" target="#b16">(He et al., 2016)</ref> using different regularizers: no regularization, AdaMix, Input Mixup, and Manifold Mixup. We follow the training procedure of <ref type="bibr" target="#b34">(Zhang et al., 2018)</ref>, which is to use SGD with momentum, a weight decay of 10 −4 , and a step-wise learning rate decay. Please refer to Appendix C for further details (including the values of the hyperparameter α). We show results for the CIFAR-10 <ref type="table" target="#tab_0">(Table 1a)</ref>, CIFAR-100 <ref type="table" target="#tab_0">(Table 1b)</ref>, SVHN <ref type="table" target="#tab_1">(Table 2)</ref>, and TinyImageNET <ref type="table" target="#tab_2">(Table 3)</ref> datasets. Manifold Mixup outperforms vanilla training, AdaMix, and  Input Mixup across datasets and model architectures. Furthermore, Manifold Mixup leads to models with significantly better Negative Log-Likelihood (NLL) on the test data. In the case of CIFAR-10, Manifold Mixup models achieve as high as 50% relative improvement of test NLL.</p><p>As a complimentary experiment to better understand why Manifold Mixup works, we zeroed gradient updates immediately after the layer where mixup is applied. On the dataset CIFAR-10 and using a PreActResNet18, this led to a 4.33% test error, which is worse than our results for Input Mixup and Manifold Mixup, yet better than the baseline. Because Manifold Mixup selects the mixing layer at random, each layer is still being trained even when zeroing gradients, although it will receive less updates. This demonstrates that Manifold Mixup improves performance by updating the layers both before and after the mixing operation.</p><p>We also compared Manifold Mixup against other strong regularizers. For each regularizer, we selected the best hyper-parameters using a validation set. The training of PreActResNet50 on CIFAR-10 for 600 epochs led to the following test errors (%): no regularization (4.96 ± 0.19), Dropout (5.09 ± 0.09), Cutout (Devries &amp; Taylor, 2017) (4.77 ± 0.38), Mixup (4.25 ± 0.11), and Manifold Mixup (3.77 ± 0.18). (Note that the results in <ref type="table" target="#tab_0">Table 1</ref> for PreActResNet were run for 1200 epochs, and therefore are not directly comparable to the numbers in this paragraph.)</p><p>To provide further evidence about the quality of representations learned with Manifold Mixup, we applied a k-nearest neighbour classifier on top of the features extracted from a PreActResNet18 trained on CIFAR-10. We achieved test errors of 6.09% (vanilla training), 5.54% (Input Mixup), and 5.16% (Manifold Mixup).</p><p>Finally, we considered a synthetic dataset where the data generating process is a known function of disentangled factors of variation, and mixed in this space factors. As shown in Appendix A, this led to significant improvements in performance. This suggests that mixing in the correct level of representation has a positive impact on the decision boundary. However, our purpose here is not to make any claim about when do deep networks learn representations corresponding to disentangled factors of variation.</p><p>Finally, <ref type="table" target="#tab_5">Table 6</ref> and <ref type="table" target="#tab_4">Table 5</ref> show the sensitivity of Manifold Mixup to the hyper-parameter α and the set of eligible layers S. (These results are based on training a PreActResNet18 for 2000 epochs, so these numbers are not exactly comparable to the ones in <ref type="table" target="#tab_0">Table 1</ref>.) This shows that Manifold Mixup is robust with respect to choice of hyper-parameters, with improvements for many choices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Generalization to Novel Deformations</head><p>To further evaluate the quality of representations learned with Manifold Mixup, we train PreAc-tResNet34 models on the normal CIFAR-100 training split, but test them on novel (not seen during training) deformations of the test split. These deformations include random rotations, random shearings, and different rescalings. Better representations should generalize to a larger variety of deformations. <ref type="table" target="#tab_3">Table 4</ref> shows that networks trained using Manifold Mixup are the most able to classify test instances subject to novel deformations, which suggests the learning of better representations. For more results see Appendix C, <ref type="table">Table 9</ref>.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Robustness to Adversarial Examples</head><p>Adversarial robustness is related to the position of the decision boundary relative to the data. Because Manifold Mixup only considers some directions around data points (those corresponding to interpolations), we would not expect the model to be robust to adversarial attacks that consider any direction around each example. However, since Manifold Mixup expands the set of examples seen during training, an intriguing hypothesis is that these expansions overlap with the set of possible adversarial examples, providing some degree of defense. If this hypothesis is true, Manifold Mixup would force 65.91 PGD training (7-steps) † 72.80 adversarial attacks to consider a wider set of directions, leading to a larger computational expense for the attacker. To explore this, we consider the Fast Gradient Sign Method (FGSM, <ref type="bibr" target="#b10">Goodfellow et al., 2015)</ref>, which constructs adversarial examples in one single step, thus considering a relatively small subset of directions around examples. The performance of networks trained using Manifold Mixup against FGSM attacks is given in <ref type="table" target="#tab_6">Table 7</ref>. One challenge in evaluating robustness against adversarial examples is the "gradient masking problem", in which a defense succeeds only by reducing the quality of the gradient signal. <ref type="bibr" target="#b3">Athalye et al. (2018)</ref> explored this issue in depth, and proposed running an unbounded search for a large number of iterations to confirm the quality of the gradient signal. Manifold Mixup passes this sanity check (consult Appendix D for further details). While we found that using Manifold Mixup improves the robustness to single-step FGSM attack (especially over Input Mixup), we found that Manifold Mixup did not significantly improve robustness against stronger, multi-step attacks such as PGD <ref type="bibr" target="#b22">(Madry et al., 2018)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Connections to Neuroscience and Credit Assignment</head><p>We present an intriguing connection between Manifold Mixup and a challenging problem in neuroscience. At a high level, we can imagine systems in the brain which compute predictions from a stream of changing inputs, and pass these predictions onto other modules which return some kind of feedback signal <ref type="bibr" target="#b20">(Lee et al., 2015;</ref><ref type="bibr" target="#b26">Scellier &amp; Bengio, 2017;</ref><ref type="bibr" target="#b32">Whittington &amp; Bogacz, 2017;</ref><ref type="bibr" target="#b5">Bartunov et al., 2018)</ref>. For instance, these feedback signals can be gradients or targets for prediction. There is a delay between the output of the prediction and the point in time in which the feedback can return to the system after having travelled across the brain. Moreover, this delay could be noisy and could differ based on the type of the prediction or other conditions in the brain, as well as depending on which paths are considered (there are many skip connections between areas). This means that it could be very difficult for a system in the brain to establish a clear correspondence between its outputs and the feedback signals that it receives over time.</p><p>While it is preliminary, an intriguing hypothesis is that part of how systems in the brain could be working around this limitation is by averaging their states and feedback signals across multiple points in time. The empirical results from mixup suggest that such a technique may not just allow successful computation, but also act as a potent regularizer. Manifold Mixup strenghthens this result by showing that the same regularization effect can be achieved from mixing in higher level hidden representations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>Deep neural networks often give incorrect, yet extremely confident predictions on examples that differ from those seen during training. This problem is one of the most central challenges in deep learning. We have investigated this issue from the perspective of the representations learned by deep neural networks. We observed that vanilla neural networks spread the training data widely throughout the representation space, and assign high confidence predictions to almost the entire volume of representations. This leads to major drawbacks since the network will provide high-confidence predictions to examples off the data manifold, thus lacking enough incentives to learn discriminative representations about the training data. To address these issues, we introduced Manifold Mixup, a new algorithm to train neural networks on interpolations of hidden representations. Manifold Mixup encourages the neural network to be uncertain across the volume of the representation space unseen during training. This leads to concentrating the representations of the real training examples in a low dimensional subspace, resulting in more discriminative features. Throughout a variety of experiments, we have shown that neural networks trained using Manifold Mixup have better generalization in terms of error and log-likelihood, as well as better robustness to novel deformations of the data and adversarial examples. Being easy to implement and incurring little additional computational cost, we hope that Manifold Mixup will become a useful regularization tool for deep learning practitioners. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Synthetic Experiments Analysis</head><p>We conducted experiments using a generated synthetic dataset where each image is deterministically rendered from a set of independent factors. The goal of this experiment is to study the impact of input mixup and an idealized version of Manifold Mixup where we know the true factors of variation in the data and we can do mixup in exactly the space of those factors. This is not meant to be a fair evaluation or representation of how Manifold Mixup actually performs -rather it's meant to illustrate how generating relevant and semantically meaningful augmented data points can be much better than generating points by mixing in the input space.</p><p>We considered three tasks. In Task A, we train on images with angles uniformly sampled between (-70 • , -50 • ) (label 0) with 50% probability and uniformly between (50 • , 80 • ) (label 1) with 50% probability. At test time we sampled uniformly between (-30 • , -10 • ) (label 0) with 50% probability and uniformly between (10 • , 30 • ) (label 1) with 50% probability. Task B used the same setup as Task A for training, but the test instead used (-30 • , -20 • ) as label 0 and (-10 • , 30 • ) as label 1. In Task C we made the label whether the digit was a "1" or a "7", and our training images were uniformly sampled between (-70 • , -50 • ) with 50% probability and uniformly between (50 • , 80 • ) with 50% probability. The test data for Task C were uniformly sampled with angles from (-30 • , 30 • ).</p><p>The examples of the data are in <ref type="figure" target="#fig_4">Figure 4</ref> and results are in <ref type="table" target="#tab_7">Table 8</ref>. In all cases we found that Input Mixup gave some improvements in likelihood but limited improvements in accuracy -suggesting that the even generating nonsensical points can help a classifier trained with Input Mixup to be better calibrated. Nonetheless the improvements were much smaller than those achieved with mixing in the ground truth attribute space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B Analysis of how Manifold Mixup changes learned representations</head><p>We have found significant improvements from using Manifold Mixup, but a key question is whether the improvements come from changing the behavior of the layers before the mixup operation is applied or the layers after the mixup operation is applied. This is a place where Manifold Mixup and Input Mixup are clearly differentiated, as Input Mixup has no "layers before the mixup operation" to change. We conducted analytical experimented where the representations are low-dimensional enough to visualize. More concretely, we trained a fully connected network on MNIST with two fullyconnected leaky relu layers of 1024 units, followed by a 2-dimensional bottleneck layer, followed by two more fully-connected leaky-relu layers with 1024 units.</p><p>We then considered training with no mixup, training with mixup in the input space, and training only with mixup directly following the 2D bottleneck. We consistently found that Manifold Mixup has the effect of making the representations much tighter, with the real data occupying smaller region in the hidden space, and with a more well separated margin between the classes, as shown in <ref type="figure" target="#fig_5">Figure 5</ref>   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C Supervised Regularization Experimental Details</head><p>For supervised regularization we considered following architectures: PreActResNet18, PreActRes-Net34, and Wide-Resnet-28-10. When using Manifold Mixup, we selected the layer to perform mixing uniformly at random from a set of eligible layers. In all our experiments, for the PreActResNets architectures, the eligible layers for mixing in Manifold Mixup were : the input layer, the output from the first resblock, and the output from the second resblock. For Wide-ResNet-20-10 architecture, the eligible layers for mixing in Manifold Mixup were: the input layer and the output from the first resblock. For PreActResNet18, the first resblock has four layers and the second resblock has four layers. For PreActResNet34, the first resblock has six layers and the second resblock has eight layers. For Wide-Resnet-28-10, the first resblock has four layers. Thus the mixing is often done fairly deep layers in the network.</p><p>Throughout our experiments, we use SGD+Momentum optimizer with learning rate 0.1, momentum 0.9 and weight-decay 10 −4 , with step-wise learning rate decay.</p><p>For <ref type="table" target="#tab_0">Table 1a</ref>, <ref type="table" target="#tab_0">Table 1b</ref> and <ref type="table" target="#tab_1">Table 2</ref>, we train the PreActResNet18, and PreActResNet34 for 1200 epochs with learning rate annealed by a factor of 10 at epoch 400 and 800. For above <ref type="table">Tables, we train  Table 9</ref>: Models trained on the normal CIFAR-100 and evaluated on a test set with novel deformations. Manifold Mixup (ours) consistently allows the model to be more robust to random shearing, rescaling, and rotation even though these deformations were not observed during training. For the rotation experiment, each image is rotated with an angle uniformly sampled from the given range. Likewise the shearing is performed with uniformly sampled angles. Zooming-in refers to take a bounding box at the center of the image with k% of the length and k% of the width of the original image, and then expanding this image to fit the original size. Likewise zooming-out refers to drawing a bounding box with k% of the height and k% of the width, and then taking this larger area and scaling it down to the original size of the image (the padding outside of the image is black). Wide-ResNet-28-10 for 400 epochs with learning rate annealed by a factor of 10 at epoch 200 and 300. In <ref type="table" target="#tab_2">Table 3</ref>, we train PreActResNet18 for 2000 epochs with learning rate annealed by a factor of 10 at epoch 1000 and 1500.</p><p>For <ref type="table" target="#tab_5">Table 6</ref> and <ref type="table" target="#tab_4">Table 5</ref>, we train the PreActResNet18 network for 2000 epochs with learning rate annealed by a factor of 10 at epoch 1000 and 1500.</p><p>For <ref type="table" target="#tab_6">Table 7</ref>, <ref type="table" target="#tab_3">Table 4</ref> and <ref type="table">Table 9</ref>, we train the networks for 1200 epochs with learning rate annealed by a factor of 10 at epoch 400 and 800.</p><p>In <ref type="figure" target="#fig_6">Figure 6</ref> and <ref type="figure" target="#fig_7">Figure 7</ref>, we present the training loss (Binary cross entropy) for CIFAR10 and CIFAR100 datasets respectively. We observe that performing Manifold Mixup in higher layers allows the train loss to go down faster as compared to the Input Mixup, which suggests that while Input Mixup may suffer from underfitting, Manifold Mixup alleviates this problem to some extend.</p><p>In <ref type="table">Table 9</ref>, we present full set of experiments of Section 5.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.1 Hyperparameter α</head><p>For Input Mixup on CIFAR10 and CIFAR100 datasets, we used the value α = 1.0 as recommended in <ref type="bibr" target="#b34">(Zhang et al., 2018)</ref>. For Input Mixup on SVHN and Tiny-imagenet datasets, we experimented with the α values in the set {0.1, 0.2, 0.4, 0.8.1.0, 2.0, 4.0}. We obtained best results using α = 1.0 and α = 0.2 for SVHN and Tiny-imagenet, respectively.</p><p>For Manifold Mixup, for all datasets, we experimented with the α values in the set {0.1, 0.2, 0.4, 0.8.1.0, 2.0, 4.0}. We obtained best results with α = 2.0 for CIFAR10, CIFAR100 and SVHN and with α = 0.2 for Tiny-imagenet.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D Adversarial Examples</head><p>We ran the unbounded projected gradient descent (PGD) <ref type="bibr" target="#b22">(Madry et al., 2018)</ref> sanity check suggested in <ref type="bibr" target="#b3">(Athalye et al., 2018)</ref>. We took our trained models for the input mixup baseline and manifold mixup and we ran PGD for 200 iterations with a step size of 0.01 which reduced the mixup model's accuracy to 1% and reduced the Manifold Mixup model's accuracy to 0%. This is a evidence that our defense did not improve results primarily as a result of gradient masking.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E Generative Adversarial Networks</head><p>The recent literature has suggested that regularizing the discriminator is beneficial for training GANs <ref type="bibr" target="#b25">(Salimans et al., 2016;</ref><ref type="bibr" target="#b2">Arjovsky et al., 2017;</ref><ref type="bibr" target="#b12">Gulrajani et al., 2017;</ref><ref type="bibr" target="#b24">Miyato et al., 2018)</ref>. In a similar vein, one could add mixup to the original GAN training objective such that the extra data augmentation acts as a beneficial regularization to the discriminator, which is what was proposed in <ref type="bibr" target="#b34">Zhang et al. (2018)</ref>. Mixup proposes the following objective 1 :</p><formula xml:id="formula_8">max g min d E x1,x2,λ,z (d(Mix λ (x 1 , x 2 )), y(λ; x 1 , x 2 )),<label>(3)</label></formula><p>where x 1 , x 2 can be either real or fake samples, and λ is sampled from a U nif orm(0, α). Note that we have used a function y(λ; x 1 , x 2 ) to denote the label since there are four possibilities depending on x 1 and x 2 :</p><formula xml:id="formula_9">y(λ; x 1 , x 2 ) =        λ, if x 1 is real and x 2 is fake 1 − λ, if x 1 is fake and x 2 is real 0, if both are fake 1, if both are real<label>(4)</label></formula><p>In practice however, we find that it did not make sense to create mixes between real and real where the label is set to 1, (as shown in equation 4), since the mixup of two real examples in input space is not a real example. So we only create mixes that are either real-fake, fake-real, or fake-fake. Secondly, instead of using just the equation in 3, we optimize it in addition to the regular minimax GAN equations: <ref type="figure">d(g(z)</ref>), 0) + GAN mixup term (Equation 3) (5)</p><formula xml:id="formula_10">max g min d E x (d(x), 1) + E g(z) (</formula><p>Using similar notation to earlier in the paper, we present the manifold mixup version of our GAN objective in which we mix in the hidden space of the discriminator:</p><p>min d E x1,x2,λ,z,k (d(x), 1) + (d(g(z), 0) + (f k (Mix λ (g k (x 1 ), g k (x 2 ))), y(λ; x 1 , x 2 )),</p><p>where g k (·) is a function denoting the intermediate output of the discriminator at layer k, and f k (·) the output of the discriminator given input from layer k.  <ref type="bibr" target="#b34">(Zhang et al., 2018)</ref>, mixing in the output of the first resblock (h1), mixing in either the output of the first resblock or the output of the second resblock (h1,2), and mixing in the input or the output of the first resblock or the output of the second resblock (1,2,pixel). The dotted line indicates the baseline Inception / FID score. Higher scores are better for Inception, while lower is better for FID.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F Intuitive Explanation of how Manifold Mixup avoids Inconsistent Interpolations</head><p>An essential motivation behind manifold mixup is that as the network learns the hidden states, it does so in a way that encourages them to be a flatter (per-class). Section 3.1 characterized this for hidden states with any number of dimensions and <ref type="figure" target="#fig_1">Figure 1</ref> showed how this can occur on the 2D spiral dataset.</p><p>Our goal here is to discuss concrete examples to illustrate why this flattening happens, as shown in <ref type="figure" target="#fig_0">Figure 3</ref>. If we consider any two points, the interpolated point between them is based on a sampled λ and the soft-target for that interpolated point is the targets interpolated with the same λ. So if we consider two points A,B which have the same label, it is apparent that every point on the line between A and B should have that same label with 100% confidence. If we consider two points A,B with different labels, then the point which is halfway between them will be given the soft-label of 50% the label of A and 50% the label of B (and so on for other λ values).</p><p>It is clear that for many arrangements of data points, it is possible for a point in the space to be reached through distinct interpolations between different pairs of examples, and reached with different λ values. Because the learned model tries to capture the distribution p(y|h), it can only assign a single distribution over the label values to a single particular point (for example it could say that a point is 100% label A, or it could say that a point is 50% label A and 50% label B). Intuitively, these inconsistent soft-labels at interpolated points can be avoided if the states for each class are more concentrated and the representations do not have variability in directions pointing towards other classes. This leads to flattening: a reduction in the number of directions with variability. The theory in Section 3.1 characterizes exactly what this concentration needs to be: that the representations for each class need to lie on a subspace of dimension equal to "number of hidden dimensions" -"number of classes" + 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G Spectral Analysis of Learned Representations</head><p>When we refer to flattening, we mean that the class-specific representations have reduced variability in some directions. Our analysis in this section makes this more concrete. <ref type="figure">Figure 9</ref>: SVD on the class-specific representations in a bottleneck layer with 12 units following 3 hidden layers. For the first singular value, the value (averaged across the plots) is 50.08 for the baseline, 37.17 for Input Mixup, and 43.44 for Manifold Mixup (these are the values at x=0 which are cutoff). We can see that the class-specific SVD leads to singular values which are dramatically more concentrated when using Manifold Mixup with Input Mixup not having a consistent effect.</p><p>We trained an MNIST classifier with a hidden state bottleneck in the middle with 12 units (intentionally selected to be just slightly greater than the number of classes). We then took the representation for each class and computed a singular value decomposition <ref type="figure">(Figure 9</ref> and <ref type="figure" target="#fig_1">Figure 10</ref>) and we also computed an SVD over all of the representations together ( <ref type="figure" target="#fig_1">Figure 12</ref>). Our architecture contained three hidden layers with 1024 units and LeakyReLU activation, followed by a bottleneck representation layer (with either 12 or 30 hidden units), followed by an additional four hidden layers each with 1024 units and LeakyReLU activation. When we performed Manifold Mixup for our analysis, we only performed mixing in the bottleneck layer, and used a beta distribution with an alpha of 2.0. Additionally we performed another experiment <ref type="figure" target="#fig_1">(Figure 11</ref> where we placed the bottleneck representation layer with 30 units immediately following the first hidden layer with 1024 units and LeakyReLU activation.</p><p>We found that Manifold Mixup had a striking effect on the singular values, with most of the singular values becoming much smaller. Effectively, this means that the representations for each class have variance in fewer directions. While our theory in Section 3.1 showed that this flattening must force each classes representations onto a lower-dimensional subspace (and hence an upper bound on the number of singular values) but this explores how this occurs empirically and does not require the number of hidden dimensions to be so small that it can be manually visualized. In our experiments we tried using 12 hidden units in the bottleneck <ref type="figure">Figure 9</ref> as well as 30 hidden units <ref type="figure" target="#fig_1">Figure 10</ref> in the bottleneck.</p><p>Our results from this experiment are unequivocal: Manifold Mixup dramatically reduces the size of the smaller singular values for each classes representations. This indicates a flattening of the class-specific representations. At the same time, the singular values over all the representations are not changed in a clear way <ref type="figure" target="#fig_1">(Figure 12</ref>), which suggests that this flattening occurs in directions which are distinct from the directions occupied by representations from other classes, which is the same intuition behind our theory. Moreover, <ref type="figure" target="#fig_1">Figure 11</ref> shows that when the mixing is performed earlier in the network, there is still a flattening effect, though it is weaker than in the later layers, and again Input Mixup has an inconsistent effect. <ref type="figure" target="#fig_1">Figure 10</ref>: SVD on the class-specific representations in a bottleneck layer with 30 units following 3 hidden layers. For the first singular value, the value (averaged across the plots) is 14.68 for the baseline, 12.49 for Input Mixup, and 14.43 for Manifold Mixup (these are the values at x=0 which are cutoff). <ref type="figure" target="#fig_1">Figure 11</ref>: SVD on the class-specific representations in a bottleneck layer with 30 units following a single hidden layer. For the first singular value, the value (averaged across the plots) is 33.64 for the baseline, 27.60 for Input Mixup, and 24.60 for Manifold Mixup (these are the values at x=0 which are cutoff). We see that with the bottleneck layer placed earlier, the reduction in the singular values from Manifold Mixup is smaller but still clearly visible. This makes sense, as it is not possible for this early layer to be perfectly discriminative. <ref type="figure" target="#fig_1">Figure 12</ref>: When we run SVD on all of the classes together (in the setup with 12 units in the bottleneck layer following 3 hidden layers), we see no clear difference in the singular values for the Baseline, Input Mixup, and Manifold Mixup models. Thus we can see that the flattening effect of manifold mixup is entirely class-specific, and does not appear overall, which is consistent with what our theory has predicted. More intuitively, this means that the directions which are being flattened are those directions which point towards the representations of different classes.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 3 :</head><label>3</label><figDesc>Illustration on why Manifold Mixup learns flatter representations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Theorem 1 .</head><label>1</label><figDesc>Let H be a vector space of dimension dim (H), and let d ∈ N to represent the number classes contained in some dataset D. If dim (H) ≥ d − 1, then J(P D ) = 0 and the corresponding minimizer f is a linear function from H to R d .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>The result follows from A H ζi,: + b = y i,ζi for all i.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Furthermore</head><label></label><figDesc>, if dim (H) &gt; d − 1, then data points in the representation space H have some degrees of freedom to move independently.Corollary 1. Consider the setting in Theorem 1 with dim (H) &gt; d − 1. Let g ∈ G minimize (2) under P = P D . Then, the representations of the training points g (x i ) fall on a (dim (H) − d + 1)dimensional subspace.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Synthetic task where the underlying factors are known exactly. Training images (left), images from input mixup (center), and images from mixing in the ground truth factor space (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Representations from a classifier on MNIST (top is trained on digits 0-4, bottom is trained on all digits) with a 2D bottleneck representation in the middle layer. No Mixup Baseline (left), Input Mixup (center), Manifold Mixup (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :</head><label>6</label><figDesc>CIFAR-10 train set Binary Cross Entropy Loss (BCE) on Y-axis using PreActResNet18, with respect to training epochs (X-axis). The numbers in {} refer to the resblock after which Manifold Mixup is performed. The ordering of the losses is consistent over the course of training: Manifold Mixup with gradient blocked before the mixing layer has the highest training loss, followed by Input Mixup. The lowest training loss is achieved by mixing in the deepest layer, which suggests that having more hidden units can help to prevent underfitting.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 :</head><label>7</label><figDesc>CIFAR-100 train set Binary Cross Entropy Loss (BCE) on Y-axis using PreActResNet50, with respect to training epochs (X-axis). The numbers in {} refer to the resblock after which Manifold Mixup is performed. The lowest training loss is achieved by mixing in the deepest layer.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Classification errors on (a) CIFAR-10 and (b) CIFAR-100. We include results from<ref type="bibr" target="#b34">(Zhang et al., 2018)</ref> † and<ref type="bibr" target="#b13">(Guo et al., 2016)</ref> ‡. Standard deviations over five repetitions.</figDesc><table><row><cell>PreActResNet18</cell><cell>Test Error (%)</cell><cell>Test NLL</cell><cell>PreActResNet18</cell><cell>Test Error (%)</cell><cell>Test NLL</cell></row><row><cell>No Mixup</cell><cell cols="2">4.83 ± 0.066 0.190 ± 0.003</cell><cell>No Mixup</cell><cell cols="2">24.01 ± 0.376 1.189 ± 0.002</cell></row><row><cell>AdaMix ‡</cell><cell>3.52</cell><cell>NA</cell><cell>AdaMix ‡</cell><cell>20.97</cell><cell>n/a</cell></row><row><cell>Input Mixup †</cell><cell>4.20</cell><cell>NA</cell><cell>Input Mixup †</cell><cell>21.10</cell><cell>n/a</cell></row><row><cell>Input Mixup (α = 1)</cell><cell cols="2">3.82 ± 0.048 0.186 ± 0.004</cell><cell>Input Mixup (α = 1)</cell><cell cols="2">22.11 ± 0.424 1.055 ± 0.006</cell></row><row><cell>Manifold Mixup (α = 2)</cell><cell cols="2">2.95 ± 0.046 0.137 ± 0.003</cell><cell cols="3">Manifold Mixup (α = 2) 20.34 ± 0.525 0.912 ± 0.002</cell></row><row><cell>PreActResNet34</cell><cell></cell><cell></cell><cell>PreActResNet34</cell><cell></cell><cell></cell></row><row><cell>No Mixup</cell><cell cols="2">4.64 ± 0.072 0.200 ± 0.002</cell><cell>No Mixup</cell><cell cols="2">23.55 ± 0.399 1.189 ± 0.002</cell></row><row><cell>Input Mixup (α = 1)</cell><cell cols="2">2.88 ± 0.043 0.176 ± 0.002</cell><cell>Input Mixup (α = 1)</cell><cell cols="2">20.53 ± 0.330 1.039 ± 0.045</cell></row><row><cell>Manifold Mixup (α = 2)</cell><cell cols="2">2.54 ± 0.047 0.118 ± 0.002</cell><cell cols="3">Manifold Mixup (α = 2) 18.35 ± 0.360 0.877 ± 0.053</cell></row><row><cell>Wide-Resnet-28-10</cell><cell></cell><cell></cell><cell>Wide-Resnet-28-10</cell><cell></cell><cell></cell></row><row><cell>No Mixup</cell><cell cols="2">3.99 ± 0.118 0.162 ± 0.004</cell><cell>No Mixup</cell><cell cols="2">21.72 ± 0.117 1.023 ± 0.004</cell></row><row><cell>Input Mixup (α = 1)</cell><cell cols="2">2.92 ± 0.088 0.173 ± 0.001</cell><cell>Input Mixup (α = 1)</cell><cell cols="2">18.89 ± 0.111 0.927 ± 0.031</cell></row><row><cell>Manifold Mixup (α = 2)</cell><cell cols="2">2.55 ± 0.024 0.111 ± 0.001</cell><cell cols="3">Manifold Mixup (α = 2) 18.04 ± 0.171 0.809 ± 0.005</cell></row><row><cell cols="2">(a) CIFAR-10</cell><cell></cell><cell cols="2">(b) CIFAR-100</cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>Classification errors and neg-log-likelihoods on SVHN. We run each experiment five times.</figDesc><table><row><cell>PreActResNet18</cell><cell>Test Error (%)</cell><cell>Test NLL</cell></row><row><cell>No Mixup</cell><cell cols="2">2.89 ± 0.224 0.136 ± 0.001</cell></row><row><cell>Input Mixup (α = 1)</cell><cell cols="2">2.76 ± 0.014 0.212 ± 0.011</cell></row><row><cell>Manifold Mixup (α = 2)</cell><cell cols="2">2.27 ± 0.011 0.122 ± 0.006</cell></row><row><cell>PreActResNet34</cell><cell></cell><cell></cell></row><row><cell>No Mixup</cell><cell cols="2">2.97 ± 0.004 0.165 ± 0.003</cell></row><row><cell>Input Mixup (α = 1)</cell><cell cols="2">2.67 ± 0.020 0.199 ± 0.009</cell></row><row><cell>Manifold Mixup (α = 2)</cell><cell cols="2">2.18 ± 0.004 0.137 ± 0.008</cell></row><row><cell>Wide-Resnet-28-10</cell><cell></cell><cell></cell></row><row><cell>No Mixup</cell><cell cols="2">2.80 ± 0.044 0.143 ± 0.002</cell></row><row><cell>Input Mixup (α = 1)</cell><cell cols="2">2.68 ± 0.103 0.184 ± 0.022</cell></row><row><cell>Manifold Mixup (α = 2)</cell><cell cols="2">2.06 ± 0.068 0.126 ± 0.008</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 :</head><label>3</label><figDesc>Accuracy on TinyImagenet.</figDesc><table><row><cell>PreActResNet18</cell><cell>top-1 top-5</cell></row><row><cell>No Mixup</cell><cell>55.52 71.04</cell></row><row><cell>Input Mixup (α = 0.2)</cell><cell>56.47 71.74</cell></row><row><cell>Input Mixup (α = 0.5)</cell><cell>55.49 71.62</cell></row><row><cell>Input Mixup (α = 1.0)</cell><cell>52.65 70.70</cell></row><row><cell>Input Mixup (α = 2.0)</cell><cell>44.18 68.26</cell></row><row><cell cols="2">Manifold Mixup (α = 0.2) 58.70 73.59</cell></row><row><cell cols="2">Manifold Mixup (α = 0.5) 57.24 73.48</cell></row><row><cell cols="2">Manifold Mixup (α = 1.0) 56.83 73.75</cell></row><row><cell cols="2">Manifold Mixup (α = 2.0) 48.14 71.69</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 4 :</head><label>4</label><figDesc>Test accuracy on novel deformations. All models trained on normal CIFAR-100.</figDesc><table><row><cell></cell><cell></cell><cell>Input Mixup</cell><cell>Input Mixup</cell><cell>Manifold Mixup</cell></row><row><cell>Deformation</cell><cell>No Mixup</cell><cell>(α = 1)</cell><cell>(α = 2)</cell><cell>(α = 2)</cell></row><row><cell>Rotation U(−20 • ,20 • )</cell><cell>52.96</cell><cell>55.55</cell><cell>56.48</cell><cell>60.08</cell></row><row><cell>Rotation U(−40 • ,40 • )</cell><cell>33.82</cell><cell>37.73</cell><cell>36.78</cell><cell>42.13</cell></row><row><cell>Shearing U(−28.6 • , 28.6 • )</cell><cell>55.92</cell><cell>58.16</cell><cell>60.01</cell><cell>62.85</cell></row><row><cell>Shearing U(−57.3 • , 57.3 • )</cell><cell>35.66</cell><cell>39.34</cell><cell>39.7</cell><cell>44.27</cell></row><row><cell>Zoom In (60% rescale)</cell><cell>12.68</cell><cell>13.75</cell><cell>13.12</cell><cell>11.49</cell></row><row><cell>Zoom In (80% rescale)</cell><cell>47.95</cell><cell>52.18</cell><cell>50.47</cell><cell>52.70</cell></row><row><cell>Zoom Out (120% rescale)</cell><cell>43.18</cell><cell>60.02</cell><cell>61.62</cell><cell>63.59</cell></row><row><cell>Zoom Out (140% rescale)</cell><cell>19.34</cell><cell>41.81</cell><cell>42.02</cell><cell>45.29</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 5 :</head><label>5</label><figDesc>Test accuracy Manifold Mixup for different sets of eligible layers S on CIFAR.</figDesc><table><row><cell>S</cell><cell cols="2">CIFAR-10 CIFAR-100</cell></row><row><cell>{0, 1, 2}</cell><cell>97.23</cell><cell>79.60</cell></row><row><cell>{0, 1}</cell><cell>96.94</cell><cell>78.93</cell></row><row><cell>{0, 1, 2, 3}</cell><cell>96.92</cell><cell>80.18</cell></row><row><cell>{1, 2}</cell><cell>96.35</cell><cell>78.69</cell></row><row><cell>{0}</cell><cell>96.73</cell><cell>78.15</cell></row><row><cell>{1, 2, 3}</cell><cell>96.51</cell><cell>79.31</cell></row><row><cell>{1}</cell><cell>96.10</cell><cell>78.72</cell></row><row><cell>{2, 3}</cell><cell>95.32</cell><cell>76.46</cell></row><row><cell>{2}</cell><cell>95.19</cell><cell>76.50</cell></row><row><cell>{}</cell><cell>95.27</cell><cell>76.40</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 6</head><label>6</label><figDesc></figDesc><table><row><cell cols="3">: Test accuracy (%) of Input Mixup and</cell></row><row><cell cols="3">Manifold Mixup for different α on CIFAR-10.</cell></row><row><cell cols="3">α Input Mixup Manifold Mixup</cell></row><row><cell>0.5</cell><cell>96.68</cell><cell>96.76</cell></row><row><cell>1.0</cell><cell>96.75</cell><cell>97.00</cell></row><row><cell>1.2</cell><cell>96.72</cell><cell>97.03</cell></row><row><cell>1.5</cell><cell>96.84</cell><cell>97.10</cell></row><row><cell>1.8</cell><cell>96.80</cell><cell>97.15</cell></row><row><cell>2.0</cell><cell>96.73</cell><cell>97.23</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 7</head><label>7</label><figDesc></figDesc><table><row><cell cols="2">: Test accuracy on white-box FGSM adversarial examples on CIFAR-10 and CIFAR-100</cell></row><row><cell cols="2">(using a PreActResNet18 model) and SVHN (using a WideResNet20-10 model). We include the</cell></row><row><cell>results of (Madry et al., 2018) †.</cell><cell></cell></row><row><cell>CIFAR-10</cell><cell>FGSM</cell></row><row><cell>No Mixup</cell><cell>36.32</cell></row><row><cell>Input Mixup (α = 1)</cell><cell>71.51</cell></row><row><cell>Manifold Mixup (α = 2)</cell><cell>77.50</cell></row><row><cell>PGD training (7-steps) †</cell><cell>56.10</cell></row><row><cell>CIFAR-100</cell><cell>FGSM</cell></row><row><cell>Input Mixup (α = 1)</cell><cell>40.7</cell></row><row><cell>Manifold Mixup (α = 2)</cell><cell>44.96</cell></row><row><cell>SVHN</cell><cell>FGSM</cell></row><row><cell>No Mixup</cell><cell>21.49</cell></row><row><cell>Input Mixup (α = 1)</cell><cell>56.98</cell></row><row><cell>Manifold Mixup (α = 2)</cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 8 :</head><label>8</label><figDesc>Results on synthetic data generalization task with an idealized Manifold Mixup (mixing in the true latent generative factors space). Note that in all cases visible mixup significantly improved likelihood, but not to the same degree as factor mixup.</figDesc><table><row><cell>Task</cell><cell>Model</cell><cell cols="2">Test Accuracy Test NLL</cell></row><row><cell></cell><cell>No Mixup</cell><cell>1.6</cell><cell>8.8310</cell></row><row><cell cols="2">Task A Input Mixup (1.0)</cell><cell>0.0</cell><cell>6.0601</cell></row><row><cell></cell><cell>Ground Truth Factor Mixup (1.0)</cell><cell>94.77</cell><cell>0.4940</cell></row><row><cell></cell><cell>No Mixup</cell><cell>21.25</cell><cell>7.0026</cell></row><row><cell cols="2">Task B Input Mixup (1.0)</cell><cell>18.40</cell><cell>4.3149</cell></row><row><cell></cell><cell>Ground Truth Factor Mixup (1.0)</cell><cell>84.02</cell><cell>0.4572</cell></row><row><cell></cell><cell>No Mixup</cell><cell>63.05</cell><cell>4.2871</cell></row><row><cell cols="2">Task C Input Mixup</cell><cell>66.09</cell><cell>1.4181</cell></row><row><cell></cell><cell>Ground Truth Factor Mixup</cell><cell>99.06</cell><cell>0.1279</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head></head><label></label><figDesc>We test out various values of α in conjunction with either: input mixup ( pixel)</figDesc><table><row><cell cols="4">Inception scores on CIFAR10</cell><cell></cell><cell cols="2">FID scores on CIFAR10</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>26</cell><cell></cell><cell></cell><cell></cell></row><row><cell>8.4</cell><cell></cell><cell>pixel h1</cell><cell></cell><cell>25</cell><cell></cell><cell>pixel h1</cell><cell></cell></row><row><cell>8.2</cell><cell></cell><cell cols="2">h2 h1,h2,pixel</cell><cell>24</cell><cell></cell><cell cols="2">h2 h1,h2,pixel</cell></row><row><cell>8.0</cell><cell></cell><cell></cell><cell></cell><cell>23</cell><cell></cell><cell></cell><cell></cell></row><row><cell>7.8</cell><cell></cell><cell></cell><cell></cell><cell>22</cell><cell></cell><cell></cell><cell></cell></row><row><cell>7.6</cell><cell></cell><cell></cell><cell></cell><cell>21</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>20</cell><cell></cell><cell></cell><cell></cell></row><row><cell>0.1</cell><cell>0.2</cell><cell>0.5</cell><cell>1</cell><cell>0.1</cell><cell>0.2</cell><cell>0.5</cell><cell>1</cell></row><row><cell></cell><cell>α</cell><cell></cell><cell></cell><cell></cell><cell>α</cell><cell></cell><cell></cell></row><row><cell>Figure 8:</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">The formulation written is based on the official code provided with the paper, rather than the description in the paper. The discrepancy between the two is that the formulation in the paper only considers mixes between real and fake.2 Inception scores are typically reported with a mean and variance, though this is across multiple splits of samples across a single model. Since we run multiple experiments, we average their respective means and variances.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The authors thank Christopher Pal, Sherjil Ozair and Dzmitry Bahdanau for useful discussions and feedback. Vikas Verma was supported by Academy of Finland project 13312683 / Raiko Tapani AT kulut. We would also like to acknowledge Compute Canada for providing computing resources used in this work.</p><p>The layer k we choose the sample can be arbitrary combinations of the input layer (i.e., input mixup), or the first or second resblocks of the discriminator, all with equal probability of selection.</p><p>We run some experiments evaluating the quality of generated images on CIFAR10, using as a baseline JSGAN with spectral normalization <ref type="bibr" target="#b24">(Miyato et al., 2018</ref>) (our configuration is almost identical to theirs). Results are averaged over at least three runs 2 . From these results, the best-performing mixup experiments (both input and Manifold Mixup) is with α = 0.5, with mixing in all layers (both resblocks and input) achieving an average Inception / FID of 8.04 ± 0.08 / 21.2 ± 0.47, input mixup achieving 8.03 ± 0.08 / 21.4 ± 0.56, for the baseline experiment 7.97 ± 0.07 / 21.9 ± 0.62. This suggests that mixup acts as a useful regularization on the discriminator, which is even further improved by Manifold Mixup. (See <ref type="figure">Figure 8</ref> for the full set of experimental results.)</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Information dropout: Learning optimal representations through noisy computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Achille</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Soatto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Deep variational information bottleneck</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A</forename><surname>Alemi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">V</forename><surname>Dillon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Murphy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Wasserstein generative adversarial networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Arjovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chintala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Bottou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning</title>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="214" to="223" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Obfuscated gradients give a false sense of security: Circumventing defenses to adversarial examples</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Athalye</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Carlini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
		<ptr target="http://proceedings.mlr.press/v80/athalye18a.html" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 35th International Conference on Machine Learning</title>
		<editor>Dy, J. and Krause, A.</editor>
		<meeting>the 35th International Conference on Machine Learning<address><addrLine>Stockholmsmässan, Stockholm Sweden</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2018-07" />
			<biblScope unit="volume">80</biblScope>
			<biblScope unit="page" from="10" to="15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Generalization performance of support vector machines and other pattern classifiers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Bartlett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shawe-Taylor</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Assessing the scalability of biologically-motivated deep learning algorithms and architectures. submitted to ICLR</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bartunov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Santoro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Richards</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lillicrap</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">MINE: mutual information neural estimation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Belghazi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rajeswar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Baratin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">D</forename><surname>Hjelm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">C</forename><surname>Courville</surname></persName>
		</author>
		<idno>abs/1801.04062</idno>
		<ptr target="http://arxiv.org/abs/1801" />
		<imprint>
			<date type="published" when="2018" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A theory of learning from different domains</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ben-David</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Blitzer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Crammer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kulesza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Pereira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Vaughan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Machine learning</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="151" to="175" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Approximation by superpositions of a sigmoidal function</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Cybenko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematics of control, signals and systems</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="303" to="314" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Improved regularization of convolutional neural networks with cutout. CoRR, abs/1708.04552</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Devries</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">W</forename><surname>Taylor</surname></persName>
		</author>
		<ptr target="http://arxiv.org/abs/1708.04552" />
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Explaining and Harnessing Adversarial Examples</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">J</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shlens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Szegedy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Transfer and exploration via the information bottleneck</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Goyal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Islam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Strouse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Larochelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Botvinick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Levine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Improved training of wasserstein gans</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Gulrajani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Arjovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Dumoulin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">C</forename><surname>Courville</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="5769" to="5779" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">MixUp as Locally Linear Out-Of-Manifold Regularization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Zhang</surname></persName>
		</author>
		<ptr target="https://arxiv.org/abs/1809.02499" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note>ArXiv e-prints</note>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">MixUp as Locally Linear Out-Of-Manifold Regularization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Zhang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018-09" />
		</imprint>
	</monogr>
	<note>ArXiv e-prints</note>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Aggregated Learning: A Vector Quantization Approach to Learning with Neural Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Zhang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018-07" />
		</imprint>
	</monogr>
	<note>ArXiv e-prints</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Identity mappings in deep residual networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ECCV</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Improving neural networks by preventing co-adaptation of feature detectors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">E</forename><surname>Hinton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Srivastava</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Krizhevsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Salakhutdinov</surname></persName>
		</author>
		<idno>abs/1207.0580</idno>
		<ptr target="http://arxiv.org/abs/1207.0580" />
		<imprint>
			<date type="published" when="2012" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Batch normalization: Accelerating deep network training by reducing internal covariate shift</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ioffe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Szegedy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Deep learning. nature</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Lecun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Hinton</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="volume">521</biblScope>
			<biblScope unit="page">436</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Difference target propagation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D.-H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Machine Learning and Knowledge Discovery in Databases (ECML/PKDD)</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Lower bounds on the vc dimension of smoothly parameterized function classes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">L</forename><surname>Bartlett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename><surname>Williamson</surname></persName>
		</author>
		<idno type="DOI">10.1162/neco.1995.7.5.1040</idno>
	</analytic>
	<monogr>
		<title level="j">Neural Computation</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1040" to="1053" />
			<date type="published" when="1995-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Towards deep learning models resistant to adversarial attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Madry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Makelov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Schmidt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Tsipras</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vladu</surname></persName>
		</author>
		<ptr target="https://openreview.net/forum?id=rJzIBfZAb" />
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Efficient estimation of word representations in vector space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mikolov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dean</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Spectral normalization for generative adversarial networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Miyato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kataoka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Koyama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yoshida</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
		<ptr target="https://openreview.net/forum?id=B1QRgziT-" />
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Improved techniques for training gans</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Salimans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zaremba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Cheung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Radford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chen</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="2234" to="2242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Equilibrium propagation: Bridging the gap between energy-based models and backpropagation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Scellier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Frontiers in computational neuroscience</title>
		<imprint>
			<biblScope unit="page">11</biblScope>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Opening the black box of deep neural networks via information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Shwartz-Ziv</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Tishby</surname></persName>
		</author>
		<idno>abs/1703.00810</idno>
		<ptr target="http://arxiv.org/abs/1703.00810" />
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Intriguing properties of neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Szegedy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zaremba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bruna</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Erhan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fergus</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Deep learning and the information bottleneck principle. CoRR, abs/1503.02406</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Tishby</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Zaslavsky</surname></persName>
		</author>
		<ptr target="http://arxiv.org/abs/1503.02406" />
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Between-class learning for image classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Tokozume</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ushiku</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Harada</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)</title>
		<imprint>
			<date type="published" when="2018-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Deep learning with data dependent implicit activation function</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Osher</surname></persName>
		</author>
		<idno>abs/1802.00168</idno>
		<ptr target="http://arxiv.org/abs/1802.00168" />
		<imprint>
			<date type="published" when="2018" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">An approximation of the error backpropagation algorithm in a predictive coding network with local hebbian synaptic plasticity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Whittington</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bogacz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural computation</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Visualizing and understanding convolutional networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>Zeiler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fergus</surname></persName>
		</author>
		<idno>abs/1311.2901</idno>
		<ptr target="http://arxiv.org/abs/1311.2901" />
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Beyond empirical risk minimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cisse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">N</forename><surname>Dauphin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lopez-Paz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mixup</surname></persName>
		</author>
		<ptr target="https://openreview.net/forum?id=r1Ddp1-Rb" />
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Retrieval-augmented convolutional neural networks for improved robustness against adversarial examples. CoRR</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Cho</surname></persName>
		</author>
		<idno>abs/1802.09502</idno>
		<ptr target="http://arxiv.org/abs/1802.09502" />
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
