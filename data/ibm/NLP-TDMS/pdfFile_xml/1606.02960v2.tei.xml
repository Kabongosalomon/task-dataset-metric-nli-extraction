<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Sequence-to-Sequence Learning as Beam-Search Optimization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sam</forename><surname>Wiseman</surname></persName>
							<email>swiseman@seas.harvard.edu</email>
							<affiliation key="aff0">
								<orgName type="department">School of Engineering and Applied Sciences</orgName>
								<orgName type="institution">Harvard University Cambridge</orgName>
								<address>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><forename type="middle">M</forename><surname>Rush</surname></persName>
							<email>srush@seas.harvard.edu</email>
							<affiliation key="aff0">
								<orgName type="department">School of Engineering and Applied Sciences</orgName>
								<orgName type="institution">Harvard University Cambridge</orgName>
								<address>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Sequence-to-Sequence Learning as Beam-Search Optimization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-25T18:17+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Sequence-to-Sequence (seq2seq) modeling has rapidly become an important generalpurpose NLP tool that has proven effective for many text-generation and sequence-labeling tasks. Seq2seq builds on deep neural language modeling and inherits its remarkable accuracy in estimating local, next-word distributions. In this work, we introduce a model and beamsearch training scheme, based on the work of Daumé III and Marcu (2005), that extends seq2seq to learn global sequence scores. This structured approach avoids classical biases associated with local training and unifies the training loss with the test-time usage, while preserving the proven model architecture of seq2seq and its efficient training approach. We show that our system outperforms a highlyoptimized attention-based seq2seq system and other baselines on three different sequence to sequence tasks: word ordering, parsing, and machine translation.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Sequence-to-Sequence learning with deep neural networks (herein, seq2seq)  has rapidly become a very useful and surprisingly general-purpose tool for natural language processing. In addition to demonstrating impressive results for machine translation <ref type="bibr" target="#b1">(Bahdanau et al., 2015)</ref>, roughly the same model and training have also proven to be useful for sentence compression <ref type="bibr">(Filippova et al., 2015)</ref>, parsing <ref type="bibr" target="#b17">(Vinyals et al., 2015)</ref>, and dialogue systems <ref type="bibr">(Serban et al., 2016)</ref>, and they additionally underlie other text generation applications, such as image or video captioning <ref type="bibr" target="#b17">(Venugopalan et al., 2015;</ref>.</p><p>The dominant approach to training a seq2seq system is as a conditional language model, with training maximizing the likelihood of each successive target word conditioned on the input sequence and the gold history of target words. Thus, training uses a strictly word-level loss, usually cross-entropy over the target vocabulary. This approach has proven to be very effective and efficient for training neural language models, and seq2seq models similarly obtain impressive perplexities for word-generation tasks.</p><p>Notably, however, seq2seq models are not used as conditional language models at test-time; they must instead generate fully-formed word sequences. In practice, generation is accomplished by searching over output sequences greedily or with beam search. In this context, Ranzato et al. <ref type="bibr" target="#b12">(2016)</ref> note that the combination of the training and generation scheme just described leads to at least two major issues:</p><p>1. Exposure Bias: the model is never exposed to its own errors during training, and so the inferred histories at test-time do not resemble the gold training histories.</p><p>2. Loss-Evaluation Mismatch: training uses a word-level loss, while at test-time we target improving sequence-level evaluation metrics, such as BLEU <ref type="bibr" target="#b11">(Papineni et al., 2002)</ref>.</p><p>We might additionally add the concern of label bias <ref type="bibr" target="#b8">(Lafferty et al., 2001)</ref> to the list, since wordprobabilities at each time-step are locally normalized, guaranteeing that successors of incorrect his-tories receive the same mass as do the successors of the true history.</p><p>In this work we develop a non-probabilistic variant of the seq2seq model that can assign a score to any possible target sequence, and we propose a training procedure, inspired by the learning as search optimization (LaSO) framework of <ref type="bibr">Daumé III and Marcu (2005)</ref>, that defines a loss function in terms of errors made during beam search. Furthermore, we provide an efficient algorithm to backpropagate through the beam-search procedure during seq2seq training.</p><p>This approach offers a possible solution to each of the three aforementioned issues, while largely maintaining the model architecture and training efficiency of standard seq2seq learning. Moreover, by scoring sequences rather than words, our approach also allows for enforcing hard-constraints on sequence generation at training time. To test out the effectiveness of the proposed approach, we develop a general-purpose seq2seq system with beam search optimization. We run experiments on three very different problems: word ordering, syntactic parsing, and machine translation, and compare to a highlytuned seq2seq system with attention <ref type="bibr" target="#b9">(Luong et al., 2015)</ref>. The version with beam search optimization shows significant improvements on all three tasks, and particular improvements on tasks that require difficult search.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>The issues of exposure bias and label bias have received much attention from authors in the structured prediction community, and we briefly review some of this work here. One prominent approach to combating exposure bias is that of SEARN <ref type="bibr" target="#b4">(Daumé III et al., 2009</ref>), a meta-training algorithm that learns a search policy in the form of a cost-sensitive classifier trained on examples generated from an interpolation of an oracle policy and the model's current (learned) policy. Thus, SEARN explicitly targets the mismatch between oracular training and non-oracular (often greedy) test-time inference by training on the output of the model's own policy. DAgger <ref type="bibr" target="#b13">(Ross et al., 2011</ref>) is a similar approach, which differs in terms of how training examples are generated and aggregated, and there have additionally been impor-tant refinements to this style of training over the past several years <ref type="bibr">(Chang et al., 2015)</ref>. When it comes to training RNNs, SEARN/DAgger has been applied under the name "scheduled sampling" , which involves training an RNN to generate the t + 1'st token in a target sequence after consuming either the true t'th token, or, with probability that increases throughout training, the predicted t'th token.</p><p>Though technically possible, it is uncommon to use beam search when training with SEARN/DAgger. The early-update <ref type="bibr">(Collins and Roark, 2004)</ref> and LaSO <ref type="bibr">(Daumé III and Marcu, 2005)</ref> training strategies, however, explicitly account for beam search, and describe strategies for updating parameters when the gold structure becomes unreachable during search. Early update and LaSO differ primarily in that the former discards a training example after the first search error, whereas LaSO resumes searching after an error from a state that includes the gold partial structure. In the context of feed-forward neural network training, early update training has been recently explored in a feedforward setting by <ref type="bibr" target="#b22">Zhou et al. (2015)</ref> and <ref type="bibr" target="#b0">Andor et al. (2016)</ref>. Our work differs in that we adopt a LaSO-like paradigm (with some minor modifications), and apply it to the training of seq2seq RNNs (rather than feed-forward networks). We also note that Watanabe and Sumita (2015) apply maximumviolation training <ref type="bibr" target="#b7">(Huang et al., 2012)</ref>, which is similar to early-update, to a parsing model with recurrent components, and that <ref type="bibr" target="#b19">Yazdani and Henderson (2015)</ref> use beam-search in training a discriminative, locally normalized dependency parser with recurrent components.</p><p>Recently authors have also proposed alleviating exposure bias using techniques from reinforcement learning. Ranzato et al. <ref type="bibr" target="#b12">(2016)</ref> follow this approach to train RNN decoders in a seq2seq model, and they obtain consistent improvements in performance, even over models trained with scheduled sampling. As <ref type="bibr">Daumé III and Marcu (2005)</ref> note, LaSO is similar to reinforcement learning, except it does not require "exploration" in the same way. Such exploration may be unnecessary in supervised text-generation, since we typically know the gold partial sequences at each time-step. <ref type="bibr" target="#b16">Shen et al. (2016)</ref> use minimum risk training (approximated by sampling) to address the issues of exposure bias and loss-evaluation mismatch for seq2seq MT, and show impressive performance gains.</p><p>Whereas exposure bias results from training in a certain way, label bias results from properties of the model itself. In particular, label bias is likely to affect structured models that make sub-structure predictions using locally-normalized scores. Because the neural and non-neural literature on this point has recently been reviewed by <ref type="bibr" target="#b0">Andor et al. (2016)</ref>, we simply note here that RNN models are typically locally normalized, and we are unaware of any specifically seq2seq work with RNNs that does not use locally-normalized scores. The model we introduce here, however, is not locally normalized, and so should not suffer from label bias. We also note that there are some (non-seq2seq) exceptions to the trend of locally normalized RNNs, such as the work of <ref type="bibr" target="#b14">Sak et al. (2014) and</ref><ref type="bibr">Voigtlaender et al. (2015)</ref>, who train LSTMs in the context of HMMs for speech recognition using sequence-level objectives; their work does not consider search, however.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Background and Notation</head><p>In the simplest seq2seq scenario, we are given a collection of source-target sequence pairs and tasked with learning to generate target sequences from source sequences. For instance, we might view machine translation in this way, where in particular we attempt to generate English sentences from (corresponding) French sentences. Seq2seq models are part of the broader class of "encoder-decoder" models , which first use an encoding model to transform a source object into an encoded representation x. Many different sequential (and non-sequential) encoders have proven to be effective for different source domains. In this work we are agnostic to the form of the encoding model, and simply assume an abstract source representation x.</p><p>Once the input sequence is encoded, seq2seq models generate a target sequence using a decoder. The decoder is tasked with generating a target sequence of words from a target vocabulary V. In particular, words are generated sequentially by conditioning on the input representation x and on the previously generated words or history. We use the notation w 1:T to refer to an arbitrary word sequence of length T , and the notation y 1:T to refer to the gold (i.e., correct) target word sequence for an input x.</p><p>Most seq2seq systems utilize a recurrent neural network (RNN) for the decoder model. Formally, a recurrent neural network is a parameterized nonlinear function RNN that recursively maps a sequence of vectors to a sequence of hidden states. Let m 1 , . . . , m T be a sequence of T vectors, and let h 0 be some initial state vector. Applying an RNN to any such sequence yields hidden states h t at each time-step t, as follows:</p><formula xml:id="formula_0">h t ← RNN(m t , h t−1 ; θ),</formula><p>where θ is the set of model parameters, which are shared over time. In this work, the vectors m t will always correspond to the embeddings of a target word sequence w 1:T , and so we will also write h t ← RNN(w t , h t−1 ; θ), with w t standing in for its embedding.</p><p>RNN decoders are typically trained to act as conditional language models. That is, one attempts to model the probability of the t'th target word conditioned on x and the target history by stipulating that p(w t |w 1:t−1 , x) = g(w t , h t−1 , x), for some parameterized function g typically computed with an affine layer followed by a softmax. In computing these probabilities, the state h t−1 represents the target history, and h 0 is typically set to be some function of x. The complete model (including encoder) is trained, analogously to a neural language model, to minimize the cross-entropy loss at each time-step while conditioning on the gold history in the training data. That is, the model is trained to minimize − ln T t=1 p(y t |y 1:t−1 , x). Once the decoder is trained, discrete sequence generation can be performed by approximately maximizing the probability of the target sequence under the conditional distribution, y 1:T = argbeam w 1:T T t=1 p(w t |w 1:t−1 , x), where we use the notation argbeam to emphasize that the decoding process requires heuristic search, since the RNN model is non-Markovian. In practice, a simple beam search procedure that explores K prospective histories at each time-step has proven to be an effective decoding approach. However, as noted above, decoding in this manner after conditional languagemodel style training potentially suffers from the is-sues of exposure bias and label bias, which motivates the work of this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Beam Search Optimization</head><p>We begin by making one small change to the seq2seq modeling framework. Instead of predicting the probability of the next word, we instead learn to produce (non-probabilistic) scores for ranking sequences. Define the score of a sequence consisting of history w 1:t−1 followed by a single word w t as f (w t , h t−1 , x), where f is a parameterized function examining the current hidden-state of the relevant RNN at time t − 1 as well as the input representation x. In experiments, our f will have an identical form to g but without the final softmax transformation (which transforms unnormalized scores into probabilities), thereby allowing the model to avoid issues associated with the label bias problem.</p><p>More importantly, we also modify how this model is trained. Ideally we would train by comparing the gold sequence to the highest-scoring complete sequence. However, because finding the argmax sequence according to this model is intractable, we propose to adopt a LaSO-like <ref type="bibr">(Daumé III and Marcu, 2005)</ref> scheme to train, which we will refer to as beam search optimization (BSO). In particular, we define a loss that penalizes the gold sequence falling off the beam during training. <ref type="bibr">1</ref> The proposed training approach is a simple way to expose the model to incorrect histories and to match the training procedure to test generation. Furthermore we show that it can be implemented efficiently without changing the asymptotic run-time of training, beyond a factor of the beam size K.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Search-Based Loss</head><p>We now formalize this notion of a search-based loss for RNN training. Assume we have a set S t of K candidate sequences of length t. We can calculate a score for each sequence in S t using a scoring function f parameterized with an RNN, as above, and we define the sequenceŷ (K) 1:t ∈ S t to be the K'th ranked 1 Using a non-probabilistic model further allows us to incur no loss (and thus require no update to parameters) when the gold sequence is on the beam; this contrasts with models based on a CRF loss, such as those of <ref type="bibr" target="#b0">Andor et al. (2016)</ref> and <ref type="bibr" target="#b22">Zhou et al. (2015)</ref>, though in training those models are simply not updated when the gold sequence remains on the beam. sequence in S t according to f . That is, assuming distinct scores,</p><formula xml:id="formula_1">|{ŷ (k) 1:t ∈ S t | f (ŷ (k) t ,ĥ (k) t−1 ) &gt; f (ŷ (K) t ,ĥ (K) t−1 )}| = K − 1, whereŷ (k) t is the t'th token inŷ (k) 1:t ,ĥ (k)</formula><p>t−1 is the RNN state corresponding to its t − 1'st step, and where we have omitted the x argument to f for brevity.</p><p>We now define a loss function that gives loss each time the score of the gold prefix y 1:t does not exceed that ofŷ <ref type="bibr">(K)</ref> 1:t by a margin:</p><formula xml:id="formula_2">L(f ) = T t=1 ∆(ŷ (K) 1:t ) 1 − f (y t , h t−1 ) + f (ŷ (K) t ,ĥ (K) t−1 ) .</formula><p>Above, the ∆(ŷ (K) 1:t ) term denotes a mistake-specific cost-function, which allows us to scale the loss depending on the severity of erroneously predictinĝ y (K) 1:t ; it is assumed to return 0 when the margin requirement is satisfied, and a positive number otherwise. It is this term that allows us to use sequencerather than word-level costs in training (addressing the 2nd issue in the introduction). For instance, when training a seq2seq model for machine translation, it may be desirable to have ∆(ŷ (K) 1:t ) be inversely related to the partial sentence-level BLEU score ofŷ (K) 1:t with y 1:t ; we experiment along these lines in Section 5.3.</p><p>Finally, because we want the full gold sequence to be at the top of the beam at the end of search, when t = T we modify the loss to require the score of y 1:T to exceed the score of the highest ranked incorrect prediction by a margin.</p><p>We can optimize the loss L using a two-step process: (1) in a forward pass, we compute candidate sets S t and record margin violations (sequences with non-zero loss); (2) in a backward pass, we backpropagate the errors through the seq2seq RNNs. Unlike standard seq2seq training, the first-step requires running search (in our case beam search) to find margin violations. The second step can be done by adapting back-propagation through time (BPTT). We next discuss the details of this process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Forward: Find Violations</head><p>In order to minimize this loss, we need to specify a procedure for constructing candidate sequencesŷ (k) 1:t at each time step t so that we find margin violations. We follow LaSO (rather than early-update 2 ; see Section 2) and build candidates in a recursive manner. If there was no margin violation at t−1, then S t is constructed using a standard beam search update. If there was a margin violation, S t is constructed as the K best sequences assuming the gold history y 1:t−1 through time-step t−1.</p><p>Formally, assume the function succ maps a sequence w 1:t−1 ∈ V t−1 to the set of all valid sequences of length t that can be formed by appending to it a valid word w ∈ V. In the simplest, unconstrained case, we will have succ(w 1:t−1 ) = {w 1:t−1 , w | w ∈ V}.</p><p>As an important aside, note that for some problems it may be preferable to define a succ function which imposes hard constraints on successor sequences. For instance, if we would like to use seq2seq models for parsing (by emitting a constituency or dependency structure encoded into a sequence in some way), we will have hard constraints on the sequences the model can output, namely, that they represent valid parses. While hard constraints such as these would be difficult to add to standard seq2seq at training time, in our framework they can naturally be added to the succ function, allowing us to train with hard constraints; we experiment along these lines in Section 5.3, where we refer to a model trained with constrained beam search as ConBSO.</p><p>Having defined an appropriate succ function, we specify the candidate set as:</p><formula xml:id="formula_3">S t = topK succ(y 1:t−1 ) violation at t−1 K k=1 succ(ŷ (k) 1:t−1 ) otherwise, where we have a margin violation at t−1 iff f (y t−1 , h t−2 ) &lt; f (ŷ (K) t−1 ,ĥ<label>(K)</label></formula><p>t−2 ) + 1, and where topK considers the scores given by f . This search procedure is illustrated in the top portion of <ref type="figure" target="#fig_1">Figure 1</ref>.</p><p>In the forward pass of our training algorithm, shown as the first part of Algorithm 1, we run this version of beam search and collect all sequences and their hidden states that lead to losses.  1:t formed in training with a beam of size K = 3 and with gold sequence y 1:6 = "a red dog runs quickly today". The gold sequence is highlighted in yellow, and the predicted prefixes involved in margin violations (at t = 4 and t = 6) are in gray. Note that time-step T = 6 uses a different loss criterion. Bottom: prefixes that actually participate in the loss, arranged to illustrate the back-propagation process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Backward: Merge Sequences</head><p>Once we have collected margin violations we can run backpropagation to compute parameter updates. Assume a margin violation occurs at time-step t between the predicted historyŷ (K) 1:t and the gold history y 1:t . As in standard seq2seq training we must back-propagate this error through the gold history; however, unlike seq2seq we also have a gradient for the wrongly predicted history.</p><p>Recall that to back-propagate errors through an RNN we run a recursive backward proceduredenoted below by BRNN -at each time-step t, which accumulates the gradients of next-step and future losses with respect to h t . We have:</p><formula xml:id="formula_4">∇ ht L ← BRNN(∇ ht L t+1 , ∇ h t+1 L),</formula><p>where L t+1 is the loss at step t + 1, deriving, for instance, from the score f (y t+1 , h t ). Running this BRNN procedure from t = T − 1 to t = 0 is known as back-propagation through time (BPTT).</p><p>In determining the total computational cost of back-propagation here, first note that in the worst case there is one violation at each time-step, which leads to T independent, incorrect sequences. Since we need to call BRNN O(T ) times for each sequence, a naive strategy of running BPTT for each incorrect sequence would lead to an O(T 2 ) backward pass, rather than the O(T ) time required for the standard seq2seq approach.</p><p>Fortunately, our combination of search-strategy and loss make it possible to efficiently share BRNN operations. This shared structure comes naturally from the LaSO update, which resets the beam in a convenient way.</p><p>We informally illustrate the process in <ref type="figure" target="#fig_1">Figure 1</ref>. The top of the diagram shows a possible sequence ofŷ (k) 1:t formed during search with a beam of size 3 for the target sequence y = "a red dog runs quickly today." When the gold sequence falls off the beam at t = 4, search resumes with S 5 = succ(y 1:4 ), and so all subsequent predicted sequences have y 1:4 as a prefix and are thus functions of h 4 . Moreover, because our loss function only involves the scores of the gold prefix and the violating prefix, we end up with the relatively simple computation tree shown at the bottom of <ref type="figure" target="#fig_1">Figure 1</ref>. It is evident that we can backpropagate in a single pass, accumulating gradients from sequences that diverge from the gold at the time-step that precedes their divergence. The second half of Algorithm 1 shows this explicitly for a single sequence, though it is straightforward to extend the algorithm to operate in batch. 3</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Data and Methods</head><p>We run experiments on three different tasks, comparing our approach to the seq2seq baseline, and to other relevant baselines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Model</head><p>While the method we describe applies to seq2seq RNNs in general, for all experiments we use the global attention model of <ref type="bibr" target="#b9">Luong et al. (2015)</ref> -which consists of an LSTM (Hochreiter and Schmidhuber, 1997) encoder and an LSTM decoder with a global attention model -as both the baseline seq2seq model (i.e., as the model that computes the g in Section 3) and as the model that computes our sequence-scores f (w t , h t−1 , x). As in <ref type="bibr" target="#b9">Luong et al. (2015)</ref>, we also use "input feeding," which involves feeding the attention distribution from the previous time-step into the decoder at the current step. This model architecture has been found to be highly performant for neural machine translation and other seq2seq tasks. <ref type="bibr">3</ref> We also note that because we do not update the parameters until after the T 'th search step, our training procedure differs slightly from LaSO (which is online), and in this aspect is essentially equivalent to the "delayed LaSO update" of Björkelund and Kuhn (2014). for t = 1, . . . , T do 6:</p><formula xml:id="formula_5">K = K tr if t = T else arg max k:ŷ (k) 1:t =y 1:t f (ŷ (k) t ,ĥ (k) t−1 ) 7: if f (y t , h t−1 ) &lt; f (ŷ (K) t ,ĥ (K)</formula><p>t−1 ) + 1 then 8:ĥ r:t−1 ←ĥ (K) r:t−1 9:ŷ r+1:t ←ŷ  for t = T − 1, . . . , 1 do 18:</p><formula xml:id="formula_6">grad h t ← BRNN(∇ ht L t+1 , grad h t+1 ) 19: grad h t ← BRNN(∇ ht L t+1 , grad h t+1 ) 20: if t − 1 ∈ violations then 21: grad h t ← grad h t + grad h t 22: grad h t ← 0</formula><p>To distinguish the models we refer to our system as BSO (beam search optimization) and to the baseline as seq2seq. When we apply constrained training (as discussed in Section 4.2), we refer to the model as ConBSO. In providing results we also distinguish between the beam size K tr with which the model is trained, and the beam size K te which is used at test-time. In general, if we plan on evaluating with a beam of size K te it makes sense to train with a beam of size K tr = K te + 1, since our objective requires the gold sequence to be scored higher than the last sequence on the beam.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Methodology</head><p>Here we detail additional techniques we found necessary to ensure the model learned effectively. First, we found that the model failed to learn when trained from a random initialization. <ref type="bibr">4</ref> We therefore found it necessary to pre-train the model using a standard, word-level cross-entropy loss as described in Sec-tion 3. The necessity of pre-training in this instance is consistent with the findings of other authors who train non-local neural models <ref type="bibr" target="#b8">(Kingsbury, 2009;</ref><ref type="bibr" target="#b14">Sak et al., 2014;</ref><ref type="bibr" target="#b0">Andor et al., 2016;</ref><ref type="bibr">Ranzato et al., 2016)</ref>. <ref type="bibr">5</ref> Similarly, it is clear that the smaller the beam used in training is, the less room the model has to make erroneous predictions without running afoul of the margin loss. Accordingly, we also found it useful to use a "curriculum beam" strategy in training, whereby the size of the beam is increased gradually during training. In particular, given a desired training beam size K tr , we began training with a beam of size 2, and increased it by 1 every 2 epochs until reaching K tr .</p><p>Finally, it has been established that dropout (Srivastava et al., 2014) regularization improves the performance of LSTMs <ref type="bibr">(Pham et al., 2014;</ref><ref type="bibr" target="#b20">Zaremba et al., 2014)</ref>, and in our experiments we run beam search under dropout. <ref type="bibr">6</ref> For all experiments, we trained both seq2seq and BSO models with mini-batch Adagrad <ref type="bibr" target="#b5">(Duchi et al., 2011</ref>) (using batches of size 64), and we renormalized all gradients so they did not exceed 5 before updating parameters. We did not extensively tune learning-rates, but we found initial rates of 0.02 for the encoder and decoder LSTMs, and a rate of 0.1 or 0.2 for the final linear layer (i.e., the layer tasked with making word-predictions at each timestep) to work well across all the tasks we considered. Code implementing the experiments described below can be found at https://github.com/ harvardnlp/BSO. 7</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Tasks and Results</head><p>Our experiments are primarily intended to evaluate the effectiveness of beam search optimization over standard seq2seq training. As such, we run experiments with the same model across three very dif-5 <ref type="bibr" target="#b0">Andor et al. (2016)</ref> found, however, that pre-training only increased convergence-speed, but was not necessary for obtaining good results. 6 However, it is important to ensure that the same mask applied at each time-step of the forward search is also applied at the corresponding step of the backward pass. We accomplish this by pre-computing masks for each time-step, and sharing them between the partial sequence LSTMs. <ref type="bibr">7</ref> Our code is based on Yoon Kim's seq2seq code, https: //github.com/harvardnlp/seq2seq-attn. ferent problems: word ordering, dependency parsing, and machine translation. While we do not include all the features and extensions necessary to reach state-of-the-art performance, even the baseline seq2seq model is generally quite performant.</p><p>Word Ordering The task of correctly ordering the words in a shuffled sentence has recently gained some attention as a way to test the (syntactic) capabilities of text-generation systems <ref type="bibr" target="#b20">(Zhang and Clark, 2011;</ref><ref type="bibr" target="#b21">Zhang and Clark, 2015;</ref><ref type="bibr" target="#b9">Liu et al., 2015;</ref><ref type="bibr" target="#b15">Schmaltz et al., 2016)</ref>. We cast this task as seq2seq problem by viewing a shuffled sentence as a source sentence, and the correctly ordered sentence as the target. While word ordering is a somewhat synthetic task, it has two interesting properties for our purposes. First, it is a task which plausibly requires search (due to the exponentially many possible orderings), and, second, there is a clear hard constraint on output sequences, namely, that they be a permutation of the source sequence. For both the baseline and BSO models we enforce this constraint at testtime. However, we also experiment with constraining the BSO model during training, as described in Section 4.2, by defining the succ function to only allow successor sequences containing un-used words in the source sentence. For experiments, we use the same PTB dataset (with the standard training, development, and test splits) and evaluation procedure as in <ref type="bibr" target="#b21">Zhang and Clark (2015)</ref> and later work, with performance reported in terms of BLEU score with the correctly ordered sentences. For all word-ordering experiments we use 2-layer encoder and decoder LSTMs, each with 256 hidden units, and dropout with a rate of 0.2 between LSTM layers. We use simple 0/1 costs in defining the ∆ function.</p><p>We show our test-set results in <ref type="table">Table 1</ref>. We see that on this task there is a large improvement at each beam size from switching to BSO, and a further improvement from using the constrained model.</p><p>Inspired by a similar analysis in <ref type="bibr">Daumé III and Marcu (2005)</ref>, we further examine the relationship between K tr and K te when training with ConBSO in <ref type="table" target="#tab_2">Table 2</ref>. We see that larger K tr hurt greedy inference, but that results continue to improve, at least initially, when using a K te that is (somewhat) bigger than K tr − 1.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Dependency Parsing</head><p>We next apply our model to dependency parsing, which also has hard constraints and plausibly benefits from search. We treat dependency parsing with arc-standard transitions as a seq2seq task by attempting to map from a source sentence to a target sequence of source sentence words interleaved with the arc-standard, reduce-actions in its parse. For example, we attempt to map the source sentence</p><p>But it was the Quotron problems that ...</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>to the target sequence</head><p>But it was @L SBJ @L DEP the Quotron problems @L NMOD @L NMOD that ...</p><p>We use the standard Penn Treebank dataset splits with Stanford dependency labels, and the standard UAS/LAS evaluation metric (excluding punctuation) following <ref type="bibr" target="#b2">Chen and Manning (2014</ref>  and dropout with a rate of 0.3 between LSTM layers. We replace singleton words in the training set with an UNK token, normalize digits to a single symbol, and initialize word embeddings for both source and target words from the publicly available word2vec <ref type="bibr" target="#b10">(Mikolov et al., 2013)</ref> embeddings. We use simple 0/1 costs in defining the ∆ function. As in the word-ordering case, we also experiment with modifying the succ function in order to train under hard constraints, namely, that the emitted target sequence be a valid parse. In particular, we constrain the output at each time-step to obey the stack constraint, and we ensure words in the source are emitted in order.</p><p>We show results on the test-set in <ref type="table" target="#tab_4">Table 3</ref>. BSO and ConBSO both show significant improvements over seq2seq, with ConBSO improving most on UAS, and BSO improving most on LAS. We achieve a reasonable final score of 91.57 UAS, which lags behind the state-of-the-art, but is promising for a general-purpose, word-only model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Translation</head><p>We finally evaluate our model on a small machine translation dataset, which allows us to experiment with a cost function that is not 0/1, and to consider other baselines that attempt to mitigate exposure bias in the seq2seq setting. We use the dataset from the work of Ranzato et al. <ref type="bibr" target="#b12">(2016)</ref>, which uses data from the German-to-English portion of the IWSLT 2014 machine translation evaluation campaign <ref type="bibr">(Cettolo et al., 2014)</ref>. The data comes from translated TED talks, and the dataset contains roughly 153K training sentences, 7K development sentences, and 7K test sentences. We use the same preprocessing and dataset splits as Ranzato et   <ref type="bibr" target="#b12">(2016)</ref>. SB-∆ indicates sentence BLEU costs are used in defining ∆. XENT is similar to our seq2seq model but with a convolutional encoder and simpler attention. DAD trains seq2seq with scheduled sampling . BSO, SB-∆ experiments above have K tr = 6.</p><p>al. <ref type="bibr" target="#b12">(2016)</ref>, and like them we also use a single-layer LSTM decoder with 256 units. We also use dropout with a rate of 0.2 between each LSTM layer. We emphasize, however, that while our decoder LSTM is of the same size as that of Ranzato et al. <ref type="bibr" target="#b12">(2016)</ref>, our results are not directly comparable, because we use an LSTM encoder (rather than a convolutional encoder as they do), a slightly different attention mechanism, and input feeding <ref type="bibr" target="#b9">(Luong et al., 2015)</ref>.</p><p>For our main MT results, we set ∆(ŷ (k) 1:t ) to 1 − SB(ŷ (K) r+1:t , y r+1:t ), where r is the last margin violation and SB denotes smoothed, sentence-level BLEU <ref type="bibr" target="#b2">(Chen and Cherry, 2014)</ref>. This setting of ∆ should act to penalize erroneous predictions with a relatively low sentence-level BLEU score more than those with a relatively high sentence-level BLEU score. In <ref type="table" target="#tab_6">Table 4</ref> we show our final results and those from Ranzato et al. <ref type="bibr" target="#b12">(2016)</ref>. 8 While we start with an improved baseline, we see similarly large increases in accuracy as those obtained by DAD and MIXER, in particular when K te &gt; 1.</p><p>We further investigate the utility of these sequence-level costs in <ref type="table" target="#tab_7">Table 5</ref>, which compares using sentence-level BLEU costs in defining ∆ with using 0/1 costs. We see that the more sophisticated sequence-level costs have a moderate effect on BLEU score. <ref type="bibr">8</ref> Some results from personal communication.</p><p>Machine Translation (BLEU) K te = 1 K te = 5 K te = 10 0/1-∆ 25.73 28.21 27.43 SB-∆ 25.99 28.45 27.58   Timing Given Algorithm 1, we would expect training time to increase linearly with the size of the beam. On the above MT task, our highly tuned seq2seq baseline processes an average of 13,038 tokens/second (including both source and target tokens) on a GTX 970 GPU. For beams of size K tr = 2, 3, 4, 5, and 6, our implementation processes on average 1,985, 1,768, 1,709, 1,521, and 1,458 tokens/second, respectively. Thus, we appear to pay an initial constant factor of ≈ 3.3 due to the more complicated forward and backward passes, and then training scales with the size of the beam. Because we batch beam predictions on a GPU, however, we find that in practice training time scales sub-linearly with the beam-size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>We have introduced a variant of seq2seq and an associated beam search training scheme, which addresses exposure bias as well as label bias, and moreover allows for both training with sequencelevel cost functions as well as with hard constraints. Future work will examine scaling this approach to much larger datasets.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure</head><label></label><figDesc>Figure 1: Top: possibleŷ (k)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Algorithm 1</head><label>1</label><figDesc>Seq2seq Beam-Search Optimization 1: procedure BSO(x, K tr , succ)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>h T ← 0; grad h T ← 0 17:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>, y r+1:t ) (bottom), and K tr = 6.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Word Ordering (BLEU) K te = 1 K te = 5 K te = 10</figDesc><table><row><cell>seq2seq</cell><cell>25.2</cell><cell>29.8</cell><cell>31.0</cell></row><row><cell>BSO</cell><cell>28.0</cell><cell>33.2</cell><cell>34.3</cell></row><row><cell>ConBSO</cell><cell>28.6</cell><cell>34.3</cell><cell>34.5</cell></row><row><cell>LSTM-LM</cell><cell>15.4</cell><cell>-</cell><cell>26.8</cell></row><row><cell cols="4">Table 1: Word ordering. BLEU Scores of seq2seq, BSO,</cell></row><row><cell cols="4">constrained BSO, and a vanilla LSTM language model</cell></row><row><cell cols="4">(from Schmaltz et al, 2016). All experiments above have</cell></row><row><cell>K tr = 6.</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">Word Ordering Beam Size (BLEU)</cell></row><row><cell cols="3">K te = 1 K te = 5</cell><cell>K te = 10</cell></row><row><cell>K tr = 2</cell><cell>30.59</cell><cell>31.23</cell><cell>30.26</cell></row><row><cell>K tr = 6</cell><cell>28.20</cell><cell>34.22</cell><cell>34.67</cell></row><row><cell>K tr = 11</cell><cell>26.88</cell><cell>34.42</cell><cell>34.88</cell></row><row><cell>seq2seq</cell><cell>26.11</cell><cell>30.20</cell><cell>31.04</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2</head><label>2</label><figDesc></figDesc><table><row><cell>: Beam-size experiments on word ordering devel-</cell></row><row><cell>opment set. All numbers reflect training with constraints</cell></row><row><cell>(ConBSO).</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>). All models thus see only the words in the source and, when decoding, the actions it has emitted so far; no other features are used. We use 2-layer encoder and decoder LSTMs with 300 hidden units per layer Dependency Parsing (UAS/LAS) K te = 1 K te = 5 K te = 10 seq2seq 87.33/82.26 88.53/84.16 88.66/84.33  BSO  86.91/82.11 91.00/87.18 91.17/87.41  ConBSO 85.11/79.32 91.25/86.92 91.57/87.26    </figDesc><table><row><cell>Andor 93.17/91.18</cell><cell>-</cell><cell>-</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 3 :</head><label>3</label><figDesc>Dependency parsing. UAS/LAS of seq2seq, BSO, ConBSO and baselines on PTB test set. Andor is the current state-of-the-art model for this data set<ref type="bibr" target="#b0">(Andor et al. 2016)</ref>, and we note that with a beam of size 32 they obtain 94.41/92.55. All experiments above have K tr = 6.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>Machine Translation (BLEU) K te = 1 K te = 5 K te = 10</figDesc><table><row><cell>seq2seq</cell><cell>22.53</cell><cell>24.03</cell><cell>23.87</cell></row><row><cell>BSO, SB-∆</cell><cell>23.83</cell><cell>26.36</cell><cell>25.48</cell></row><row><cell>XENT</cell><cell>17.74</cell><cell>20.10</cell><cell>20.28</cell></row><row><cell>DAD</cell><cell>20.12</cell><cell>22.25</cell><cell>22.40</cell></row><row><cell>MIXER</cell><cell>20.73</cell><cell>21.81</cell><cell>21.83</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 4 :</head><label>4</label><figDesc>Machine translation experiments on test set; results below middle line are from MIXER model of Ranzato et al.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 5 :</head><label>5</label><figDesc>BLEU scores obtained on the machine translation development data when training with ∆(ŷ</figDesc><table /><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">We found that training with early-update rather than (delayed) LaSO did not work well, even after pre-training. Given the success of early-update in many NLP tasks this was somewhat surprising. We leave this question to future work.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">This may be because there is relatively little signal in the sparse, sequence-level gradient, but this point requires further investigation.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We thank Yoon Kim for helpful discussions and for providing the initial seq2seq code on which our implementations are based. We thank Allen Schmaltz for help with the word ordering experiments. We also gratefully acknowledge the support of a Google Research Award.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Andor</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016" />
			<pubPlace>Alessandro Presta, Kuzman</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Learning structured perceptrons for coreference Resolution with Latent Antecedents and Non-local Features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Slav</forename><surname>Ganchev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Petrov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">;</forename><surname>Collins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bahdanau</surname></persName>
		</author>
		<idno>abs/1607.07086. [Bengio et al.2015</idno>
	</analytic>
	<monogr>
		<title level="m">Samy Bengio, Oriol Vinyals, Navdeep Jaitly, and Noam Shazeer</title>
		<editor>Chang et al.2015] Kai-Wei Chang, Hal Daumé III, John Langford, and Stephane Ross</editor>
		<meeting><address><addrLine>Baltimore, MD, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014-01" />
			<biblScope unit="page" from="1171" to="1179" />
		</imprint>
	</monogr>
	<note>Proceedings of IWSLT. Efficient programmable learning to search. In Arxiv</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A systematic comparison of smoothing techniques for sentence-level bleu</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cherry2014] Boxing</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Colin</forename><surname>Cherry ; Danqi Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher D</forename><surname>Manning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In EMNLP</title>
		<imprint>
			<biblScope unit="page" from="740" to="750" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
	<note>A fast and accurate dependency parser using neural networks</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Learning as search optimization: approximate large margin methods for structured prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Cho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twenty-Second International Conference on Machine Learning (ICML 2005</title>
		<editor>Collins and Roark2004] Michael Collins and Brian Roark</editor>
		<meeting>the Twenty-Second International Conference on Machine Learning (ICML 2005</meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="169" to="176" />
		</imprint>
	</monogr>
	<note>Proceedings of the 42nd Annual Meeting on Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Search-based structured prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Iii</forename><surname>Daumé</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Machine Learning</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="page" from="297" to="325" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Katja Filippova, Enrique Alfonseca, Carlos A Colmenares, Lukasz Kaiser, and Oriol Vinyals. 2015. Sentence compression by deletion with lstms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Duchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing</title>
		<meeting>the 2015 Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="360" to="368" />
		</imprint>
	</monogr>
	<note>Adaptive Subgradient Methods for Online Learning and Stochastic Optimization</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Long short-term memory</title>
	</analytic>
	<monogr>
		<title level="m">Sepp Hochreiter and Jürgen Schmidhuber</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="1735" to="1780" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Structured perceptron with inexact search</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2012 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies</title>
		<meeting>the 2012 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies</meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="142" to="151" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Lattice-based optimization of sequence classification criteria for neural-network acoustic modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Kingsbury</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>John</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Lafferty</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fernando</forename><forename type="middle">C N</forename><surname>Mccallum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Pereira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eighteenth International Conference on Machine Learning</title>
		<meeting>the Eighteenth International Conference on Machine Learning</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="282" to="289" />
		</imprint>
	</monogr>
	<note>Acoustics, Speech and Signal Processing</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Effective approaches to attention-based neural machine translation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Liu</surname></persName>
		</author>
		<idno>Luong et al.2015</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing</title>
		<meeting>the 2015 Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1412" to="1421" />
		</imprint>
	</monogr>
	<note>Proceedings of NAACL</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Distributed representations of words and phrases and their compositionality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Mikolov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in neural information processing systems</title>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="3111" to="3119" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Dropout improves recurrent neural networks for handwriting recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Papineni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 40th annual meeting on association for computational linguistics</title>
		<editor>Marc&apos;Aurelio Ranzato, Sumit Chopra, Michael Auli, and Wojciech Zaremba</editor>
		<meeting>the 40th annual meeting on association for computational linguistics</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="285" to="290" />
		</imprint>
	</monogr>
	<note>14th International Conference on. Ranzato et al.2016</note>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Sequence level training with recurrent neural networks</title>
		<imprint/>
	</monogr>
	<note>ICLR</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A reduction of imitation learning and structured prediction to no-regret online learning</title>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fourteenth International Conference on Artificial Intelligence and Statistics</title>
		<meeting>the Fourteenth International Conference on Artificial Intelligence and Statistics</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="627" to="635" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Sequence discriminative distributed training of long short-term memory recurrent neural networks</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="1209" to="1213" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Building end-to-end dialogue systems using generative hierarchical neural network models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Schmaltz</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1604.08633</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Thirtieth AAAI Conference on Artificial Intelligence</title>
		<editor>Bengio, Aaron C. Courville, and Joelle Pineau</editor>
		<meeting>the Thirtieth AAAI Conference on Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="3776" to="3784" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Word ordering without syntax</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Nitish Srivastava, Geoffrey Hinton, Alex Krizhevsky, Ilya Sutskever, and Ruslan Salakhutdinov</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Shen</surname></persName>
		</author>
		<idno>Srivastava et al.2014</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics, ACL 2016</title>
		<meeting>the 54th Annual Meeting of the Association for Computational Linguistics, ACL 2016</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="1017" to="1024" />
		</imprint>
	</monogr>
	<note>Proceedings of the 28th International Conference on Machine Learning (ICML)</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Sequence-discriminative training of recurrent neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ilya</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oriol</forename><surname>Vinyals</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Quoc Vv Le ;</forename><surname>Venugopalan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<editor>Paul Voigtlaender, Patrick Doetsch, Simon Wiesler, Ralf Schluter, and Hermann Ney</editor>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="2100" to="2104" />
		</imprint>
	</monogr>
	<note>Proceedings of ACL-IJCNLP</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Show, attend and tell: Neural image caption generation with visual attention</title>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="2048" to="2057" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Incremental recurrent neural network dependency parser with search-based discriminative training</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henderson2015] Majid</forename><surname>Yazdani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Henderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th Conference on Computational Natural Language Learning</title>
		<meeting>the 19th Conference on Computational Natural Language Learning</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="142" to="152" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Syntax-based grammaticality improvement using ccg and guided search</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Zaremba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Empirical Methods in Natural Language Processing</title>
		<meeting>the Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="1147" to="1157" />
		</imprint>
	</monogr>
	<note>Recurrent neural network regularization. CoRR, abs/1409.2329. Association for Computational Linguistics</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Discriminative syntax-based word ordering for text generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yue</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><surname>Clark</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="503" to="538" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A neural probabilistic structured-prediction model for transition-based dependency parsing</title>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics</title>
		<meeting>the 53rd Annual Meeting of the Association for Computational Linguistics</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1213" to="1222" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
