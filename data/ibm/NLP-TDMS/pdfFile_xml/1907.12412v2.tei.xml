<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /nfs/home/kabenamualus/Research/task-dataset-metric-extraction/../grobid-0.6.0/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">ERNIE 2.0: A Continual Pre-Training Framework for Language Understanding</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yu</forename><surname>Sun</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Baidu Inc</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shuohuan</forename><surname>Wang</surname></persName>
							<email>wangshuohuan@baidu.com</email>
							<affiliation key="aff0">
								<orgName type="institution">Baidu Inc</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yukun</forename><surname>Li</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Baidu Inc</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shikun</forename><surname>Feng</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Baidu Inc</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hao</forename><surname>Tian</surname></persName>
							<email>tianhao@baidu.com</email>
							<affiliation key="aff0">
								<orgName type="institution">Baidu Inc</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hua</forename><surname>Wu</surname></persName>
							<email>wuhua@baidu.com</email>
							<affiliation key="aff0">
								<orgName type="institution">Baidu Inc</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Haifeng</forename><surname>Wang</surname></persName>
							<email>wanghaifeng@baidu.com</email>
							<affiliation key="aff0">
								<orgName type="institution">Baidu Inc</orgName>
								<address>
									<settlement>Beijing</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">ERNIE 2.0: A Continual Pre-Training Framework for Language Understanding</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.6.0" ident="GROBID-SDO" when="2021-06-25T19:12+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid-sdo"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Recently pre-trained models have achieved state-of-the-art results in various language understanding tasks. Current pretraining procedures usually focus on training the model with several simple tasks to grasp the co-occurrence of words or sentences. However, besides co-occurring information, there exists other valuable lexical, syntactic and semantic information in training corpora, such as named entities, semantic closeness and discourse relations. In order to extract the lexical, syntactic and semantic information from training corpora, we propose a continual pre-training framework named ERNIE 2.0 which incrementally builds pre-training tasks and then learn pre-trained models on these constructed tasks via continual multi-task learning. Based on this framework, we construct several tasks and train the ERNIE 2.0 model to capture lexical, syntactic and semantic aspects of information in the training data. Experimental results demonstrate that ERNIE 2.0 model outperforms BERT and XLNet on 16 tasks including English tasks on GLUE benchmarks and several similar tasks in Chinese. The source codes and pre-trained models have been released at https://github.com/PaddlePaddle/ERNIE.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>Pre-trained language representations such as ELMo <ref type="bibr" target="#b7">(Peters et al. 2018)</ref>, OpenAI <ref type="bibr">GPT(Radford et al. 2018)</ref>, <ref type="bibr">BERT (Devlin et al. 2018)</ref>, ERNIE 1.0 (Sun et al. 2019) 1 and XLNet  have been proven to be effective for improving the performances of various natural language understanding tasks including sentiment classification , natural language inference <ref type="bibr" target="#b0">(Bowman et al. 2015)</ref>, named entity recognition <ref type="bibr" target="#b7">(Sang and De Meulder 2003)</ref> and so on.</p><p>Generally the pre-training of models often train the model based on the co-occurrence of words and sentences. While in fact, there are other lexical, syntactic and semantic information worth examining in training corpora other than cooccurrence. For example, named entities like person names, location names, and organization names, may contain conceptual information. Information like sentence order and Copyright c 2020, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved. <ref type="bibr">1</ref> In order to distinguish ERNIE 2.0 framework and the ERNIE model, the latter is referred to as ERNIE 1.0. <ref type="bibr" target="#b8">(Sun et al. 2019)</ref> sentence proximity enables the models to learn structureaware representations. And semantic similarity at the document level or discourse relations among sentences allow the models to learn semantic-aware representations. In order to discover all valuable information in training corpora, be it lexical, syntactic or semantic representations, we propose a continual pre-training framework named ERNIE 2.0 which could incrementally build and train a large variety of pre-training tasks through continual multi-task learning.</p><p>Our ERNIE framework supports the introduction of various customized tasks continually, which is realized through continual multi-task learning. When given one or more new tasks, the continual multi-task learning method simultaneously trains the newly-introduced tasks together with the original tasks in an efficient way, without forgetting previously learned knowledge. In this way, our framework can incrementally train the distributed representations based on the previously trained parameters that it grasped. Moreover, in this framework, all the tasks share the same encoding networks, thus making the encoding of lexical, syntactic and semantic information across different tasks possible.</p><p>In summary, our contributions are as follows:</p><p>• We propose a continual pre-training framework ERNIE 2.0, which efficiently supports customized training tasks and continual multi-task learning in an incremental way.</p><p>• We construct three kinds of unsupervised language processing tasks to verify the effectiveness of the proposed framework. Experimental results demonstrate that ERNIE 2.0 achieves significant improvements over BERT and XL-Net on 16 tasks including English GLUE benchmarks and several Chinese tasks.</p><p>• Our fine-tuning code of ERNIE 2.0 and models pre-trained on English corpora are available at https://github.com/ PaddlePaddle/ERNIE.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Related Work Unsupervised Learning for Language Representation</head><p>It is effective to learn general language representation by pre-training a language model with a large amount of unan-  <ref type="figure">Figure 1</ref>: The framework of ERNIE 2.0, where the pre-training tasks can be incrementally constructed, the models are pre-trained through continual multi-task learning, and the pre-trained model is fine-tuned to adapt to various language understanding tasks. notated data. Traditional methods usually focus on contextindependent word embedding. Methods such as Word2Vec <ref type="bibr" target="#b6">(Mikolov et al. 2013)</ref> and GloVe (Pennington, Socher, and Manning 2014) learn fixed word embeddings based on word co-occurring information on large corpora.</p><p>Recently, several studies centered on contextualized language representations have been proposed and contextdependent language representations have shown state-ofthe-art results in various natural language processing tasks. ELMo <ref type="bibr" target="#b7">(Peters et al. 2018)</ref> proposes to extract contextsensitive features from a language model. OpenAI GPT (Radford et al. 2018) enhances the context-sensitive embedding by adjusting the Transformer <ref type="bibr" target="#b8">(Vaswani et al. 2017)</ref>. <ref type="bibr">BERT (Devlin et al. 2018)</ref>, however, adopts a masked language model while adding a next sentence prediction task into the pre-training. XLM (Lample and Conneau 2019) integrates two methods to learn cross-lingual language models, namely the unsupervised method that relies only on monolingual data and the supervised method that leverages parallel bilingual data. MT-DNN ) achieves a better result through learning several supervised tasks in <ref type="bibr">GLUE(Wang et al. 2018</ref>) together based on the pre-trained model, which eventually leads to improvements on other supervised tasks that are not learned in the stage of multi-task supervised fine-tuning. XLNet (Yang et al. 2019) uses Transformer-XL ) and proposes a generalized autoregressive pre-training method that learns bidirectional contexts by maximizing the expected likelihood over all permutations of the factorization order.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Continual Learning</head><p>Continual learning <ref type="bibr" target="#b6">(Parisi et al. 2019;</ref> aims to train the model with several tasks in sequence so that it remembers the previously-learned tasks when learning the new ones. These methods are inspired by the learning process of humans, as humans are capable of continuously accumu-  The ERNIE 2.0 Framework As shown in <ref type="figure">Figure 1</ref>, the ERNIE 2.0 framework is built based on an widely-used architecture of pre-training and finetuning. ERNIE 2.0 differs from the previous pre-training ones in that, instead of training with a small number of pre-training objectives, it could constantly introduce a large variety of pretraining tasks to help the model efficiently learn the lexical, syntactic and semantic representations. Based on this, ERNIE 2.0 framework keeps updating the pre-trained model with continual multi-task learning. During fine-tuning, the ERNIE model is first initialized with the pre-trained parameters, and would be later fine-tuned using data from specific tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Continual Pre-training</head><p>The process of continual pre-training contains two steps. Firstly, We continually construct unsupervised pre-training tasks with big data and prior knowledge involved. Secondly, We incrementally update the ERNIE model via continual multi-task learning.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pre-training Tasks Construction</head><p>We can construct different kinds of tasks at each time, including word-aware tasks, [SEP] <ref type="table" target="#tab_6">1  2  4  7  10  11  3  6  5  9  0  8   3  3  3  3  3  3  3  3  3  3</ref> 3  structure-aware tasks and semantic-aware tasks 2 . All of these pre-training tasks rely on self-supervised or weak-supervised signals that could be obtained from massive data without human annotation. Prior knowledge such as named entities, phrases and discourse relations is used to generate labels from large-scale data.</p><formula xml:id="formula_0">A A A B B C C A B C A B</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Structure-aware Pre-training Task</head><formula xml:id="formula_1">+ + + + + ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ 3 ↑ ↑ ↑ [</formula><p>Continual Multi-task Learning The ERNIE 2.0 framework aims to learn lexical, syntactic and semantic information from a number of different tasks. Thus there are two main challenges to overcome. The first is how to train the tasks in a continual way without forgetting the knowledge learned before. The second is how to pre-train these tasks in an efficient way. We propose a continual multi-task learning method to tackle with these two problems. Whenever a new task comes, the continual multi-task learning method first uses the previously learned parameters to initialize the model, and then train the newly-introduced task together with the original tasks simultaneously. This will make sure that the learned parameters encodes the previously-learned knowledge. One left problem is how to make it trained more efficiently. We solve this problem by allocating each task N training iterations. Our framework needs to automatically assign these N iterations for each task to different stages of training. In this way, we can guarantee the efficiency of our method without forgetting the previously trained knowledge 3 . <ref type="figure" target="#fig_0">Figure 2</ref> shows the difference among our method, multitask learning from scratch and previous continual learning. Although multi-task learning from scratch could train multiple tasks at the same time, it is necessary that all customized pre-training tasks are prepared before the training could proceed. So this method takes as much time as continual learning does, if not more. Traditional continual learning method trains the model with only one task at each stage with the demerit that it may forget the previously learned knowledge.</p><p>As shown in <ref type="figure">Figure 4</ref>, the architecture of our continual multi-task learning in each stage contains a series of shared text encoding layers to encode contextual information, which can be customized by using recurrent neural networks or a deep Transformer consisting of stacked self-attention layers <ref type="bibr" target="#b8">(Vaswani et al. 2017)</ref>. The parameters of the encoder can be updated across all learning tasks. There are two kinds of loss functions in our framework. One is the sentence-level loss and the other one is the token-level loss, which are similar to the loss functions of BERT. Each pre-training task has its own loss function. During pre-training, one sentence-level loss function can be combined with multiple token-level loss functions to continually update the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fine-tuning for Application Tasks</head><p>By virtue of fine-tuning with task-specific supervised data, the pre-trained model can be adapted to different language understanding tasks, such as question answering, natural language inference, and semantic similarity. Each downstream  <ref type="table">Table 1</ref>: The Relationship between pre-training task and pre-training dataset. We use different pre-training dataset to construct different tasks. A type of pre-trained dataset can correspond to multiple pre-training tasks.</p><formula xml:id="formula_2">IR Relevance Encyclopedia × × BookCorpus × × News × × Dialog × × IR Relevance Data × × × × × × Discourse Relation Data × × × × × ×</formula><p>task has its own fine-tuned models after being fine-tuned.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ERNIE 2.0 Model</head><p>In order to verify the effectiveness of the framework, we construct three different kinds of unsupervised language processing tasks and develop a pre-trained model called ERNIE 2.0 model. In this section we introduce the implementation of the model in the proposed framework. Task Embedding The model feeds task embedding to represent the characteristic of different tasks. We represent different tasks with an id ranging from 0 to N. Each task id is assigned to one unique task embedding. The corresponding token, segment, position and task embedding are taken as the input of the model. We can use any task id to initialize our model in the fine-tuning process. The model structure is shown in <ref type="figure">Figure 3</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pre-training Tasks</head><p>We construct three different kinds of tasks to capture different aspects of information in the training corpora. The wordaware tasks enable the model to capture the lexical information, the structure-aware tasks enable the model capture the syntactic information of the corpus and the semantic-aware tasks aims to learn semantic information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Word-aware Pre-training Tasks</head><p>Knowledge Masking Task ERNIE 1.0 <ref type="bibr" target="#b8">(Sun et al. 2019)</ref> proposed an effective strategy to enhance representation through knowledge integration. It introduced phrase masking and named entity masking and predicts the whole masked phrases and named entities to help the model learn the dependency information in both local contexts and global contexts. We use this task to train an initial version of the model.</p><p>Capitalization Prediction Task Capitalized words usually have certain specific semantic information compared to other words in sentences. The cased model has some advantages in tasks like named entity recognition while the uncased model is more suitable for some other tasks. To combine the advantages of both models, we add a task to predict whether the word is capitalized or not.</p><p>Token-Document Relation Prediction Task This task predicts whether the token in a segment appears in other segments of the original document. Empirically, the words that appear in many parts of a document are usually commonlyused words or relevant with the main topics of the document. Therefore, through identifying the frequently-occurring words of a document appearing in the segment, the task can enable the ability of a model to capture the key words of the document to some extent.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Structure-aware Pre-training Tasks</head><p>Sentence Reordering Task This task aims to learn the relationships among sentences. During the pre-training process of this task, a given paragraph is randomly split into 1 to m segments and then all of the combinations are shuffled by a random permuted order. We let the pre-trained model to reorganize these permuted segments, modeled as a k-class classification problem where k = m n=1 n!. Empirically, the sentences reordering task can enable the pre-trained model to learn relationships among sentences in a document.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Sentence Distance Task</head><p>We also construct a pre-training task to learn the sentence distance using document-level information. This task is modeled as a 3-class classification problem. "0" represents that the two sentences are adjacent in the same document, "1" represent that the two sentences are in the same document, but not adjacent, and "2" represents that the two sentences are from two different documents.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Semantic-aware Pre-training Tasks</head><p>Discourse Relation Task Beside the distance task mentioned above, we introduce a task to predict the semantic or rhetorical relation between two sentences. We use the data built by Sileo et.al <ref type="bibr" target="#b8">(Sileo et al. 2019)</ref> to train a pretrained model for English tasks. Following the method in Sileo et.al <ref type="bibr" target="#b8">(Sileo et al. 2019)</ref>, we also automatically construct a Chinese dataset for pre-training.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IR Relevance Task</head><p>We build a pre-training task to learn the short text relevance in information retrieval. It is a 3-class classification task which predicts the relationship between a query and a title. We take the query as the first sentence and the title as the second sentence. The search log data from a commercial search engine is used as our pre-training data. There are three kinds of labels in this task. The query and title pairs that are labelled as " 0" stand for strong relevance, which means that the title is clicked by the users after they input the query. Those labelled as "1" represent weak relevance, which implies that when the query is input by the users, these titles appear in the search results but failed to be clicked by users. The label "2" means that the query and title are completely irrelevant and random in terms of semantic information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Experiments</head><p>We compare the performance of ERNIE 2.0 with the state-ofthe-art pre-training models. For English tasks, we compare our results with <ref type="bibr">BERT (Devlin et al. 2018)</ref>     We use Adam optimizer that parameters of which are fixed to β 1 = 0.9, β 2 = 0.98, with a batch size of 393216 tokens. The learning rate is set as 5e-5 for English model and 1.28e-4 for Chinese model. It is scheduled by decay scheme noam <ref type="bibr" target="#b8">(Vaswani et al. 2017)</ref> with warmup over the first 4,000 steps for every pre-training task. By virtue of float16 operations, we manage to accelerate the training and reduce the memory usage of our models. Each of the pre-training tasks is trained until the metrics of pre-training tasks converge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fine-tuning Tasks</head><p>English Task As a multi-task benchmark and analysis platform for natural language understanding, General Language Understanding Evaluation (GLUE) is usually applied to evaluate the performance of models. We also test the performance of ERNIE 2.0 on GLUE. Specifically, GLUE covers a diverse range of NLP datasets, the details is shown .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Chinese Tasks</head><p>We executed extensive experiments on 9 Chinese NLP tasks, including machine reading comprehension, named entity recognition, natural language inference,    <ref type="table">Table 7</ref>: The results of different methods of continual pre-training. We use knowledge masking, capital prediction, tokendocument relation and sentence reordering as our pre-training tasks. we sample 10% training data from our whole pre-training corpus. We train the model with 4 tasks altogether from scratch in multi-task learning method and train the model in 4 stages in other two learning methods. We train different tasks in different stages. The learning order of these tasks is the same as the above tasks listed. To compare the result fairly, each of these 4 tasks are updated in 50,000 steps . The size of pre-training model is same as ERNIE base. We choose MNLI-m, SST-2 and MRPC as our fine-tuning dataset. The fine-tuning result is average of five random start. the fine-tuning experiment set is same as </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Implementation Details for Fine-tuning</head><p>Detailed fine-tuning experimental settings of English tasks are shown in <ref type="table" target="#tab_7">Table 3</ref> while that of Chinese tasks are shown in <ref type="table" target="#tab_8">Table 4</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Experimental Results</head><p>Results on English Tasks We evaluate the performance of the base models and the large models of each method on GLUE. Considering the fact that only the results of the single model XLNet on the dev set are reported, we also reports the results of each method on the dev set. In order to obtain a fair comparison with BERT and XLNet, we run a single-task and single-model 6 ERNIE 2.0 on the dev set. The detailed results on GLUE are depicted in <ref type="table" target="#tab_10">Table 5</ref>.</p><p>As shown in the BASE model columns of <ref type="table" target="#tab_10">Table 5</ref>, ERNIE 2.0 BASE outperforms BERT BASE on all of the 10 tasks and obtains a score of 80.6. As shown in the dev columns of LARGE model section in <ref type="table" target="#tab_10">Table 5</ref>, ERNIE 2.0 LARGE consistently outperforms BERT LARGE and XLNet LARGE on most of the tasks except MNLI-m. Furthermore, as shown in the LARGE model section in <ref type="table" target="#tab_10">Table 5</ref>, ERNIE 2.0 LARGE outperforms BERT LARGE on all of the 10 tasks, which gets a score of 83.6 on the GLUE test set and achieves a 3.1% improvement over the previous SOTA pre-training model BERT LARGE . <ref type="table" target="#tab_11">Table 6</ref> shows the performances on 9 classical Chinese NLP tasks. It can be seen that ERNIE 1.0 BASE outperforms BERT BASE on XNLI, MSRA-NER, ChnSentiCorp, LCQMC and NLPCC-DBQA tasks, yet the performance is less ideal on the rest, which is caused by the difference in pre-training between the two methods. Specifically, the pre-training data of ERNIE 1.0 BASE does not contain instances whose length exceeds 128, but BERT BASE is pre-trained with the instances whose length are 512. From the results, it can be also seen that the proposed ERNIE 2.0 makes further progress, which significantly outperforms BERT BASE on all of the nine tasks. Furthermore, we train a large version of ERNIE 2.0. ERNIE 2.0 LARGE achieves the best performance and creates new state-of-the-art results on these Chinese NLP tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Results on Chinese Tasks</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Comparison of Different Learning Methods</head><p>In order to analyze the effectiveness of the continual multitask learning strategy adopted in our framework, we compare this method with two other methods as shown in figure 2. Table 7 describes the detailed information. For all the methods, we assume that the training iterations are the same for each task. In our settings, each task can be trained in 50k iterations, with 200k iterations for all of the tasks. As it can be seen, multi-task learning trains all the tasks in one stage, continual pre-training trains the tasks one by one, while our continual multi-task learning method can assign different iterations to each task in different training stages. The experimental result shows that continual multi-task learning obtains the better performance on downstream tasks compared with the other two methods, without sacrificing any efficiency. The result also indicates that our pre-training method can trains the new tasks in a more effective and efficient way. Moreover, the comparison between continual multi-task learning, multitask learning and traditional continual learning shows that the first two methods outperform the third one, which confirms our intuition that traditional continual learning tends to forget the knowledge it has learnt when there is only one new task involved each time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusion</head><p>We proposed a continual pre-training framework named ERNIE 2.0, in which pre-training tasks can be incrementally built and learned through continual multi-task learning in a continual way. Based on the framework, we constructed several pre-training tasks covering different aspects of language and trained a new model called ERNIE 2.0 model which is more competent in language representation. ERNIE 2.0 was tested on the GLUE benchmarks and various Chinese tasks. It obtained significant improvements over BERT and XLNet. In the future, we will introduce more pre-training tasks to the ERNIE 2.0 framework to further improve the performance of the model. We will also investigate other sophisticated continual learning method in our framework.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>The different methods of continual pre-training. lating the information acquired by study or experience to efficiently develop new skills. With continual learning, the model should be able to performs well on new tasks thanks to the knowledge acquired during previous training.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :Figure 4 :</head><label>34</label><figDesc>The structure of the ERNIE 2.0 model. The input embedding contains the token embedding, the sentence embedding, the position embedding and the task embedding. Seven pre-training tasks belonging to different kinds are constructed in the ERNIE 2.0 model. The architecture of multi-task learning in the ERNIE 2.0 framework, in which the encoder can be recurrent neural networks or a deep transformer.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>The model uses a multi-layer Transformer(Vaswani et al. 2017) as the basic encoder like other pre-training models such as GPT(Radford et al. 2018), BERT(Devlin et al. 2018) and XLM(Lample and Conneau 2019). The transformer can capture the contextual information for each token in the sequence via self-attention, and generate a sequence of contextual embeddings. Given a sequence, the special classification embedding [CLS] is added to the first place of the sequence. Furthermore, the symbol of [SEP] is added as the separator in the intervals of the segments for the multiple input segment tasks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>and XLNet (Yang et al. 2019) on GLUE. For Chinese tasks, we compare the results with that of BERT (Devlin et al. 2018) and the previous ERNIE 1.0 (Sun et al. 2019) model on several Chinese datasets.Moreover, we will compare our method with multitask learning and traditional continual learning.</figDesc><table><row><cell cols="3">Corpus Type English(#tokens) Chinese(#tokens)</cell></row><row><cell>Encyclopedia</cell><cell>2021M</cell><cell>7378M</cell></row><row><cell>BookCorpus</cell><cell>805M</cell><cell>-</cell></row><row><cell>News</cell><cell>-</cell><cell>1478M</cell></row><row><cell>Dialog</cell><cell>4908M</cell><cell>522M</cell></row><row><cell>IR Relevance Data</cell><cell>-</cell><cell>4500M</cell></row><row><cell>Discourse Relation Data</cell><cell>171M</cell><cell>1110M</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 2 :</head><label>2</label><figDesc>The size of pre-training datasets. while the large model contains 24 layers, 16 self-attention heads and 1024dimensional of hidden size. The model settings of XLNet (Yang et al. 2019) are same as BERT.</figDesc><table><row><cell>Pre-training and Implementation</cell></row><row><cell>Pre-training Data Similar to that of BERT, some data in</cell></row><row><cell>the English corpus are crawled from Wikipedia and Book-</cell></row><row><cell>Corpus. Besides we also collect some data from Reddit and</cell></row><row><cell>use the Discovery data (Sileo et al. 2019) as our discourse</cell></row><row><cell>relation data. For the Chinese corpus, we collect a variety</cell></row><row><cell>of data, such as encyclopedia, news, dialogue, information</cell></row><row><cell>retrieval and discourse relation data from a search engine.</cell></row><row><cell>The details of the pre-training data are shown in Table 2.</cell></row><row><cell>The relationship between pre-training task and pre-training</cell></row><row><cell>dataset is shown in Table 1.</cell></row></table><note>Pre-training Settings To compare with BERT(Devlin et al. 2018), We use the same model settings of transformer as BERT. The base model contains 12 layers, 12 self-attention heads and 768-dimensional of hidden size</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 3 :</head><label>3</label><figDesc>The Experiment settings for GLUE dataset</figDesc><table><row><cell>Task</cell><cell>Epoch</cell><cell>BASE Learning Rate</cell><cell>Batch Size</cell><cell>Epoch</cell><cell>LARGE Learning Rate</cell><cell>Batch Size</cell></row><row><cell>CMRC 2018</cell><cell>2</cell><cell>3e-5</cell><cell>64</cell><cell>2</cell><cell>3e-5</cell><cell>64</cell></row><row><cell>DRCD</cell><cell>2</cell><cell>5e-5</cell><cell>64</cell><cell>2</cell><cell>3e-5</cell><cell>64</cell></row><row><cell>DuReader</cell><cell>2</cell><cell>5e-5</cell><cell>64</cell><cell>2</cell><cell>2e-5</cell><cell>64</cell></row><row><cell>MSRA-NER</cell><cell>6</cell><cell>5e-5</cell><cell>16</cell><cell>6</cell><cell>1e-5</cell><cell>16</cell></row><row><cell>XNLI</cell><cell>3</cell><cell>1e-4</cell><cell>512</cell><cell>3</cell><cell>4e-5</cell><cell>512</cell></row><row><cell>ChnSentiCorp</cell><cell>10</cell><cell>5e-5</cell><cell>24</cell><cell>10</cell><cell>1e-5</cell><cell>24</cell></row><row><cell>LCQMC</cell><cell>3</cell><cell>2e-5</cell><cell>32</cell><cell>3</cell><cell>5e-6</cell><cell>32</cell></row><row><cell>BQ Corpus</cell><cell>3</cell><cell>3e-5</cell><cell>64</cell><cell>3</cell><cell>1.5e-5</cell><cell>64</cell></row><row><cell>NLPCC-DBQA</cell><cell>3</cell><cell>2e-5</cell><cell>64</cell><cell>3</cell><cell>1e-5</cell><cell>64</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 4 :</head><label>4</label><figDesc>The Experiment Settings for Chinese datasets ERNIE 2.0 is trained on 48 NVidia v100 GPU cards for the base model and 64 NVidia v100 GPU cards for the large model in both English and Chinese. The ERNIE 2.0 framework is implemented on PaddlePaddle, which is an end-toend open source deep learning platform developed by Baidu.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>Table 5 :</head><label>5</label><figDesc>The results on GLUE benchmark, where the results on dev set are the median of five runs and the results on test set are scored by the GLUE evaluation server (https://gluebenchmark.com/leaderboard). The state-of-the-art results are in bold. All of the fine-tuned models of AX is trained by the data of MNLI.</figDesc><table><row><cell>Task</cell><cell>Metrics</cell><cell cols="2">BERTBASE Dev Test</cell><cell cols="2">ERNIE 1.0BASE Dev Test</cell><cell cols="2">ERNIE 2.0BASE Dev Test</cell><cell cols="2">ERNIE 2.0LARGE Dev Test</cell></row><row><cell>CMRC 2018</cell><cell>EM/F1</cell><cell>66.3/85.9</cell><cell>-</cell><cell>65.1/85.1</cell><cell>-</cell><cell>69.1/88.6</cell><cell>-</cell><cell>71.5/89.9</cell><cell>-</cell></row><row><cell>DRCD</cell><cell>EM/F1</cell><cell cols="8">85.7/91.6 84.9/90.9 84.6/90.9 84.0/90.5 88.5/93.8 88.0/93.4 89.7/94.7 89.0/94.2</cell></row><row><cell>DuReader</cell><cell>EM/F1</cell><cell>59.5/73.1</cell><cell>-</cell><cell>57.9/72.1</cell><cell>-</cell><cell>61.3/74.9</cell><cell>-</cell><cell>64.2/77.3</cell><cell>-</cell></row><row><cell>MSRA-NER</cell><cell>F1</cell><cell>94.0</cell><cell>92.6</cell><cell>95.0</cell><cell>93.8</cell><cell>95.2</cell><cell>93.8</cell><cell>96.3</cell><cell>95.0</cell></row><row><cell>XNLI</cell><cell>Accuracy</cell><cell>78.1</cell><cell>77.2</cell><cell>79.9</cell><cell>78.4</cell><cell>81.2</cell><cell>79.7</cell><cell>82.6</cell><cell>81.0</cell></row><row><cell>ChnSentiCorp</cell><cell>Accuracy</cell><cell>94.6</cell><cell>94.3</cell><cell>95.2</cell><cell>95.4</cell><cell>95.7</cell><cell>95.5</cell><cell>96.1</cell><cell>95.8</cell></row><row><cell>LCQMC</cell><cell>Accuracy</cell><cell>88.8</cell><cell>87.0</cell><cell>89.7</cell><cell>87.4</cell><cell>90.9</cell><cell>87.9</cell><cell>90.9</cell><cell>87.9</cell></row><row><cell>BQ Corpus</cell><cell>Accuracy</cell><cell>85.9</cell><cell>84.8</cell><cell>86.1</cell><cell>84.8</cell><cell>86.4</cell><cell>85.0</cell><cell>86.5</cell><cell>85.2</cell></row><row><cell>NLPCC-DBQA</cell><cell>MRR/F1</cell><cell cols="8">94.7/80.7 94.6/80.8 95.0/82.3 95.1/82.7 95.7/84.7 95.7/85.3 95.9/85.3 95.8/85.8</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head>Table 6 :</head><label>6</label><figDesc>The results of 9 common Chinese NLP tasks. ERNIE 1.0 indicates model released by (Sun et al. 2019, ERNIE) . The reported results are the average of five experimental results, and the state-of-the-art results are in bold.</figDesc><table><row><cell>Pre-training method</cell><cell>Pre-training task</cell><cell cols="7">Training iterations (steps) Stage 1 Stage 2 Stage 3 Stage 4 MNLI SST-2 MRPC Fine-tuning result</cell></row><row><cell></cell><cell>Knowledge Masking</cell><cell>50k</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Continual Learning</cell><cell>Capital Prediction Token-Document Relation</cell><cell>--</cell><cell>50k -</cell><cell>-50k</cell><cell>--</cell><cell>77.3</cell><cell>86.4</cell><cell>82.5</cell></row><row><cell></cell><cell>Sentence Reordering</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>50k</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>Knowledge Masking</cell><cell></cell><cell>50k</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Multi-task Learning</cell><cell>Capital Prediction Token-Document Relation</cell><cell></cell><cell>50k 50k</cell><cell></cell><cell></cell><cell>78.7</cell><cell>87.5</cell><cell>83.0</cell></row><row><cell></cell><cell>Sentence Reordering</cell><cell></cell><cell>50k</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>Knowledge Masking</cell><cell>20k</cell><cell>10k</cell><cell>10k</cell><cell>10k</cell><cell></cell><cell></cell><cell></cell></row><row><cell>continual Multi-task Learning</cell><cell>Capital Prediction Token-Document Relation</cell><cell>--</cell><cell>30k -</cell><cell>10k 40k</cell><cell>10k 10k</cell><cell>79.0</cell><cell>87.8</cell><cell>84.0</cell></row><row><cell></cell><cell>Sentence Reordering</cell><cell>-</cell><cell>-</cell><cell>-</cell><cell>50k</cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12"><head>Table 3 .</head><label>3</label><figDesc>semantic similarity, sentiment analysis and question answering. Specifically, the following Chinese datasets are chosen to evaluate the performance of ERNIE 2.0 on Chinese tasks:• Machine Reading Comprehension (MRC): CMRC 2018 (Cui et al. 2018), DRCD (Shao et al. 2018), and DuReader (He et al. 2017).</figDesc><table><row><cell>• Named Entity Recognition (NER): MSRA-NER (Levow</cell></row><row><cell>2006).</cell></row><row><cell>• Natural Language Inference (NLI): XNLI (Conneau et</cell></row><row><cell>al. 2018).</cell></row><row><cell>• Sentiment Analysis (SA): ChnSentiCorp 4 .</cell></row><row><cell>• Semantic Similarity (SS): LCQMC (Liu et al. 2018), and</cell></row><row><cell>BQ Corpus (Chen et al. 2018).</cell></row><row><cell>• Question Answering (QA): NLPCC-DBQA 5 .</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">For the detailed information of these tasks, please refer to the next section.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">For more details, please refer toTable 7in the experiment section.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">https://github.com/pengming617/bert classification 5 http://tcci.ccf.org.cn/conference/2016/dldoc/evagline2.pdf 6 which mean the result without additional tricks such as ensemble and multi-task losses.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>References</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bowman</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1508.05326</idno>
		<title level="m">A large annotated corpus for learning natural language inference</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Lifelong machine learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Synthesis Lectures on Artificial Intelligence and Machine Learning</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1" to="207" />
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note>and Liu</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The bq corpus: A large-scale domainspecific chinese corpus for sentence semantic equivalence identification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing</title>
		<meeting>the 2018 Conference on Empirical Methods in Natural Language Processing</meeting>
		<imprint>
			<date type="published" when="2018" />
			<biblScope unit="page" from="4946" to="4951" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A span-extraction dataset for chinese machine reading comprehension</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Conneau</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1809.05053</idno>
		<idno>abs/1810.07366</idno>
	</analytic>
	<monogr>
		<title level="m">Xnli: Evaluating cross-lingual sentence representations</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Cui et al. 2018</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Transformer-xl: Attentive language models beyond a fixedlength context</title>
		<idno type="arXiv">arXiv:1901.02860</idno>
		<idno>arXiv:1810.04805</idno>
	</analytic>
	<monogr>
		<title level="m">Bert: Pre-training of deep bidirectional transformers for language understanding</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Devlin et al. 2018</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The third international chinese language processing bakeoff: Word segmentation and named entity recognition</title>
		<idno type="arXiv">arXiv:1711.05073</idno>
		<idno>Liu et al. 2018</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 27th International Conference on Computational Linguistics</title>
		<meeting>the 27th International Conference on Computational Linguistics</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="1952" to="1962" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Proceedings of the Fifth SIGHAN Workshop on Chinese Language Processing</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Efficient estimation of word representations in vector space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Liu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1901.11504</idno>
		<idno>Parisi et al. 2019</idno>
	</analytic>
	<monogr>
		<title level="m">Multi-task deep neural networks for natural language understanding</title>
		<imprint>
			<publisher>Pennington, Socher, and Manning</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="1532" to="1543" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Glove: Global vectors for word representation. In Proceedings of the 2014 conference on empirical methods in natural language processing (EMNLP</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Improving language understanding by generative pre-training</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Peters</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1802.05365</idno>
		<ptr target="https://s3-us-west-2.amazonaws.com/openai-assets/research-covers/languageunsupervised/languageunderstandingpaper.pdf" />
	</analytic>
	<monogr>
		<title level="m">Deep contextualized word representations</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Radford et al. 2018. Introduction to the conll-2003 shared task: Language-independent named entity recognition. arXiv preprint cs/0306050</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Recursive deep models for semantic compositionality over a sentiment treebank</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>Shao</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1806.00920.[Sileoetal.2019</idno>
		<idno>arXiv:1906.08237</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2013 conference on empirical methods in natural language processing</title>
		<meeting>the 2013 conference on empirical methods in natural language processing</meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="5998" to="6008" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
	<note>Xlnet: Generalized autoregressive pretraining for language understanding</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
